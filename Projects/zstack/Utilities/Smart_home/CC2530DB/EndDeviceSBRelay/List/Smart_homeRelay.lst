###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         03/Jun/2021  00:01:36 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_homeRelay.c              #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          omeRelay.c -D HAL_UART=TRUE -D HAL_UART_TEST -D    #
#                          xPOWER_SAVING -lC D:\毕设\CC2530-smart_home\Projec #
#                          ts\zstack\Utilities\Smart_home\CC2530DB\EndDeviceS #
#                          BRelay\List\ -lA D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\EndDeviceSB #
#                          Relay\List\ --diag_suppress Pe001,Pa010 -o         #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBRelay\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530SB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBRelay\List\Smart_ #
#                          homeRelay.lst                                      #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBRelay\Obj\Smart_h #
#                          omeRelay.r51                                       #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeRelay.c
      1          /*******************************************************************
      2            文件名：Smart_homeRelay.c
      3            作 者： 柳成林
      4            功 能： 继电器功能节点，实现向网关节点的发送以及接收网关节点的消息
      5            更新日志(2021)
      6            3.28
      7            + 新增 设置输入输出簇
      8                   Smart_home_HandleKeys()      //按键控制
      9                   Smart_home_ProcessMSGCmd();  //输入控制函数 
     10            + 修改 Smart_home_ProcessEvt()      //事件处理函数
     11                   Smart_home_Init()            //初始化函数
     12                   Smart_home_Send()            //信息发送函数
     13            3.23
     14            + 修改 #define SMART_HOME_SEND_DELAY   500 
     15                   解决屏幕显示的小bug
     16          
     17          
     18          使用事件 
     19               SMART_HOME_SEND_MSG_EVT(发送数据)
     20               SMART_HOME_MATCHRSP_EVT(描述符匹配)
     21             
     22          *********************************************************************/
     23          /*********************************************************************
     24           * INCLUDES
     25           */
     26          
     27          #include "AF.h"
     28          #include "OnBoard.h"
     29          #include "OSAL_Tasks.h"
     30          #include "Smart_home.h"
     31          #include "ZDApp.h"
     32          #include "ZDObject.h"
     33          #include "ZDProfile.h"
     34          
     35          #include "hal_drivers.h"
     36          #include "hal_key.h"
     37          
     38          #include "hal_led.h"
     39          #include "hal_uart.h"
     40          #include "hal_relay.h"
     41          
     42          /*********************************************************************
     43           * MACROS
     44           */
     45          //3.23  屏幕显示的小bug
     46          #define SMART_HOME_SEND_DELAY   5000
     47          #define SMART_HOME_MATCH_DELAY  1000
     48          /*********************************************************************
     49           * CONSTANTS
     50           */
     51          
     52          #if !defined( SERIAL_APP_PORT )
     53          #define SERIAL_APP_PORT  0
     54          #endif
     55          
     56          #if !defined( SERIAL_APP_BAUD )
     57          #define SERIAL_APP_BAUD  HAL_UART_BR_38400
     58          //#define SERIAL_APP_BAUD  HAL_UART_BR_115200
     59          #endif
     60          
     61          // When the Rx buf space is less than this threshold, invoke the Rx callback.
     62          #if !defined( SERIAL_APP_THRESH )
     63          #define SERIAL_APP_THRESH  64
     64          #endif
     65          
     66          #if !defined( SERIAL_APP_RX_SZ )
     67          #define SERIAL_APP_RX_SZ  128
     68          #endif
     69          
     70          #if !defined( SERIAL_APP_TX_SZ )
     71          #define SERIAL_APP_TX_SZ  128
     72          #endif
     73          
     74          // Millisecs of idle time after a byte is received before invoking Rx callback.
     75          #if !defined( SERIAL_APP_IDLE )
     76          #define SERIAL_APP_IDLE  6
     77          #endif
     78          
     79          // Loopback Rx bytes to Tx for throughput testing.
     80          #if !defined( SERIAL_APP_LOOPBACK )
     81          #define SERIAL_APP_LOOPBACK  FALSE
     82          #endif
     83          
     84          // This is the max byte count per OTA message.
     85          #if !defined( SERIAL_APP_TX_MAX )
     86          #define SERIAL_APP_TX_MAX  80
     87          #endif
     88          
     89          #define SERIAL_APP_RSP_CNT  4
     90          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     91          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     92          
     93          //3.21 设置输入输出簇
     94          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     95          const cId_t Smart_home_ClusterList_IN[1] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0A00         DW 10
     96          {
     97            Smart_home_CLUSTERID_RELAYCTRL         //继电器接收的消息控制命令
     98          };
     99          

   \                                 In  segment XDATA_ROM_C, align 1
    100          const cId_t Smart_home_ClusterList_OUT[1] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0800         DW 8
    101          {
    102            Smart_home_CLUSTERID_RELAYSTATUSMSG         //继电器发送的状态信息
    103          };
    104          

   \                                 In  segment XDATA_ROM_C, align 1
    105          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    106          {
    107            Smart_home_ENDPOINT,              //  int   Endpoint;
    108            Smart_home_PROFID,                //  uint16 AppProfId[2];
    109            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    110            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    111            Smart_home_FLAGS,                 //  int   AppFlags:4;
    112            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    113            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    114            Smart_home_MAX_OUTCLUSTERS ,          //  byte  AppNumOutClusters;
    115            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    116          };
    117          

   \                                 In  segment XDATA_ROM_C, align 1
    118          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    119          {
    120            Smart_home_ENDPOINT,
    121           &Smart_home_TaskID,
    122            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    123            noLatencyReqs
    124          };
    125          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    126          afAddrType_t Coordinator_DstAddr;
   \                     Coordinator_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    127          
    128          /*********************************************************************
    129           * TYPEDEFS
    130           */
    131          
    132          /*********************************************************************
    133           * GLOBAL VARIABLES
    134           */
    135          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    136          byte Coordinator_Msg[RELAYSTATUSMSG_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 5
   \   000005                REQUIRE __INIT_XDATA_Z
    137          
    138          /*********************************************************************
    139           * EXTERNAL VARIABLES
    140           */
    141          
    142          /*********************************************************************
    143           * EXTERNAL FUNCTIONS
    144           */
    145          
    146          /*********************************************************************
    147           * LOCAL VARIABLES
    148           */
    149          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    150          static byte Smart_home_MsgID;  // This is the unique message ID (counter)
   \                     Smart_home_MsgID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    151          
    152          
    153          /*********************************************************************
    154           * LOCAL FUNCTIONS
    155           */
    156          
    157          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    158          static void Smart_home_HandleKeys( uint8 shift, uint8 keys );
    159          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    160          static void Smart_home_Send(void);
    161          static void Smart_home_Resp(void);
    162          static void Smart_home_CallBack(uint8 port, uint8 event);
    163          
    164          /*********************************************************************
    165           * @fn      Smart_home_Init
    166           *
    167           * @brief   This is called during OSAL tasks' initialization.
    168           *
    169           * @param   task_id - the Task ID assigned by OSAL.
    170           *
    171           * @return  none
    172           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    173          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    174          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    175            halUARTCfg_t uartConfig;
    176          
    177            Smart_home_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#Smart_home_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    178            Smart_home_MsgID = 0;
   \   000010   90....       MOV     DPTR,#Smart_home_MsgID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    179          
    180            // Register the endpoint/interface description with the AF
    181            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   000015                ; Setup parameters for call to function afRegister
   \   000015   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   000017   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   000019   12....       LCALL   ??afRegister?relay
    182          
    183            // Register for all key events - This app will handle all key events
    184            RegisterForKeys( task_id );
   \   00001C                ; Setup parameters for call to function RegisterForKeys
   \   00001C   EE           MOV     A,R6
   \   00001D   F9           MOV     R1,A
   \   00001E   12....       LCALL   ??RegisterForKeys?relay
    185            
    186            //串口配置
    187            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000021   85..82       MOV     DPL,?XSP + 0
   \   000024   85..83       MOV     DPH,?XSP + 1
   \   000027   7401         MOV     A,#0x1
   \   000029   F0           MOVX    @DPTR,A
    188            uartConfig.baudRate             = SERIAL_APP_BAUD;
   \   00002A   12....       LCALL   ?XSTACK_DISP0_8
   \   00002D   7402         MOV     A,#0x2
   \   00002F   F0           MOVX    @DPTR,A
    189            uartConfig.flowControl          = TRUE;
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7401         MOV     A,#0x1
   \   000035   F0           MOVX    @DPTR,A
    190            uartConfig.flowControlThreshold = SERIAL_APP_THRESH; // 2x30 don't care - see uart driver.
   \   000036   7403         MOV     A,#0x3
   \   000038   12....       LCALL   ?XSTACK_DISP0_8
   \   00003B   7440         MOV     A,#0x40
   \   00003D   F0           MOVX    @DPTR,A
   \   00003E   A3           INC     DPTR
   \   00003F   E4           CLR     A
   \   000040   F0           MOVX    @DPTR,A
    191            uartConfig.rx.maxBufSize        = SERIAL_APP_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000041   740A         MOV     A,#0xa
   \   000043   12....       LCALL   ?XSTACK_DISP0_8
   \   000046   7480         MOV     A,#-0x80
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   E4           CLR     A
   \   00004B   F0           MOVX    @DPTR,A
    192            uartConfig.tx.maxBufSize        = SERIAL_APP_TX_SZ;  // 2x30 don't care - see uart driver.
   \   00004C   7412         MOV     A,#0x12
   \   00004E   12....       LCALL   ?XSTACK_DISP0_8
   \   000051   7480         MOV     A,#-0x80
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   E4           CLR     A
   \   000056   F0           MOVX    @DPTR,A
    193            uartConfig.idleTimeout          = SERIAL_APP_IDLE;   // 2x30 don't care - see uart driver.
   \   000057   7405         MOV     A,#0x5
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   7406         MOV     A,#0x6
   \   00005E   F0           MOVX    @DPTR,A
    194            uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
   \   00005F   7416         MOV     A,#0x16
   \   000061   12....       LCALL   ?XSTACK_DISP0_8
   \   000064   7401         MOV     A,#0x1
   \   000066   F0           MOVX    @DPTR,A
    195            uartConfig.callBackFunc         = Smart_home_CallBack;
   \   000067   741B         MOV     A,#0x1b
   \   000069   12....       LCALL   ?XSTACK_DISP0_8
   \   00006C   74..         MOV     A,#??Smart_home_CallBack?relay & 0xff
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F   A3           INC     DPTR
   \   000070   74..         MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
   \   000072   F0           MOVX    @DPTR,A
    196            HalUARTOpen (SERIAL_APP_PORT, &uartConfig);
   \   000073                ; Setup parameters for call to function HalUARTOpen
   \   000073   85..82       MOV     DPL,?XSP + 0
   \   000076   85..83       MOV     DPH,?XSP + 1
   \   000079   AA82         MOV     R2,DPL
   \   00007B   AB83         MOV     R3,DPH
   \   00007D   7900         MOV     R1,#0x0
   \   00007F   12....       LCALL   ??HalUARTOpen?relay
    197          
    198            //初始化向协调器发送的地址
    199            Coordinator_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000082   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   000085   E4           CLR     A
   \   000086   F0           MOVX    @DPTR,A
    200            Coordinator_DstAddr.endPoint = 0;
   \   000087   A3           INC     DPTR
   \   000088   F0           MOVX    @DPTR,A
    201            Coordinator_DstAddr.addr.shortAddr = 0;
   \   000089   90....       MOV     DPTR,#Coordinator_DstAddr
   \   00008C   F0           MOVX    @DPTR,A
   \   00008D   A3           INC     DPTR
   \   00008E   F0           MOVX    @DPTR,A
    202            
    203            //初始化继电器为全关
    204            HalRelayCtl(0x11);
   \   00008F                ; Setup parameters for call to function HalRelayCtl
   \   00008F   7911         MOV     R1,#0x11
   \   000091   12....       LCALL   ??HalRelayCtl?relay
    205            
    206            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \   000094                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000094   7A20         MOV     R2,#0x20
   \   000096   7B80         MOV     R3,#-0x80
   \   000098   90....       MOV     DPTR,#Smart_home_TaskID
   \   00009B   E0           MOVX    A,@DPTR
   \   00009C   F9           MOV     R1,A
   \   00009D   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    207            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   0000A0                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000A0   7A06         MOV     R2,#0x6
   \   0000A2   7B80         MOV     R3,#-0x80
   \   0000A4   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000A7   E0           MOVX    A,@DPTR
   \   0000A8   F9           MOV     R1,A
   \   0000A9   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    208            
    209            // 打开定时器，描述符匹配事件
    210            osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT, 
    211                                                         SMART_HOME_SEND_DELAY );
   \   0000AC                ; Setup parameters for call to function osal_start_reload_timer
   \   0000AC   7C88         MOV     R4,#-0x78
   \   0000AE   7D13         MOV     R5,#0x13
   \   0000B0   7A08         MOV     R2,#0x8
   \   0000B2   7B00         MOV     R3,#0x0
   \   0000B4   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000B7   E0           MOVX    A,@DPTR
   \   0000B8   F9           MOV     R1,A
   \   0000B9   12....       LCALL   ??osal_start_reload_timer?relay
    212          }
   \   0000BC   741D         MOV     A,#0x1d
   \   0000BE   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000C1   7F01         MOV     R7,#0x1
   \   0000C3   02....       LJMP    ?BANKED_LEAVE_XDATA
    213          
    214          /*********************************************************************
    215           * @fn      Smart_home_ProcessEvent
    216           *
    217           * @brief   Generic Application Task event processor.
    218           *
    219           * @param   task_id  - The OSAL assigned task ID.
    220           * @param   events   - Bit map of events to process.
    221           *
    222           * @return  Event flags of all unprocessed events.
    223           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    224          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    225          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 10
   \   000005   74F6         MOV     A,#-0xa
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
    226            (void)task_id;  // Intentionally unreferenced parameter
    227            
    228            if ( events & SYS_EVENT_MSG )
   \   00000E   5480         ANL     A,#0x80
   \   000010   6003         JZ      $+5
   \   000012   02....       LJMP    ??Smart_home_ProcessEvent_0 & 0xFFFF
    229            {
    230              afIncomingMSGPacket_t *MSGpkt;
    231          
    232              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    233              {
    234                switch ( MSGpkt->hdr.event )
    235                {
    236                case ZDO_CB_MSG:
    237                  Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    238                  break;
    239                    
    240                case KEY_CHANGE:
    241                  Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    242                  break;
    243          
    244                case AF_INCOMING_MSG_CMD:
    245                  Smart_home_ProcessMSGCmd( MSGpkt );
    246                  break;
    247          
    248                default:
    249                  break;
    250                }
    251          
    252                osal_msg_deallocate( (uint8 *)MSGpkt );
    253              }
    254          
    255              return ( events ^ SYS_EVENT_MSG );
    256            }
    257            
    258            // 描述匹配事件
    259            if ( events & SMART_HOME_MATCHRSP_EVT )
   \   000015   EE           MOV     A,R6
   \   000016   5408         ANL     A,#0x8
   \   000018   7003         JNZ     $+5
   \   00001A   02....       LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
    260            {
    261               zAddrType_t dstAddr;
    262               dstAddr.addrMode = AddrBroadcast;
   \   00001D   7409         MOV     A,#0x9
   \   00001F   12....       LCALL   ?XSTACK_DISP0_8
   \   000022   740F         MOV     A,#0xf
   \   000024   F0           MOVX    @DPTR,A
    263               dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
   \   000025   7401         MOV     A,#0x1
   \   000027   12....       LCALL   ?XSTACK_DISP0_8
   \   00002A   74FF         MOV     A,#-0x1
   \   00002C   F0           MOVX    @DPTR,A
   \   00002D   A3           INC     DPTR
   \   00002E   F0           MOVX    @DPTR,A
    264               
    265               ZDP_MatchDescReq( &dstAddr, 
    266                                  NWK_BROADCAST_SHORTADDR,
    267                                  Smart_home_PROFID,
    268                                  Smart_home_MAX_OUTCLUSTERS, 
    269                                  (cId_t *)Smart_home_ClusterList_IN,
    270                                  Smart_home_MAX_INCLUSTERS, 
    271                                  (cId_t *)Smart_home_ClusterList_OUT,
    272                                  FALSE );
   \   00002F                ; Setup parameters for call to function ZDP_MatchDescReq
   \   00002F   75..00       MOV     ?V0 + 0,#0x0
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000037   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_OUT & 0xff
   \   00003A   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_OUT >> 8) & 0xff
   \   00003D   78..         MOV     R0,#?V0 + 0
   \   00003F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000042   75..09       MOV     ?V0 + 0,#0x9
   \   000045   78..         MOV     R0,#?V0 + 0
   \   000047   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004A   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_IN & 0xff
   \   00004D   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_IN >> 8) & 0xff
   \   000050   78..         MOV     R0,#?V0 + 0
   \   000052   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000055   75..05       MOV     ?V0 + 0,#0x5
   \   000058   75..0F       MOV     ?V0 + 1,#0xf
   \   00005B   78..         MOV     R0,#?V0 + 0
   \   00005D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000060   7903         MOV     R1,#0x3
   \   000062   7CFF         MOV     R4,#-0x1
   \   000064   7DFF         MOV     R5,#-0x1
   \   000066   7409         MOV     A,#0x9
   \   000068   12....       LCALL   ?XSTACK_DISP0_8
   \   00006B   AA82         MOV     R2,DPL
   \   00006D   AB83         MOV     R3,DPH
   \   00006F   12....       LCALL   ??ZDP_MatchDescReq?relay
   \   000072   7408         MOV     A,#0x8
   \   000074   12....       LCALL   ?DEALLOC_XSTACK8
    273          
    274              // Return unprocessed events
    275              return (events ^ SMART_HOME_MATCHRSP_EVT);
   \   000077   EE           MOV     A,R6
   \   000078   6408         XRL     A,#0x8
   \   00007A   FA           MOV     R2,A
   \   00007B   EF           MOV     A,R7
   \                     ??Smart_home_ProcessEvent_2:
   \   00007C   FB           MOV     R3,A
   \   00007D   02....       LJMP    ??Smart_home_ProcessEvent_3 & 0xFFFF
    276            }
   \                     ??Smart_home_ProcessEvent_4:
   \   000080   A3           INC     DPTR
   \   000081   A3           INC     DPTR
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   E0           MOVX    A,@DPTR
   \   000085   640A         XRL     A,#0xa
   \   000087   7002         JNZ     ??Smart_home_ProcessEvent_5
   \   000089   A3           INC     DPTR
   \   00008A   E0           MOVX    A,@DPTR
   \                     ??Smart_home_ProcessEvent_5:
   \   00008B   7037         JNZ     ??Smart_home_ProcessEvent_6
   \   00008D   EA           MOV     A,R2
   \   00008E   2422         ADD     A,#0x22
   \   000090   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000093   A3           INC     DPTR
   \   000094   A3           INC     DPTR
   \   000095   A3           INC     DPTR
   \   000096   A3           INC     DPTR
   \   000097   E0           MOVX    A,@DPTR
   \   000098   85..82       MOV     DPL,?XSP + 0
   \   00009B   85..83       MOV     DPH,?XSP + 1
   \   00009E   F0           MOVX    @DPTR,A
   \   00009F                ; Setup parameters for call to function HalLedSet
   \   00009F   7A01         MOV     R2,#0x1
   \   0000A1   7901         MOV     R1,#0x1
   \   0000A3   12....       LCALL   ??HalLedSet?relay
   \   0000A6                ; Setup parameters for call to function HalRelayCtl
   \   0000A6   85..82       MOV     DPL,?XSP + 0
   \   0000A9   85..83       MOV     DPH,?XSP + 1
   \   0000AC   E0           MOVX    A,@DPTR
   \   0000AD   F9           MOV     R1,A
   \   0000AE   12....       LCALL   ??HalRelayCtl?relay
   \   0000B1                ; Setup parameters for call to function HalUARTWrite
   \   0000B1   7C01         MOV     R4,#0x1
   \   0000B3   7D00         MOV     R5,#0x0
   \   0000B5   85..82       MOV     DPL,?XSP + 0
   \   0000B8   85..83       MOV     DPH,?XSP + 1
   \   0000BB   AA82         MOV     R2,DPL
   \   0000BD   AB83         MOV     R3,DPH
   \   0000BF   7900         MOV     R1,#0x0
   \   0000C1   12....       LCALL   ??HalUARTWrite?relay
   \                     ??Smart_home_ProcessEvent_6:
   \   0000C4                ; Setup parameters for call to function Smart_home_Send
   \   0000C4   12....       LCALL   ??Smart_home_Send?relay
   \                     ??Smart_home_ProcessEvent_7:
   \   0000C7                ; Setup parameters for call to function osal_msg_deallocate
   \   0000C7   AA..         MOV     R2,?V0 + 0
   \   0000C9   AB..         MOV     R3,?V0 + 1
   \   0000CB   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   0000CE                ; Setup parameters for call to function osal_msg_receive
   \   0000CE   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000D1   E0           MOVX    A,@DPTR
   \   0000D2   F9           MOV     R1,A
   \   0000D3   12....       LCALL   ??osal_msg_receive?relay
   \   0000D6   8A..         MOV     ?V0 + 0,R2
   \   0000D8   8B..         MOV     ?V0 + 1,R3
   \   0000DA   EA           MOV     A,R2
   \   0000DB   45..         ORL     A,?V0 + 1
   \   0000DD   6044         JZ      ??Smart_home_ProcessEvent_8
   \   0000DF   8A82         MOV     DPL,R2
   \   0000E1   8B83         MOV     DPH,R3
   \   0000E3   E0           MOVX    A,@DPTR
   \   0000E4   24E6         ADD     A,#-0x1a
   \   0000E6   6098         JZ      ??Smart_home_ProcessEvent_4
   \   0000E8   245A         ADD     A,#0x5a
   \   0000EA   6009         JZ      ??Smart_home_ProcessEvent_9
   \   0000EC   24ED         ADD     A,#-0x13
   \   0000EE   70D7         JNZ     ??Smart_home_ProcessEvent_7
   \   0000F0                ; Setup parameters for call to function Smart_home_ProcessZDOMsgs
   \   0000F0   12....       LCALL   ??Smart_home_ProcessZDOMsgs?relay
   \   0000F3   80D2         SJMP    ??Smart_home_ProcessEvent_7
   \                     ??Smart_home_ProcessEvent_9:
   \   0000F5   A3           INC     DPTR
   \   0000F6   A3           INC     DPTR
   \   0000F7   A3           INC     DPTR
   \   0000F8   E0           MOVX    A,@DPTR
   \   0000F9   A2E2         MOV     C,0xE0 /* A   */.2
   \   0000FB   50CA         JNC     ??Smart_home_ProcessEvent_7
   \   0000FD   90....       MOV     DPTR,#??relayStatusCnt
   \   000100   E0           MOVX    A,@DPTR
   \   000101   04           INC     A
   \   000102   5403         ANL     A,#0x3
   \   000104   F0           MOVX    @DPTR,A
   \   000105   6015         JZ      ??Smart_home_ProcessEvent_10
   \   000107   14           DEC     A
   \   000108   600E         JZ      ??Smart_home_ProcessEvent_11
   \   00010A   14           DEC     A
   \   00010B   6007         JZ      ??Smart_home_ProcessEvent_12
   \   00010D   14           DEC     A
   \   00010E   700E         JNZ     ??Smart_home_ProcessEvent_13
   \   000110   7910         MOV     R1,#0x10
   \   000112   800A         SJMP    ??Smart_home_ProcessEvent_13
   \                     ??Smart_home_ProcessEvent_12:
   \   000114   7920         MOV     R1,#0x20
   \   000116   8006         SJMP    ??Smart_home_ProcessEvent_13
   \                     ??Smart_home_ProcessEvent_11:
   \   000118   7902         MOV     R1,#0x2
   \   00011A   8002         SJMP    ??Smart_home_ProcessEvent_13
   \                     ??Smart_home_ProcessEvent_10:
   \   00011C   7901         MOV     R1,#0x1
   \                     ??Smart_home_ProcessEvent_13:
   \   00011E                ; Setup parameters for call to function HalRelayCtl
   \   00011E   12....       LCALL   ??HalRelayCtl?relay
   \   000121   80A4         SJMP    ??Smart_home_ProcessEvent_7
   \                     ??Smart_home_ProcessEvent_8:
   \   000123   EE           MOV     A,R6
   \   000124   FA           MOV     R2,A
   \   000125   EF           MOV     A,R7
   \   000126   6480         XRL     A,#0x80
   \   000128   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    277          
    278            if ( events & SMART_HOME_SEND_MSG_EVT )
   \                     ??Smart_home_ProcessEvent_1:
   \   00012B   EE           MOV     A,R6
   \   00012C   A2E0         MOV     C,0xE0 /* A   */.0
   \   00012E   500B         JNC     ??Smart_home_ProcessEvent_14
    279            {
    280              Smart_home_Send();
   \   000130                ; Setup parameters for call to function Smart_home_Send
   \   000130   12....       LCALL   ??Smart_home_Send?relay
    281              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   000133   EE           MOV     A,R6
   \   000134   6401         XRL     A,#0x1
   \   000136   FA           MOV     R2,A
   \   000137   EF           MOV     A,R7
   \   000138   FB           MOV     R3,A
   \   000139   800E         SJMP    ??Smart_home_ProcessEvent_3
    282            }
    283          
    284            if ( events & SMART_HOME_BINDRSP_EVT )
   \                     ??Smart_home_ProcessEvent_14:
   \   00013B   5420         ANL     A,#0x20
   \   00013D   6006         JZ      ??Smart_home_ProcessEvent_15
    285            {
    286              Smart_home_Resp();
    287              return ( events ^ SMART_HOME_BINDRSP_EVT );
   \   00013F   EE           MOV     A,R6
   \   000140   6420         XRL     A,#0x20
   \   000142   FA           MOV     R2,A
   \   000143   8004         SJMP    ??Smart_home_ProcessEvent_3
    288            }
    289            
    290            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_15:
   \   000145   7A00         MOV     R2,#0x0
   \   000147   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_3:
   \   000149   740A         MOV     A,#0xa
   \   00014B   12....       LCALL   ?DEALLOC_XSTACK8
   \   00014E                REQUIRE ?Subroutine0
   \   00014E                ; // Fall through to label ?Subroutine0
    291          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    292          
    293          /*********************************************************************
    294           * @fn      Smart_home_ProcessZDOMsgs()
    295           *
    296           * @brief   Process response messages
    297           *
    298           * @param   none
    299           *
    300           * @return  none
    301           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    302          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
   \                     Smart_home_ProcessZDOMsgs:
    303          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    304            switch ( inMsg->clusterID )
   \   000005   EA           MOV     A,R2
   \   000006   240C         ADD     A,#0xc
   \   000008   F582         MOV     DPL,A
   \   00000A   EB           MOV     A,R3
   \   00000B   3400         ADDC    A,#0x0
   \   00000D   F583         MOV     DPH,A
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F5..         MOV     ?V0 + 0,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F5..         MOV     ?V0 + 1,A
   \   000016   78..         MOV     R0,#?V0 + 0
   \   000018   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Smart_home_ProcessZDOMsgs>_0`:
   \   00001B   0000         DW        0
   \   00001D   0200         DW        2
   \   00001F   0680         DW        32774
   \   000021   ....         DW        ??Smart_home_ProcessZDOMsgs_0
   \   000023   2080         DW        32800
   \   000025   ....         DW        ??Smart_home_ProcessZDOMsgs_1
   \   000027   ....         DW        ??Smart_home_ProcessZDOMsgs_2
    305            {
    306              case End_Device_Bind_rsp:
    307                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
   \                     ??Smart_home_ProcessZDOMsgs_1:
   \   000029   EA           MOV     A,R2
   \   00002A   2413         ADD     A,#0x13
   \   00002C   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   6003         JZ      $+5
   \   000032   02....       LJMP    ??Smart_home_ProcessZDOMsgs_2 & 0xFFFF
    308                {
    309          #if (HAL_UART == TRUE)
    310                  HalUARTWrite(HAL_UART_PORT_0, "Bind Success!\n",   strlen("Bind Success!\n"));
                                                                            ^
Warning[Pe223]: function "strlen" declared implicitly
   \   000035                ; Setup parameters for call to function HalUARTWrite
   \   000035                ; Setup parameters for call to function strlen
   \   000035   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   000037   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   000039   12....       LCALL   ??strlen?relay
   \   00003C   EA           MOV     A,R2
   \   00003D   FC           MOV     R4,A
   \   00003E   EB           MOV     A,R3
   \   00003F   FD           MOV     R5,A
   \   000040   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   000042   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   000044   7900         MOV     R1,#0x0
   \   000046   12....       LCALL   ??HalUARTWrite?relay
   \   000049   8075         SJMP    ??Smart_home_ProcessZDOMsgs_2
    311          #endif
    312                }
    313                break;
    314              
    315              case Match_Desc_rsp:
    316                ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessZDOMsgs_0:
   \   00004B                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   00004B   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   00004E   8A..         MOV     ?V0 + 0,R2
   \   000050   8B..         MOV     ?V0 + 1,R3
    317                if ( pRsp )
   \   000052   EA           MOV     A,R2
   \   000053   45..         ORL     A,?V0 + 1
   \   000055   6069         JZ      ??Smart_home_ProcessZDOMsgs_2
    318                {
    319                  if ( pRsp->status == ZSuccess && pRsp->cnt )
   \   000057   8A82         MOV     DPL,R2
   \   000059   8B83         MOV     DPH,R3
   \   00005B   E0           MOVX    A,@DPTR
   \   00005C   705B         JNZ     ??Smart_home_ProcessZDOMsgs_3
   \   00005E   A3           INC     DPTR
   \   00005F   A3           INC     DPTR
   \   000060   A3           INC     DPTR
   \   000061   E0           MOVX    A,@DPTR
   \   000062   6055         JZ      ??Smart_home_ProcessZDOMsgs_3
    320                  {
    321                    // 此处存储绑定对方的地址信息用于发送
    322                    Coordinator_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   000064   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   000067   7402         MOV     A,#0x2
   \   000069   F0           MOVX    @DPTR,A
    323                    Coordinator_DstAddr.addr.shortAddr = pRsp->nwkAddr;
   \   00006A   8A82         MOV     DPL,R2
   \   00006C   8B83         MOV     DPH,R3
   \   00006E   A3           INC     DPTR
   \   00006F   E0           MOVX    A,@DPTR
   \   000070   F8           MOV     R0,A
   \   000071   A3           INC     DPTR
   \   000072   E0           MOVX    A,@DPTR
   \   000073   F9           MOV     R1,A
   \   000074   90....       MOV     DPTR,#Coordinator_DstAddr
   \   000077   E8           MOV     A,R0
   \   000078   F0           MOVX    @DPTR,A
   \   000079   A3           INC     DPTR
   \   00007A   E9           MOV     A,R1
   \   00007B   F0           MOVX    @DPTR,A
    324                    // Take the first endpoint, Can be changed to search through endpoints
    325                    Coordinator_DstAddr.endPoint = pRsp->epList[0];  // ok
   \   00007C   8A82         MOV     DPL,R2
   \   00007E   8B83         MOV     DPH,R3
   \   000080   A3           INC     DPTR
   \   000081   A3           INC     DPTR
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   E0           MOVX    A,@DPTR
   \   000085   90....       MOV     DPTR,#Coordinator_DstAddr + 9
   \   000088   F0           MOVX    @DPTR,A
    326                    // 匹配成功，关闭描述符匹配事件定时器
    327                    osal_stop_timerEx( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT );
   \   000089                ; Setup parameters for call to function osal_stop_timerEx
   \   000089   7A08         MOV     R2,#0x8
   \   00008B   7B00         MOV     R3,#0x0
   \   00008D   90....       MOV     DPTR,#Smart_home_TaskID
   \   000090   E0           MOVX    A,@DPTR
   \   000091   F9           MOV     R1,A
   \   000092   12....       LCALL   ??osal_stop_timerEx?relay
    328            
    329          #if (HAL_UART == TRUE)
    330                    HalUARTWrite(HAL_UART_PORT_0, "Match Success!\n",   strlen("Match Success!\n"));
                                                                               ^
Warning[Pe223]: function "strlen" declared implicitly

    switch ( inMsg->clusterID )
    ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeRelay.c",304  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "pRsp" (declared at line 316 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_homeRelay.c")
   \   000095                ; Setup parameters for call to function HalUARTWrite
   \   000095                ; Setup parameters for call to function strlen
   \   000095   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   000097   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   000099   12....       LCALL   ??strlen?relay
   \   00009C   EA           MOV     A,R2
   \   00009D   FC           MOV     R4,A
   \   00009E   EB           MOV     A,R3
   \   00009F   FD           MOV     R5,A
   \   0000A0   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   0000A2   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000A4   7900         MOV     R1,#0x0
   \   0000A6   12....       LCALL   ??HalUARTWrite?relay
    331          #endif
    332                    // 开启定时发送数据给协调器的事件
    333                    osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_SEND_MSG_EVT, 
    334                                             SMART_HOME_SEND_DELAY );
   \   0000A9                ; Setup parameters for call to function osal_start_reload_timer
   \   0000A9   7C88         MOV     R4,#-0x78
   \   0000AB   7D13         MOV     R5,#0x13
   \   0000AD   7A01         MOV     R2,#0x1
   \   0000AF   7B00         MOV     R3,#0x0
   \   0000B1   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000B4   E0           MOVX    A,@DPTR
   \   0000B5   F9           MOV     R1,A
   \   0000B6   12....       LCALL   ??osal_start_reload_timer?relay
    335                  }
    336              
    337                  osal_mem_free( pRsp );
   \                     ??Smart_home_ProcessZDOMsgs_3:
   \   0000B9                ; Setup parameters for call to function osal_mem_free
   \   0000B9   AA..         MOV     R2,?V0 + 0
   \   0000BB   AB..         MOV     R3,?V0 + 1
   \   0000BD   12....       LCALL   ??osal_mem_free?relay
    338                }
    339                break;
    340                
    341              default:
    342                break;
    343            }
    344            
    345          }
   \                     ??Smart_home_ProcessZDOMsgs_2:
   \   0000C0   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   F582         MOV     DPL,A
   \   000002   EB           MOV     A,R3
   \   000003   3400         ADDC    A,#0x0
   \   000005   F583         MOV     DPH,A
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F8           MOV     R0,A
   \   000009   A3           INC     DPTR
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F583         MOV     DPH,A
   \   00000D   8882         MOV     DPL,R0
   \   00000F   22           RET
    346          
    347          /*********************************************************************
    348           * @fn      Smart_home_HandleKeys
    349           *
    350           * @brief   Handles all key events for this device.
    351           *
    352           * @param   shift - true if in shift/alt.
    353           * @param   keys  - bit field for key events.
    354           *
    355           * @return  none
    356           */
    357          void Smart_home_HandleKeys( uint8 shift, uint8 keys )
    358          {

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    359            static uint8 relayStatusCnt;
   \                     ??relayStatusCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    360            uint8 relayCtl;
    361            
    362            if ( keys & HAL_KEY_SW_5 )
    363            {
    364              relayStatusCnt++;
    365              // 继电器有四种状态
    366              relayStatusCnt = relayStatusCnt % 4;
    367              
    368              switch(relayStatusCnt)
    369              {
    370                case 0:
    371                  relayCtl = 0x01;  // K1开，K2没有操作(状态保持不变)
    372                  break;
    373                case 1:
    374                  relayCtl = 0x02;  // K1关，K2没有操作(状态保持不变)
    375                  break;
    376                case 2:
    377                  relayCtl = 0x20;  // K1不变，K2开
    378                  break;
    379                case 3:
    380                  relayCtl = 0x10;  // K1不变，K2关
    381                  break;
    382                default:
    383                  break;
    384              }
    385              
    386              // 发送继电器控制命令
    387              HalRelayCtl(relayCtl);
    388            }
    389          
    390          }
    391          
    392          /*********************************************************************
    393           * @fn      Smart_home_ProcessMSGCmd
    394           *
    395           * @brief   Data message processor callback. This function processes
    396           *          any incoming data - probably from other devices. Based
    397           *          on the cluster ID, perform the intended action.
    398           *
    399           * @param   pkt - pointer to the incoming message packet
    400           *
    401           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    402           *          FALSE otherwise.
    403           */
    404          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
    405          {
    406            uint8 mode;
    407            
    408            switch ( pkt->clusterId )
    409            {
    410              case Smart_home_CLUSTERID_RELAYCTRL:
    411              {
    412                // 收到的继电器控制命令
    413                mode = pkt->cmd.Data[4];
    414                HalLedSet( HAL_LED_1, HAL_LED_MODE_ON );
    415                HalRelayCtl(mode);
    416                // 测试收到的命令
    417          #if (HAL_UART == TRUE)
    418                HalUARTWrite(HAL_UART_PORT_0, & mode,  1);
    419          #endif      
    420                break;
    421              } 
    422              // Could receive control messages in the future.
    423              default:
    424                break;
    425            }
    426            Smart_home_Send();
    427            //收到之后启动懒加载模式，立刻返回值，降低延迟
    428          }
    429          
    430          /*********************************************************************
    431           * @fn      Smart_home_Send
    432           *
    433           * @brief   Send data OTA.
    434           *
    435           * @param   none
    436           *
    437           * @return  none
    438           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    439          static void Smart_home_Send(void)
   \                     Smart_home_Send:
    440          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    441            uint8 tmp;
    442            
    443            do{
    444              // put the sequence number in the message
    445              tmp = HI_UINT8( Smart_home_MsgID );
   \                     ??Smart_home_Send_0:
   \   000005   90....       MOV     DPTR,#Smart_home_MsgID
   \   000008   E0           MOVX    A,@DPTR
   \   000009   C4           SWAP    A
   \   00000A   540F         ANL     A,#0xf
   \   00000C   FA           MOV     R2,A
    446              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   00000D   C3           CLR     C
   \   00000E   940A         SUBB    A,#0xa
   \   000010   5004         JNC     ??Smart_home_Send_1
   \   000012   7830         MOV     R0,#0x30
   \   000014   8002         SJMP    ??Smart_home_Send_2
   \                     ??Smart_home_Send_1:
   \   000016   7837         MOV     R0,#0x37
    447              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_Send_2:
   \   000018   E8           MOV     A,R0
   \   000019   2A           ADD     A,R2
   \   00001A   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   00001D   F0           MOVX    @DPTR,A
    448              tmp = LO_UINT8( Smart_home_MsgID );
   \   00001E   90....       MOV     DPTR,#Smart_home_MsgID
   \   000021   E0           MOVX    A,@DPTR
   \   000022   540F         ANL     A,#0xf
   \   000024   FA           MOV     R2,A
    449              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000025   C3           CLR     C
   \   000026   940A         SUBB    A,#0xa
   \   000028   5004         JNC     ??Smart_home_Send_3
   \   00002A   7830         MOV     R0,#0x30
   \   00002C   8002         SJMP    ??Smart_home_Send_4
   \                     ??Smart_home_Send_3:
   \   00002E   7837         MOV     R0,#0x37
    450              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_Send_4:
   \   000030   E8           MOV     A,R0
   \   000031   2A           ADD     A,R2
   \   000032   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   000035   F0           MOVX    @DPTR,A
    451              
    452              // 发送给协调器命令 
    453              Coordinator_Msg[4] = HalRelayStatus();
   \   000036                ; Setup parameters for call to function HalRelayStatus
   \   000036   12....       LCALL   ??HalRelayStatus?relay
   \   000039   E9           MOV     A,R1
   \   00003A   90....       MOV     DPTR,#Coordinator_Msg + 4
   \   00003D   F0           MOVX    @DPTR,A
    454              tmp = AF_DataRequest( &Coordinator_DstAddr,                         
    455                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    456                                     Smart_home_CLUSTERID_RELAYSTATUSMSG,
    457                                     RELAYSTATUSMSG_LEN,                 
    458                                     Coordinator_Msg,                    
    459                                    &Smart_home_MsgID,                       
    460                                     AF_DISCV_ROUTE,                     
    461                                     AF_DEFAULT_RADIUS );
    462            }while (afStatus_SUCCESS == tmp);   
   \   00003E                ; Setup parameters for call to function AF_DataRequest
   \   00003E   75..1E       MOV     ?V0 + 0,#0x1e
   \   000041   78..         MOV     R0,#?V0 + 0
   \   000043   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000046   75....       MOV     ?V0 + 0,#Smart_home_MsgID & 0xff
   \   000049   75....       MOV     ?V0 + 1,#(Smart_home_MsgID >> 8) & 0xff
   \   00004C   78..         MOV     R0,#?V0 + 0
   \   00004E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000051   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000054   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   000057   78..         MOV     R0,#?V0 + 0
   \   000059   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005C   75..05       MOV     ?V0 + 0,#0x5
   \   00005F   75..00       MOV     ?V0 + 1,#0x0
   \   000062   78..         MOV     R0,#?V0 + 0
   \   000064   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000067   75..08       MOV     ?V0 + 0,#0x8
   \   00006A   78..         MOV     R0,#?V0 + 0
   \   00006C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006F   7920         MOV     R1,#0x20
   \   000071   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   000073   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   000075   7A..         MOV     R2,#Coordinator_DstAddr & 0xff
   \   000077   7B..         MOV     R3,#(Coordinator_DstAddr >> 8) & 0xff
   \   000079   12....       LCALL   ??AF_DataRequest?relay
   \   00007C   7409         MOV     A,#0x9
   \   00007E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000081   E9           MOV     A,R1
   \   000082   6081         JZ      ??Smart_home_Send_0
    463          }
   \   000084   7F02         MOV     R7,#0x2
   \   000086   02....       LJMP    ?BANKED_LEAVE_XDATA
    464          
    465          /*********************************************************************
    466           * @fn      Smart_home_Resp
    467           *
    468           * @brief   Send data OTA.
    469           *
    470           * @param   none
    471           *
    472           * @return  none
    473           */
    474          static void Smart_home_Resp(void)
    475          {
    476            /*
    477            if (afStatus_SUCCESS != AF_DataRequest(&Smart_home_RxAddr,
    478                                                   (endPointDesc_t *)&Smart_home_epDesc,
    479                                                    Smart_home_CLUSTERID2,
    480                                                    SERIAL_APP_RSP_CNT, Smart_home_RspBuf,
    481                                                   &Smart_home_MsgID, 0, AF_DEFAULT_RADIUS))
    482            {
    483              osal_set_event(Smart_home_TaskID, SMART_HOME_BINDRSP_EVT);
    484            }
    485            */
    486          }
    487          
    488          /*********************************************************************
    489           * @fn      Smart_home_CallBack
    490           *
    491           * @brief   Send data OTA.
    492           *
    493           * @param   port - UART port.
    494           * @param   event - the UART port event flag.
    495           *
    496           * @return  none
    497           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    498          static void Smart_home_CallBack(uint8 port, uint8 event)
   \                     Smart_home_CallBack:
    499          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    500          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessZDOMsgs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessZDOMsgs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Send?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Send

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_CallBack

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Bind Success!\\n">`:
   \   000000   42696E64     DB "Bind Success!\012"
   \            20537563
   \            63657373
   \            210A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Match Success!\\n">`:
   \   000000   4D617463     DB "Match Success!\012"
   \            68205375
   \            63636573
   \            73210A00
    501          
    502          /*********************************************************************
    503          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_CallBack                0      0      0
     Smart_home_Init                    0      0     38
       -> afRegister                    0      0     76
       -> RegisterForKeys               0      0     76
       -> HalUARTOpen                   0      0     76
       -> HalRelayCtl                   0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> osal_start_reload_timer       0      0     76
     Smart_home_ProcessEvent            1      0     30
       -> ZDP_MatchDescReq              0      0     60
       -> HalLedSet                     0      0     44
       -> HalRelayCtl                   0      0     44
       -> HalUARTWrite                  0      0     44
       -> Smart_home_Send               0      0     44
       -> osal_msg_deallocate           0      0     44
       -> osal_msg_receive              0      0     44
       -> Smart_home_ProcessZDOMsgs     0      0     44
       -> HalRelayCtl                   0      0     44
       -> Smart_home_Send               0      0     44
     Smart_home_ProcessZDOMsgs          0      0     34
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> ZDO_ParseEPListRsp            0      0     24
       -> osal_stop_timerEx             0      0     24
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> osal_start_reload_timer       0      0     24
       -> osal_mem_free                 0      0     24
     Smart_home_Send                    0      0     41
       -> HalRelayStatus                0      0     20
       -> AF_DataRequest                0      0     38


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     Smart_home_TaskID                    1
     Smart_home_ClusterList_IN            2
     Smart_home_ClusterList_OUT           2
     Smart_home_SimpleDesc               12
     Smart_home_epDesc                    6
     Coordinator_DstAddr                 12
     Coordinator_Msg                      5
     Smart_home_MsgID                     1
     Smart_home_Init                    198
     Smart_home_ProcessEvent            334
     ?Subroutine0                         5
     Smart_home_ProcessZDOMsgs          195
     ?Subroutine1                        16
     relayStatusCnt                       1
     Smart_home_Send                    137
     Smart_home_CallBack                  3
     ??Smart_home_Init?relay              6
     ??Smart_home_ProcessEvent?relay      6
     ??Smart_home_ProcessZDOMsgs?relay    6
     ??Smart_home_Send?relay              6
     ??Smart_home_CallBack?relay          6
     ?<Constant "Bind Success!\n">       15
     ?<Constant "Match Success!\n">      16

 
 888 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
  53 bytes in segment XDATA_ROM_C
  20 bytes in segment XDATA_Z
 
 918 bytes of CODE  memory
  53 bytes of CONST memory
  20 bytes of XDATA memory

Errors: none
Warnings: 4
