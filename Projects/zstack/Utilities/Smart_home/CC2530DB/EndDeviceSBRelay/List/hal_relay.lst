###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Apr/2021  19:02:34 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Components\hal\target\CC #
#                          2530SB\hal_relay.c                                 #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\C #
#                          omponents\hal\target\CC2530SB\hal_relay.c -D       #
#                          HAL_UART=TRUE -D HAL_UART_TEST -D xPOWER_SAVING    #
#                          -lC D:\毕设\CC2530-smart_home\Projects\zstack\Util #
#                          ities\Smart_home\CC2530DB\EndDeviceSBRelay\List\   #
#                          -lA D:\毕设\CC2530-smart_home\Projects\zstack\Util #
#                          ities\Smart_home\CC2530DB\EndDeviceSBRelay\List\   #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBRelay\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530SB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBRelay\List\hal_re #
#                          lay.lst                                            #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBRelay\Obj\hal_rel #
#                          ay.r51                                             #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Components\hal\target\CC2530SB\hal_relay.c
      1          //*****************************************************************************/
      2          //
      3          // 文 件 名：hal_relay.c
      4          //
      5          // 作    者：yizedxl
      6          //
      7          // 创建时间：2013.9.23
      8          //
      9          // 修改时间：2013.10.31
     10          //
     11          // 说    明：继电器驱动程序，继电器模块由两个IO管脚驱动，P1_2(继电器K1)和P1_3(继电器K2)；
     12          //           管脚置高电平，继电器模块开关打开，相反，管脚低电平，继电器模块关闭；
     13          //                        
     14          //
     15          //*****************************************************************************/
     16          
     17          #include "iocc2530.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
     18          #include "hal_types.h"
     19          #include "hal_defs.h"
     20          
     21          //*****************************************************************************/
     22          #define  RELAY_MODULE_1_PIN_SET  P1DIR |= BV(2) 
     23          #define  RELAY_MODULE_2_PIN_SET  P1DIR |= BV(3)
     24          #define  RELAY_MODULE_1_TOGGLE   P1_2  ^= 1
     25          #define  RELAY_MODULE_2_TOGGLE   P1_3  ^= 1
     26          
     27          #define  RELAY_MODULE_1_PIN      P1_2
     28          #define  RELAY_MODULE_2_PIN      P1_3
     29          
     30          #define  RELAY_SWITCH_ON         1
     31          #define  RELAY_SWITCH_OFF        0
     32          
     33          //*****************************************************************************/
     34          //本地变量

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     35          static uint8 relayStatus; // 继电器当前状态
   \                     relayStatus:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     36          
     37          //*****************************************************************************/
     38          //函数名：HalRelayCtl
     39          //功  能：继电器四种模式配置
     40          //参  数：uint8 mode：继电器模式切换：
     41          //              0x11：K1关闭(1), K2关闭(1)
     42          //              0x12：K1打开(2), K2关闭(1)
     43          //              0x21：K1关闭(1), K2打开(2)
     44          //              0x22：K1打开(2), K2打开(2)
     45          //              0x00：无任何操作
     46          //返回值：无
     47          //*****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     48          void HalRelayCtl(uint8 mode)
   \                     HalRelayCtl:
     49          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     50              RELAY_MODULE_1_PIN_SET;
   \   000004   43FE04       ORL     0xfe,#0x4
     51              RELAY_MODULE_2_PIN_SET;
   \   000007   43FE08       ORL     0xfe,#0x8
     52            
     53              // 继电器K1状态切换
     54              switch(mode & 0x0F)
   \   00000A   740F         MOV     A,#0xf
   \   00000C   59           ANL     A,R1
   \   00000D   14           DEC     A
   \   00000E   600F         JZ      ??HalRelayCtl_0
   \   000010   14           DEC     A
   \   000011   7017         JNZ     ??HalRelayCtl_1
     55              {
     56              case 0x02: // 打开
     57                {
     58                  RELAY_MODULE_1_PIN =  RELAY_SWITCH_ON;
   \   000013   D292         SETB    0x90.2
     59                  relayStatus = (relayStatus&0xF0) | 0x02;
   \   000015   90....       MOV     DPTR,#relayStatus
   \   000018   E0           MOVX    A,@DPTR
   \   000019   54F0         ANL     A,#0xf0
   \   00001B   4402         ORL     A,#0x2
   \   00001D   800A         SJMP    ??HalRelayCtl_2
     60                  break;
     61                }
     62              case 0x01: // 关闭
     63                {
     64                  RELAY_MODULE_1_PIN =  RELAY_SWITCH_OFF;
   \                     ??HalRelayCtl_0:
   \   00001F   C292         CLR     0x90.2
     65                  relayStatus = (relayStatus&0xF0) | 0x01;
   \   000021   90....       MOV     DPTR,#relayStatus
   \   000024   E0           MOVX    A,@DPTR
   \   000025   54F0         ANL     A,#0xf0
   \   000027   4401         ORL     A,#0x1
   \                     ??HalRelayCtl_2:
   \   000029   F0           MOVX    @DPTR,A
     66                  break;
     67                }
     68              default:
     69                  break;
     70              }
     71              
     72              // 继电器K2状态切换
     73              switch(mode & 0xF0)
   \                     ??HalRelayCtl_1:
   \   00002A   74F0         MOV     A,#-0x10
   \   00002C   59           ANL     A,R1
   \   00002D   24F0         ADD     A,#-0x10
   \   00002F   6006         JZ      ??HalRelayCtl_3
   \   000031   24F0         ADD     A,#-0x10
   \   000033   600E         JZ      ??HalRelayCtl_4
   \   000035   8017         SJMP    ??HalRelayCtl_5
     74              {
     75              case 0x10: // 关闭
     76                {
     77                  RELAY_MODULE_2_PIN =  RELAY_SWITCH_OFF;
   \                     ??HalRelayCtl_3:
   \   000037   C293         CLR     0x90.3
     78                  relayStatus = (relayStatus&0x0F) | 0x10;
   \   000039   90....       MOV     DPTR,#relayStatus
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   540F         ANL     A,#0xf
   \   00003F   4410         ORL     A,#0x10
   \   000041   800A         SJMP    ??HalRelayCtl_6
     79                  break;
     80                }
     81              case 0x20: // 打开
     82                {
     83                  RELAY_MODULE_2_PIN =  RELAY_SWITCH_ON;
   \                     ??HalRelayCtl_4:
   \   000043   D293         SETB    0x90.3
     84                  relayStatus = (relayStatus&0x0F) | 0x20;
   \   000045   90....       MOV     DPTR,#relayStatus
   \   000048   E0           MOVX    A,@DPTR
   \   000049   540F         ANL     A,#0xf
   \   00004B   4420         ORL     A,#0x20
   \                     ??HalRelayCtl_6:
   \   00004D   F0           MOVX    @DPTR,A
     85                  break;
     86                }
     87              default:
     88                  break;
     89              }
     90          }
   \                     ??HalRelayCtl_5:
   \   00004E                REQUIRE ?Subroutine0
   \   00004E                REQUIRE P1DIR
   \   00004E                REQUIRE _A_P1
   \   00004E                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
     91          
     92          //*****************************************************************************/
     93          //函数名：HalRelayStatus
     94          //功  能：将存储的继电器的状态通过函数返回
     95          //参  数：无
     96          //返回值：返回继电器设置的状态
     97          //*****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     98          uint8 HalRelayStatus()
   \                     HalRelayStatus:
     99          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    100              return relayStatus;
   \   000004   90....       MOV     DPTR,#relayStatus
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F9           MOV     R1,A
   \   000009   80..         SJMP    ?Subroutine0
    101          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalRelayCtl?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalRelayCtl

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalRelayStatus?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalRelayStatus

   Maximum stack usage in bytes:

     Function       ISTACK PSTACK XSTACK
     --------       ------ ------ ------
     HalRelayCtl        2      0      0
     HalRelayStatus     2      0      0


   Segment part sizes:

     Function/Label         Bytes
     --------------         -----
     _A_P1                     1
     P1DIR                     1
     relayStatus               1
     HalRelayCtl              78
     ?Subroutine0              7
     HalRelayStatus           11
     ??HalRelayCtl?relay       6
     ??HalRelayStatus?relay    6

 
 96 bytes in segment BANKED_CODE
 12 bytes in segment BANK_RELAYS
  2 bytes in segment SFR_AN
  1 byte  in segment XDATA_Z
 
 108 bytes of CODE  memory
   0 bytes of DATA  memory (+ 2 bytes shared)
   1 byte  of XDATA memory

Errors: none
Warnings: none
