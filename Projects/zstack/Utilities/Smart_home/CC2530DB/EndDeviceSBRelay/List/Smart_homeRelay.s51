///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        15/Apr/2021  18:02:18 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\Source\Smart_homeRelay.c            /
//    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Util /
//                          ities\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB /
//                          \f8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func      /
//                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6        /
//                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\ /
//                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\ /
//                          ..\..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO   /
//                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x1003                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\ /
//                          Projects\zstack\Utilities\Smart_home\Source\Smart /
//                          _homeRelay.c -D HAL_UART=TRUE -D HAL_UART_TEST    /
//                          -D xPOWER_SAVING -lC D:\毕设\CC2530-smart_home\Pr /
//                          ojects\zstack\Utilities\Smart_home\CC2530DB\EndDe /
//                          viceSBRelay\List\ -lA D:\毕设\CC2530-smart_home\P /
//                          rojects\zstack\Utilities\Smart_home\CC2530DB\EndD /
//                          eviceSBRelay\List\ --diag_suppress Pe001,Pa010    /
//                          -o D:\毕设\CC2530-smart_home\Projects\zstack\Util /
//                          ities\Smart_home\CC2530DB\EndDeviceSBRelay\Obj\   /
//                          -e --no_code_motion --debug --core=plain          /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\ -I                        /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\Source\ -I              /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\   /
//                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Util /
//                          ities\Smart_home\CC2530DB\..\..\..\..\..\Componen /
//                          ts\hal\include\ -I D:\毕设\CC2530-smart_home\Proj /
//                          ects\zstack\Utilities\Smart_home\CC2530DB\..\..\. /
//                          .\..\..\Components\hal\target\CC2530SB\ -I        /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          mac\include\ -I D:\毕设\CC2530-smart_home\Project /
//                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\. /
//                          .\..\Components\mac\high_level\ -I                /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          mac\low_level\srf04\ -I                           /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          mac\low_level\srf04\single_chip\ -I               /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          mt\ -I D:\毕设\CC2530-smart_home\Projects\zstack\ /
//                          Utilities\Smart_home\CC2530DB\..\..\..\..\..\Comp /
//                          onents\osal\include\ -I                           /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          services\saddr\ -I D:\毕设\CC2530-smart_home\Proj /
//                          ects\zstack\Utilities\Smart_home\CC2530DB\..\..\. /
//                          .\..\..\Components\services\sdata\ -I             /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          stack\af\ -I D:\毕设\CC2530-smart_home\Projects\z /
//                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\. /
//                          .\Components\stack\nwk\ -I                        /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          stack\sapi\ -I D:\毕设\CC2530-smart_home\Projects /
//                          \zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. /
//                          \..\Components\stack\sec\ -I                      /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          stack\sys\ -I D:\毕设\CC2530-smart_home\Projects\ /
//                          zstack\Utilities\Smart_home\CC2530DB\..\..\..\..\ /
//                          ..\Components\stack\zdo\ -I                       /
//                          D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\..\..\..\..\..\Components\ /
//                          zmac\ -I D:\毕设\CC2530-smart_home\Projects\zstac /
//                          k\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co /
//                          mponents\zmac\f8w\ -Ohz                           /
//    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utiliti /
//                          es\Smart_home\CC2530DB\EndDeviceSBRelay\List\Smar /
//                          t_homeRelay.s51                                   /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Smart_homeRelay

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?US_SWITCH_SPARSE
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        FUNCTION ??Smart_home_CallBack?relay,0203H
        PUBLIC ??Smart_home_Init?relay
        FUNCTION ??Smart_home_Init?relay,0203H
        PUBLIC ??Smart_home_ProcessEvent?relay
        FUNCTION ??Smart_home_ProcessEvent?relay,0203H
        FUNCTION ??Smart_home_ProcessZDOMsgs?relay,0203H
        FUNCTION ??Smart_home_Send?relay,0203H
        PUBLIC Coordinator_DstAddr
        PUBLIC Coordinator_Msg
        FUNCTION Smart_home_CallBack,0603H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC Smart_home_ClusterList_IN
        PUBLIC Smart_home_ClusterList_OUT
        PUBLIC Smart_home_Init
        FUNCTION Smart_home_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC Smart_home_ProcessEvent
        FUNCTION Smart_home_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        FUNCTION Smart_home_ProcessZDOMsgs,0a1203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        FUNCTION Smart_home_Send,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 19, STACK
        PUBLIC Smart_home_SimpleDesc
        PUBLIC Smart_home_TaskID
        PUBLIC Smart_home_epDesc
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
afRegister          SYMBOL "afRegister"
RegisterForKeys     SYMBOL "RegisterForKeys"
HalUARTOpen         SYMBOL "HalUARTOpen"
HalRelayCtl         SYMBOL "HalRelayCtl"
ZDO_RegisterForZDOMsg SYMBOL "ZDO_RegisterForZDOMsg"
osal_start_reload_timer SYMBOL "osal_start_reload_timer"
ZDP_MatchDescReq    SYMBOL "ZDP_MatchDescReq"
HalLedSet           SYMBOL "HalLedSet"
HalUARTWrite        SYMBOL "HalUARTWrite"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
osal_msg_receive    SYMBOL "osal_msg_receive"
strlen              SYMBOL "strlen"
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
osal_stop_timerEx   SYMBOL "osal_stop_timerEx"
osal_mem_free       SYMBOL "osal_mem_free"
HalRelayStatus      SYMBOL "HalRelayStatus"
AF_DataRequest      SYMBOL "AF_DataRequest"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??HalRelayCtl?relay SYMBOL "?relay", HalRelayCtl
??HalRelayStatus?relay SYMBOL "?relay", HalRelayStatus
??HalUARTOpen?relay SYMBOL "?relay", HalUARTOpen
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
??RegisterForKeys?relay SYMBOL "?relay", RegisterForKeys
??ZDO_ParseEPListRsp?relay SYMBOL "?relay", ZDO_ParseEPListRsp
??ZDO_RegisterForZDOMsg?relay SYMBOL "?relay", ZDO_RegisterForZDOMsg
??ZDP_MatchDescReq?relay SYMBOL "?relay", ZDP_MatchDescReq
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_start_reload_timer?relay SYMBOL "?relay", osal_start_reload_timer
??osal_stop_timerEx?relay SYMBOL "?relay", osal_stop_timerEx
??strlen?relay      SYMBOL "?relay", strlen
Smart_home_Init     SYMBOL "Smart_home_Init"
??Smart_home_Init?relay SYMBOL "?relay", Smart_home_Init
Smart_home_ProcessEvent SYMBOL "Smart_home_ProcessEvent"
??Smart_home_ProcessEvent?relay SYMBOL "?relay", Smart_home_ProcessEvent

        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RegisterForKeys
        FUNCTION RegisterForKeys,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTOpen
        FUNCTION HalUARTOpen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalRelayCtl
        FUNCTION HalRelayCtl,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_RegisterForZDOMsg
        FUNCTION ZDO_RegisterForZDOMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_reload_timer
        FUNCTION osal_start_reload_timer,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MatchDescReq
        FUNCTION ZDP_MatchDescReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strlen
        FUNCTION strlen,0200H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_stop_timerEx
        FUNCTION osal_stop_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalRelayStatus
        FUNCTION HalRelayStatus,0200H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??HalRelayCtl?relay
        FUNCTION ??HalRelayCtl?relay,00H
        EXTERN ??HalRelayStatus?relay
        FUNCTION ??HalRelayStatus?relay,00H
        EXTERN ??HalUARTOpen?relay
        FUNCTION ??HalUARTOpen?relay,00H
        EXTERN ??HalUARTWrite?relay
        FUNCTION ??HalUARTWrite?relay,00H
        EXTERN ??RegisterForKeys?relay
        FUNCTION ??RegisterForKeys?relay,00H
        EXTERN ??ZDO_ParseEPListRsp?relay
        FUNCTION ??ZDO_ParseEPListRsp?relay,00H
        EXTERN ??ZDO_RegisterForZDOMsg?relay
        FUNCTION ??ZDO_RegisterForZDOMsg?relay,00H
        EXTERN ??ZDP_MatchDescReq?relay
        FUNCTION ??ZDP_MatchDescReq?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_start_reload_timer?relay
        FUNCTION ??osal_start_reload_timer?relay,00H
        EXTERN ??osal_stop_timerEx?relay
        FUNCTION ??osal_stop_timerEx?relay,00H
        EXTERN ??strlen?relay
        FUNCTION ??strlen?relay,00H

// D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeRelay.c
//    1 /*******************************************************************
//    2   文件名：Smart_homeRelay.c
//    3   作 者： 柳成林
//    4   功 能： 继电器功能节点，实现向网关节点的发送以及接收网关节点的消息
//    5   更新日志(2021)
//    6   3.21
//    7   + 新增 设置输入输出簇
//    8          Smart_home_HandleKeys()      //按键控制
//    9          Smart_home_ProcessMSGCmd();  //输入控制函数 
//   10   + 修改 Smart_home_ProcessEvt()      //事件处理函数
//   11          Smart_home_Init()            //初始化函数
//   12          Smart_home_Send()            //信息发送函数
//   13   3.23
//   14   + 修改 #define SMART_HOME_SEND_DELAY   500 
//   15          解决屏幕显示的小bug
//   16 
//   17 
//   18 使用事件 
//   19      SMART_HOME_SEND_MSG_EVT(发送数据)
//   20      SMART_HOME_MATCHRSP_EVT(描述符匹配)
//   21    
//   22 *********************************************************************/
//   23 /*********************************************************************
//   24  * INCLUDES
//   25  */
//   26 
//   27 #include "AF.h"
//   28 #include "OnBoard.h"
//   29 #include "OSAL_Tasks.h"
//   30 #include "Smart_home.h"
//   31 #include "ZDApp.h"
//   32 #include "ZDObject.h"
//   33 #include "ZDProfile.h"
//   34 
//   35 #include "hal_drivers.h"
//   36 #include "hal_key.h"
//   37 
//   38 #include "hal_led.h"
//   39 #include "hal_uart.h"
//   40 #include "hal_relay.h"
//   41 
//   42 /*********************************************************************
//   43  * MACROS
//   44  */
//   45 //3.23  屏幕显示的小bug
//   46 #define SMART_HOME_SEND_DELAY   5000
//   47 #define SMART_HOME_MATCH_DELAY  1000
//   48 /*********************************************************************
//   49  * CONSTANTS
//   50  */
//   51 
//   52 #if !defined( SERIAL_APP_PORT )
//   53 #define SERIAL_APP_PORT  0
//   54 #endif
//   55 
//   56 #if !defined( SERIAL_APP_BAUD )
//   57 #define SERIAL_APP_BAUD  HAL_UART_BR_38400
//   58 //#define SERIAL_APP_BAUD  HAL_UART_BR_115200
//   59 #endif
//   60 
//   61 // When the Rx buf space is less than this threshold, invoke the Rx callback.
//   62 #if !defined( SERIAL_APP_THRESH )
//   63 #define SERIAL_APP_THRESH  64
//   64 #endif
//   65 
//   66 #if !defined( SERIAL_APP_RX_SZ )
//   67 #define SERIAL_APP_RX_SZ  128
//   68 #endif
//   69 
//   70 #if !defined( SERIAL_APP_TX_SZ )
//   71 #define SERIAL_APP_TX_SZ  128
//   72 #endif
//   73 
//   74 // Millisecs of idle time after a byte is received before invoking Rx callback.
//   75 #if !defined( SERIAL_APP_IDLE )
//   76 #define SERIAL_APP_IDLE  6
//   77 #endif
//   78 
//   79 // Loopback Rx bytes to Tx for throughput testing.
//   80 #if !defined( SERIAL_APP_LOOPBACK )
//   81 #define SERIAL_APP_LOOPBACK  FALSE
//   82 #endif
//   83 
//   84 // This is the max byte count per OTA message.
//   85 #if !defined( SERIAL_APP_TX_MAX )
//   86 #define SERIAL_APP_TX_MAX  80
//   87 #endif
//   88 
//   89 #define SERIAL_APP_RSP_CNT  4
//   90 
//   91 //3.21 设置输入输出簇
//   92 // This list should be filled with Application specific Cluster IDs.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   93 const cId_t Smart_home_ClusterList_IN[1] =
Smart_home_ClusterList_IN:
        DW 10
//   94 {
//   95   Smart_home_CLUSTERID_RELAYCTRL         //继电器接收的消息控制命令
//   96 };
//   97 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   98 const cId_t Smart_home_ClusterList_OUT[1] =
Smart_home_ClusterList_OUT:
        DW 8
//   99 {
//  100   Smart_home_CLUSTERID_RELAYSTATUSMSG         //继电器发送的状态信息
//  101 };
//  102 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  103 const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
Smart_home_SimpleDesc:
        DB 1
        DATA16
        DW 3845
        DW 1
        DATA8
        DB 0
        DB 9
        DATA16
        DW Smart_home_ClusterList_IN
        DATA8
        DB 2
        DATA16
        DW Smart_home_ClusterList_OUT
//  104 {
//  105   Smart_home_ENDPOINT,              //  int   Endpoint;
//  106   Smart_home_PROFID,                //  uint16 AppProfId[2];
//  107   Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
//  108   Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
//  109   Smart_home_FLAGS,                 //  int   AppFlags:4;
//  110   Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
//  111   (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
//  112   Smart_home_MAX_OUTCLUSTERS ,          //  byte  AppNumOutClusters;
//  113   (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
//  114 };
//  115 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  116 const endPointDesc_t Smart_home_epDesc =
Smart_home_epDesc:
        DB 1
        DATA16
        DW Smart_home_TaskID
        DW Smart_home_SimpleDesc
        DATA8
        DB 0
//  117 {
//  118   Smart_home_ENDPOINT,
//  119  &Smart_home_TaskID,
//  120   (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
//  121   noLatencyReqs
//  122 };
//  123 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  124 afAddrType_t Coordinator_DstAddr;
Coordinator_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//  125 
//  126 /*********************************************************************
//  127  * TYPEDEFS
//  128  */
//  129 
//  130 /*********************************************************************
//  131  * GLOBAL VARIABLES
//  132  */
//  133 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  134 uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
Smart_home_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  135 byte Coordinator_Msg[RELAYSTATUSMSG_LEN];
Coordinator_Msg:
        DS 5
        REQUIRE __INIT_XDATA_Z
//  136 
//  137 /*********************************************************************
//  138  * EXTERNAL VARIABLES
//  139  */
//  140 
//  141 /*********************************************************************
//  142  * EXTERNAL FUNCTIONS
//  143  */
//  144 
//  145 /*********************************************************************
//  146  * LOCAL VARIABLES
//  147  */
//  148 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  149 static byte Smart_home_MsgID;  // This is the unique message ID (counter)
Smart_home_MsgID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  150 
//  151 
//  152 /*********************************************************************
//  153  * LOCAL FUNCTIONS
//  154  */
//  155 
//  156 static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
//  157 static void Smart_home_HandleKeys( uint8 shift, uint8 keys );
//  158 static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
//  159 static void Smart_home_Send(void);
//  160 static void Smart_home_Resp(void);
//  161 static void Smart_home_CallBack(uint8 port, uint8 event);
//  162 
//  163 /*********************************************************************
//  164  * @fn      Smart_home_Init
//  165  *
//  166  * @brief   This is called during OSAL tasks' initialization.
//  167  *
//  168  * @param   task_id - the Task ID assigned by OSAL.
//  169  *
//  170  * @return  none
//  171  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  172 void Smart_home_Init( uint8 task_id )
Smart_home_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function Smart_home_Init
        CODE
//  173 {
        FUNCALL Smart_home_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_Init, RegisterForKeys
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_Init, HalUARTOpen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_Init, HalRelayCtl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_Init, ZDO_RegisterForZDOMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_Init, ZDO_RegisterForZDOMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_Init, osal_start_reload_timer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 29
        MOV     A,#-0x1d
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,R1
        MOV     R6,A
//  174   halUARTCfg_t uartConfig;
//  175 
//  176   Smart_home_TaskID = task_id;
        MOV     DPTR,#Smart_home_TaskID
        MOVX    @DPTR,A
//  177   Smart_home_MsgID = 0;
        MOV     DPTR,#Smart_home_MsgID
        CLR     A
        MOVX    @DPTR,A
//  178 
//  179   // Register the endpoint/interface description with the AF
//  180   afRegister( (endPointDesc_t *)&Smart_home_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#Smart_home_epDesc & 0xff
        MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//  181 
//  182   // Register for all key events - This app will handle all key events
//  183   RegisterForKeys( task_id );
        ; Setup parameters for call to function RegisterForKeys
        MOV     A,R6
        MOV     R1,A
        LCALL   ??RegisterForKeys?relay
//  184   
//  185   //串口配置
//  186   uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        MOVX    @DPTR,A
//  187   uartConfig.baudRate             = SERIAL_APP_BAUD;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  188   uartConfig.flowControl          = TRUE;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
//  189   uartConfig.flowControlThreshold = SERIAL_APP_THRESH; // 2x30 don't care - see uart driver.
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x40
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  190   uartConfig.rx.maxBufSize        = SERIAL_APP_RX_SZ;  // 2x30 don't care - see uart driver.
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#-0x80
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  191   uartConfig.tx.maxBufSize        = SERIAL_APP_TX_SZ;  // 2x30 don't care - see uart driver.
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#-0x80
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  192   uartConfig.idleTimeout          = SERIAL_APP_IDLE;   // 2x30 don't care - see uart driver.
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x6
        MOVX    @DPTR,A
//  193   uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
//  194   uartConfig.callBackFunc         = Smart_home_CallBack;
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#??Smart_home_CallBack?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
        MOVX    @DPTR,A
//  195   HalUARTOpen (SERIAL_APP_PORT, &uartConfig);
        ; Setup parameters for call to function HalUARTOpen
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#0x0
        LCALL   ??HalUARTOpen?relay
//  196 
//  197   //初始化向协调器发送的地址
//  198   Coordinator_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
        MOV     DPTR,#Coordinator_DstAddr + 8
        CLR     A
        MOVX    @DPTR,A
//  199   Coordinator_DstAddr.endPoint = 0;
        INC     DPTR
        MOVX    @DPTR,A
//  200   Coordinator_DstAddr.addr.shortAddr = 0;
        MOV     DPTR,#Coordinator_DstAddr
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  201   
//  202   //初始化继电器为全关
//  203   HalRelayCtl(0x11);
        ; Setup parameters for call to function HalRelayCtl
        MOV     R1,#0x11
        LCALL   ??HalRelayCtl?relay
//  204   
//  205   ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
        ; Setup parameters for call to function ZDO_RegisterForZDOMsg
        MOV     R2,#0x20
        MOV     R3,#-0x80
        MOV     DPTR,#Smart_home_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDO_RegisterForZDOMsg?relay
//  206   ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
        ; Setup parameters for call to function ZDO_RegisterForZDOMsg
        MOV     R2,#0x6
        MOV     R3,#-0x80
        MOV     DPTR,#Smart_home_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??ZDO_RegisterForZDOMsg?relay
//  207   
//  208   // 打开定时器，描述符匹配事件
//  209   osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT, 
//  210                                                SMART_HOME_SEND_DELAY );
        ; Setup parameters for call to function osal_start_reload_timer
        MOV     R4,#-0x78
        MOV     R5,#0x13
        MOV     R2,#0x8
        MOV     R3,#0x0
        MOV     DPTR,#Smart_home_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_reload_timer?relay
//  211 }
        MOV     A,#0x1d
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 9)
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//  212 
//  213 /*********************************************************************
//  214  * @fn      Smart_home_ProcessEvent
//  215  *
//  216  * @brief   Generic Application Task event processor.
//  217  *
//  218  * @param   task_id  - The OSAL assigned task ID.
//  219  * @param   events   - Bit map of events to process.
//  220  *
//  221  * @return  Event flags of all unprocessed events.
//  222  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  223 UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
Smart_home_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function Smart_home_ProcessEvent
        CODE
//  224 {
        FUNCALL Smart_home_ProcessEvent, ZDP_MatchDescReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, HalRelayCtl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, Smart_home_Send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, Smart_home_ProcessZDOMsgs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, HalRelayCtl
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessEvent, Smart_home_Send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  225   (void)task_id;  // Intentionally unreferenced parameter
//  226   
//  227   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      $+5
        LJMP    ??Smart_home_ProcessEvent_0 & 0xFFFF
//  228   {
//  229     afIncomingMSGPacket_t *MSGpkt;
//  230 
//  231     while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
//  232     {
//  233       switch ( MSGpkt->hdr.event )
//  234       {
//  235       case ZDO_CB_MSG:
//  236         Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
//  237         break;
//  238           
//  239       case KEY_CHANGE:
//  240         Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
//  241         break;
//  242 
//  243       case AF_INCOMING_MSG_CMD:
//  244         Smart_home_ProcessMSGCmd( MSGpkt );
//  245         break;
//  246 
//  247       default:
//  248         break;
//  249       }
//  250 
//  251       osal_msg_deallocate( (uint8 *)MSGpkt );
//  252     }
//  253 
//  254     return ( events ^ SYS_EVENT_MSG );
//  255   }
//  256   
//  257   // 描述匹配事件
//  258   if ( events & SMART_HOME_MATCHRSP_EVT )
        MOV     A,R6
        ANL     A,#0x8
        JNZ     $+5
        LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
//  259   {
//  260      zAddrType_t dstAddr;
//  261      dstAddr.addrMode = AddrBroadcast;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0xf
        MOVX    @DPTR,A
//  262      dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  263      
//  264      ZDP_MatchDescReq( &dstAddr, 
//  265                         NWK_BROADCAST_SHORTADDR,
//  266                         Smart_home_PROFID,
//  267                         Smart_home_MAX_OUTCLUSTERS, 
//  268                         (cId_t *)Smart_home_ClusterList_IN,
//  269                         Smart_home_MAX_INCLUSTERS, 
//  270                         (cId_t *)Smart_home_ClusterList_OUT,
//  271                         FALSE );
        ; Setup parameters for call to function ZDP_MatchDescReq
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#Smart_home_ClusterList_OUT & 0xff
        MOV     ?V0 + 1,#(Smart_home_ClusterList_OUT >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,#0x9
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0 + 0,#Smart_home_ClusterList_IN & 0xff
        MOV     ?V0 + 1,#(Smart_home_ClusterList_IN >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0 + 0,#0x5
        MOV     ?V0 + 1,#0xf
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     R1,#0x2
        MOV     R4,#-0x1
        MOV     R5,#-0x1
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_MatchDescReq?relay
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
//  272 
//  273     // Return unprocessed events
//  274     return (events ^ SMART_HOME_MATCHRSP_EVT);
        MOV     A,R6
        XRL     A,#0x8
        MOV     R2,A
        MOV     A,R7
??Smart_home_ProcessEvent_2:
        MOV     R3,A
        LJMP    ??Smart_home_ProcessEvent_3 & 0xFFFF
//  275   }
??Smart_home_ProcessEvent_4:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xa
        JNZ     ??Smart_home_ProcessEvent_5
        INC     DPTR
        MOVX    A,@DPTR
??Smart_home_ProcessEvent_5:
        JNZ     ??Smart_home_ProcessEvent_6
        MOV     A,R2
        ADD     A,#0x22
        LCALL   ?Subroutine1 & 0xFFFF
??CrossCallReturnLabel_0:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
        ; Setup parameters for call to function HalRelayCtl
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??HalRelayCtl?relay
        ; Setup parameters for call to function HalUARTWrite
        MOV     R4,#0x1
        MOV     R5,#0x0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
??Smart_home_ProcessEvent_6:
        ; Setup parameters for call to function Smart_home_Send
        LCALL   ??Smart_home_Send?relay
??Smart_home_ProcessEvent_7:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_msg_deallocate?relay
??Smart_home_ProcessEvent_0:
        ; Setup parameters for call to function osal_msg_receive
        MOV     DPTR,#Smart_home_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??Smart_home_ProcessEvent_8
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??Smart_home_ProcessEvent_4
        ADD     A,#0x5a
        JZ      ??Smart_home_ProcessEvent_9
        ADD     A,#-0x13
        JNZ     ??Smart_home_ProcessEvent_7
        ; Setup parameters for call to function Smart_home_ProcessZDOMsgs
        LCALL   ??Smart_home_ProcessZDOMsgs?relay
        SJMP    ??Smart_home_ProcessEvent_7
??Smart_home_ProcessEvent_9:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.2
        JNC     ??Smart_home_ProcessEvent_7
        MOV     DPTR,#??relayStatusCnt
        MOVX    A,@DPTR
        INC     A
        ANL     A,#0x3
        MOVX    @DPTR,A
        JZ      ??Smart_home_ProcessEvent_10
        DEC     A
        JZ      ??Smart_home_ProcessEvent_11
        DEC     A
        JZ      ??Smart_home_ProcessEvent_12
        DEC     A
        JNZ     ??Smart_home_ProcessEvent_13
        MOV     R1,#0x10
        SJMP    ??Smart_home_ProcessEvent_13
??Smart_home_ProcessEvent_12:
        MOV     R1,#0x20
        SJMP    ??Smart_home_ProcessEvent_13
??Smart_home_ProcessEvent_11:
        MOV     R1,#0x2
        SJMP    ??Smart_home_ProcessEvent_13
??Smart_home_ProcessEvent_10:
        MOV     R1,#0x1
??Smart_home_ProcessEvent_13:
        ; Setup parameters for call to function HalRelayCtl
        LCALL   ??HalRelayCtl?relay
        SJMP    ??Smart_home_ProcessEvent_7
??Smart_home_ProcessEvent_8:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
        LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
//  276 
//  277   if ( events & SMART_HOME_SEND_MSG_EVT )
??Smart_home_ProcessEvent_1:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JNC     ??Smart_home_ProcessEvent_14
//  278   {
//  279     Smart_home_Send();
        ; Setup parameters for call to function Smart_home_Send
        LCALL   ??Smart_home_Send?relay
//  280     return ( events ^ SMART_HOME_SEND_MSG_EVT );
        MOV     A,R6
        XRL     A,#0x1
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        SJMP    ??Smart_home_ProcessEvent_3
//  281   }
//  282 
//  283   if ( events & SMART_HOME_BINDRSP_EVT )
??Smart_home_ProcessEvent_14:
        ANL     A,#0x20
        JZ      ??Smart_home_ProcessEvent_15
//  284   {
//  285     Smart_home_Resp();
//  286     return ( events ^ SMART_HOME_BINDRSP_EVT );
        MOV     A,R6
        XRL     A,#0x20
        MOV     R2,A
        SJMP    ??Smart_home_ProcessEvent_3
//  287   }
//  288   
//  289   return ( 0 );  // Discard unknown events.
??Smart_home_ProcessEvent_15:
        MOV     R2,#0x0
        MOV     R3,#0x0
??Smart_home_ProcessEvent_3:
        MOV     A,#0xa
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock1
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0
//  290 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//  291 
//  292 /*********************************************************************
//  293  * @fn      Smart_home_ProcessZDOMsgs()
//  294  *
//  295  * @brief   Process response messages
//  296  *
//  297  * @param   none
//  298  *
//  299  * @return  none
//  300  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  301 static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
Smart_home_ProcessZDOMsgs:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function Smart_home_ProcessZDOMsgs
        CODE
//  302 {
        FUNCALL Smart_home_ProcessZDOMsgs, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessZDOMsgs, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessZDOMsgs, ZDO_ParseEPListRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessZDOMsgs, osal_stop_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessZDOMsgs, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessZDOMsgs, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessZDOMsgs, osal_start_reload_timer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_ProcessZDOMsgs, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
//  303   switch ( inMsg->clusterID )
        MOV     A,R2
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?US_SWITCH_SPARSE
`?<Jumptable for Smart_home_ProcessZDOMsgs>_0`:
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        0
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        2
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        32774
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??Smart_home_ProcessZDOMsgs_0
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        32800
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??Smart_home_ProcessZDOMsgs_1
        DATA
        DATA16
        DATA
        DATA16
        DW        ??Smart_home_ProcessZDOMsgs_2
        CODE
//  304   {
//  305     case End_Device_Bind_rsp:
//  306       if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
??Smart_home_ProcessZDOMsgs_1:
        MOV     A,R2
        ADD     A,#0x13
        LCALL   ?Subroutine1 & 0xFFFF
??CrossCallReturnLabel_1:
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??Smart_home_ProcessZDOMsgs_2 & 0xFFFF
//  307       {
//  308 #if (HAL_UART == TRUE)
//  309         HalUARTWrite(HAL_UART_PORT_0, "Bind Success!\n",   strlen("Bind Success!\n"));
        ; Setup parameters for call to function HalUARTWrite
        ; Setup parameters for call to function strlen
        MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
        MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
        LCALL   ??strlen?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
        MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
        SJMP    ??Smart_home_ProcessZDOMsgs_2
//  310 #endif
//  311       }
//  312       break;
//  313     
//  314     case Match_Desc_rsp:
//  315       ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
??Smart_home_ProcessZDOMsgs_0:
        ; Setup parameters for call to function ZDO_ParseEPListRsp
        LCALL   ??ZDO_ParseEPListRsp?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  316       if ( pRsp )
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??Smart_home_ProcessZDOMsgs_2
//  317       {
//  318         if ( pRsp->status == ZSuccess && pRsp->cnt )
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        JNZ     ??Smart_home_ProcessZDOMsgs_3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??Smart_home_ProcessZDOMsgs_3
//  319         {
//  320           // 此处存储绑定对方的地址信息用于发送
//  321           Coordinator_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
        MOV     DPTR,#Coordinator_DstAddr + 8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  322           Coordinator_DstAddr.addr.shortAddr = pRsp->nwkAddr;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#Coordinator_DstAddr
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//  323           // Take the first endpoint, Can be changed to search through endpoints
//  324           Coordinator_DstAddr.endPoint = pRsp->epList[0];  // ok
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#Coordinator_DstAddr + 9
        MOVX    @DPTR,A
//  325           // 匹配成功，关闭描述符匹配事件定时器
//  326           osal_stop_timerEx( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT );
        ; Setup parameters for call to function osal_stop_timerEx
        MOV     R2,#0x8
        MOV     R3,#0x0
        MOV     DPTR,#Smart_home_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_stop_timerEx?relay
//  327   
//  328 #if (HAL_UART == TRUE)
//  329           HalUARTWrite(HAL_UART_PORT_0, "Match Success!\n",   strlen("Match Success!\n"));
        ; Setup parameters for call to function HalUARTWrite
        ; Setup parameters for call to function strlen
        MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
        MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
        LCALL   ??strlen?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
        MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  330 #endif
//  331           // 开启定时发送数据给协调器的事件
//  332           osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_SEND_MSG_EVT, 
//  333                                    SMART_HOME_SEND_DELAY );
        ; Setup parameters for call to function osal_start_reload_timer
        MOV     R4,#-0x78
        MOV     R5,#0x13
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#Smart_home_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_reload_timer?relay
//  334         }
//  335     
//  336         osal_mem_free( pRsp );
??Smart_home_ProcessZDOMsgs_3:
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_mem_free?relay
//  337       }
//  338       break;
//  339       
//  340     default:
//  341       break;
//  342   }
//  343   
//  344 }
??Smart_home_ProcessZDOMsgs_2:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiCond4 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond5 Using cfiCommon0
        CFI (cfiCond5) NoFunction
        CFI (cfiCond5) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond5) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond5) CFA_SP SP+0
        CFI (cfiCond5) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker6 Using cfiCommon1
        CFI (cfiPicker6) NoFunction
        CFI (cfiPicker6) Picker
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
        CFI EndBlock cfiCond4
        CFI EndBlock cfiCond5
        CFI EndBlock cfiPicker6
//  345 
//  346 /*********************************************************************
//  347  * @fn      Smart_home_HandleKeys
//  348  *
//  349  * @brief   Handles all key events for this device.
//  350  *
//  351  * @param   shift - true if in shift/alt.
//  352  * @param   keys  - bit field for key events.
//  353  *
//  354  * @return  none
//  355  */
//  356 void Smart_home_HandleKeys( uint8 shift, uint8 keys )
//  357 {

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  358   static uint8 relayStatusCnt;
??relayStatusCnt:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  359   uint8 relayCtl;
//  360   
//  361   if ( keys & HAL_KEY_SW_5 )
//  362   {
//  363     relayStatusCnt++;
//  364     // 继电器有四种状态
//  365     relayStatusCnt = relayStatusCnt % 4;
//  366     
//  367     switch(relayStatusCnt)
//  368     {
//  369       case 0:
//  370         relayCtl = 0x01;  // K1开，K2没有操作(状态保持不变)
//  371         break;
//  372       case 1:
//  373         relayCtl = 0x02;  // K1关，K2没有操作(状态保持不变)
//  374         break;
//  375       case 2:
//  376         relayCtl = 0x20;  // K1不变，K2开
//  377         break;
//  378       case 3:
//  379         relayCtl = 0x10;  // K1不变，K2关
//  380         break;
//  381       default:
//  382         break;
//  383     }
//  384     
//  385     // 发送继电器控制命令
//  386     HalRelayCtl(relayCtl);
//  387   }
//  388 
//  389 }
//  390 
//  391 /*********************************************************************
//  392  * @fn      Smart_home_ProcessMSGCmd
//  393  *
//  394  * @brief   Data message processor callback. This function processes
//  395  *          any incoming data - probably from other devices. Based
//  396  *          on the cluster ID, perform the intended action.
//  397  *
//  398  * @param   pkt - pointer to the incoming message packet
//  399  *
//  400  * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
//  401  *          FALSE otherwise.
//  402  */
//  403 void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
//  404 {
//  405   uint8 mode;
//  406   
//  407   switch ( pkt->clusterId )
//  408   {
//  409     case Smart_home_CLUSTERID_RELAYCTRL:
//  410     {
//  411       // 收到的继电器控制命令
//  412       mode = pkt->cmd.Data[4];
//  413       HalLedSet( HAL_LED_1, HAL_LED_MODE_ON );
//  414       HalRelayCtl(mode);
//  415       // 测试收到的命令
//  416 #if (HAL_UART == TRUE)
//  417       HalUARTWrite(HAL_UART_PORT_0, & mode,  1);
//  418 #endif      
//  419       break;
//  420     } 
//  421     // Could receive control messages in the future.
//  422     default:
//  423       break;
//  424   }
//  425   Smart_home_Send();
//  426   //收到之后启动懒加载模式，立刻返回值，降低延迟
//  427 }
//  428 
//  429 /*********************************************************************
//  430  * @fn      Smart_home_Send
//  431  *
//  432  * @brief   Send data OTA.
//  433  *
//  434  * @param   none
//  435  *
//  436  * @return  none
//  437  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  438 static void Smart_home_Send(void)
Smart_home_Send:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function Smart_home_Send
        CODE
//  439 {
        FUNCALL Smart_home_Send, HalRelayStatus
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Smart_home_Send, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  440   uint8 tmp;
//  441   
//  442   do{
//  443     // put the sequence number in the message
//  444     tmp = HI_UINT8( Smart_home_MsgID );
??Smart_home_Send_0:
        MOV     DPTR,#Smart_home_MsgID
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     R2,A
//  445     tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
        CLR     C
        SUBB    A,#0xa
        JNC     ??Smart_home_Send_1
        MOV     R0,#0x30
        SJMP    ??Smart_home_Send_2
??Smart_home_Send_1:
        MOV     R0,#0x37
//  446     Coordinator_Msg[2] = tmp;
??Smart_home_Send_2:
        MOV     A,R0
        ADD     A,R2
        MOV     DPTR,#Coordinator_Msg + 2
        MOVX    @DPTR,A
//  447     tmp = LO_UINT8( Smart_home_MsgID );
        MOV     DPTR,#Smart_home_MsgID
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R2,A
//  448     tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
        CLR     C
        SUBB    A,#0xa
        JNC     ??Smart_home_Send_3
        MOV     R0,#0x30
        SJMP    ??Smart_home_Send_4
??Smart_home_Send_3:
        MOV     R0,#0x37
//  449     Coordinator_Msg[3] = tmp;
??Smart_home_Send_4:
        MOV     A,R0
        ADD     A,R2
        MOV     DPTR,#Coordinator_Msg + 3
        MOVX    @DPTR,A
//  450     
//  451     // 发送给协调器命令 
//  452     Coordinator_Msg[4] = HalRelayStatus();
        ; Setup parameters for call to function HalRelayStatus
        LCALL   ??HalRelayStatus?relay
        MOV     A,R1
        MOV     DPTR,#Coordinator_Msg + 4
        MOVX    @DPTR,A
//  453     tmp = AF_DataRequest( &Coordinator_DstAddr,                         
//  454                           (endPointDesc_t *)&Smart_home_epDesc,                  
//  455                            Smart_home_CLUSTERID_RELAYSTATUSMSG,
//  456                            RELAYSTATUSMSG_LEN,                 
//  457                            Coordinator_Msg,                    
//  458                           &Smart_home_MsgID,                       
//  459                            AF_DISCV_ROUTE,                     
//  460                            AF_DEFAULT_RADIUS );
//  461   }while (afStatus_SUCCESS == tmp);   
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     ?V0 + 0,#Smart_home_MsgID & 0xff
        MOV     ?V0 + 1,#(Smart_home_MsgID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     ?V0 + 0,#Coordinator_Msg & 0xff
        MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x5
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 0,#0x8
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     R1,#0x20
        MOV     R4,#Smart_home_epDesc & 0xff
        MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
        MOV     R2,#Coordinator_DstAddr & 0xff
        MOV     R3,#(Coordinator_DstAddr >> 8) & 0xff
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        JZ      ??Smart_home_Send_0
//  462 }
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock7
//  463 
//  464 /*********************************************************************
//  465  * @fn      Smart_home_Resp
//  466  *
//  467  * @brief   Send data OTA.
//  468  *
//  469  * @param   none
//  470  *
//  471  * @return  none
//  472  */
//  473 static void Smart_home_Resp(void)
//  474 {
//  475   /*
//  476   if (afStatus_SUCCESS != AF_DataRequest(&Smart_home_RxAddr,
//  477                                          (endPointDesc_t *)&Smart_home_epDesc,
//  478                                           Smart_home_CLUSTERID2,
//  479                                           SERIAL_APP_RSP_CNT, Smart_home_RspBuf,
//  480                                          &Smart_home_MsgID, 0, AF_DEFAULT_RADIUS))
//  481   {
//  482     osal_set_event(Smart_home_TaskID, SMART_HOME_BINDRSP_EVT);
//  483   }
//  484   */
//  485 }
//  486 
//  487 /*********************************************************************
//  488  * @fn      Smart_home_CallBack
//  489  *
//  490  * @brief   Send data OTA.
//  491  *
//  492  * @param   port - UART port.
//  493  * @param   event - the UART port event flag.
//  494  *
//  495  * @return  none
//  496  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  497 static void Smart_home_CallBack(uint8 port, uint8 event)
Smart_home_CallBack:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function Smart_home_CallBack
        CODE
//  498 {
        ; Saved register size: 0
        ; Auto size: 0
//  499 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock8

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Smart_home_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Smart_home_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Smart_home_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Smart_home_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Smart_home_ProcessZDOMsgs?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Smart_home_ProcessZDOMsgs

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Smart_home_Send?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Smart_home_Send

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Smart_home_CallBack?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Smart_home_CallBack

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Bind Success!\\n">`:
        DB "Bind Success!\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Match Success!\\n">`:
        DB "Match Success!\012"

        END
//  500 
//  501 /*********************************************************************
//  502 *********************************************************************/
// 
// 888 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//  53 bytes in segment XDATA_ROM_C
//  20 bytes in segment XDATA_Z
// 
// 918 bytes of CODE  memory
//  53 bytes of CONST memory
//  20 bytes of XDATA memory
//
//Errors: none
//Warnings: 4
