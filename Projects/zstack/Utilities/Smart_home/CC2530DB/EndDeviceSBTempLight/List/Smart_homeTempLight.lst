###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         29/Apr/2021  18:01:10 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_homeTempLight.c          #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          omeTempLight.c -D HAL_UART=TRUE -D HAL_UART_TEST   #
#                          -D xPOWER_SAVING -lC D:\毕设\CC2530-smart_home\Pro #
#                          jects\zstack\Utilities\Smart_home\CC2530DB\EndDevi #
#                          ceSBTempLight\List\ -lA D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\EndD #
#                          eviceSBTempLight\List\ --diag_suppress             #
#                          Pe001,Pa010 -o D:\毕设\CC2530-smart_home\Projects\ #
#                          zstack\Utilities\Smart_home\CC2530DB\EndDeviceSBTe #
#                          mpLight\Obj\ -e --no_code_motion --debug           #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 16 -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530SB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBTempLight\List\Sm #
#                          art_homeTempLight.lst                              #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBTempLight\Obj\Sma #
#                          rt_homeTempLight.r51                               #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeTempLight.c
      1          /*******************************************************************
      2            文件名：Smart_homeTempLight.c
      3            作 者： 柳成林
      4            功 能： 光照检测功能节点，实现对光照以及温度的检测，收集光照温度信
      5                    息并发送给传感器
      6            更新日志(2021)
      7            3.22
      8            + 新增 设置输入输出簇
      9                   Smart_home_HandleKeys()      //按键控制
     10                   Smart_home_ProcessMSGCmd();  //输入控制函数 
     11            + 修改 Smart_home_ProcessEvt()      //事件处理函数
     12                   Smart_home_Init()            //初始化函数
     13                   Smart_home_Send()            //信息发送函数
     14          
     15          
     16          使用事件 
     17               SMART_HOME_SEND_MSG_EVT(发送数据)
     18               SMART_HOME_MATCHRSP_EVT(描述符匹配)
     19             
     20          *********************************************************************/
     21          /*********************************************************************
     22           * INCLUDES
     23           */
     24          
     25          #include "AF.h"
     26          #include "OnBoard.h"
     27          #include "OSAL_Tasks.h"
     28          #include "Smart_home.h"
     29          #include "ZDApp.h"
     30          #include "ZDObject.h"
     31          #include "ZDProfile.h"
     32          
     33          #include "hal_drivers.h"
     34          #include "hal_key.h"
     35          
     36          #include "hal_led.h"
     37          #include "hal_uart.h"
     38          #include "hal_ds18b20.h"
     39          #include "hal_bh1750.h"
     40          
     41          /*********************************************************************
     42           * MACROS
     43           */
     44          //3.23  屏幕显示的小bug
     45          #define SMART_HOME_SEND_DELAY   3000
     46          #define SMART_HOME_MATCH_DELAY  1000
     47          /*********************************************************************
     48           * CONSTANTS
     49           */
     50          
     51          #if !defined( SERIAL_APP_PORT )
     52          #define SERIAL_APP_PORT  0
     53          #endif
     54          
     55          #if !defined( SERIAL_APP_BAUD )
     56          #define SERIAL_APP_BAUD  HAL_UART_BR_38400
     57          //#define SERIAL_APP_BAUD  HAL_UART_BR_115200
     58          #endif
     59          
     60          // When the Rx buf space is less than this threshold, invoke the Rx callback.
     61          #if !defined( SERIAL_APP_THRESH )
     62          #define SERIAL_APP_THRESH  64
     63          #endif
     64          
     65          #if !defined( SERIAL_APP_RX_SZ )
     66          #define SERIAL_APP_RX_SZ  128
     67          #endif
     68          
     69          #if !defined( SERIAL_APP_TX_SZ )
     70          #define SERIAL_APP_TX_SZ  128
     71          #endif
     72          
     73          // Millisecs of idle time after a byte is received before invoking Rx callback.
     74          #if !defined( SERIAL_APP_IDLE )
     75          #define SERIAL_APP_IDLE  6
     76          #endif
     77          
     78          // Loopback Rx bytes to Tx for throughput testing.
     79          #if !defined( SERIAL_APP_LOOPBACK )
     80          #define SERIAL_APP_LOOPBACK  FALSE
     81          #endif
     82          
     83          // This is the max byte count per OTA message.
     84          #if !defined( SERIAL_APP_TX_MAX )
     85          #define SERIAL_APP_TX_MAX  80
     86          #endif
     87          
     88          #define SERIAL_APP_RSP_CNT  4
     89          
     90          //3.21 设置输入输出簇
     91          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     92          const cId_t Smart_home_ClusterList_IN[1] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0C00         DW 12
     93          {
     94            Smart_home_CLUSTERID_TEXT         //继电器接收的消息控制命令
     95          };
     96          

   \                                 In  segment XDATA_ROM_C, align 1
     97          const cId_t Smart_home_ClusterList_OUT[1] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0200         DW 2
     98          {
     99            Smart_home_CLUSTERID_TEMPLIGHTMSG         //继电器发送的状态信息
    100          };
    101          

   \                                 In  segment XDATA_ROM_C, align 1
    102          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    103          {
    104            Smart_home_ENDPOINT,              //  int   Endpoint;
    105            Smart_home_PROFID,                //  uint16 AppProfId[2];
    106            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    107            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    108            Smart_home_FLAGS,                 //  int   AppFlags:4;
    109            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    110            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    111            Smart_home_MAX_OUTCLUSTERS ,          //  byte  AppNumOutClusters;
    112            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    113          };
    114          

   \                                 In  segment XDATA_ROM_C, align 1
    115          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    116          {
    117            Smart_home_ENDPOINT,
    118           &Smart_home_TaskID,
    119            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    120            noLatencyReqs
    121          };
    122          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    123          afAddrType_t Coordinator_DstAddr;
   \                     Coordinator_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    124          
    125          /*********************************************************************
    126           * TYPEDEFS
    127           */
    128          
    129          /*********************************************************************
    130           * GLOBAL VARIABLES
    131           */
    132          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    133          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    134          byte Coordinator_Msg[TEMPLIGHTMSG_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 8
   \   000008                REQUIRE __INIT_XDATA_Z
    135          
    136          /*********************************************************************
    137           * EXTERNAL VARIABLES
    138           */
    139          
    140          /*********************************************************************
    141           * EXTERNAL FUNCTIONS
    142           */
    143          
    144          /*********************************************************************
    145           * LOCAL VARIABLES
    146           */
    147          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    148          static byte Smart_home_MsgID;  // This is the unique message ID (counter)
   \                     Smart_home_MsgID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    149          
    150          
    151          /*********************************************************************
    152           * LOCAL FUNCTIONS
    153           */
    154          
    155          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    156          static void Smart_home_HandleKeys( uint8 shift, uint8 keys );
    157          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    158          static void Smart_home_Send(void);
    159          static void Smart_home_Resp(void);
    160          static void Smart_home_CallBack(uint8 port, uint8 event);
    161          
    162          /*********************************************************************
    163           * @fn      Smart_home_Init
    164           *
    165           * @brief   This is called during OSAL tasks' initialization.
    166           *
    167           * @param   task_id - the Task ID assigned by OSAL.
    168           *
    169           * @return  none
    170           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    171          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    172          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    173            halUARTCfg_t uartConfig;
    174          
    175            Smart_home_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#Smart_home_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    176            Smart_home_MsgID = 0;
   \   000010   90....       MOV     DPTR,#Smart_home_MsgID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    177          
    178            // Register the endpoint/interface description with the AF
    179            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   000015                ; Setup parameters for call to function afRegister
   \   000015   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   000017   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   000019   12....       LCALL   ??afRegister?relay
    180          
    181            // Register for all key events - This app will handle all key events
    182            RegisterForKeys( task_id );
   \   00001C                ; Setup parameters for call to function RegisterForKeys
   \   00001C   EE           MOV     A,R6
   \   00001D   F9           MOV     R1,A
   \   00001E   12....       LCALL   ??RegisterForKeys?relay
    183            
    184            //串口配置
    185            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000021   85..82       MOV     DPL,?XSP + 0
   \   000024   85..83       MOV     DPH,?XSP + 1
   \   000027   7401         MOV     A,#0x1
   \   000029   F0           MOVX    @DPTR,A
    186            uartConfig.baudRate             = SERIAL_APP_BAUD;
   \   00002A   12....       LCALL   ?XSTACK_DISP0_8
   \   00002D   7402         MOV     A,#0x2
   \   00002F   F0           MOVX    @DPTR,A
    187            uartConfig.flowControl          = TRUE;
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7401         MOV     A,#0x1
   \   000035   F0           MOVX    @DPTR,A
    188            uartConfig.flowControlThreshold = SERIAL_APP_THRESH; // 2x30 don't care - see uart driver.
   \   000036   7403         MOV     A,#0x3
   \   000038   12....       LCALL   ?XSTACK_DISP0_8
   \   00003B   7440         MOV     A,#0x40
   \   00003D   F0           MOVX    @DPTR,A
   \   00003E   A3           INC     DPTR
   \   00003F   E4           CLR     A
   \   000040   F0           MOVX    @DPTR,A
    189            uartConfig.rx.maxBufSize        = SERIAL_APP_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000041   740A         MOV     A,#0xa
   \   000043   12....       LCALL   ?XSTACK_DISP0_8
   \   000046   7480         MOV     A,#-0x80
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   E4           CLR     A
   \   00004B   F0           MOVX    @DPTR,A
    190            uartConfig.tx.maxBufSize        = SERIAL_APP_TX_SZ;  // 2x30 don't care - see uart driver.
   \   00004C   7412         MOV     A,#0x12
   \   00004E   12....       LCALL   ?XSTACK_DISP0_8
   \   000051   7480         MOV     A,#-0x80
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   E4           CLR     A
   \   000056   F0           MOVX    @DPTR,A
    191            uartConfig.idleTimeout          = SERIAL_APP_IDLE;   // 2x30 don't care - see uart driver.
   \   000057   7405         MOV     A,#0x5
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   7406         MOV     A,#0x6
   \   00005E   F0           MOVX    @DPTR,A
    192            uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
   \   00005F   7416         MOV     A,#0x16
   \   000061   12....       LCALL   ?XSTACK_DISP0_8
   \   000064   7401         MOV     A,#0x1
   \   000066   F0           MOVX    @DPTR,A
    193            uartConfig.callBackFunc         = Smart_home_CallBack;
   \   000067   741B         MOV     A,#0x1b
   \   000069   12....       LCALL   ?XSTACK_DISP0_8
   \   00006C   74..         MOV     A,#??Smart_home_CallBack?relay & 0xff
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F   A3           INC     DPTR
   \   000070   74..         MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
   \   000072   F0           MOVX    @DPTR,A
    194            HalUARTOpen (SERIAL_APP_PORT, &uartConfig);
   \   000073                ; Setup parameters for call to function HalUARTOpen
   \   000073   85..82       MOV     DPL,?XSP + 0
   \   000076   85..83       MOV     DPH,?XSP + 1
   \   000079   AA82         MOV     R2,DPL
   \   00007B   AB83         MOV     R3,DPH
   \   00007D   7900         MOV     R1,#0x0
   \   00007F   12....       LCALL   ??HalUARTOpen?relay
    195          
    196            //初始化向协调器发送的地址
    197            Coordinator_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000082   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   000085   E4           CLR     A
   \   000086   F0           MOVX    @DPTR,A
    198            Coordinator_DstAddr.endPoint = 0;
   \   000087   A3           INC     DPTR
   \   000088   F0           MOVX    @DPTR,A
    199            Coordinator_DstAddr.addr.shortAddr = 0;
   \   000089   90....       MOV     DPTR,#Coordinator_DstAddr
   \   00008C   F0           MOVX    @DPTR,A
   \   00008D   A3           INC     DPTR
   \   00008E   F0           MOVX    @DPTR,A
    200            
    201            
    202            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \   00008F                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00008F   7A20         MOV     R2,#0x20
   \   000091   7B80         MOV     R3,#-0x80
   \   000093   90....       MOV     DPTR,#Smart_home_TaskID
   \   000096   E0           MOVX    A,@DPTR
   \   000097   F9           MOV     R1,A
   \   000098   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    203            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   00009B                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00009B   7A06         MOV     R2,#0x6
   \   00009D   7B80         MOV     R3,#-0x80
   \   00009F   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000A2   E0           MOVX    A,@DPTR
   \   0000A3   F9           MOV     R1,A
   \   0000A4   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    204            
    205            // 打开定时器，描述符匹配事件
    206            osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT, 
    207                                                         SMART_HOME_MATCH_DELAY );
   \   0000A7                ; Setup parameters for call to function osal_start_reload_timer
   \   0000A7   7CE8         MOV     R4,#-0x18
   \   0000A9   7D03         MOV     R5,#0x3
   \   0000AB   7A08         MOV     R2,#0x8
   \   0000AD   7B00         MOV     R3,#0x0
   \   0000AF   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000B2   E0           MOVX    A,@DPTR
   \   0000B3   F9           MOV     R1,A
   \   0000B4   12....       LCALL   ??osal_start_reload_timer?relay
    208          }
   \   0000B7   741D         MOV     A,#0x1d
   \   0000B9   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000BC   7F01         MOV     R7,#0x1
   \   0000BE   02....       LJMP    ?BANKED_LEAVE_XDATA
    209          
    210          /*********************************************************************
    211           * @fn      Smart_home_ProcessEvent
    212           *
    213           * @brief   Generic Application Task event processor.
    214           *
    215           * @param   task_id  - The OSAL assigned task ID.
    216           * @param   events   - Bit map of events to process.
    217           *
    218           * @return  Event flags of all unprocessed events.
    219           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    220          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    221          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
    222            (void)task_id;  // Intentionally unreferenced parameter
    223            
    224            if ( events & SYS_EVENT_MSG )
   \   00000E   5480         ANL     A,#0x80
   \   000010   707E         JNZ     ??Smart_home_ProcessEvent_0
    225            {
    226              afIncomingMSGPacket_t *MSGpkt;
    227          
    228              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    229              {
    230                switch ( MSGpkt->hdr.event )
    231                {
    232                case ZDO_CB_MSG:
    233                  Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    234                  break;
    235                    
    236                case KEY_CHANGE:
    237                  Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    238                  break;
    239          
    240                case AF_INCOMING_MSG_CMD:
    241                  Smart_home_ProcessMSGCmd( MSGpkt );
    242                  break;
    243          
    244                default:
    245                  break;
    246                }
    247          
    248                osal_msg_deallocate( (uint8 *)MSGpkt );
    249              }
    250          
    251              return ( events ^ SYS_EVENT_MSG );
    252            }
    253            
    254            // 描述匹配事件
    255            if ( events & SMART_HOME_MATCHRSP_EVT )
   \   000012   EE           MOV     A,R6
   \   000013   5408         ANL     A,#0x8
   \   000015   7003         JNZ     $+5
   \   000017   02....       LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
    256            {
    257               zAddrType_t dstAddr;
    258               dstAddr.addrMode = AddrBroadcast;
   \   00001A   7408         MOV     A,#0x8
   \   00001C   12....       LCALL   ?XSTACK_DISP0_8
   \   00001F   740F         MOV     A,#0xf
   \   000021   F0           MOVX    @DPTR,A
    259               dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
   \   000022   85..82       MOV     DPL,?XSP + 0
   \   000025   85..83       MOV     DPH,?XSP + 1
   \   000028   74FF         MOV     A,#-0x1
   \   00002A   F0           MOVX    @DPTR,A
   \   00002B   A3           INC     DPTR
   \   00002C   F0           MOVX    @DPTR,A
    260               
    261               ZDP_MatchDescReq( &dstAddr, 
    262                                  NWK_BROADCAST_SHORTADDR,
    263                                  Smart_home_PROFID,
    264                                  Smart_home_MAX_OUTCLUSTERS, 
    265                                  (cId_t *)Smart_home_ClusterList_IN,
    266                                  Smart_home_MAX_INCLUSTERS, 
    267                                  (cId_t *)Smart_home_ClusterList_OUT,
    268                                  FALSE );
   \   00002D                ; Setup parameters for call to function ZDP_MatchDescReq
   \   00002D   75..00       MOV     ?V0 + 0,#0x0
   \   000030   78..         MOV     R0,#?V0 + 0
   \   000032   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000035   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_OUT & 0xff
   \   000038   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_OUT >> 8) & 0xff
   \   00003B   78..         MOV     R0,#?V0 + 0
   \   00003D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000040   75..09       MOV     ?V0 + 0,#0x9
   \   000043   78..         MOV     R0,#?V0 + 0
   \   000045   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000048   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_IN & 0xff
   \   00004B   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_IN >> 8) & 0xff
   \   00004E   78..         MOV     R0,#?V0 + 0
   \   000050   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000053   75..05       MOV     ?V0 + 0,#0x5
   \   000056   75..0F       MOV     ?V0 + 1,#0xf
   \   000059   78..         MOV     R0,#?V0 + 0
   \   00005B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005E   7903         MOV     R1,#0x3
   \   000060   7CFF         MOV     R4,#-0x1
   \   000062   7DFF         MOV     R5,#-0x1
   \   000064   7408         MOV     A,#0x8
   \   000066   12....       LCALL   ?XSTACK_DISP0_8
   \   000069   AA82         MOV     R2,DPL
   \   00006B   AB83         MOV     R3,DPH
   \   00006D   12....       LCALL   ??ZDP_MatchDescReq?relay
   \   000070   7408         MOV     A,#0x8
   \   000072   12....       LCALL   ?DEALLOC_XSTACK8
    269          
    270              // Return unprocessed events
    271              return (events ^ SMART_HOME_MATCHRSP_EVT);
   \   000075   EE           MOV     A,R6
   \   000076   6408         XRL     A,#0x8
   \   000078   FA           MOV     R2,A
   \   000079   EF           MOV     A,R7
   \                     ??Smart_home_ProcessEvent_2:
   \   00007A   FB           MOV     R3,A
   \   00007B   8049         SJMP    ??Smart_home_ProcessEvent_3
    272            }
   \                     ??Smart_home_ProcessEvent_4:
   \   00007D   8A82         MOV     DPL,R2
   \   00007F   8B83         MOV     DPH,R3
   \   000081   E0           MOVX    A,@DPTR
   \   000082   64D3         XRL     A,#0xd3
   \   000084   7003         JNZ     ??Smart_home_ProcessEvent_5
   \   000086                ; Setup parameters for call to function Smart_home_ProcessZDOMsgs
   \   000086   12....       LCALL   ??Smart_home_ProcessZDOMsgs?relay
   \                     ??Smart_home_ProcessEvent_5:
   \   000089                ; Setup parameters for call to function osal_msg_deallocate
   \   000089   AA..         MOV     R2,?V0 + 0
   \   00008B   AB..         MOV     R3,?V0 + 1
   \   00008D   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   000090                ; Setup parameters for call to function osal_msg_receive
   \   000090   90....       MOV     DPTR,#Smart_home_TaskID
   \   000093   E0           MOVX    A,@DPTR
   \   000094   F9           MOV     R1,A
   \   000095   12....       LCALL   ??osal_msg_receive?relay
   \   000098   8A..         MOV     ?V0 + 0,R2
   \   00009A   8B..         MOV     ?V0 + 1,R3
   \   00009C   EA           MOV     A,R2
   \   00009D   45..         ORL     A,?V0 + 1
   \   00009F   70DC         JNZ     ??Smart_home_ProcessEvent_4
   \   0000A1   EE           MOV     A,R6
   \   0000A2   FA           MOV     R2,A
   \   0000A3   EF           MOV     A,R7
   \   0000A4   6480         XRL     A,#0x80
   \   0000A6   80D2         SJMP    ??Smart_home_ProcessEvent_2
    273          
    274            if ( events & SMART_HOME_SEND_MSG_EVT )
   \                     ??Smart_home_ProcessEvent_1:
   \   0000A8   EE           MOV     A,R6
   \   0000A9   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000AB   500B         JNC     ??Smart_home_ProcessEvent_6
    275            {
    276              Smart_home_Send();
   \   0000AD                ; Setup parameters for call to function Smart_home_Send
   \   0000AD   12....       LCALL   ??Smart_home_Send?relay
    277              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   0000B0   EE           MOV     A,R6
   \   0000B1   6401         XRL     A,#0x1
   \   0000B3   FA           MOV     R2,A
   \   0000B4   EF           MOV     A,R7
   \   0000B5   FB           MOV     R3,A
   \   0000B6   800E         SJMP    ??Smart_home_ProcessEvent_3
    278            }
    279          
    280            if ( events & SMART_HOME_BINDRSP_EVT )
   \                     ??Smart_home_ProcessEvent_6:
   \   0000B8   5420         ANL     A,#0x20
   \   0000BA   6006         JZ      ??Smart_home_ProcessEvent_7
    281            {
    282              Smart_home_Resp();
    283              return ( events ^ SMART_HOME_BINDRSP_EVT );
   \   0000BC   EE           MOV     A,R6
   \   0000BD   6420         XRL     A,#0x20
   \   0000BF   FA           MOV     R2,A
   \   0000C0   8004         SJMP    ??Smart_home_ProcessEvent_3
    284            }
    285            
    286            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_7:
   \   0000C2   7A00         MOV     R2,#0x0
   \   0000C4   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_3:
   \   0000C6   7409         MOV     A,#0x9
   \   0000C8   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000CB                REQUIRE ?Subroutine0
   \   0000CB                ; // Fall through to label ?Subroutine0
    287          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    288          
    289          /*********************************************************************
    290           * @fn      Smart_home_ProcessZDOMsgs()
    291           *
    292           * @brief   Process response messages
    293           *
    294           * @param   none
    295           *
    296           * @return  none
    297           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    298          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
   \                     Smart_home_ProcessZDOMsgs:
    299          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    300            switch ( inMsg->clusterID )
   \   000005   EA           MOV     A,R2
   \   000006   240C         ADD     A,#0xc
   \   000008   F582         MOV     DPL,A
   \   00000A   EB           MOV     A,R3
   \   00000B   3400         ADDC    A,#0x0
   \   00000D   F583         MOV     DPH,A
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F5..         MOV     ?V0 + 0,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F5..         MOV     ?V0 + 1,A
   \   000016   78..         MOV     R0,#?V0 + 0
   \   000018   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Smart_home_ProcessZDOMsgs>_0`:
   \   00001B   0000         DW        0
   \   00001D   0200         DW        2
   \   00001F   0680         DW        32774
   \   000021   ....         DW        ??Smart_home_ProcessZDOMsgs_0
   \   000023   2080         DW        32800
   \   000025   ....         DW        ??Smart_home_ProcessZDOMsgs_1
   \   000027   ....         DW        ??Smart_home_ProcessZDOMsgs_2
    301            {
    302              case End_Device_Bind_rsp:
    303                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
   \                     ??Smart_home_ProcessZDOMsgs_1:
   \   000029   EA           MOV     A,R2
   \   00002A   2413         ADD     A,#0x13
   \   00002C   F582         MOV     DPL,A
   \   00002E   EB           MOV     A,R3
   \   00002F   3400         ADDC    A,#0x0
   \   000031   F583         MOV     DPH,A
   \   000033   E0           MOVX    A,@DPTR
   \   000034   F8           MOV     R0,A
   \   000035   A3           INC     DPTR
   \   000036   E0           MOVX    A,@DPTR
   \   000037   F583         MOV     DPH,A
   \   000039   8882         MOV     DPL,R0
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   6003         JZ      $+5
   \   00003E   02....       LJMP    ??Smart_home_ProcessZDOMsgs_2 & 0xFFFF
    304                {
    305          #if (HAL_UART == TRUE)
    306                  HalUARTWrite(HAL_UART_PORT_0, "Bind Success!\n",   strlen("Bind Success!\n"));
                                                                            ^
Warning[Pe223]: function "strlen" declared implicitly
   \   000041                ; Setup parameters for call to function HalUARTWrite
   \   000041                ; Setup parameters for call to function strlen
   \   000041   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   000043   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   000045   12....       LCALL   ?Subroutine1 & 0xFFFF
    307          #endif
    308                }
   \                     ??CrossCallReturnLabel_0:
   \   000048   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   00004A   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   00004C   7900         MOV     R1,#0x0
   \   00004E   12....       LCALL   ??HalUARTWrite?relay
   \   000051   8071         SJMP    ??Smart_home_ProcessZDOMsgs_2
    309                break;
    310              
    311              case Match_Desc_rsp:
    312                ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessZDOMsgs_0:
   \   000053                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   000053   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   000056   8A..         MOV     ?V0 + 0,R2
   \   000058   8B..         MOV     ?V0 + 1,R3
    313                if ( pRsp )
   \   00005A   EA           MOV     A,R2
   \   00005B   45..         ORL     A,?V0 + 1
   \   00005D   6065         JZ      ??Smart_home_ProcessZDOMsgs_2
    314                {
    315                  if ( pRsp->status == ZSuccess && pRsp->cnt )
   \   00005F   8A82         MOV     DPL,R2
   \   000061   8B83         MOV     DPH,R3
   \   000063   E0           MOVX    A,@DPTR
   \   000064   7057         JNZ     ??Smart_home_ProcessZDOMsgs_3
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   A3           INC     DPTR
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   6051         JZ      ??Smart_home_ProcessZDOMsgs_3
    316                  {
    317                    // 此处存储绑定对方的地址信息用于发送
    318                    Coordinator_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   00006C   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   00006F   7402         MOV     A,#0x2
   \   000071   F0           MOVX    @DPTR,A
    319                    Coordinator_DstAddr.addr.shortAddr = pRsp->nwkAddr;
   \   000072   8A82         MOV     DPL,R2
   \   000074   8B83         MOV     DPH,R3
   \   000076   A3           INC     DPTR
   \   000077   E0           MOVX    A,@DPTR
   \   000078   F8           MOV     R0,A
   \   000079   A3           INC     DPTR
   \   00007A   E0           MOVX    A,@DPTR
   \   00007B   F9           MOV     R1,A
   \   00007C   90....       MOV     DPTR,#Coordinator_DstAddr
   \   00007F   E8           MOV     A,R0
   \   000080   F0           MOVX    @DPTR,A
   \   000081   A3           INC     DPTR
   \   000082   E9           MOV     A,R1
   \   000083   F0           MOVX    @DPTR,A
    320                    // Take the first endpoint, Can be changed to search through endpoints
    321                    Coordinator_DstAddr.endPoint = pRsp->epList[0];  // ok
   \   000084   8A82         MOV     DPL,R2
   \   000086   8B83         MOV     DPH,R3
   \   000088   A3           INC     DPTR
   \   000089   A3           INC     DPTR
   \   00008A   A3           INC     DPTR
   \   00008B   A3           INC     DPTR
   \   00008C   E0           MOVX    A,@DPTR
   \   00008D   90....       MOV     DPTR,#Coordinator_DstAddr + 9
   \   000090   F0           MOVX    @DPTR,A
    322                    // 匹配成功，关闭描述符匹配事件定时器
    323                    osal_stop_timerEx( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT );
   \   000091                ; Setup parameters for call to function osal_stop_timerEx
   \   000091   7A08         MOV     R2,#0x8
   \   000093   7B00         MOV     R3,#0x0
   \   000095   90....       MOV     DPTR,#Smart_home_TaskID
   \   000098   E0           MOVX    A,@DPTR
   \   000099   F9           MOV     R1,A
   \   00009A   12....       LCALL   ??osal_stop_timerEx?relay
    324            
    325          #if (HAL_UART == TRUE)
    326                    HalUARTWrite(HAL_UART_PORT_0, "Match Success!\n",   strlen("Match Success!\n"));
                                                                               ^
Warning[Pe223]: function "strlen" declared implicitly

    switch ( inMsg->clusterID )
    ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeTempLight.c",300  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "pRsp" (declared at line 312 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_homeTempLight.c")
   \   00009D                ; Setup parameters for call to function HalUARTWrite
   \   00009D                ; Setup parameters for call to function strlen
   \   00009D   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   00009F   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000A1   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   0000A4   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   0000A6   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000A8   7900         MOV     R1,#0x0
   \   0000AA   12....       LCALL   ??HalUARTWrite?relay
    327          #endif
    328                    // 开启定时发送数据给协调器的事件
    329                    osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_SEND_MSG_EVT, 
    330                                             SMART_HOME_SEND_DELAY );
   \   0000AD                ; Setup parameters for call to function osal_start_reload_timer
   \   0000AD   7CB8         MOV     R4,#-0x48
   \   0000AF   7D0B         MOV     R5,#0xb
   \   0000B1   7A01         MOV     R2,#0x1
   \   0000B3   7B00         MOV     R3,#0x0
   \   0000B5   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000B8   E0           MOVX    A,@DPTR
   \   0000B9   F9           MOV     R1,A
   \   0000BA   12....       LCALL   ??osal_start_reload_timer?relay
    331                  }
    332              
    333                  osal_mem_free( pRsp );
   \                     ??Smart_home_ProcessZDOMsgs_3:
   \   0000BD                ; Setup parameters for call to function osal_mem_free
   \   0000BD   AA..         MOV     R2,?V0 + 0
   \   0000BF   AB..         MOV     R3,?V0 + 1
   \   0000C1   12....       LCALL   ??osal_mem_free?relay
    334                }
    335                break;
    336                
    337              default:
    338                break;
    339            }
    340            
    341          }
   \                     ??Smart_home_ProcessZDOMsgs_2:
   \   0000C4   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ??strlen?relay
   \   000003   EA           MOV     A,R2
   \   000004   FC           MOV     R4,A
   \   000005   EB           MOV     A,R3
   \   000006   FD           MOV     R5,A
   \   000007   22           RET
    342          
    343          /*********************************************************************
    344           * @fn      Smart_home_HandleKeys
    345           *
    346           * @brief   Handles all key events for this device.
    347           *
    348           * @param   shift - true if in shift/alt.
    349           * @param   keys  - bit field for key events.
    350           *
    351           * @return  none
    352           */
    353          void Smart_home_HandleKeys( uint8 shift, uint8 keys )
    354          {
    355            
    356            if ( keys & HAL_KEY_SW_5 )
    357            {
    358            }
    359          
    360          }
    361          
    362          /*********************************************************************
    363           * @fn      Smart_home_ProcessMSGCmd
    364           *
    365           * @brief   Data message processor callback. This function processes
    366           *          any incoming data - probably from other devices. Based
    367           *          on the cluster ID, perform the intended action.
    368           *
    369           * @param   pkt - pointer to the incoming message packet
    370           *
    371           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    372           *          FALSE otherwise.
    373           */
    374          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
    375          {
    376            uint8 mode;
                         ^
Warning[Pe177]: variable "mode" was declared but never referenced
    377            
    378            switch ( pkt->clusterId )
    379            {
    380              case Smart_home_CLUSTERID_TEMPLIGHTMSG:
    381              {    
    382                break;
    383              } 
    384              // Could receive control messages in the future.
    385              default:
    386                break;
    387            }
    388          }
    389          
    390          /*********************************************************************
    391           * @fn      Smart_home_Send
    392           *
    393           * @brief   Send data OTA.
    394           *
    395           * @param   none
    396           *
    397           * @return  none
    398           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    399          static void Smart_home_Send(void)
   \                     Smart_home_Send:
    400          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    401            uint8 tmp;
    402            uint16 Light,Temper;
    403            static uint8 Sendbuf[4];
    404            
    405            
    406            Light = BH1750_ConvertLight();
   \   000005                ; Setup parameters for call to function BH1750_ConvertLight
   \   000005   12....       LCALL   ??BH1750_ConvertLight?relay
   \   000008   8A..         MOV     ?V0 + 0,R2
   \   00000A   8B..         MOV     ?V0 + 1,R3
   \   00000C   AE..         MOV     R6,?V0 + 0
   \   00000E   AF..         MOV     R7,?V0 + 1
    407            Temper = DS18B20_ConvertTemp();
   \   000010                ; Setup parameters for call to function DS18B20_ConvertTemp
   \   000010   12....       LCALL   ??DS18B20_ConvertTemp?relay
   \   000013   8A..         MOV     ?V0 + 0,R2
   \   000015   8B..         MOV     ?V0 + 1,R3
    408            
    409            Sendbuf[0] = (uint8)((Temper>>4) & 0x007F);  // 温度的整数部分
   \   000017   7404         MOV     A,#0x4
   \   000019   78..         MOV     R0,#?V0 + 0
   \   00001B   12....       LCALL   ?US_SHR
   \   00001E   E5..         MOV     A,?V0 + 0
   \   000020   547F         ANL     A,#0x7f
   \   000022   90....       MOV     DPTR,#??Sendbuf
   \   000025   F0           MOVX    @DPTR,A
    410            Sendbuf[1] = (uint8)(Temper & 0x000F);       // 温度的小数部分
   \   000026   EA           MOV     A,R2
   \   000027   540F         ANL     A,#0xf
   \   000029   A3           INC     DPTR
   \   00002A   F0           MOVX    @DPTR,A
    411            Sendbuf[2] = (uint8)(Light >> 8);            // 光照度的高8位
   \   00002B   EF           MOV     A,R7
   \   00002C   A3           INC     DPTR
   \   00002D   F0           MOVX    @DPTR,A
    412            Sendbuf[3] = (uint8)(Light & 0xFF);          // 光照度的低8位
   \   00002E   EE           MOV     A,R6
   \   00002F   A3           INC     DPTR
   \   000030   F0           MOVX    @DPTR,A
    413          
    414          #if HAL_UART==TRUE
    415            //串口发送原数据，解析工作交给上位机处理
    416            HalUARTWrite(HAL_UART_PORT_0, Sendbuf, strlen(Sendbuf));
                                                          ^
Warning[Pe223]: function "strlen" declared implicitly
   \   000031                ; Setup parameters for call to function HalUARTWrite
   \   000031                ; Setup parameters for call to function strlen
   \   000031   7A..         MOV     R2,#??Sendbuf & 0xff
   \   000033   7B..         MOV     R3,#(??Sendbuf >> 8) & 0xff
   \   000035   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000038   7A..         MOV     R2,#??Sendbuf & 0xff
   \   00003A   7B..         MOV     R3,#(??Sendbuf >> 8) & 0xff
   \   00003C   7900         MOV     R1,#0x0
   \   00003E   12....       LCALL   ??HalUARTWrite?relay
    417          #endif   
    418            
    419            do{
    420              // put the sequence number in the message
    421              tmp = HI_UINT8( Smart_home_MsgID );
   \                     ??Smart_home_Send_0:
   \   000041   90....       MOV     DPTR,#Smart_home_MsgID
   \   000044   E0           MOVX    A,@DPTR
   \   000045   C4           SWAP    A
   \   000046   540F         ANL     A,#0xf
   \   000048   FA           MOV     R2,A
    422              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000049   C3           CLR     C
   \   00004A   940A         SUBB    A,#0xa
   \   00004C   5004         JNC     ??Smart_home_Send_1
   \   00004E   7830         MOV     R0,#0x30
   \   000050   8002         SJMP    ??Smart_home_Send_2
   \                     ??Smart_home_Send_1:
   \   000052   7837         MOV     R0,#0x37
    423              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_Send_2:
   \   000054   E8           MOV     A,R0
   \   000055   2A           ADD     A,R2
   \   000056   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000059   F0           MOVX    @DPTR,A
    424              tmp = LO_UINT8( Smart_home_MsgID );
   \   00005A   90....       MOV     DPTR,#Smart_home_MsgID
   \   00005D   E0           MOVX    A,@DPTR
   \   00005E   540F         ANL     A,#0xf
   \   000060   FA           MOV     R2,A
    425              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000061   C3           CLR     C
   \   000062   940A         SUBB    A,#0xa
   \   000064   5004         JNC     ??Smart_home_Send_3
   \   000066   7830         MOV     R0,#0x30
   \   000068   8002         SJMP    ??Smart_home_Send_4
   \                     ??Smart_home_Send_3:
   \   00006A   7837         MOV     R0,#0x37
    426              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_Send_4:
   \   00006C   E8           MOV     A,R0
   \   00006D   2A           ADD     A,R2
   \   00006E   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   000071   F0           MOVX    @DPTR,A
    427              
    428              // 发送给协调器命令 
    429              Coordinator_Msg[4] = Sendbuf[0];
   \   000072   90....       MOV     DPTR,#??Sendbuf
   \   000075   E0           MOVX    A,@DPTR
   \   000076   90....       MOV     DPTR,#Coordinator_Msg + 4
   \   000079   F0           MOVX    @DPTR,A
    430              Coordinator_Msg[5] = Sendbuf[1];
   \   00007A   90....       MOV     DPTR,#??Sendbuf + 1
   \   00007D   E0           MOVX    A,@DPTR
   \   00007E   90....       MOV     DPTR,#Coordinator_Msg + 5
   \   000081   F0           MOVX    @DPTR,A
    431              Coordinator_Msg[6] = Sendbuf[2];
   \   000082   90....       MOV     DPTR,#??Sendbuf + 2
   \   000085   E0           MOVX    A,@DPTR
   \   000086   90....       MOV     DPTR,#Coordinator_Msg + 6
   \   000089   F0           MOVX    @DPTR,A
    432              Coordinator_Msg[7] = Sendbuf[3];
   \   00008A   90....       MOV     DPTR,#??Sendbuf + 3
   \   00008D   E0           MOVX    A,@DPTR
   \   00008E   90....       MOV     DPTR,#Coordinator_Msg + 7
   \   000091   F0           MOVX    @DPTR,A
    433              
    434              tmp = AF_DataRequest( &Coordinator_DstAddr,                         
    435                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    436                                     Smart_home_CLUSTERID_TEMPLIGHTMSG,
    437                                     TEMPLIGHTMSG_LEN,                 
    438                                     Coordinator_Msg,                    
    439                                    &Smart_home_MsgID,                       
    440                                     AF_DISCV_ROUTE,                     
    441                                     AF_DEFAULT_RADIUS );
    442            }while (afStatus_SUCCESS == tmp);   
   \   000092                ; Setup parameters for call to function AF_DataRequest
   \   000092   75..1E       MOV     ?V0 + 0,#0x1e
   \   000095   78..         MOV     R0,#?V0 + 0
   \   000097   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00009A   75....       MOV     ?V0 + 0,#Smart_home_MsgID & 0xff
   \   00009D   75....       MOV     ?V0 + 1,#(Smart_home_MsgID >> 8) & 0xff
   \   0000A0   78..         MOV     R0,#?V0 + 0
   \   0000A2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A5   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   0000A8   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   0000AB   78..         MOV     R0,#?V0 + 0
   \   0000AD   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B0   75..08       MOV     ?V0 + 0,#0x8
   \   0000B3   75..00       MOV     ?V0 + 1,#0x0
   \   0000B6   78..         MOV     R0,#?V0 + 0
   \   0000B8   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000BB   75..02       MOV     ?V0 + 0,#0x2
   \   0000BE   78..         MOV     R0,#?V0 + 0
   \   0000C0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000C3   7920         MOV     R1,#0x20
   \   0000C5   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   0000C7   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   0000C9   7A..         MOV     R2,#Coordinator_DstAddr & 0xff
   \   0000CB   7B..         MOV     R3,#(Coordinator_DstAddr >> 8) & 0xff
   \   0000CD   12....       LCALL   ??AF_DataRequest?relay
   \   0000D0   7409         MOV     A,#0x9
   \   0000D2   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000D5   E9           MOV     A,R1
   \   0000D6   7003         JNZ     $+5
   \   0000D8   02....       LJMP    ??Smart_home_Send_0 & 0xFFFF
    443          }
   \   0000DB   7F02         MOV     R7,#0x2
   \   0000DD   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Sendbuf:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
    444          
    445          /*********************************************************************
    446           * @fn      Smart_home_Resp
    447           *
    448           * @brief   Send data OTA.
    449           *
    450           * @param   none
    451           *
    452           * @return  none
    453           */
    454          static void Smart_home_Resp(void)
    455          {
    456            /*
    457            if (afStatus_SUCCESS != AF_DataRequest(&Smart_home_RxAddr,
    458                                                   (endPointDesc_t *)&Smart_home_epDesc,
    459                                                    Smart_home_CLUSTERID2,
    460                                                    SERIAL_APP_RSP_CNT, Smart_home_RspBuf,
    461                                                   &Smart_home_MsgID, 0, AF_DEFAULT_RADIUS))
    462            {
    463              osal_set_event(Smart_home_TaskID, SMART_HOME_BINDRSP_EVT);
    464            }
    465            */
    466          }
    467          
    468          /*********************************************************************
    469           * @fn      Smart_home_CallBack
    470           *
    471           * @brief   Send data OTA.
    472           *
    473           * @param   port - UART port.
    474           * @param   event - the UART port event flag.
    475           *
    476           * @return  none
    477           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    478          static void Smart_home_CallBack(uint8 port, uint8 event)
   \                     Smart_home_CallBack:
    479          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    480          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessZDOMsgs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessZDOMsgs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Send?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Send

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_CallBack

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Bind Success!\\n">`:
   \   000000   42696E64     DB "Bind Success!\012"
   \            20537563
   \            63657373
   \            210A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Match Success!\\n">`:
   \   000000   4D617463     DB "Match Success!\012"
   \            68205375
   \            63636573
   \            73210A00
    481          
    482          /*********************************************************************
    483          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_CallBack                0      0      0
     Smart_home_Init                    0      0     38
       -> afRegister                    0      0     76
       -> RegisterForKeys               0      0     76
       -> HalUARTOpen                   0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> osal_start_reload_timer       0      0     76
     Smart_home_ProcessEvent            0      0     29
       -> ZDP_MatchDescReq              0      0     58
       -> Smart_home_ProcessZDOMsgs     0      0     42
       -> osal_msg_deallocate           0      0     42
       -> osal_msg_receive              0      0     42
       -> Smart_home_Send               0      0     42
     Smart_home_ProcessZDOMsgs          0      0     33
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> ZDO_ParseEPListRsp            0      0     24
       -> osal_stop_timerEx             0      0     24
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> osal_start_reload_timer       0      0     24
       -> osal_mem_free                 0      0     24
     Smart_home_Send                    0      0     40
       -> BH1750_ConvertLight           0      0     20
       -> DS18B20_ConvertTemp           0      0     20
       -> strlen                        0      0     20
       -> HalUARTWrite                  0      0     20
       -> AF_DataRequest                0      0     38


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     Smart_home_ClusterList_IN            2
     Smart_home_ClusterList_OUT           2
     Smart_home_SimpleDesc               12
     Smart_home_epDesc                    6
     Coordinator_DstAddr                 12
     Smart_home_TaskID                    1
     Coordinator_Msg                      8
     Smart_home_MsgID                     1
     Smart_home_Init                    193
     Smart_home_ProcessEvent            203
     ?Subroutine0                         5
     Smart_home_ProcessZDOMsgs          199
     ?Subroutine1                         8
     Smart_home_Send                    224
     Sendbuf                              4
     Smart_home_CallBack                  3
     ??Smart_home_Init?relay              6
     ??Smart_home_ProcessEvent?relay      6
     ??Smart_home_ProcessZDOMsgs?relay    6
     ??Smart_home_Send?relay              6
     ??Smart_home_CallBack?relay          6
     ?<Constant "Bind Success!\n">       15
     ?<Constant "Match Success!\n">      16

 
 835 bytes in segment BANKED_CODE
  30 bytes in segment BANK_RELAYS
  53 bytes in segment XDATA_ROM_C
  26 bytes in segment XDATA_Z
 
 865 bytes of CODE  memory
  53 bytes of CONST memory
  26 bytes of XDATA memory

Errors: none
Warnings: 6
