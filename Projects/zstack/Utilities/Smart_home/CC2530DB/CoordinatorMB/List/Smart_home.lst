###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         24/Mar/2021  00:43:43 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_home.c                   #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wConfig.cfg (-DZIGBEEPRO -DSECURE=0               #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          ome.c -D LCD_SUPPORTED -D ZDO_COORDINATOR -D       #
#                          xNV_RESTORE -D xNV_INIT -D xREFLECTOR -D           #
#                          xHAL_UART=TRUE -D xHAL_UART_TEST -lC               #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\ -lA      #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\          #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\ -e        #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530MB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\Smart_hom #
#                          e.lst                                              #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\Smart_home #
#                          .r51                                               #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c
      1          /**************************************************************************************************
      2            文件名：Smart_home.c
      3            作 者： 柳成林
      4            功 能： 作为网关节点，实现传感器信息的采集，并可以通过其控制一些节点
      5                    终端设备主要分为8个，分别为
      6               1、温度与光照度传感器；2、烟雾与火焰传感器；3、继电器；4、温湿度传感器；
      7               5、声音与震动传感器；  6、人体红外检测传感器；7、电机；8、RFID检测器。
      8            更新日志(2021)
      9            3.13
     10            + 新增 8种传感器的Project并设置好编译情况
     11            + 修改 Smart_home_ProcessEvent() （增加各种处理器的事件）
     12                   Smart_home_Init()         （初始化内容修改，添加设备默认离线）
     13            3.14
     14            + 修改 Smart_home_ProcessMSGCmd()（添加终端节点类型判断，具体处理留空）
     15            + 新增 Hal层各种传感器驱动(头文件)
     16                   ClusterList (添加8个终端，分开出与入)
     17            3.17
     18            + 修改 Smart_home_ProcessMSGCmd() （完成接收后对于各终端处理）
     19            + 添加 Smart_home_HandleKeys()     (修改原来函数增添概念，未补全)
     20            + 删除 static void Smart_home_Send(void);
     21                   static void Smart_home_Resp(void);
     22                   两个函数
     23            3.19
     24            + 检查 出现的warning并做标识
     25            + 修改 Smart_home_HandleKeys() （补全设计函数）
     26            + 新增 Smart_home_Device_check() (设备是否在线检查)
     27          
     28            3.21
     29            + 新增 DeviceList以方便初始化和设备在线检查（本地变量部分）
     30                   Smart_home_Display()    （屏幕显示，未补全）
     31                   Smart_home_Key_add()     (控制按键，附加项)
     32            + 修改 Smart_home_Device_check()
     33                   Smart_home_Init()
     34                   Smart_home_ProcessMSGCmd()
     35                   调整有关DeviceList（设备列表）部分的修改
     36                   直接使用数组位置号作为设备编号
     37                   按键控制方式，用按键情况控制
     38            3.22
     39            + 修改 Smart_home_Display()    （屏幕显示，补全）
     40                   Smart_home_Key_add()     (屏幕显示中的电机与继电器部分加入这里)
     41                   重写别名方式减少内存损耗
     42                   出现无法初始化的问题，需要项目重构
     43            3.23
     44            + Warn 代码初始化后会产生直接进入key的情况,需debug
     45                   OK键问题无法修复，放弃使用OK键，修改为Cencel组网 禁止组网
     46            3.23 正式完成网关节点部分，（显示函数部分除外）
     47             
     48            经调试程序无bug，可以接收各个传感器消息。//3.22
     49            当我没说。。好像出了内存问题//3.22
     50            项目重构啦！，现在又只有一个小问题了/3.23
     51          *********************************************************************/
     52          
     53          /*********************************************************************
     54           * INCLUDES
     55           */
     56          
     57          #include "OSAL.h"
     58          #include "AF.h"
     59          #include "ZDObject.h"
     60          #include "ZDProfile.h"
     61          #include "nwk_util.h"
     62          
     63          #include "Smart_home.h"
     64          #include "OnBoard.h"
     65          
     66          #include "DebugTrace.h"
     67          #include "string.h"
     68          
     69          /* HAL */
     70          #include "hal_lcd.h"
     71          #include "hal_led.h"
     72          #include "hal_key.h"
     73          #include "hal_uart.h"
     74          
     75          /*********************************************************************
     76           * MACROS
     77           */
     78          /*设备链接相关设置*/
     79          /*判断设备是否在线的最大次数*/
     80          #define DEVICE_HEART_BEAT    3
     81          #define DEVICE_CHECK_DELAY   5000
     82          
     83          /*LCD相关设置*/
     84          /*单屏显示时常   MS*/
     85          #define LCD_DISPLAY_LENGTH   10000
     86          #define LCD_DISPLAY_TIMER    3000  //多久更新一次 
     87          
     88          /*********************************************************************
     89           * CONSTANTS
     90           */
     91          
     92          #if !defined( SMART_HOME_PORT )
     93          #define SMART_HOME_PORT  0
     94          #endif
     95          
     96          #if !defined( SMART_HOME_BAUD )
     97          #define SMART_HOME_BAUD  HAL_UART_BR_38400
     98          //#define SMART_HOME_BAUD  HAL_UART_BR_115200
     99          #endif
    100          
    101          // When the Rx buf space is less than this threshold, invoke the Rx callback.
    102          #if !defined( SMART_HOME_THRESH )
    103          #define SMART_HOME_THRESH  64
    104          #endif
    105          
    106          #if !defined( SMART_HOME_RX_SZ )
    107          #define SMART_HOME_RX_SZ  128
    108          #endif
    109          
    110          #if !defined( SMART_HOME_TX_SZ )
    111          #define SMART_HOME_TX_SZ  128
    112          #endif
    113          
    114          // Millisecs of idle time after a byte is received before invoking Rx callback.
    115          #if !defined( SMART_HOME_IDLE )
    116          #define SMART_HOME_IDLE  6
    117          #endif
    118          
    119          // Loopback Rx bytes to Tx for throughput testing.
    120          #if !defined( SMART_HOME_LOOPBACK )
    121          #define SMART_HOME_LOOPBACK  FALSE
    122          #endif
    123          
    124          // This is the max byte count per OTA message.
    125          #if !defined( SMART_HOME_TX_MAX )
    126          #define SMART_HOME_TX_MAX  80
    127          #endif
    128          
    129          #define SMART_HOME_RSP_CNT  4
    130          
    131          //3.14 This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    132          const cId_t Smart_home_ClusterList_IN[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
   \   000008   0500         DW 5
   \   00000A   0600         DW 6
   \   00000C   0700         DW 7
   \   00000E   0800         DW 8
   \   000010   0000         DW 0
    133          {
    134            Smart_home_CLUSTERID_HUMITMSG,              // 温湿度
    135            Smart_home_CLUSTERID_TEMPLIGHTMSG,          // 温度光照
    136            Smart_home_CLUSTERID_RFIDMSG,               // 射频卡
    137            Smart_home_CLUSTERID_GASFLAMEMSG,           // 烟雾火焰
    138            Smart_home_CLUSTERID_INFRAREDMSG,           // 人体红外
    139            Smart_home_CLUSTERID_SOUNDVBMSG,            // 声音振动
    140            Smart_home_CLUSTERID_MOTORSTATUSMSG,        // 直流电机状态信息
    141            Smart_home_CLUSTERID_RELAYSTATUSMSG         // 继电器
    142          };
    143          

   \                                 In  segment XDATA_ROM_C, align 1
    144          const cId_t Smart_home_ClusterList_OUT[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0B00         DW 11
   \   000002   0A00         DW 10
   \   000004   0000         DW 0
   \   000006   0000         DW 0
   \   000008   0000         DW 0
   \   00000A   0000         DW 0
   \   00000C   0000         DW 0
   \   00000E   0000         DW 0
   \   000010   0000         DW 0
    145          {
    146            Smart_home_CLUSTERID_MOTORCTRL,             //直流电机控制
    147            Smart_home_CLUSTERID_RELAYCTRL              //继电器控制
    148          };
    149          

   \                                 In  segment XDATA_ROM_C, align 1
    150          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    151          {
    152            Smart_home_ENDPOINT,              //  int   Endpoint;
    153            Smart_home_PROFID,                //  uint16 AppProfId[2];
    154            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    155            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    156            Smart_home_FLAGS,                 //  int   AppFlags:4;
    157            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    158            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    159            Smart_home_MAX_OUTCLUSTERS,          //  byte  AppNumOutClusters;
    160            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    161          };
    162          

   \                                 In  segment XDATA_ROM_C, align 1
    163          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    164          {
    165            Smart_home_ENDPOINT,
    166            &Smart_home_TaskID,
    167            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    168            noLatencyReqs
    169          };
    170          
    171          /*********************************************************************
    172           * TYPEDEFS
    173           */
    174          
    175          /*********************************************************************
    176           * GLOBAL VARIABLES
    177           */
    178          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    179          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    180          
    181          /*********************************************************************
    182           * EXTERNAL VARIABLES
    183           */
    184          
    185          /*********************************************************************
    186           * EXTERNAL FUNCTIONS
    187           */
    188          
    189          /*********************************************************************
    190           * LOCAL VARIABLES
    191           */
    192          
    193          /*3.18 终端节点的设备详细信息缓存*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    194          static uint8 DeviceCnt[Smart_home_MAX_INCLUSTERS];
   \                     DeviceCnt:
   \   000000                DS 9
   \   000009                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    195          static int8 Ctrlcase = 0;    //0用来控制屏幕显示，1控制继电器，2控制电机
   \                     Ctrlcase:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    196          DeviceInfo DeviceList[Smart_home_MAX_INCLUSTERS];                      //设备列表  
   \                     DeviceList:
   \   000000                DS 63
   \   00003F                REQUIRE __INIT_XDATA_Z
    197          /*********************************************************************************
    198          //这些似乎会引起内存问题  3.22
    199          DeviceInfo *Humit = DeviceList+Smart_home_CLUSTERID_HUMITMSG;          //温湿度缓存
    200          DeviceInfo *TempLight = DeviceList+Smart_home_CLUSTERID_TEMPLIGHTMSG;  // 温度光照缓存
    201          DeviceInfo *RfID = DeviceList+Smart_home_CLUSTERID_RFIDMSG;            // RFID 信息缓存
    202          DeviceInfo *gasFlame = DeviceList+Smart_home_CLUSTERID_GASFLAMEMSG;    //气体火焰缓存
    203          DeviceInfo *infrared = DeviceList+Smart_home_CLUSTERID_INFRAREDMSG;    //人体红外
    204          DeviceInfo *motor = DeviceList+Smart_home_CLUSTERID_MOTORSTATUSMSG;     //电机状态
    205          DeviceInfo *relay = DeviceList+Smart_home_CLUSTERID_RELAYSTATUSMSG;    //继电器状态
    206          DeviceInfo *soundVb = DeviceList+Smart_home_CLUSTERID_SOUNDVBMSG;      //声音震动
    207          修改如下
    208          ***********************************************************************************/
    209          #define Humit     1     //温湿度缓存
    210          #define TempLight 2     // 温度光照缓存
    211          #define RfID      3     // RFID 信息缓存
    212          #define gasFlame  4     //气体火焰缓存
    213          #define infrared  5     //人体红外
    214          #define motor     6     //电机状态
    215          #define relay     7     //继电器状态
    216          #define soundVb   8     //声音震动
    217          
    218          /*3.14 消息发送部分*/
    219          /*3.17短地址存储*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    220          static afAddrType_t Relay_addr;
   \                     Relay_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    221          static afAddrType_t Motor_addr;
   \                     Motor_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    222          
    223          /*消息发送数组*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    224          byte Coordinator_Msg[MSG_MAX_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
    225          
    226          
    227          /*3.19 协议栈中有但暂时不知道要他们干嘛的东西*/
    228          /*3.21 现在我会了！！！*/
    229          /*3.22 那些没用！删掉了！*/
    230          //static uint8 Smart_home_MsgID;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    231          static uint8 RelayTransID;  // This is the unique message ID (counter)
   \                     RelayTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    232          static uint8 MotorTransID;  // This is the unique message ID (counter)
   \                     MotorTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    233          
    234          /*********************************************************************
    235           * LOCAL FUNCTIONS
    236           */
    237          
    238          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    239          static void Smart_home_Key_add(uint8 Ctrlcase);
    240          static void Smart_home_HandleKeys( byte shift, byte keys );
    241          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    242          static void Smart_home_Device_check(void);
    243          static void Smart_home_Relay_Ctl(uint8 cmd);
    244          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed);
    245          static void Smart_home_Display(uint8 page);
    246          
    247          /*********************************************************************
    248           * @fn      Smart_home_Init
    249           *
    250           * @brief   This is called during OSAL tasks' initialization.
    251           *
    252           * @param   task_id - the Task ID assigned by OSAL.
    253           *
    254           * @return  none
    255           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    256          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    257          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    258            halUARTCfg_t uartConfig;
    259            uint8 DeviceNum;                                    //DeviceList初始化用变量
    260          
    261            Smart_home_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#Smart_home_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    262            MotorTransID = 0;
   \   000010   90....       MOV     DPTR,#MotorTransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    263            RelayTransID = 0;
   \   000015   90....       MOV     DPTR,#RelayTransID
   \   000018   F0           MOVX    @DPTR,A
    264          
    265            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   000019                ; Setup parameters for call to function afRegister
   \   000019   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   00001B   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   00001D   12....       LCALL   ??afRegister?relay
    266          
    267            RegisterForKeys( task_id );
   \   000020                ; Setup parameters for call to function RegisterForKeys
   \   000020   EE           MOV     A,R6
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??RegisterForKeys?relay
    268          
    269            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000025   85..82       MOV     DPL,?XSP + 0
   \   000028   85..83       MOV     DPH,?XSP + 1
   \   00002B   7401         MOV     A,#0x1
   \   00002D   F0           MOVX    @DPTR,A
    270            uartConfig.baudRate             = SMART_HOME_BAUD;
   \   00002E   12....       LCALL   ?XSTACK_DISP0_8
   \   000031   7402         MOV     A,#0x2
   \   000033   F0           MOVX    @DPTR,A
    271            uartConfig.flowControl          = TRUE;
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   7401         MOV     A,#0x1
   \   000039   F0           MOVX    @DPTR,A
    272            uartConfig.flowControlThreshold = SMART_HOME_THRESH; // 2x30 don't care - see uart driver.
   \   00003A   7403         MOV     A,#0x3
   \   00003C   12....       LCALL   ?XSTACK_DISP0_8
   \   00003F   7440         MOV     A,#0x40
   \   000041   F0           MOVX    @DPTR,A
   \   000042   A3           INC     DPTR
   \   000043   E4           CLR     A
   \   000044   F0           MOVX    @DPTR,A
    273            uartConfig.rx.maxBufSize        = SMART_HOME_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000045   740A         MOV     A,#0xa
   \   000047   12....       LCALL   ?XSTACK_DISP0_8
   \   00004A   7480         MOV     A,#-0x80
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   A3           INC     DPTR
   \   00004E   E4           CLR     A
   \   00004F   F0           MOVX    @DPTR,A
    274            uartConfig.tx.maxBufSize        = SMART_HOME_TX_SZ;  // 2x30 don't care - see uart driver.
   \   000050   7412         MOV     A,#0x12
   \   000052   12....       LCALL   ?XSTACK_DISP0_8
   \   000055   7480         MOV     A,#-0x80
   \   000057   F0           MOVX    @DPTR,A
   \   000058   A3           INC     DPTR
   \   000059   E4           CLR     A
   \   00005A   F0           MOVX    @DPTR,A
    275            uartConfig.idleTimeout          = SMART_HOME_IDLE;   // 2x30 don't care - see uart driver.
   \   00005B   7405         MOV     A,#0x5
   \   00005D   12....       LCALL   ?XSTACK_DISP0_8
   \   000060   7406         MOV     A,#0x6
   \   000062   F0           MOVX    @DPTR,A
    276            uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
   \   000063   7416         MOV     A,#0x16
   \   000065   12....       LCALL   ?XSTACK_DISP0_8
   \   000068   7401         MOV     A,#0x1
   \   00006A   F0           MOVX    @DPTR,A
    277            //uartConfig.callBackFunc         = Smart_home_CallBack;
    278            HalUARTOpen (SMART_HOME_PORT, &uartConfig);
   \   00006B                ; Setup parameters for call to function HalUARTOpen
   \   00006B   85..82       MOV     DPL,?XSP + 0
   \   00006E   85..83       MOV     DPH,?XSP + 1
   \   000071   AA82         MOV     R2,DPL
   \   000073   AB83         MOV     R3,DPH
   \   000075   7900         MOV     R1,#0x0
   \   000077   12....       LCALL   ??HalUARTOpen?relay
    279          
    280          #if defined ( LCD_SUPPORTED )
    281            HalLcdWriteString( "Smart_home", HAL_LCD_LINE_2 );
   \   00007A                ; Setup parameters for call to function HalLcdWriteString
   \   00007A   7902         MOV     R1,#0x2
   \   00007C   7A..         MOV     R2,#`?<Constant "Smart_home">` & 0xff
   \   00007E   7B..         MOV     R3,#(`?<Constant "Smart_home">` >> 8) & 0xff
   \   000080   12....       LCALL   ??HalLcdWriteString?relay
    282          #endif
    283            
    284            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \   000083                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000083   7A20         MOV     R2,#0x20
   \   000085   7B80         MOV     R3,#-0x80
   \   000087   90....       MOV     DPTR,#Smart_home_TaskID
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   F9           MOV     R1,A
   \   00008C   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    285            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   00008F                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00008F   7A06         MOV     R2,#0x6
   \   000091   7B80         MOV     R3,#-0x80
   \   000093   90....       MOV     DPTR,#Smart_home_TaskID
   \   000096   E0           MOVX    A,@DPTR
   \   000097   F9           MOV     R1,A
   \   000098   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    286            
    287            //3.22 显示延时
    288            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DISPLAY_EVT, 
    289                                SMART_HOME_DEVICE_DISPLAY_DELAY);
   \   00009B                ; Setup parameters for call to function osal_start_timerEx
   \   00009B   7C10         MOV     R4,#0x10
   \   00009D   7D27         MOV     R5,#0x27
   \   00009F   7A10         MOV     R2,#0x10
   \   0000A1   12....       LCALL   ??Subroutine29_0 & 0xFFFF
    290            
    291            
    292            //3.14 打开设备在线检测，第一次开启检测延时较长时间
    293            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DEVICE_CHECK_EVT, 
    294                                SMART_HOME_DEVICE_CHECK_DELAY);
   \                     ??CrossCallReturnLabel_61:
   \   0000A4                ; Setup parameters for call to function osal_start_timerEx
   \   0000A4   12....       LCALL   ?Subroutine14 & 0xFFFF
    295           
    296            //3.13 关闭LED灯(D4)，表示协调器默认不允许组网
    297            NLME_PermitJoiningRequest(0x00);
   \                     ??CrossCallReturnLabel_59:
   \   0000A7                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   0000A7   7900         MOV     R1,#0x0
   \   0000A9   12....       LCALL   ?Subroutine18 & 0xFFFF
    298            HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);
    299            
    300            //3.21 初始化页面为0 第一页
    301            //LCD_Page=0;
    302            
    303            //3.13 设备离线状态检测初始化，初始化为离线
    304            //3.21 修改为DeviceList方式，初始化DeviceCnt
    305            for(DeviceNum=1;DeviceNum<Smart_home_MAX_INCLUSTERS;DeviceNum++) //只初始化终端
   \                     ??CrossCallReturnLabel_36:
   \   0000AC   7D01         MOV     R5,#0x1
    306            {
    307              DeviceList[DeviceNum].deviceid = DeviceNum;
   \                     ??Smart_home_Init_0:
   \   0000AE   8D82         MOV     DPL,R5
   \   0000B0   A882         MOV     R0,DPL
   \   0000B2   E8           MOV     A,R0
   \   0000B3   75F007       MOV     B,#0x7
   \   0000B6   A4           MUL     AB
   \   0000B7   FA           MOV     R2,A
   \   0000B8   ABF0         MOV     R3,B
   \   0000BA   74..         MOV     A,#DeviceList & 0xff
   \   0000BC   2A           ADD     A,R2
   \   0000BD   F582         MOV     DPL,A
   \   0000BF   74..         MOV     A,#(DeviceList >> 8) & 0xff
   \   0000C1   3B           ADDC    A,R3
   \   0000C2   F583         MOV     DPH,A
   \   0000C4   ED           MOV     A,R5
   \   0000C5   F0           MOVX    @DPTR,A
    308              DeviceList[DeviceNum].deviceStatus = DEVICE_OFFLINE;
   \   0000C6   A3           INC     DPTR
   \   0000C7   7402         MOV     A,#0x2
   \   0000C9   F0           MOVX    @DPTR,A
    309              DeviceCnt[DeviceNum]=0;
   \   0000CA   12....       LCALL   ?Subroutine24 & 0xFFFF
    310            }
   \                     ??CrossCallReturnLabel_48:
   \   0000CD   E4           CLR     A
   \   0000CE   F0           MOVX    @DPTR,A
   \   0000CF   0D           INC     R5
   \   0000D0   ED           MOV     A,R5
   \   0000D1   C3           CLR     C
   \   0000D2   9409         SUBB    A,#0x9
   \   0000D4   40D8         JC      ??Smart_home_Init_0
    311          }
   \   0000D6   741D         MOV     A,#0x1d
   \   0000D8   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000DB                REQUIRE ?Subroutine0
   \   0000DB                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   7C88         MOV     R4,#-0x78
   \   000002   7D13         MOV     R5,#0x13
   \   000004   7A80         MOV     R2,#-0x80
   \   000006                REQUIRE ??Subroutine29_0
   \   000006                ; // Fall through to label ??Subroutine29_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine29_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   74..         MOV     A,#DeviceCnt & 0xff
   \   000002   28           ADD     A,R0
   \   000003   F582         MOV     DPL,A
   \   000005   74..         MOV     A,#(DeviceCnt >> 8) & 0xff
   \   000007   3400         ADDC    A,#0x0
   \   000009   F583         MOV     DPH,A
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   12....       LCALL   ??NLME_PermitJoiningRequest?relay
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003   7A00         MOV     R2,#0x0
   \   000005   7901         MOV     R1,#0x1
   \   000007   12....       LCALL   ??HalLedSet?relay
   \   00000A   22           RET
    312          
    313          /*********************************************************************
    314           * @fn      Smart_home_ProcessEvent
    315           *
    316           * @brief   Generic Application Task event processor.
    317           *
    318           * @param   task_id  - The OSAL assigned task ID.
    319           * @param   events   - Bit map of events to process.
    320           *
    321           * @return  Event flags of all unprocessed events.
    322           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    323          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    324          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    325            (void)task_id;  // Intentionally unreferenced parameter
    326            afDataConfirm_t *afDataConfirm;
    327            
    328            //3.13 数据确认消息字段
    329            ZStatus_t sentStatus;
    330            byte sentEP;
    331            
    332            if ( events & SYS_EVENT_MSG )   //3.13 系统消息事件
   \   000009   5480         ANL     A,#0x80
   \   00000B   7020         JNZ     ??Smart_home_ProcessEvent_0
    333            {
    334              afIncomingMSGPacket_t *MSGpkt;
    335          
    336              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    337              {
    338                switch ( MSGpkt->hdr.event )
    339                {
    340                  case ZDO_CB_MSG:           //3.13 ZDO传入消息回调
    341                    Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    342                    break;
    343                    
    344                  case KEY_CHANGE:           //3.13 按键事件
    345                    Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    346                    break;
    347                   
    348                  case AF_DATA_CONFIRM_CMD:
    349                  //3.13 接收到此消息，作为对发送的数据包的确认。
    350                  //状态为ZStatus_t类型[在ZComDef.h中定义]
    351                  //消息字段在AF.h中定义
    352                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    353                    sentEP = afDataConfirm->endpoint;
    354                    sentStatus = afDataConfirm->hdr.status;
    355           
    356                    if ( (ZSuccess == sentStatus) &&
    357                         (Smart_home_epDesc.endPoint == sentEP) )
    358                    {  
    359                      //3.13 在消息发送确认成功后绿灯闪烁一下
    360                      HalLedSet(HAL_LED_1, HAL_LED_MODE_BLINK);
    361                    }
    362                    else
    363                    {
    364                      //3.13 红灯闪烁一下  硬件还没实现
    365                      //HalLedSet(HAL_LED_2, HAL_LED_MODE_BLINK);
    366                    }
    367                    break;
    368                    
    369                  case AF_INCOMING_MSG_CMD:   //3.13 消息传入处理
    370                    //3.13 在消息接收确认成功后绿灯闪烁一下
    371                    Smart_home_ProcessMSGCmd( MSGpkt );
    372                    break;
    373                  default:
    374                    break;
    375                }
    376          
    377                osal_msg_deallocate( (uint8 *)MSGpkt );
    378                
    379                // Next
    380                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID );
    381              }
    382              
    383              // Squash compiler warnings until values are used.
    384              (void)sentStatus;
    385              (void)sentEP;
    386              
    387              return ( events ^ SYS_EVENT_MSG );
    388            }
    389          
    390            if ( events & SMART_HOME_SEND_MSG_EVT )
   \   00000D   EE           MOV     A,R6
   \   00000E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000010   4003         JC      $+5
   \   000012   02....       LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
    391            {
    392              //Smart_home_Send();
    393              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   000015   6401         XRL     A,#0x1
   \   000017   FA           MOV     R2,A
   \   000018   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    394            }
   \                     ??Smart_home_ProcessEvent_3:
   \   00001B                ; Setup parameters for call to function Smart_home_ProcessMSGCmd
   \   00001B   12....       LCALL   ??Smart_home_ProcessMSGCmd?relay
   \                     ??Smart_home_ProcessEvent_4:
   \   00001E                ; Setup parameters for call to function osal_msg_deallocate
   \   00001E   AA..         MOV     R2,?V0 + 0
   \   000020   AB..         MOV     R3,?V0 + 1
   \   000022   12....       LCALL   ??osal_msg_deallocate?relay
   \   000025                ; Setup parameters for call to function osal_msg_receive
   \   000025   90....       MOV     DPTR,#Smart_home_TaskID
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F9           MOV     R1,A
   \   00002A   12....       LCALL   ??osal_msg_receive?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   00002D                ; Setup parameters for call to function osal_msg_receive
   \   00002D   90....       MOV     DPTR,#Smart_home_TaskID
   \   000030   E0           MOVX    A,@DPTR
   \   000031   F9           MOV     R1,A
   \   000032   12....       LCALL   ??osal_msg_receive?relay
   \   000035   8A..         MOV     ?V0 + 0,R2
   \   000037   8B..         MOV     ?V0 + 1,R3
   \   000039   EA           MOV     A,R2
   \   00003A   45..         ORL     A,?V0 + 1
   \   00003C   7003         JNZ     $+5
   \   00003E   02....       LJMP    ??Smart_home_ProcessEvent_5 & 0xFFFF
   \   000041   8A82         MOV     DPL,R2
   \   000043   8B83         MOV     DPH,R3
   \   000045   E0           MOVX    A,@DPTR
   \   000046   24E6         ADD     A,#-0x1a
   \   000048   60D1         JZ      ??Smart_home_ProcessEvent_3
   \   00004A   245A         ADD     A,#0x5a
   \   00004C   6079         JZ      ??Smart_home_ProcessEvent_6
   \   00004E   24ED         ADD     A,#-0x13
   \   000050   6009         JZ      ??Smart_home_ProcessEvent_7
   \   000052   24D6         ADD     A,#-0x2a
   \   000054   7003         JNZ     $+5
   \   000056   02....       LJMP    ??Smart_home_ProcessEvent_8 & 0xFFFF
   \   000059   80C3         SJMP    ??Smart_home_ProcessEvent_4
   \                     ??Smart_home_ProcessEvent_7:
   \   00005B   EA           MOV     A,R2
   \   00005C   240C         ADD     A,#0xc
   \   00005E   F582         MOV     DPL,A
   \   000060   EB           MOV     A,R3
   \   000061   3400         ADDC    A,#0x0
   \   000063   F583         MOV     DPH,A
   \   000065   E0           MOVX    A,@DPTR
   \   000066   F5..         MOV     ?V0 + 2,A
   \   000068   A3           INC     DPTR
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   F5..         MOV     ?V0 + 3,A
   \   00006C   78..         MOV     R0,#?V0 + 2
   \   00006E   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Smart_home_ProcessEvent>_0`:
   \   000071   0000         DW        0
   \   000073   0200         DW        2
   \   000075   0680         DW        32774
   \   000077   ....         DW        ??Smart_home_ProcessEvent_9
   \   000079   2080         DW        32800
   \   00007B   ....         DW        ??Smart_home_ProcessEvent_10
   \   00007D   ....         DW        ??Smart_home_ProcessEvent_4
   \                     ??Smart_home_ProcessEvent_9:
   \   00007F                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   00007F   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   000082   8A..         MOV     ?V0 + 2,R2
   \   000084   8B..         MOV     ?V0 + 3,R3
   \   000086   EA           MOV     A,R2
   \   000087   45..         ORL     A,?V0 + 3
   \   000089   6093         JZ      ??Smart_home_ProcessEvent_4
   \   00008B   8A82         MOV     DPL,R2
   \   00008D   8B83         MOV     DPH,R3
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   700D         JNZ     ??Smart_home_ProcessEvent_11
   \   000092   A3           INC     DPTR
   \   000093   A3           INC     DPTR
   \   000094   A3           INC     DPTR
   \   000095   E0           MOVX    A,@DPTR
   \   000096   6007         JZ      ??Smart_home_ProcessEvent_11
   \   000098                ; Setup parameters for call to function HalLedSet
   \   000098   7A01         MOV     R2,#0x1
   \   00009A   7908         MOV     R1,#0x8
   \   00009C   12....       LCALL   ??HalLedSet?relay
   \                     ??Smart_home_ProcessEvent_11:
   \   00009F                ; Setup parameters for call to function osal_mem_free
   \   00009F   AA..         MOV     R2,?V0 + 2
   \   0000A1   AB..         MOV     R3,?V0 + 3
   \   0000A3   12....       LCALL   ??osal_mem_free?relay
   \   0000A6   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_10:
   \   0000A9   EA           MOV     A,R2
   \   0000AA   2413         ADD     A,#0x13
   \   0000AC   F582         MOV     DPL,A
   \   0000AE   EB           MOV     A,R3
   \   0000AF   3400         ADDC    A,#0x0
   \   0000B1   F583         MOV     DPH,A
   \   0000B3   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_54:
   \   0000B6   E0           MOVX    A,@DPTR
   \   0000B7   700A         JNZ     ??Smart_home_ProcessEvent_12
   \   0000B9                ; Setup parameters for call to function HalLedSet
   \   0000B9   7A01         MOV     R2,#0x1
   \                     ??Smart_home_ProcessEvent_13:
   \   0000BB   7908         MOV     R1,#0x8
   \                     ??Smart_home_ProcessEvent_14:
   \   0000BD   12....       LCALL   ??HalLedSet?relay
   \   0000C0   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_12:
   \   0000C3                ; Setup parameters for call to function HalLedSet
   \   0000C3   7A04         MOV     R2,#0x4
   \   0000C5   80F4         SJMP    ??Smart_home_ProcessEvent_13
   \                     ??Smart_home_ProcessEvent_6:
   \   0000C7                ; Setup parameters for call to function Smart_home_HandleKeys
   \   0000C7   A3           INC     DPTR
   \   0000C8   A3           INC     DPTR
   \   0000C9   A3           INC     DPTR
   \   0000CA   E0           MOVX    A,@DPTR
   \   0000CB   FA           MOV     R2,A
   \   0000CC   85..82       MOV     DPL,?V0 + 0
   \   0000CF   8B83         MOV     DPH,R3
   \   0000D1   A3           INC     DPTR
   \   0000D2   A3           INC     DPTR
   \   0000D3   E0           MOVX    A,@DPTR
   \   0000D4   F9           MOV     R1,A
   \   0000D5   12....       LCALL   ??Smart_home_HandleKeys?relay
   \   0000D8   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_8:
   \   0000DB   A3           INC     DPTR
   \   0000DC   E0           MOVX    A,@DPTR
   \   0000DD   6003         JZ      $+5
   \   0000DF   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \   0000E2   8A82         MOV     DPL,R2
   \   0000E4   8B83         MOV     DPH,R3
   \   0000E6   A3           INC     DPTR
   \   0000E7   A3           INC     DPTR
   \   0000E8   E0           MOVX    A,@DPTR
   \   0000E9   6401         XRL     A,#0x1
   \   0000EB   6003         JZ      $+5
   \   0000ED   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \   0000F0                ; Setup parameters for call to function HalLedSet
   \   0000F0   7A02         MOV     R2,#0x2
   \   0000F2   7901         MOV     R1,#0x1
   \   0000F4   80C7         SJMP    ??Smart_home_ProcessEvent_14
   \                     ??Smart_home_ProcessEvent_5:
   \   0000F6   EE           MOV     A,R6
   \   0000F7   FA           MOV     R2,A
   \   0000F8   EF           MOV     A,R7
   \   0000F9   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_15:
   \   0000FB   FB           MOV     R3,A
   \   0000FC   8070         SJMP    ??Smart_home_ProcessEvent_2
    395            
    396            if ( events & SMART_HOME_DEVICE_CHECK_EVT )  //终端设备检查事件
   \                     ??Smart_home_ProcessEvent_1:
   \   0000FE   5480         ANL     A,#0x80
   \   000100   6053         JZ      ??Smart_home_ProcessEvent_16
    397            {
    398              Smart_home_Device_check();  //调用终端设备检查函数
   \   000102   90....       MOV     DPTR,#??DeviceID
   \   000105   7401         MOV     A,#0x1
   \   000107   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_17:
   \   000108   E0           MOVX    A,@DPTR
   \   000109   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_57:
   \   00010C   E0           MOVX    A,@DPTR
   \   00010D   6401         XRL     A,#0x1
   \   00010F   90....       MOV     DPTR,#??DeviceID
   \   000112   6030         JZ      ??Smart_home_ProcessEvent_18
   \   000114   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_19:
   \   000117   E0           MOVX    A,@DPTR
   \   000118   04           INC     A
   \   000119   F0           MOVX    @DPTR,A
   \   00011A   C3           CLR     C
   \   00011B   9404         SUBB    A,#0x4
   \   00011D   4010         JC      ??Smart_home_ProcessEvent_19
   \   00011F   90....       MOV     DPTR,#??DeviceID
   \   000122   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   000125   7403         MOV     A,#0x3
   \   000127   F0           MOVX    @DPTR,A
   \   000128   E8           MOV     A,R0
   \   000129   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_58:
   \   00012C   7402         MOV     A,#0x2
   \                     ??Smart_home_ProcessEvent_20:
   \   00012E   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_19:
   \   00012F   90....       MOV     DPTR,#??DeviceID
   \   000132   E0           MOVX    A,@DPTR
   \   000133   04           INC     A
   \   000134   F0           MOVX    @DPTR,A
   \   000135   C3           CLR     C
   \   000136   9409         SUBB    A,#0x9
   \   000138   40CE         JC      ??Smart_home_ProcessEvent_17
    399              
    400              osal_start_timerEx(Smart_home_TaskID,SMART_HOME_DEVICE_CHECK_EVT,
    401                                 DEVICE_CHECK_DELAY);
   \   00013A                ; Setup parameters for call to function osal_start_timerEx
   \   00013A   12....       LCALL   ?Subroutine14 & 0xFFFF
    402              return (events ^ SMART_HOME_DEVICE_CHECK_EVT);
   \                     ??CrossCallReturnLabel_60:
   \   00013D   EE           MOV     A,R6
   \   00013E   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_21:
   \   000140   FA           MOV     R2,A
   \   000141   EF           MOV     A,R7
   \   000142   80B7         SJMP    ??Smart_home_ProcessEvent_15
   \                     ??Smart_home_ProcessEvent_18:
   \   000144   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   000147   E4           CLR     A
   \   000148   F0           MOVX    @DPTR,A
   \   000149   E8           MOV     A,R0
   \   00014A   75F007       MOV     B,#0x7
   \   00014D   A4           MUL     AB
   \   00014E   F8           MOV     R0,A
   \   00014F   12....       LCALL   ??Subroutine28_0 & 0xFFFF
    403            }
   \                     ??CrossCallReturnLabel_56:
   \   000152   E4           CLR     A
   \   000153   80D9         SJMP    ??Smart_home_ProcessEvent_20
    404            
    405            if( events & SMART_HOME_DISPLAY_EVT )
   \                     ??Smart_home_ProcessEvent_16:
   \   000155   EE           MOV     A,R6
   \   000156   5410         ANL     A,#0x10
   \   000158   6010         JZ      ??Smart_home_ProcessEvent_22
    406            {
    407              //Smart_home_Display( dispPage);
    408              osal_start_timerEx( Smart_home_TaskID,events & SMART_HOME_DISPLAY_EVT,LCD_DISPLAY_TIMER);
   \   00015A                ; Setup parameters for call to function osal_start_timerEx
   \   00015A   7CB8         MOV     R4,#-0x48
   \   00015C   7D0B         MOV     R5,#0xb
   \   00015E   EE           MOV     A,R6
   \   00015F   5410         ANL     A,#0x10
   \   000161   FA           MOV     R2,A
   \   000162   12....       LCALL   ??Subroutine29_0 & 0xFFFF
    409              return (events ^ SMART_HOME_DISPLAY_EVT);
   \                     ??CrossCallReturnLabel_62:
   \   000165   EE           MOV     A,R6
   \   000166   6410         XRL     A,#0x10
   \   000168   80D6         SJMP    ??Smart_home_ProcessEvent_21
    410            }
    411          
    412            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_22:
   \   00016A   7A00         MOV     R2,#0x0
   \   00016C   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_2:
   \   00016E   7F06         MOV     R7,#0x6
   \   000170   02....       LJMP    ?BANKED_LEAVE_XDATA
    413          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine27:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F583         MOV     DPH,A
   \   000006   8882         MOV     DPL,R0
   \   000008   22           RET
    414          
    415          /*********************************************************************
    416           * @fn      Smart_home_ProcessZDOMsgs()
    417           *
    418           * @brief   Process response messages
    419           *
    420           * @param   none
    421           *
    422           * @return  none
    423           */
    424          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
    425          {
    426            switch ( inMsg->clusterID )
    427            {
    428              case End_Device_Bind_rsp:
    429                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    430                {
    431                  // Light LED
    432                  HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    433                }
    434          #if defined(BLINK_LEDS)
    435                else
    436                {
    437                  // Flash LED to show failure
    438                  HalLedSet ( HAL_LED_4, HAL_LED_MODE_FLASH );
    439                }
    440          #endif
    441                break;
    442                
    443              case Match_Desc_rsp:
    444                {
    445                  ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
    446                  if ( pRsp )
    447                  {
    448                    if ( pRsp->status == ZSuccess && pRsp->cnt )
    449                    {
    450                      /*
    451                      Smart_home_TxAddr.addrMode = (afAddrMode_t)Addr16Bit;
    452                      Smart_home_TxAddr.addr.shortAddr = pRsp->nwkAddr;
    453                      // Take the first endpoint, Can be changed to search through endpoints
    454                      Smart_home_TxAddr.endPoint = pRsp->epList[0];
    455                      */
    456                      
    457                      // Light LED
    458                      HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    459                    }
    460                    osal_mem_free( pRsp );
    461                  }
    462                }
    463                break;
    464            }
    465          }
    466          
    467          /*********************************************************************
    468           * @fn      Smart_home_Key_add
    469           *
    470           * @brief   3.21新增，用来标识目前处于的控制状态，是附加项
    471           *          0 控制屏幕 1 控制继电器 2 控制电机
    472           *            
    473           *
    474           * @param   Ctrlcase 目前的控制号
    475           *
    476           * @return  屏幕回显
    477           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    478          static void Smart_home_Key_add(uint8 Ctrlcase)
   \                     Smart_home_Key_add:
    479          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    480          #if defined ( LCD_SUPPORTED )
    481            switch(Ctrlcase)
   \   000005   E9           MOV     A,R1
   \   000006   14           DEC     A
   \   000007   600E         JZ      ??Smart_home_Key_add_0
   \   000009   14           DEC     A
   \   00000A   7904         MOV     R1,#0x4
   \   00000C   6033         JZ      ??Smart_home_Key_add_1
    482            {
    483              default:    
    484              case 0:
    485                HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
   \   00000E                ; Setup parameters for call to function HalLcdWriteString
   \   00000E   7A..         MOV     R2,#`?<Constant "Flip use UP/DOWN">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant "Flip use UP/DOWN">` >> 8) & 0xff
   \   000012   12....       LCALL   ?Subroutine21 & 0xFFFF
    486                //清除屏幕显示
    487                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    488                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   \                     ??CrossCallReturnLabel_42:
   \   000015   8050         SJMP    ??Smart_home_Key_add_2
    489                break;
    490              
    491              case 1:
    492                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
   \                     ??Smart_home_Key_add_0:
   \   000017                ; Setup parameters for call to function HalLcdWriteString
   \   000017   7904         MOV     R1,#0x4
   \   000019   7A..         MOV     R2,#`?<Constant "Relay Contrling">` & 0xff
   \   00001B   7B..         MOV     R3,#(`?<Constant "Relay Contrling">` >> 8) & 0xff
   \   00001D   12....       LCALL   ?Subroutine4 & 0xFFFF
    493                //清除屏幕显示
    494                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    495                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    496                if(DeviceList[relay].deviceStatus == DEVICE_ONLINE)  //设备在线回显
   \                     ??CrossCallReturnLabel_7:
   \   000020   90....       MOV     DPTR,#DeviceList + 50
   \   000023   E0           MOVX    A,@DPTR
   \   000024   6401         XRL     A,#0x1
   \   000026   7009         JNZ     ??Smart_home_Key_add_3
    497                {
    498                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 );     
   \   000028                ; Setup parameters for call to function HalLcdWriteString
   \   000028   7901         MOV     R1,#0x1
   \   00002A   7A..         MOV     R2,#`?<Constant "Relay Online">` & 0xff
   \   00002C   7B..         MOV     R3,#(`?<Constant "Relay Online">` >> 8) & 0xff
   \   00002E   12....       LCALL   ??HalLcdWriteString?relay
    499                }
    500                if(DeviceList[relay].deviceStatus != DEVICE_ONLINE)
   \                     ??Smart_home_Key_add_3:
   \   000031   90....       MOV     DPTR,#DeviceList + 50
   \   000034   E0           MOVX    A,@DPTR
   \   000035   6401         XRL     A,#0x1
   \   000037   6031         JZ      ??Smart_home_Key_add_4
    501                {
    502                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
   \   000039                ; Setup parameters for call to function HalLcdWriteString
   \   000039   7901         MOV     R1,#0x1
   \   00003B   7A..         MOV     R2,#`?<Constant "Relay Offline">` & 0xff
   \   00003D   7B..         MOV     R3,#(`?<Constant "Relay Offline">` >> 8) & 0xff
   \   00003F   8026         SJMP    ??Smart_home_Key_add_2
    503                }
    504                break;
    505              
    506              case 2:
    507                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
   \                     ??Smart_home_Key_add_1:
   \   000041                ; Setup parameters for call to function HalLcdWriteString
   \   000041   7A..         MOV     R2,#`?<Constant "Motor Contrling">` & 0xff
   \   000043   7B..         MOV     R3,#(`?<Constant "Motor Contrling">` >> 8) & 0xff
   \   000045   12....       LCALL   ?Subroutine4 & 0xFFFF
    508                //清除屏幕显示
    509                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    510                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    511                if(DeviceList[motor].deviceStatus == DEVICE_ONLINE)  //设备在线回显
   \                     ??CrossCallReturnLabel_8:
   \   000048   90....       MOV     DPTR,#DeviceList + 43
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   6401         XRL     A,#0x1
   \   00004E   7009         JNZ     ??Smart_home_Key_add_5
    512                {
    513                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 );
   \   000050                ; Setup parameters for call to function HalLcdWriteString
   \   000050   7901         MOV     R1,#0x1
   \   000052   7A..         MOV     R2,#`?<Constant "Motor Online">` & 0xff
   \   000054   7B..         MOV     R3,#(`?<Constant "Motor Online">` >> 8) & 0xff
   \   000056   12....       LCALL   ??HalLcdWriteString?relay
    514                }
    515                if(DeviceList[motor].deviceStatus != DEVICE_ONLINE)
   \                     ??Smart_home_Key_add_5:
   \   000059   90....       MOV     DPTR,#DeviceList + 43
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   6401         XRL     A,#0x1
   \   00005F   6009         JZ      ??Smart_home_Key_add_4
    516                {
    517                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
   \   000061                ; Setup parameters for call to function HalLcdWriteString
   \   000061   7901         MOV     R1,#0x1
   \   000063   7A..         MOV     R2,#`?<Constant "Motor Offline">` & 0xff
   \   000065   7B..         MOV     R3,#(`?<Constant "Motor Offline">` >> 8) & 0xff
   \                     ??Smart_home_Key_add_2:
   \   000067   12....       LCALL   ??HalLcdWriteString?relay
    518                }      
    519                break;
    520          #endif     
    521            }
    522          }
   \                     ??Smart_home_Key_add_4:
   \   00006A   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   000003   12....       LCALL   ??HalLcdWriteString?relay
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003   7902         MOV     R1,#0x2
   \   000005   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000007   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000009   12....       LCALL   ??HalLcdWriteString?relay
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C   7903         MOV     R1,#0x3
   \   00000E   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000012   22           RET
    523          
    524          /*********************************************************************
    525           * @fn      Smart_home_HandleKeys
    526           *
    527           * @brief   设置按键事件
    528           *          目前事件设置    3.19
    529           *
    530           *          HAL_KEY_SW_1--UP     (上翻一页)
    531           *          HAL_KEY_SW_2--RIGHT  (选项向右)
    532           *          HAL_KEY_SW_3--DOWN   (下翻一页)
    533           *          HAL_KEY_SW_4--LEFT   (选项向左)
    534           *          HAL_KEY_SW_5--OK     (组网开)
    535           *          HAL_KEY_SW_7--CANCEL (组网关) 
    536           * + 3.21 新增  选项总共有3种，控制屏幕显示，控制继电器和控制电机
    537           *              控制继电器时 UP控制1，DOWN控制2
    538           *              控制电机时   UP加速， DOWN减速
    539           *
    540           * @param   shift - true if in shift/alt.
    541           * @param   keys  - bit field for key events.
    542           *
    543           * @return  none
    544           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    545          void Smart_home_HandleKeys( byte shift, byte keys )
   \                     Smart_home_HandleKeys:
    546          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    547            //zAddrType_t txAddr;
    548            static int8 MotorSpeed = 0;
    549            static uint8 NetWorkAllow = 0;
    550            /*这里这么设置似乎会出现内存问题
    551            static uint8 Relay1_on = 0x02;  //两个默认都是关闭
    552            static uint8 Relay2_on = 0x10;
    553            */
    554            /*3.21 LCD 显示*/
    555            static int8 LCD_Page  =  0;
    556            static uint8 Relay1_on = 0;  //两个默认都是关闭
    557            static uint8 Relay2_on = 0;
    558            
    559            
    560            if ( keys & HAL_KEY_SW_1 )  //UP
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5053         JNC     ??Smart_home_HandleKeys_0
    561            {
    562              switch(Ctrlcase)
   \   00000B   90....       MOV     DPTR,#Ctrlcase
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   14           DEC     A
   \   000010   6016         JZ      ??Smart_home_HandleKeys_1
   \   000012   14           DEC     A
   \   000013   6029         JZ      ??Smart_home_HandleKeys_2
    563              {
    564                default:    
    565                case 0:
    566                {
    567                  if(LCD_Page < 3)       {LCD_Page++;}
   \   000015   90....       MOV     DPTR,#??LCD_Page
   \   000018   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   00001B   5003         JNC     ??Smart_home_HandleKeys_3
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   04           INC     A
   \   00001F   F0           MOVX    @DPTR,A
    568                  if(LCD_Page > 2)       {LCD_Page=0;}
   \                     ??Smart_home_HandleKeys_3:
   \   000020   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000023   4039         JC      ??Smart_home_HandleKeys_0
   \   000025   E4           CLR     A
   \   000026   8035         SJMP    ??Smart_home_HandleKeys_4
    569                  Smart_home_Display(LCD_Page);
    570                  break;
    571                }
    572                case 1:
    573                {  
    574                  uint8 switch1;
    575                  if(Relay1_on == 0)  {Relay1_on = 1 ; switch1 = 0x02;}
   \                     ??Smart_home_HandleKeys_1:
   \   000028   90....       MOV     DPTR,#??Relay1_on
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   7007         JNZ     ??Smart_home_HandleKeys_5
   \   00002E   7401         MOV     A,#0x1
   \   000030   F0           MOVX    @DPTR,A
   \   000031   7902         MOV     R1,#0x2
   \   000033   8004         SJMP    ??Smart_home_HandleKeys_6
    576                  else if(Relay1_on == 1)  {Relay1_on = 0; switch1 = 0x01;}
   \                     ??Smart_home_HandleKeys_5:
   \   000035   E4           CLR     A
   \   000036   F0           MOVX    @DPTR,A
   \   000037   7901         MOV     R1,#0x1
    577                  else  {Relay1_on = 0; switch1 = 0x01;}       
    578                  Smart_home_Relay_Ctl(switch1);  
   \                     ??Smart_home_HandleKeys_6:
   \   000039                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   000039   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    579                  break;
   \   00003C   8020         SJMP    ??Smart_home_HandleKeys_0
    580                } 
    581                case 2:
    582                {
    583                  if(MotorSpeed < 80)     {MotorSpeed += 10;}
   \                     ??Smart_home_HandleKeys_2:
   \   00003E   90....       MOV     DPTR,#??MotorSpeed
   \   000041   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   000044   5004         JNC     ??Smart_home_HandleKeys_7
   \   000046   E0           MOVX    A,@DPTR
   \   000047   240A         ADD     A,#0xa
   \   000049   F0           MOVX    @DPTR,A
    584                  if(MotorSpeed >= 80)     
   \                     ??Smart_home_HandleKeys_7:
   \   00004A   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   00004D   400F         JC      ??Smart_home_HandleKeys_0
    585                  {
    586          #if defined ( LCD_SUPPORTED )
    587                     HalLcdWriteString( "Motor max Speed", HAL_LCD_LINE_4 );
   \   00004F                ; Setup parameters for call to function HalLcdWriteString
   \   00004F   7904         MOV     R1,#0x4
   \   000051   7A..         MOV     R2,#`?<Constant "Motor max Speed">` & 0xff
   \   000053   7B..         MOV     R3,#(`?<Constant "Motor max Speed">` >> 8) & 0xff
   \   000055   12....       LCALL   ??HalLcdWriteString?relay
    588          #endif 
    589                     MotorSpeed = 80;
   \   000058   90....       MOV     DPTR,#??MotorSpeed
   \   00005B   7450         MOV     A,#0x50
   \                     ??Smart_home_HandleKeys_4:
   \   00005D   F0           MOVX    @DPTR,A
    590                  }
    591                  break;
    592                }
    593                   
    594              }    
    595            }
    596            
    597            if ( keys & HAL_KEY_SW_3 )  //DOWN
   \                     ??Smart_home_HandleKeys_0:
   \   00005E   EE           MOV     A,R6
   \   00005F   A2E4         MOV     C,0xE0 /* A   */.4
   \   000061   505E         JNC     ??Smart_home_HandleKeys_8
    598            {
    599              switch(Ctrlcase)
   \   000063   90....       MOV     DPTR,#Ctrlcase
   \   000066   E0           MOVX    A,@DPTR
   \   000067   14           DEC     A
   \   000068   6017         JZ      ??Smart_home_HandleKeys_9
   \   00006A   14           DEC     A
   \   00006B   6034         JZ      ??Smart_home_HandleKeys_10
    600              {
    601                default:    
    602                case 0:
    603                {
    604                  if(LCD_Page >= 0)       {LCD_Page--;}
   \   00006D   90....       MOV     DPTR,#??LCD_Page
   \   000070   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   000073   4003         JC      ??Smart_home_HandleKeys_11
   \   000075   E0           MOVX    A,@DPTR
   \   000076   14           DEC     A
   \   000077   F0           MOVX    @DPTR,A
    605                  if(LCD_Page < 0)        {LCD_Page=2;}
   \                     ??Smart_home_HandleKeys_11:
   \   000078   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   00007B   5044         JNC     ??Smart_home_HandleKeys_8
   \   00007D   7402         MOV     A,#0x2
   \   00007F   803F         SJMP    ??Smart_home_HandleKeys_12
    606                  Smart_home_Display(LCD_Page);
    607                  break;
    608                }
    609                case 1:  
    610                {
    611                  uint8 switch2;
    612                  if(Relay2_on == 0)  {Relay2_on = 1 ; switch2 = 0x20;}
   \                     ??Smart_home_HandleKeys_9:
   \   000081   90....       MOV     DPTR,#??Relay2_on
   \   000084   E0           MOVX    A,@DPTR
   \   000085   7007         JNZ     ??Smart_home_HandleKeys_13
   \   000087   7401         MOV     A,#0x1
   \   000089   F0           MOVX    @DPTR,A
   \   00008A   7920         MOV     R1,#0x20
   \   00008C   800E         SJMP    ??Smart_home_HandleKeys_14
    613                  else if(Relay2_on == 1)  {Relay2_on = 0; switch2 = 0x10;}
   \                     ??Smart_home_HandleKeys_13:
   \   00008E   6401         XRL     A,#0x1
   \   000090   7006         JNZ     ??Smart_home_HandleKeys_15
   \   000092   E4           CLR     A
   \   000093   F0           MOVX    @DPTR,A
   \   000094   7910         MOV     R1,#0x10
   \   000096   8004         SJMP    ??Smart_home_HandleKeys_14
    614                  else  {Relay2_on = 0; switch2 = 0x01;}       
   \                     ??Smart_home_HandleKeys_15:
   \   000098   E4           CLR     A
   \   000099   F0           MOVX    @DPTR,A
   \   00009A   7901         MOV     R1,#0x1
    615                  Smart_home_Relay_Ctl(switch2);       
   \                     ??Smart_home_HandleKeys_14:
   \   00009C                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   00009C   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    616                  break;
   \   00009F   8020         SJMP    ??Smart_home_HandleKeys_8
    617                } 
    618                case 2:
    619                {
    620                  if(MotorSpeed > -80)     {MotorSpeed -= 10;}
   \                     ??Smart_home_HandleKeys_10:
   \   0000A1   90....       MOV     DPTR,#??MotorSpeed
   \   0000A4   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   0000A7   4004         JC      ??Smart_home_HandleKeys_16
   \   0000A9   E0           MOVX    A,@DPTR
   \   0000AA   24F6         ADD     A,#-0xa
   \   0000AC   F0           MOVX    @DPTR,A
    621                  if(MotorSpeed <= -80)     
   \                     ??Smart_home_HandleKeys_16:
   \   0000AD   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   0000B0   500F         JNC     ??Smart_home_HandleKeys_8
    622                  {
    623          #if defined ( LCD_SUPPORTED )
    624                     HalLcdWriteString( "Motor min Speed", HAL_LCD_LINE_4 );
   \   0000B2                ; Setup parameters for call to function HalLcdWriteString
   \   0000B2   7904         MOV     R1,#0x4
   \   0000B4   7A..         MOV     R2,#`?<Constant "Motor min Speed">` & 0xff
   \   0000B6   7B..         MOV     R3,#(`?<Constant "Motor min Speed">` >> 8) & 0xff
   \   0000B8   12....       LCALL   ??HalLcdWriteString?relay
    625          #endif 
    626                     MotorSpeed = -80;
   \   0000BB   90....       MOV     DPTR,#??MotorSpeed
   \   0000BE   74B0         MOV     A,#-0x50
   \                     ??Smart_home_HandleKeys_12:
   \   0000C0   F0           MOVX    @DPTR,A
    627                  }
    628                  break; 
    629                }
    630              }
    631            }
    632            
    633            if ( keys & HAL_KEY_SW_2 )  //RIGHT  
   \                     ??Smart_home_HandleKeys_8:
   \   0000C1   EE           MOV     A,R6
   \   0000C2   A2E1         MOV     C,0xE0 /* A   */.1
   \   0000C4   5017         JNC     ??Smart_home_HandleKeys_17
    634            /*3.22 这里在调试时出现问题，具体问题为 点击up时会出现屏幕变为禁止组网
    635              控制方面变为控制电机，问题在于汇编中的key值会出现  keys & HAL_KEY_SW_2 = 2
    636              的情况，暂时禁止，需要等待研究  还有key_7*/
    637            {
    638               if(Ctrlcase < 3)   { Ctrlcase++;}
   \   0000C6   90....       MOV     DPTR,#Ctrlcase
   \   0000C9   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   0000CC   5003         JNC     ??Smart_home_HandleKeys_18
   \   0000CE   E0           MOVX    A,@DPTR
   \   0000CF   04           INC     A
   \   0000D0   F0           MOVX    @DPTR,A
    639               if(Ctrlcase > 2)   { Ctrlcase=0;}
   \                     ??Smart_home_HandleKeys_18:
   \   0000D1   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   0000D4   4002         JC      ??Smart_home_HandleKeys_19
   \   0000D6   E4           CLR     A
   \   0000D7   F0           MOVX    @DPTR,A
    640               Smart_home_Key_add(Ctrlcase);
   \                     ??Smart_home_HandleKeys_19:
   \   0000D8                ; Setup parameters for call to function Smart_home_Key_add
   \   0000D8   E0           MOVX    A,@DPTR
   \   0000D9   F9           MOV     R1,A
   \   0000DA   12....       LCALL   ??Smart_home_Key_add?relay
    641            }
    642            
    643            if ( keys & HAL_KEY_SW_4 )  //LEFT
   \                     ??Smart_home_HandleKeys_17:
   \   0000DD   EE           MOV     A,R6
   \   0000DE   A2E3         MOV     C,0xE0 /* A   */.3
   \   0000E0   5018         JNC     ??Smart_home_HandleKeys_20
    644            {
    645               if(Ctrlcase > -1)   { Ctrlcase--;}
   \   0000E2   90....       MOV     DPTR,#Ctrlcase
   \   0000E5   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   0000E8   4003         JC      ??Smart_home_HandleKeys_21
   \   0000EA   E0           MOVX    A,@DPTR
   \   0000EB   14           DEC     A
   \   0000EC   F0           MOVX    @DPTR,A
    646               if(Ctrlcase < 0)    { Ctrlcase=2;}
   \                     ??Smart_home_HandleKeys_21:
   \   0000ED   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   0000F0   5003         JNC     ??Smart_home_HandleKeys_22
   \   0000F2   7402         MOV     A,#0x2
   \   0000F4   F0           MOVX    @DPTR,A
    647               Smart_home_Key_add(Ctrlcase);    
   \                     ??Smart_home_HandleKeys_22:
   \   0000F5                ; Setup parameters for call to function Smart_home_Key_add
   \   0000F5   E0           MOVX    A,@DPTR
   \   0000F6   F9           MOV     R1,A
   \   0000F7   12....       LCALL   ??Smart_home_Key_add?relay
    648            }
    649            
    650            if ( keys & HAL_KEY_SW_5 )  //OK
    651            {
    652          
    653            }
    654            
    655            if ( keys & HAL_KEY_SW_7 )  //CENCEL
   \                     ??Smart_home_HandleKeys_20:
   \   0000FA   EE           MOV     A,R6
   \   0000FB   A2E6         MOV     C,0xE0 /* A   */.6
   \   0000FD   502C         JNC     ??Smart_home_HandleKeys_23
    656            {
    657               if(NetWorkAllow == 0)
   \   0000FF   90....       MOV     DPTR,#??NetWorkAllow
   \   000102   E0           MOVX    A,@DPTR
   \   000103   7017         JNZ     ??Smart_home_HandleKeys_24
    658               {
    659                 NetWorkAllow = 1;
   \   000105   7401         MOV     A,#0x1
   \   000107   F0           MOVX    @DPTR,A
    660                 NLME_PermitJoiningRequest(0xFF); // 组网，允许随时加入
   \   000108                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   000108   79FF         MOV     R1,#-0x1
   \   00010A   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    661                 HalLedSet(HAL_LED_1, HAL_LED_MODE_ON);
   \   00010D                ; Setup parameters for call to function HalLedSet
   \   00010D   7A01         MOV     R2,#0x1
   \   00010F   7901         MOV     R1,#0x1
   \   000111   12....       LCALL   ??HalLedSet?relay
    662          #if defined ( LCD_SUPPORTED )
    663                 HalLcdWriteString( "Allow networking", HAL_LCD_LINE_4 );
   \   000114                ; Setup parameters for call to function HalLcdWriteString
   \   000114   7904         MOV     R1,#0x4
   \   000116   7A..         MOV     R2,#`?<Constant "Allow networking">` & 0xff
   \   000118   7B..         MOV     R3,#(`?<Constant "Allow networking">` >> 8) & 0xff
   \   00011A   800C         SJMP    ??Smart_home_HandleKeys_25
    664          #endif
    665               }
    666               else
    667               {
    668                 NetWorkAllow = 0;
   \                     ??Smart_home_HandleKeys_24:
   \   00011C   E4           CLR     A
   \   00011D   F0           MOVX    @DPTR,A
    669                 NLME_PermitJoiningRequest(0x00); // 不允许组网
   \   00011E                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   00011E   F9           MOV     R1,A
   \   00011F   12....       LCALL   ?Subroutine18 & 0xFFFF
    670                 HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);  
    671          #if defined ( LCD_SUPPORTED )
    672                 HalLcdWriteString( "Ban   networking", HAL_LCD_LINE_4 );
   \                     ??CrossCallReturnLabel_37:
   \   000122                ; Setup parameters for call to function HalLcdWriteString
   \   000122   7904         MOV     R1,#0x4
   \   000124   7A..         MOV     R2,#`?<Constant "Ban   networking">` & 0xff
   \   000126   7B..         MOV     R3,#(`?<Constant "Ban   networking">` >> 8) & 0xff
   \                     ??Smart_home_HandleKeys_25:
   \   000128   12....       LCALL   ??HalLcdWriteString?relay
    673          #endif        
    674               }
    675            }
    676          }
   \                     ??Smart_home_HandleKeys_23:
   \   00012B   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   94B1         SUBB    A,#-0x4f
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9450         SUBB    A,#0x50
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9400         SUBB    A,#0x0
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9403         SUBB    A,#0x3
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??MotorSpeed:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??NetWorkAllow:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??LCD_Page:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay1_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay2_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    677          
    678          /*********************************************************************
    679           * @fn      Smart_home_ProcessMSGCmd
    680           *
    681           * @brief   Data message processor callback. This function processes
    682           *          any incoming data - probably from other devices. Based
    683           *          on the cluster ID, perform the intended action.
    684           *
    685           * @param   pkt - pointer to the incoming message packet
    686           *
    687           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    688           *          FALSE otherwise.
    689           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    690          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
   \                     Smart_home_ProcessMSGCmd:
    691          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    692            switch ( pkt->clusterId )
   \   000009   8E82         MOV     DPL,R6
   \   00000B   8F83         MOV     DPH,R7
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   F5..         MOV     ?V0 + 0,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   F5..         MOV     ?V0 + 1,A
   \   000018   78..         MOV     R0,#?V0 + 0
   \   00001A   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for Smart_home_ProcessMSGCmd>_0`:
   \   00001D   0100         DW        1
   \   00001F   07           DB        7
   \   000020   ....         DW        ??Smart_home_ProcessMSGCmd_0
   \   000022   ....         DW        ??Smart_home_ProcessMSGCmd_1
   \   000024   ....         DW        ??Smart_home_ProcessMSGCmd_2
   \   000026   ....         DW        ??Smart_home_ProcessMSGCmd_3
   \   000028   ....         DW        ??Smart_home_ProcessMSGCmd_4
   \   00002A   ....         DW        ??Smart_home_ProcessMSGCmd_5
   \   00002C   ....         DW        ??Smart_home_ProcessMSGCmd_6
   \   00002E   ....         DW        ??Smart_home_ProcessMSGCmd_7
   \   000030   ....         DW        ??Smart_home_ProcessMSGCmd_8
    693            {
    694            /***********************************************************************
    695              目前总共8种case
    696             #define Smart_home_CLUSTERID_HUMITMSG            1  // 温湿度
    697             #define Smart_home_CLUSTERID_TEMPLIGHTMSG        2  // 温度光照
    698             #define Smart_home_CLUSTERID_RFIDMSG             3  // 射频卡
    699             #define Smart_home_CLUSTERID_GASFLAMEMSG         4  // 烟雾火焰
    700             #define Smart_home_CLUSTERID_INFRAREDMSG         5  // 人体红外
    701             #define Smart_home_CLUSTERID_SOUNDVBMSG          6  // 声音振动
    702             #define Smart_home_CLUSTERID_MOTORSTATUSMSG      7  // 直流电机状态信息
    703             #define Smart_home_CLUSTERID_RELAYSTATUSMSG      8  // 继电器状态信息
    704              
    705             设备描述
    706             typedef struct DeviceInfo
    707             {
    708               uint8 deviceID;
    709               uint8 deviceStatus;
    710               uint8 data[5];
    711             } DeviceInfo; 
    712             ************************************************************************/ 
    713              //3.14 消息处理模块，共8个，行为类似 
    714              //3.21 修改为指针方法（DeviceList相关）
    715              case Smart_home_CLUSTERID_HUMITMSG:         // 温湿度
    716                DeviceList[Humit].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_1:
   \   000032   90....       MOV     DPTR,#DeviceList + 8
   \   000035   12....       LCALL   ?Subroutine2 & 0xFFFF
    717                DeviceList[Humit].data[0] = pkt->cmd.Data[4]; // 湿度 
   \                     ??CrossCallReturnLabel_0:
   \   000038   90....       MOV     DPTR,#DeviceList + 9
   \   00003B   12....       LCALL   ?Subroutine7 & 0xFFFF
    718                DeviceList[Humit].data[1] = pkt->cmd.Data[5]; // 温度
   \                     ??CrossCallReturnLabel_13:
   \   00003E   90....       MOV     DPTR,#DeviceList + 10
   \   000041   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    719                break;
    720                
    721              case Smart_home_CLUSTERID_TEMPLIGHTMSG:     // 温度光照
    722                DeviceList[TempLight].deviceStatus = DEVICE_ONLINE;   //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_2:
   \   000044   90....       MOV     DPTR,#DeviceList + 15
   \   000047   12....       LCALL   ?Subroutine2 & 0xFFFF
    723                DeviceList[TempLight].data[0] = pkt->cmd.Data[4]; // 温度整数
   \                     ??CrossCallReturnLabel_1:
   \   00004A   90....       MOV     DPTR,#DeviceList + 16
   \   00004D   12....       LCALL   ?Subroutine8 & 0xFFFF
    724                DeviceList[TempLight].data[1] = pkt->cmd.Data[5]; // 温度小数
   \                     ??CrossCallReturnLabel_15:
   \   000050   90....       MOV     DPTR,#DeviceList + 17
   \   000053   12....       LCALL   ?Subroutine6 & 0xFFFF
    725                DeviceList[TempLight].data[2] = pkt->cmd.Data[6]; // 光照
   \                     ??CrossCallReturnLabel_11:
   \   000056   90....       MOV     DPTR,#DeviceList + 18
   \   000059   12....       LCALL   ?Subroutine5 & 0xFFFF
    726                DeviceList[TempLight].data[3] = pkt->cmd.Data[7]; // 光照
   \                     ??CrossCallReturnLabel_9:
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   90....       MOV     DPTR,#DeviceList + 19
   \   000060   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    727                break;
    728                
    729              case Smart_home_CLUSTERID_RFIDMSG:          // 射频卡
    730                DeviceList[RfID].deviceStatus = DEVICE_ONLINE;        //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_3:
   \   000063   90....       MOV     DPTR,#DeviceList + 22
   \   000066   12....       LCALL   ?Subroutine2 & 0xFFFF
    731                DeviceList[RfID].data[0] = pkt->cmd.Data[4]; // 射频卡类型
   \                     ??CrossCallReturnLabel_2:
   \   000069   90....       MOV     DPTR,#DeviceList + 23
   \   00006C   12....       LCALL   ?Subroutine8 & 0xFFFF
    732                DeviceList[RfID].data[1] = pkt->cmd.Data[5]; // 4个字节的ID号
   \                     ??CrossCallReturnLabel_16:
   \   00006F   90....       MOV     DPTR,#DeviceList + 24
   \   000072   12....       LCALL   ?Subroutine6 & 0xFFFF
    733                DeviceList[RfID].data[2] = pkt->cmd.Data[6]; //
   \                     ??CrossCallReturnLabel_12:
   \   000075   90....       MOV     DPTR,#DeviceList + 25
   \   000078   12....       LCALL   ?Subroutine19 & 0xFFFF
    734                DeviceList[RfID].data[3] = pkt->cmd.Data[7]; //
   \                     ??CrossCallReturnLabel_38:
   \   00007B   A3           INC     DPTR
   \   00007C   E0           MOVX    A,@DPTR
   \   00007D   90....       MOV     DPTR,#DeviceList + 26
   \   000080   12....       LCALL   ?Subroutine5 & 0xFFFF
    735                DeviceList[RfID].data[4] = pkt->cmd.Data[8]; //  
   \                     ??CrossCallReturnLabel_10:
   \   000083   A3           INC     DPTR
   \   000084   E0           MOVX    A,@DPTR
   \   000085   90....       MOV     DPTR,#DeviceList + 27
   \   000088   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    736                break;
    737                
    738              case Smart_home_CLUSTERID_GASFLAMEMSG:      // 烟雾火焰
    739                DeviceList[gasFlame].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_4:
   \   00008B   90....       MOV     DPTR,#DeviceList + 29
   \   00008E   12....       LCALL   ?Subroutine3 & 0xFFFF
    740                DeviceList[gasFlame].data[0] = pkt->cmd.Data[4]; // 烟雾与火焰报警信息
   \                     ??CrossCallReturnLabel_4:
   \   000091   90....       MOV     DPTR,#DeviceList + 30
   \   000094   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    741                break;
    742                
    743              case Smart_home_CLUSTERID_INFRAREDMSG:      // 人体红外
    744                DeviceList[infrared].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_5:
   \   000097   90....       MOV     DPTR,#DeviceList + 36
   \   00009A   12....       LCALL   ?Subroutine3 & 0xFFFF
    745                DeviceList[infrared].data[0] = pkt->cmd.Data[4]; // 人体红外 
   \                     ??CrossCallReturnLabel_5:
   \   00009D   90....       MOV     DPTR,#DeviceList + 37
   \   0000A0   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    746                break;
    747          
    748              case Smart_home_CLUSTERID_SOUNDVBMSG:       // 声音振动
    749                DeviceList[soundVb].deviceStatus = DEVICE_ONLINE;     //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_6:
   \   0000A3   90....       MOV     DPTR,#DeviceList + 57
   \   0000A6   12....       LCALL   ?Subroutine3 & 0xFFFF
    750                DeviceList[soundVb].data[0] = pkt->cmd.Data[4]; // 声音震动信息
   \                     ??CrossCallReturnLabel_6:
   \   0000A9   90....       MOV     DPTR,#DeviceList + 58
   \   0000AC   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    751                break;
    752                
    753              case Smart_home_CLUSTERID_MOTORSTATUSMSG:   // 直流电机状态信息
    754                DeviceList[motor].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_7:
   \   0000AF   90....       MOV     DPTR,#DeviceList + 43
   \   0000B2   7401         MOV     A,#0x1
   \   0000B4   F0           MOVX    @DPTR,A
    755                // 储存电机设备的网络地址，用于发送控制命令
    756                Motor_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0000B5   90....       MOV     DPTR,#Motor_addr + 8
   \   0000B8   12....       LCALL   ?Subroutine9 & 0xFFFF
    757                Motor_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_17:
   \   0000BB   90....       MOV     DPTR,#Motor_addr
   \   0000BE   E8           MOV     A,R0
   \   0000BF   F0           MOVX    @DPTR,A
   \   0000C0   A3           INC     DPTR
   \   0000C1   E9           MOV     A,R1
   \   0000C2   F0           MOVX    @DPTR,A
    758                
    759                Motor_addr.endPoint = 1;  // 目的节点的端口号
   \   0000C3   90....       MOV     DPTR,#Motor_addr + 9
   \   0000C6   12....       LCALL   ?Subroutine2 & 0xFFFF
    760                //TransmitApp_DstMotorAddr->endPoint = TRANSMITAPP_ENDPOINT;
    761               
    762                DeviceList[motor].data[0] = pkt->cmd.Data[4]; // 电机转速
   \                     ??CrossCallReturnLabel_3:
   \   0000C9   90....       MOV     DPTR,#DeviceList + 44
   \   0000CC   12....       LCALL   ?Subroutine7 & 0xFFFF
    763                DeviceList[motor].data[1] = pkt->cmd.Data[5]; // 电机状态
   \                     ??CrossCallReturnLabel_14:
   \   0000CF   90....       MOV     DPTR,#DeviceList + 45
   \   0000D2   8070         SJMP    ??Smart_home_ProcessMSGCmd_9
    764                break;
    765                
    766              case Smart_home_CLUSTERID_RELAYSTATUSMSG:   // 继电器状态信息
    767                DeviceList[relay].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线    
   \                     ??Smart_home_ProcessMSGCmd_8:
   \   0000D4   90....       MOV     DPTR,#DeviceList + 50
   \   0000D7   7401         MOV     A,#0x1
   \   0000D9   F0           MOVX    @DPTR,A
    768                
    769                // 储存继电器设备的网络地址，用于发送控制命令
    770                Relay_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0000DA   90....       MOV     DPTR,#Relay_addr + 8
   \   0000DD   12....       LCALL   ?Subroutine9 & 0xFFFF
    771                Relay_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_18:
   \   0000E0   90....       MOV     DPTR,#Relay_addr
   \   0000E3   E8           MOV     A,R0
   \   0000E4   F0           MOVX    @DPTR,A
   \   0000E5   A3           INC     DPTR
   \   0000E6   E9           MOV     A,R1
   \   0000E7   F0           MOVX    @DPTR,A
    772                
    773                Relay_addr.endPoint = 1; // 目的节点的端口号
   \   0000E8   90....       MOV     DPTR,#Relay_addr + 9
   \   0000EB   7401         MOV     A,#0x1
   \   0000ED   F0           MOVX    @DPTR,A
    774          #if defined ( LCD_SUPPORTED )
    775                if(Ctrlcase == 1)
   \   0000EE   90....       MOV     DPTR,#Ctrlcase
   \   0000F1   E0           MOVX    A,@DPTR
   \   0000F2   6401         XRL     A,#0x1
   \   0000F4   7048         JNZ     ??Smart_home_ProcessMSGCmd_10
    776                {
    777                  const uint8 cmd =  pkt->cmd.Data[4];
   \   0000F6   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   0000F9   F5..         MOV     ?V0 + 0,A
    778                  //消除抖动
    779                  Onboard_wait(1000);
   \   0000FB                ; Setup parameters for call to function Onboard_wait
   \   0000FB   7AE8         MOV     R2,#-0x18
   \   0000FD   7B03         MOV     R3,#0x3
   \   0000FF   12....       LCALL   ??Onboard_wait?relay
    780                  if((cmd & 0x02) == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   \   000102   E5..         MOV     A,?V0 + 0
   \   000104   A2E1         MOV     C,0xE0 /* A   */.1
   \   000106   5009         JNC     ??Smart_home_ProcessMSGCmd_11
   \   000108                ; Setup parameters for call to function HalLcdWriteString
   \   000108   7902         MOV     R1,#0x2
   \   00010A   7A..         MOV     R2,#`?<Constant "K1:ON">` & 0xff
   \   00010C   7B..         MOV     R3,#(`?<Constant "K1:ON">` >> 8) & 0xff
   \   00010E   12....       LCALL   ??HalLcdWriteString?relay
    781                  if((cmd & 0x01) == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_ProcessMSGCmd_11:
   \   000111   E5..         MOV     A,?V0 + 0
   \   000113   A2E0         MOV     C,0xE0 /* A   */.0
   \   000115   5009         JNC     ??Smart_home_ProcessMSGCmd_12
   \   000117                ; Setup parameters for call to function HalLcdWriteString
   \   000117   7902         MOV     R1,#0x2
   \   000119   7A..         MOV     R2,#`?<Constant "K1:OFF">` & 0xff
   \   00011B   7B..         MOV     R3,#(`?<Constant "K1:OFF">` >> 8) & 0xff
   \   00011D   12....       LCALL   ??HalLcdWriteString?relay
    782                  if((cmd & 0x20) == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_ProcessMSGCmd_12:
   \   000120   E5..         MOV     A,?V0 + 0
   \   000122   A2E5         MOV     C,0xE0 /* A   */.5
   \   000124   5009         JNC     ??Smart_home_ProcessMSGCmd_13
   \   000126                ; Setup parameters for call to function HalLcdWriteString
   \   000126   7903         MOV     R1,#0x3
   \   000128   7A..         MOV     R2,#`?<Constant "K2:ON">` & 0xff
   \   00012A   7B..         MOV     R3,#(`?<Constant "K2:ON">` >> 8) & 0xff
   \   00012C   12....       LCALL   ??HalLcdWriteString?relay
    783                  if((cmd & 0x10) == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}      
   \                     ??Smart_home_ProcessMSGCmd_13:
   \   00012F   E5..         MOV     A,?V0 + 0
   \   000131   A2E4         MOV     C,0xE0 /* A   */.4
   \   000133   5009         JNC     ??Smart_home_ProcessMSGCmd_10
   \   000135                ; Setup parameters for call to function HalLcdWriteString
   \   000135   7903         MOV     R1,#0x3
   \   000137   7A..         MOV     R2,#`?<Constant "K2:OFF">` & 0xff
   \   000139   7B..         MOV     R3,#(`?<Constant "K2:OFF">` >> 8) & 0xff
   \   00013B   12....       LCALL   ??HalLcdWriteString?relay
    784                }
    785            
    786          #endif 
    787                DeviceList[relay].data[0] = pkt->cmd.Data[4]; 
   \                     ??Smart_home_ProcessMSGCmd_10:
   \   00013E   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   000141   90....       MOV     DPTR,#DeviceList + 51
   \                     ??Smart_home_ProcessMSGCmd_9:
   \   000144   F0           MOVX    @DPTR,A
    788                break;
    789                
    790              default:
    791                break;
    792            }
    793          }
   \                     ??Smart_home_ProcessMSGCmd_0:
   \   000145                REQUIRE ?Subroutine1
   \   000145                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_45:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   04           INC     A
   \   000001   F0           MOVX    @DPTR,A
   \   000002   8E82         MOV     DPL,R6
   \   000004   8F83         MOV     DPH,R7
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F9           MOV     R1,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_47:
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_52:
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_50:
   \   000008   A3           INC     DPTR
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   EE           MOV     A,R6
   \   000001   2422         ADD     A,#0x22
   \   000003   F582         MOV     DPL,A
   \   000005   EF           MOV     A,R7
   \   000006   3400         ADDC    A,#0x0
   \   000008   F583         MOV     DPH,A
   \   00000A   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_51:
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_55:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   A3           INC     DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EE           MOV     A,R6
   \   000004   2422         ADD     A,#0x22
   \   000006   F8           MOV     R0,A
   \   000007   EF           MOV     A,R7
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F9           MOV     R1,A
   \   00000B   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_53:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine26:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   E0           MOVX    A,@DPTR
   \   000005   FA           MOV     R2,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   A3           INC     DPTR
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   22           RET
    794          
    795          /*********************************************************************
    796           * @fn     Smart_home_Device_check
    797           *
    798           * @brief   设备计数器，用来检查设备在开始组网后多久在线.
    799           *          目前搜索为4次HeartBeat  (DEVICE_HEART_BEAT 3)
    800           *          3.21
    801           * @param   none
    802           *
    803           * @return  none
    804           */
    805          static void Smart_home_Device_check(void)
    806          {

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    807            static uint8 DeviceID;
   \                     ??DeviceID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    808            for(DeviceID=1;DeviceID<Smart_home_MAX_INCLUSTERS;DeviceID++)
    809            {
    810              if(DeviceList[DeviceID].deviceStatus != DEVICE_ONLINE)    //设备离线
    811              {
    812                DeviceCnt[DeviceID]++;
    813              }
    814              if(DeviceList[DeviceID].deviceStatus == DEVICE_ONLINE)    //设备在线
    815              {
    816                DeviceCnt[DeviceID] = 0;
    817                DeviceList[DeviceID].deviceStatus = 0;
    818              }
    819              if(DeviceCnt[DeviceID] > DEVICE_HEART_BEAT)
    820              {
    821                DeviceCnt[DeviceID] = DEVICE_HEART_BEAT;
    822                DeviceList[DeviceID].deviceStatus = DEVICE_OFFLINE;
    823              }
    824            }
    825            /*温湿度缓存 温度光照缓存 RFID 信息缓存 气体火焰缓存 
    826            人体红外 电机状态 继电器状态 声音震动*/
    827          }
    828          
    829          
    830          /*********************************************************************
    831           * @fn      Smart_home_Relay_Ctl
    832           *
    833           * @brief   发送继电器控制消息
    834           *
    835           * @param   none
    836           *
    837           * @return  none
    838           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    839          static void Smart_home_Relay_Ctl(uint8 cmd)
   \                     Smart_home_Relay_Ctl:
    840          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    841            uint8 tmp;
    842            
    843            // 只有设备在线时, 方发送控制命令
    844            if (DeviceList[relay].deviceStatus != DEVICE_OFFLINE)
   \   000007   90....       MOV     DPTR,#DeviceList + 50
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6402         XRL     A,#0x2
   \   00000D   7003         JNZ     $+5
   \   00000F   02....       LJMP    ??Smart_home_Relay_Ctl_0 & 0xFFFF
    845            {
    846              // put the sequence number in the message
    847              tmp = HI_UINT8( RelayTransID );
   \   000012   90....       MOV     DPTR,#RelayTransID
   \   000015   E0           MOVX    A,@DPTR
   \   000016   C4           SWAP    A
   \   000017   540F         ANL     A,#0xf
   \   000019   FA           MOV     R2,A
    848              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   00001A   C3           CLR     C
   \   00001B   940A         SUBB    A,#0xa
   \   00001D   5004         JNC     ??Smart_home_Relay_Ctl_1
   \   00001F   7830         MOV     R0,#0x30
   \   000021   8002         SJMP    ??Smart_home_Relay_Ctl_2
   \                     ??Smart_home_Relay_Ctl_1:
   \   000023   7837         MOV     R0,#0x37
    849              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_Relay_Ctl_2:
   \   000025   E8           MOV     A,R0
   \   000026   2A           ADD     A,R2
   \   000027   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   00002A   F0           MOVX    @DPTR,A
    850              tmp = LO_UINT8( RelayTransID );
   \   00002B   90....       MOV     DPTR,#RelayTransID
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   540F         ANL     A,#0xf
   \   000031   FA           MOV     R2,A
    851              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000032   C3           CLR     C
   \   000033   940A         SUBB    A,#0xa
   \   000035   5004         JNC     ??Smart_home_Relay_Ctl_3
   \   000037   7830         MOV     R0,#0x30
   \   000039   8002         SJMP    ??Smart_home_Relay_Ctl_4
   \                     ??Smart_home_Relay_Ctl_3:
   \   00003B   7837         MOV     R0,#0x37
    852              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_Relay_Ctl_4:
   \   00003D   E8           MOV     A,R0
   \   00003E   2A           ADD     A,R2
   \   00003F   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   000042   F0           MOVX    @DPTR,A
    853              
    854              // 发送给继电器的控制命令 
    855              Coordinator_Msg[4] = cmd;
   \   000043   EE           MOV     A,R6
   \   000044   A3           INC     DPTR
   \   000045   F0           MOVX    @DPTR,A
    856              /********************************************
    857              *   屏幕显示部分*/
    858          #if defined ( LCD_SUPPORTED )
    859              if(cmd == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   \   000046   7402         MOV     A,#0x2
   \   000048   6E           XRL     A,R6
   \   000049   7008         JNZ     ??Smart_home_Relay_Ctl_5
   \   00004B                ; Setup parameters for call to function HalLcdWriteString
   \   00004B   7902         MOV     R1,#0x2
   \   00004D   7A..         MOV     R2,#`?<Constant "K1:ON">` & 0xff
   \   00004F   7B..         MOV     R3,#(`?<Constant "K1:ON">` >> 8) & 0xff
   \   000051   8025         SJMP    ??Smart_home_Relay_Ctl_6
    860              if(cmd == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Relay_Ctl_5:
   \   000053   7401         MOV     A,#0x1
   \   000055   6E           XRL     A,R6
   \   000056   7008         JNZ     ??Smart_home_Relay_Ctl_7
   \   000058                ; Setup parameters for call to function HalLcdWriteString
   \   000058   7902         MOV     R1,#0x2
   \   00005A   7A..         MOV     R2,#`?<Constant "K1:OFF">` & 0xff
   \   00005C   7B..         MOV     R3,#(`?<Constant "K1:OFF">` >> 8) & 0xff
   \   00005E   8018         SJMP    ??Smart_home_Relay_Ctl_6
    861              if(cmd == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Relay_Ctl_7:
   \   000060   7420         MOV     A,#0x20
   \   000062   6E           XRL     A,R6
   \   000063   7008         JNZ     ??Smart_home_Relay_Ctl_8
   \   000065                ; Setup parameters for call to function HalLcdWriteString
   \   000065   7903         MOV     R1,#0x3
   \   000067   7A..         MOV     R2,#`?<Constant "K2:ON">` & 0xff
   \   000069   7B..         MOV     R3,#(`?<Constant "K2:ON">` >> 8) & 0xff
   \   00006B   800B         SJMP    ??Smart_home_Relay_Ctl_6
    862              if(cmd == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Relay_Ctl_8:
   \   00006D   7410         MOV     A,#0x10
   \   00006F   6E           XRL     A,R6
   \   000070   7009         JNZ     ??Smart_home_Relay_Ctl_9
   \   000072                ; Setup parameters for call to function HalLcdWriteString
   \   000072   7903         MOV     R1,#0x3
   \   000074   7A..         MOV     R2,#`?<Constant "K2:OFF">` & 0xff
   \   000076   7B..         MOV     R3,#(`?<Constant "K2:OFF">` >> 8) & 0xff
   \                     ??Smart_home_Relay_Ctl_6:
   \   000078   12....       LCALL   ??HalLcdWriteString?relay
    863          #endif     
    864              /********************************************/
    865              tmp = AF_DataRequest( &Relay_addr,                         
    866                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    867                                     Smart_home_CLUSTERID_RELAYCTRL,
    868                                     RELAYSTATUSMSG_LEN,                 
    869                                     Coordinator_Msg,                    
    870                                    &RelayTransID,                       
    871                                     AF_DISCV_ROUTE,                     
    872                                     AF_DEFAULT_RADIUS );
   \                     ??Smart_home_Relay_Ctl_9:
   \   00007B                ; Setup parameters for call to function AF_DataRequest
   \   00007B   75..1E       MOV     ?V0 + 0,#0x1e
   \   00007E   78..         MOV     R0,#?V0 + 0
   \   000080   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000083   75....       MOV     ?V0 + 0,#RelayTransID & 0xff
   \   000086   75....       MOV     ?V0 + 1,#(RelayTransID >> 8) & 0xff
   \   000089   78..         MOV     R0,#?V0 + 0
   \   00008B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008E   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000091   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   000094   78..         MOV     R0,#?V0 + 0
   \   000096   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000099   75..05       MOV     ?V0 + 0,#0x5
   \   00009C   75..00       MOV     ?V0 + 1,#0x0
   \   00009F   78..         MOV     R0,#?V0 + 0
   \   0000A1   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A4   75..0A       MOV     ?V0 + 0,#0xa
   \   0000A7   78..         MOV     R0,#?V0 + 0
   \   0000A9   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000AC   7920         MOV     R1,#0x20
   \   0000AE   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   0000B0   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   0000B2   7A..         MOV     R2,#Relay_addr & 0xff
   \   0000B4   7B..         MOV     R3,#(Relay_addr >> 8) & 0xff
   \   0000B6   12....       LCALL   ??AF_DataRequest?relay
   \   0000B9   7409         MOV     A,#0x9
   \   0000BB   12....       LCALL   ?DEALLOC_XSTACK8
    873            } 
    874          }
   \                     ??Smart_home_Relay_Ctl_0:
   \   0000BE   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   75F007       MOV     B,#0x7
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007                REQUIRE ??Subroutine28_0
   \   000007                ; // Fall through to label ??Subroutine28_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine28_0:
   \   000000   74..         MOV     A,#(DeviceList + 1) & 0xff
   \   000002   28           ADD     A,R0
   \   000003   F582         MOV     DPL,A
   \   000005   74..         MOV     A,#((DeviceList + 1) >> 8) & 0xff
   \   000007   39           ADDC    A,R1
   \   000008   F583         MOV     DPH,A
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_49:
   \   000005   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Key_add?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Key_add

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessMSGCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessMSGCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Relay_Ctl?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Relay_Ctl

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Smart_home">`:
   \   000000   536D6172     DB "Smart_home"
   \            745F686F
   \            6D6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Flip use UP/DOWN">`:
   \   000000   466C6970     DB "Flip use UP/DOWN"
   \            20757365
   \            2055502F
   \            444F574E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " ">`:
   \   000000   2000         DB " "

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Contrling">`:
   \   000000   52656C61     DB "Relay Contrling"
   \            7920436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Online">`:
   \   000000   52656C61     DB "Relay Online"
   \            79204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Offline">`:
   \   000000   52656C61     DB "Relay Offline"
   \            79204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Contrling">`:
   \   000000   4D6F746F     DB "Motor Contrling"
   \            7220436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Online">`:
   \   000000   4D6F746F     DB "Motor Online"
   \            72204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Offline">`:
   \   000000   4D6F746F     DB "Motor Offline"
   \            72204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor max Speed">`:
   \   000000   4D6F746F     DB "Motor max Speed"
   \            72206D61
   \            78205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor min Speed">`:
   \   000000   4D6F746F     DB "Motor min Speed"
   \            72206D69
   \            6E205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Allow networking">`:
   \   000000   416C6C6F     DB "Allow networking"
   \            77206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Ban   networking">`:
   \   000000   42616E20     DB "Ban   networking"
   \            20206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:ON">`:
   \   000000   4B313A4F     DB "K1:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:OFF">`:
   \   000000   4B313A4F     DB "K1:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:ON">`:
   \   000000   4B323A4F     DB "K2:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:OFF">`:
   \   000000   4B323A4F     DB "K2:OFF"
   \            464600  
    875          
    876          /*********************************************************************
    877           * @fn      Smart_home_Motor_Ctl
    878           *
    879           * @brief   发送电机控制消息
    880           *
    881           * @param   none
    882           *
    883           * @return  none
    884           */
    885          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed)
                             ^
Warning[Pe177]: function "Smart_home_Motor_Ctl" was declared but never
          referenced
    886          {
    887            uint8 tmp;
    888            
    889            // 只有设备在线时, 方发送控制命令
    890            if (DeviceList[motor].deviceStatus != DEVICE_OFFLINE)
    891            {
    892              // put the sequence number in the message
    893              tmp = HI_UINT8( MotorTransID );
    894              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    895              Coordinator_Msg[2] = tmp;
    896              tmp = LO_UINT8( RelayTransID );
    897              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    898              Coordinator_Msg[3] = tmp;
    899              
    900              // 发送给继电器的控制命令 
    901              Coordinator_Msg[4] = speed;
    902              Coordinator_Msg[5] = cmd;
    903              /*********************************************
    904              *   屏幕显示部分
    905          #if defined ( LCD_SUPPORTED )
    906              char* spe_c     = &speed;
    907              char* cmd_c     = &cmd;
    908              const char SpeStr[3]  = {"ON"};
    909              const char CmdStr[4] = {"OFF"};
    910              char* LCD_Display1;
    911              char* LCD_Display2;
    912              
    913              if(cmd == 0x02) {LCD_Display1 = strcat(K1,OnStr);}
    914              if(cmd == 0x01) {LCD_Display1 = strcat(K1,OffStr);}
    915              if(cmd == 0x10) {LCD_Display2 = strcat(K2,OnStr);}
    916              if(cmd == 0x20) {LCD_Display2 = strcat(K2,OffStr);}
    917              
    918              HalLcdWriteString( LCD_Display1, HAL_LCD_LINE_2 );
    919              HalLcdWriteString( LCD_Display2, HAL_LCD_LINE_3 );
    920          #endif     
    921              ********************************************/
    922              
    923              tmp = AF_DataRequest( &Motor_addr,                         
    924                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    925                                     Smart_home_CLUSTERID_MOTORCTRL,
    926                                     MOTORSTATUSMSG_LEN,                 
    927                                     Coordinator_Msg,                    
    928                                    &MotorTransID,                       
    929                                     AF_DISCV_ROUTE,                     
    930                                     AF_DEFAULT_RADIUS );
    931            }   
    932          }
    933          
    934          
    935          /*********************************************************************
    936           * @fn      Smart_home_Display
    937           *
    938           * @brief   屏幕回显函数，定义了内容如何显示.
    939           *
    940           * @param   port - UART port.
    941           * @param   event - the UART port event flag.
    942           *
    943           * @return  none
    944           */
    945          static void Smart_home_Display(uint8 page)
    946          {
    947          #if defined LCD_SUPPORTED
    948          
    949          #endif // LCD_SUPPORTED  
    950          }
    951          
    952          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_HandleKeys              0      0     23
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Key_add            0      0     18
       -> Smart_home_Key_add            0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_Init                    1      0     38
       -> afRegister                    0      0     76
       -> RegisterForKeys               0      0     76
       -> HalUARTOpen                   0      0     76
       -> HalLcdWriteString             0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> osal_start_timerEx            0      0     76
       -> osal_start_timerEx            0      0     76
       -> NLME_PermitJoiningRequest     0      0     76
       -> HalLedSet                     0      0     76
     Smart_home_Key_add                 0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_ProcessEvent            0      0     14
       -> Smart_home_ProcessMSGCmd      0      0     28
       -> osal_msg_deallocate           0      0     28
       -> osal_msg_receive              0      0     28
       -> osal_msg_receive              0      0     28
       -> ZDO_ParseEPListRsp            0      0     28
       -> HalLedSet                     0      0     28
       -> osal_mem_free                 0      0     28
       -> HalLedSet                     0      0     28
       -> HalLedSet                     0      0     28
       -> Smart_home_HandleKeys         0      0     28
       -> HalLedSet                     0      0     28
       -> osal_start_timerEx            0      0     28
       -> osal_start_timerEx            0      0     28
     Smart_home_ProcessMSGCmd           0      0     24
       -> Onboard_wait                  0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
     Smart_home_Relay_Ctl               0      0     28
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> AF_DataRequest                0      0     38


   Segment part sizes:

     Function/Label                   Bytes
     --------------                   -----
     Smart_home_ClusterList_IN          18
     Smart_home_ClusterList_OUT         18
     Smart_home_SimpleDesc              12
     Smart_home_epDesc                   6
     Smart_home_TaskID                   1
     DeviceCnt                           9
     Ctrlcase                            1
     DeviceList                         63
     Relay_addr                         12
     Motor_addr                         12
     Coordinator_Msg                   102
     RelayTransID                        1
     MotorTransID                        1
     Smart_home_Init                   219
     ?Subroutine0                        5
     ?Subroutine14                       6
     ??Subroutine29_0                   11
     ?Subroutine24                      12
     ?Subroutine18                      11
     Smart_home_ProcessEvent           371
     ?Subroutine27                       9
     Smart_home_Key_add                109
     ?Subroutine4                        7
     ?Subroutine21                      19
     Smart_home_HandleKeys             302
     ?Subroutine16                      10
     ?Subroutine15                      10
     ?Subroutine12                      10
     ?Subroutine11                      10
     MotorSpeed                          1
     NetWorkAllow                        1
     LCD_Page                            1
     Relay1_on                           1
     Relay2_on                           1
     Smart_home_ProcessMSGCmd          325
     ?Subroutine1                        5
     ?Subroutine13                       4
     ?Subroutine9                       18
     ?Subroutine8                        7
     ?Subroutine7                        5
     ?Subroutine6                        5
     ?Subroutine19                       7
     ?Subroutine5                        6
     ?Subroutine20                      10
     ?Subroutine3                        7
     ?Subroutine22                      15
     ?Subroutine25                       8
     ?Subroutine2                       16
     ?Subroutine23                       4
     ?Subroutine26                      17
     DeviceID                            1
     Smart_home_Relay_Ctl              193
     ?Subroutine17                       7
     ??Subroutine28_0                   11
     ?Subroutine10                       6
     ??Smart_home_Init?relay             6
     ??Smart_home_ProcessEvent?relay     6
     ??Smart_home_Key_add?relay          6
     ??Smart_home_HandleKeys?relay       6
     ??Smart_home_ProcessMSGCmd?relay    6
     ??Smart_home_Relay_Ctl?relay        6
     ?<Constant "Smart_home">           11
     ?<Constant "Flip use UP/DOWN">     17
     ?<Constant " ">                     2
     ?<Constant "Relay Contrling">      16
     ?<Constant "Relay Online">         13
     ?<Constant "Relay Offline">        14
     ?<Constant "Motor Contrling">      16
     ?<Constant "Motor Online">         13
     ?<Constant "Motor Offline">        14
     ?<Constant "Motor max Speed">      16
     ?<Constant "Motor min Speed">      16
     ?<Constant "Allow networking">     17
     ?<Constant "Ban   networking">     17
     ?<Constant "K1:ON">                 6
     ?<Constant "K1:OFF">                7
     ?<Constant "K2:ON">                 6
     ?<Constant "K2:OFF">                7

 
 1 797 bytes in segment BANKED_CODE
    36 bytes in segment BANK_RELAYS
   262 bytes in segment XDATA_ROM_C
   208 bytes in segment XDATA_Z
 
 1 833 bytes of CODE  memory
   262 bytes of CONST memory
   208 bytes of XDATA memory

Errors: none
Warnings: 1
