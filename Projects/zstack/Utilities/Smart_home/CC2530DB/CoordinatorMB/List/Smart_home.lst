###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         24/Mar/2021  16:13:22 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_home.c                   #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wConfig.cfg (-DZIGBEEPRO -DSECURE=0               #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          ome.c -D LCD_SUPPORTED -D ZDO_COORDINATOR -D       #
#                          xNV_RESTORE -D xNV_INIT -D xREFLECTOR -D           #
#                          xHAL_UART=TRUE -D xHAL_UART_TEST -lC               #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\ -lA      #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\          #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\ -e        #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530MB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\Smart_hom #
#                          e.lst                                              #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\Smart_home #
#                          .r51                                               #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c
      1          /**************************************************************************************************
      2            文件名：Smart_home.c
      3            作 者： 柳成林
      4            功 能： 作为网关节点，实现传感器信息的采集，并可以通过其控制一些节点
      5                    终端设备主要分为8个，分别为
      6               1、温度与光照度传感器；2、烟雾与火焰传感器；3、继电器；4、温湿度传感器；
      7               5、声音与震动传感器；  6、人体红外检测传感器；7、电机；8、RFID检测器。
      8            更新日志(2021)
      9            3.13
     10            + 新增 8种传感器的Project并设置好编译情况
     11            + 修改 Smart_home_ProcessEvent() （增加各种处理器的事件）
     12                   Smart_home_Init()         （初始化内容修改，添加设备默认离线）
     13            3.14
     14            + 修改 Smart_home_ProcessMSGCmd()（添加终端节点类型判断，具体处理留空）
     15            + 新增 Hal层各种传感器驱动(头文件)
     16                   ClusterList (添加8个终端，分开出与入)
     17            3.17
     18            + 修改 Smart_home_ProcessMSGCmd() （完成接收后对于各终端处理）
     19            + 添加 Smart_home_HandleKeys()     (修改原来函数增添概念，未补全)
     20            + 删除 static void Smart_home_Send(void);
     21                   static void Smart_home_Resp(void);
     22                   两个函数
     23            3.19
     24            + 检查 出现的warning并做标识
     25            + 修改 Smart_home_HandleKeys() （补全设计函数）
     26            + 新增 Smart_home_Device_check() (设备是否在线检查)
     27          
     28            3.21
     29            + 新增 DeviceList以方便初始化和设备在线检查（本地变量部分）
     30                   Smart_home_Display()    （屏幕显示，未补全）
     31                   Smart_home_Key_add()     (控制按键，附加项)
     32            + 修改 Smart_home_Device_check()
     33                   Smart_home_Init()
     34                   Smart_home_ProcessMSGCmd()
     35                   调整有关DeviceList（设备列表）部分的修改
     36                   直接使用数组位置号作为设备编号
     37                   按键控制方式，用按键情况控制
     38            3.22
     39            + 修改 Smart_home_Display()    （屏幕显示，补全）
     40                   Smart_home_Key_add()     (屏幕显示中的电机与继电器部分加入这里)
     41                   重写别名方式减少内存损耗
     42                   出现无法初始化的问题，需要项目重构
     43            3.23
     44            + Warn 代码初始化后会产生直接进入key的情况,需debug
     45                   OK键问题无法修复，放弃使用OK键，修改为Cencel组网 禁止组网
     46            3.23 正式完成网关节点部分，（显示函数部分除外）
     47            3.24 
     48            + 修改 Smart_home_Key_add()与display函数整合
     49             
     50            经调试程序无bug，可以接收各个传感器消息。//3.22
     51            当我没说。。好像出了内存问题//3.22
     52            项目重构啦！，现在又只有一个小问题了/3.23
     53          *********************************************************************/
     54          
     55          /*********************************************************************
     56           * INCLUDES
     57           */
     58          
     59          #include "OSAL.h"
     60          #include "AF.h"
     61          #include "ZDObject.h"
     62          #include "ZDProfile.h"
     63          #include "nwk_util.h"
     64          
     65          #include "Smart_home.h"
     66          #include "OnBoard.h"
     67          
     68          #include "DebugTrace.h"
     69          #include "string.h"
     70          
     71          /* HAL */
     72          #include "hal_lcd.h"
     73          #include "hal_led.h"
     74          #include "hal_key.h"
     75          #include "hal_uart.h"
     76          
     77          /*********************************************************************
     78           * MACROS
     79           */
     80          /*设备链接相关设置*/
     81          /*判断设备是否在线的最大次数*/
     82          #define DEVICE_HEART_BEAT    5
     83          #define DEVICE_CHECK_DELAY   5000
     84          
     85          /*LCD相关设置*/
     86          /*单屏显示时常   MS*/
     87          #define LCD_DISPLAY_LENGTH   10000
     88          #define LCD_DISPLAY_TIMER    1000  //多久更新一次 
     89          
     90          /*********************************************************************
     91           * CONSTANTS
     92           */
     93          
     94          #if !defined( SMART_HOME_PORT )
     95          #define SMART_HOME_PORT  0
     96          #endif
     97          
     98          #if !defined( SMART_HOME_BAUD )
     99          #define SMART_HOME_BAUD  HAL_UART_BR_38400
    100          //#define SMART_HOME_BAUD  HAL_UART_BR_115200
    101          #endif
    102          
    103          // When the Rx buf space is less than this threshold, invoke the Rx callback.
    104          #if !defined( SMART_HOME_THRESH )
    105          #define SMART_HOME_THRESH  64
    106          #endif
    107          
    108          #if !defined( SMART_HOME_RX_SZ )
    109          #define SMART_HOME_RX_SZ  128
    110          #endif
    111          
    112          #if !defined( SMART_HOME_TX_SZ )
    113          #define SMART_HOME_TX_SZ  128
    114          #endif
    115          
    116          // Millisecs of idle time after a byte is received before invoking Rx callback.
    117          #if !defined( SMART_HOME_IDLE )
    118          #define SMART_HOME_IDLE  6
    119          #endif
    120          
    121          // Loopback Rx bytes to Tx for throughput testing.
    122          #if !defined( SMART_HOME_LOOPBACK )
    123          #define SMART_HOME_LOOPBACK  FALSE
    124          #endif
    125          
    126          // This is the max byte count per OTA message.
    127          #if !defined( SMART_HOME_TX_MAX )
    128          #define SMART_HOME_TX_MAX  80
    129          #endif
    130          
    131          #define SMART_HOME_RSP_CNT  4
    132          
    133          //3.14 This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    134          const cId_t Smart_home_ClusterList_IN[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
   \   000008   0500         DW 5
   \   00000A   0600         DW 6
   \   00000C   0700         DW 7
   \   00000E   0800         DW 8
   \   000010   0000         DW 0
    135          {
    136            Smart_home_CLUSTERID_HUMITMSG,              // 温湿度
    137            Smart_home_CLUSTERID_TEMPLIGHTMSG,          // 温度光照
    138            Smart_home_CLUSTERID_RFIDMSG,               // 射频卡
    139            Smart_home_CLUSTERID_GASFLAMEMSG,           // 烟雾火焰
    140            Smart_home_CLUSTERID_INFRAREDMSG,           // 人体红外
    141            Smart_home_CLUSTERID_SOUNDVBMSG,            // 声音振动
    142            Smart_home_CLUSTERID_MOTORSTATUSMSG,        // 直流电机状态信息
    143            Smart_home_CLUSTERID_RELAYSTATUSMSG         // 继电器
    144          };
    145          

   \                                 In  segment XDATA_ROM_C, align 1
    146          const cId_t Smart_home_ClusterList_OUT[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0B00         DW 11
   \   000002   0A00         DW 10
   \   000004   0000         DW 0
   \   000006   0000         DW 0
   \   000008   0000         DW 0
   \   00000A   0000         DW 0
   \   00000C   0000         DW 0
   \   00000E   0000         DW 0
   \   000010   0000         DW 0
    147          {
    148            Smart_home_CLUSTERID_MOTORCTRL,             //直流电机控制
    149            Smart_home_CLUSTERID_RELAYCTRL              //继电器控制
    150          };
    151          

   \                                 In  segment XDATA_ROM_C, align 1
    152          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    153          {
    154            Smart_home_ENDPOINT,              //  int   Endpoint;
    155            Smart_home_PROFID,                //  uint16 AppProfId[2];
    156            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    157            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    158            Smart_home_FLAGS,                 //  int   AppFlags:4;
    159            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    160            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    161            Smart_home_MAX_OUTCLUSTERS,          //  byte  AppNumOutClusters;
    162            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    163          };
    164          

   \                                 In  segment XDATA_ROM_C, align 1
    165          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    166          {
    167            Smart_home_ENDPOINT,
    168            &Smart_home_TaskID,
    169            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    170            noLatencyReqs
    171          };
    172          
    173          /*********************************************************************
    174           * TYPEDEFS
    175           */
    176          
    177          /*********************************************************************
    178           * GLOBAL VARIABLES
    179           */
    180          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    181          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    182          
    183          /*********************************************************************
    184           * EXTERNAL VARIABLES
    185           */
    186          
    187          /*********************************************************************
    188           * EXTERNAL FUNCTIONS
    189           */
    190          
    191          /*********************************************************************
    192           * LOCAL VARIABLES
    193           */
    194          
    195          /*3.18 终端节点的设备详细信息缓存*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    196          static uint8 DeviceCnt[Smart_home_MAX_INCLUSTERS];
   \                     DeviceCnt:
   \   000000                DS 9
   \   000009                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    197          static int8 Ctrlcase = 0;    //0用来控制屏幕显示，1控制继电器，2控制电机
   \                     Ctrlcase:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    198          static int8 LCD_Page  =  0;  //终端状态显示
   \                     LCD_Page:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    199          DeviceInfo DeviceList[Smart_home_MAX_INCLUSTERS];                      //设备列表  
   \                     DeviceList:
   \   000000                DS 63
   \   00003F                REQUIRE __INIT_XDATA_Z
    200          /*********************************************************************************
    201          //这些似乎会引起内存问题  3.22
    202          DeviceInfo *Humit = DeviceList+Smart_home_CLUSTERID_HUMITMSG;          //温湿度缓存
    203          DeviceInfo *TempLight = DeviceList+Smart_home_CLUSTERID_TEMPLIGHTMSG;  // 温度光照缓存
    204          DeviceInfo *RfID = DeviceList+Smart_home_CLUSTERID_RFIDMSG;            // RFID 信息缓存
    205          DeviceInfo *gasFlame = DeviceList+Smart_home_CLUSTERID_GASFLAMEMSG;    //气体火焰缓存
    206          DeviceInfo *infrared = DeviceList+Smart_home_CLUSTERID_INFRAREDMSG;    //人体红外
    207          DeviceInfo *motor = DeviceList+Smart_home_CLUSTERID_MOTORSTATUSMSG;     //电机状态
    208          DeviceInfo *relay = DeviceList+Smart_home_CLUSTERID_RELAYSTATUSMSG;    //继电器状态
    209          DeviceInfo *soundVb = DeviceList+Smart_home_CLUSTERID_SOUNDVBMSG;      //声音震动
    210          修改如下
    211          ***********************************************************************************/
    212          #define Humit     1     //温湿度缓存
    213          #define TempLight 2     // 温度光照缓存
    214          #define RfID      3     // RFID 信息缓存
    215          #define gasFlame  4     //气体火焰缓存
    216          #define infrared  5     //人体红外
    217          #define motor     6     //电机状态
    218          #define relay     7     //继电器状态
    219          #define soundVb   8     //声音震动
    220          
    221          /*3.14 消息发送部分*/
    222          /*3.17短地址存储*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    223          static afAddrType_t Relay_addr;
   \                     Relay_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    224          static afAddrType_t Motor_addr;
   \                     Motor_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    225          
    226          /*消息发送数组*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    227          byte Coordinator_Msg[MSG_MAX_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
    228          
    229          
    230          /*3.19 协议栈中有但暂时不知道要他们干嘛的东西*/
    231          /*3.21 现在我会了！！！*/
    232          /*3.22 那些没用！删掉了！*/
    233          //static uint8 Smart_home_MsgID;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    234          static uint8 RelayTransID;  // This is the unique message ID (counter)
   \                     RelayTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    235          static uint8 MotorTransID;  // This is the unique message ID (counter)
   \                     MotorTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    236          
    237          /*********************************************************************
    238           * LOCAL FUNCTIONS
    239           */
    240          
    241          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    242          //static void Smart_home_Key_add(uint8 Ctrlcase);
    243          static void Smart_home_HandleKeys( byte shift, byte keys );
    244          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    245          static void Smart_home_Device_check(void);
    246          static void Smart_home_Relay_Ctl(uint8 cmd);
    247          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed);
    248          static void Smart_home_Display(void);
    249          
    250          /*********************************************************************
    251           * @fn      Smart_home_Init
    252           *
    253           * @brief   This is called during OSAL tasks' initialization.
    254           *
    255           * @param   task_id - the Task ID assigned by OSAL.
    256           *
    257           * @return  none
    258           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    259          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    260          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    261            halUARTCfg_t uartConfig;
    262            uint8 DeviceNum;                                    //DeviceList初始化用变量
    263          
    264            Smart_home_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#Smart_home_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    265            MotorTransID = 0;
   \   000010   90....       MOV     DPTR,#MotorTransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    266            RelayTransID = 0;
   \   000015   90....       MOV     DPTR,#RelayTransID
   \   000018   F0           MOVX    @DPTR,A
    267          
    268            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   000019                ; Setup parameters for call to function afRegister
   \   000019   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   00001B   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   00001D   12....       LCALL   ??afRegister?relay
    269          
    270            RegisterForKeys( task_id );
   \   000020                ; Setup parameters for call to function RegisterForKeys
   \   000020   EE           MOV     A,R6
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??RegisterForKeys?relay
    271          
    272            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000025   85..82       MOV     DPL,?XSP + 0
   \   000028   85..83       MOV     DPH,?XSP + 1
   \   00002B   7401         MOV     A,#0x1
   \   00002D   F0           MOVX    @DPTR,A
    273            uartConfig.baudRate             = SMART_HOME_BAUD;
   \   00002E   12....       LCALL   ?XSTACK_DISP0_8
   \   000031   7402         MOV     A,#0x2
   \   000033   F0           MOVX    @DPTR,A
    274            uartConfig.flowControl          = TRUE;
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   7401         MOV     A,#0x1
   \   000039   F0           MOVX    @DPTR,A
    275            uartConfig.flowControlThreshold = SMART_HOME_THRESH; // 2x30 don't care - see uart driver.
   \   00003A   7403         MOV     A,#0x3
   \   00003C   12....       LCALL   ?XSTACK_DISP0_8
   \   00003F   7440         MOV     A,#0x40
   \   000041   F0           MOVX    @DPTR,A
   \   000042   A3           INC     DPTR
   \   000043   E4           CLR     A
   \   000044   F0           MOVX    @DPTR,A
    276            uartConfig.rx.maxBufSize        = SMART_HOME_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000045   740A         MOV     A,#0xa
   \   000047   12....       LCALL   ?XSTACK_DISP0_8
   \   00004A   7480         MOV     A,#-0x80
   \   00004C   F0           MOVX    @DPTR,A
   \   00004D   A3           INC     DPTR
   \   00004E   E4           CLR     A
   \   00004F   F0           MOVX    @DPTR,A
    277            uartConfig.tx.maxBufSize        = SMART_HOME_TX_SZ;  // 2x30 don't care - see uart driver.
   \   000050   7412         MOV     A,#0x12
   \   000052   12....       LCALL   ?XSTACK_DISP0_8
   \   000055   7480         MOV     A,#-0x80
   \   000057   F0           MOVX    @DPTR,A
   \   000058   A3           INC     DPTR
   \   000059   E4           CLR     A
   \   00005A   F0           MOVX    @DPTR,A
    278            uartConfig.idleTimeout          = SMART_HOME_IDLE;   // 2x30 don't care - see uart driver.
   \   00005B   7405         MOV     A,#0x5
   \   00005D   12....       LCALL   ?XSTACK_DISP0_8
   \   000060   7406         MOV     A,#0x6
   \   000062   F0           MOVX    @DPTR,A
    279            uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
   \   000063   7416         MOV     A,#0x16
   \   000065   12....       LCALL   ?XSTACK_DISP0_8
   \   000068   7401         MOV     A,#0x1
   \   00006A   F0           MOVX    @DPTR,A
    280            //uartConfig.callBackFunc         = Smart_home_CallBack;
    281            HalUARTOpen (SMART_HOME_PORT, &uartConfig);
   \   00006B                ; Setup parameters for call to function HalUARTOpen
   \   00006B   85..82       MOV     DPL,?XSP + 0
   \   00006E   85..83       MOV     DPH,?XSP + 1
   \   000071   AA82         MOV     R2,DPL
   \   000073   AB83         MOV     R3,DPH
   \   000075   7900         MOV     R1,#0x0
   \   000077   12....       LCALL   ??HalUARTOpen?relay
    282          
    283          #if defined ( LCD_SUPPORTED )
    284            HalLcdWriteString( "Smart_home", HAL_LCD_LINE_2 );
   \   00007A                ; Setup parameters for call to function HalLcdWriteString
   \   00007A   7902         MOV     R1,#0x2
   \   00007C   7A..         MOV     R2,#`?<Constant "Smart_home">` & 0xff
   \   00007E   7B..         MOV     R3,#(`?<Constant "Smart_home">` >> 8) & 0xff
   \   000080   12....       LCALL   ??HalLcdWriteString?relay
    285          #endif
    286            
    287            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \   000083                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000083   7A20         MOV     R2,#0x20
   \   000085   7B80         MOV     R3,#-0x80
   \   000087   90....       MOV     DPTR,#Smart_home_TaskID
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   F9           MOV     R1,A
   \   00008C   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    288            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   00008F                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00008F   7A06         MOV     R2,#0x6
   \   000091   7B80         MOV     R3,#-0x80
   \   000093   90....       MOV     DPTR,#Smart_home_TaskID
   \   000096   E0           MOVX    A,@DPTR
   \   000097   F9           MOV     R1,A
   \   000098   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    289            
    290            //3.22 显示延时
    291            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DISPLAY_EVT, 
    292                                SMART_HOME_DEVICE_DISPLAY_DELAY);
   \   00009B                ; Setup parameters for call to function osal_start_timerEx
   \   00009B   7C10         MOV     R4,#0x10
   \   00009D   7D27         MOV     R5,#0x27
   \   00009F   7A10         MOV     R2,#0x10
   \   0000A1   12....       LCALL   ??Subroutine27_0 & 0xFFFF
    293            
    294            
    295            //3.14 打开设备在线检测，第一次开启检测延时较长时间
    296            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DEVICE_CHECK_EVT, 
    297                                SMART_HOME_DEVICE_CHECK_DELAY);
   \                     ??CrossCallReturnLabel_58:
   \   0000A4                ; Setup parameters for call to function osal_start_timerEx
   \   0000A4   12....       LCALL   ?Subroutine13 & 0xFFFF
    298           
    299            //3.13 关闭LED灯(D4)，表示协调器默认不允许组网
    300            NLME_PermitJoiningRequest(0x00);
   \                     ??CrossCallReturnLabel_56:
   \   0000A7                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   0000A7   7900         MOV     R1,#0x0
   \   0000A9   12....       LCALL   ?Subroutine17 & 0xFFFF
    301            HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);
    302            
    303            //3.21 初始化页面为0 第一页
    304            //LCD_Page=0;
    305            
    306            //3.13 设备离线状态检测初始化，初始化为离线
    307            //3.21 修改为DeviceList方式，初始化DeviceCnt
    308            for(DeviceNum=1;DeviceNum<Smart_home_MAX_INCLUSTERS;DeviceNum++) //只初始化终端
   \                     ??CrossCallReturnLabel_35:
   \   0000AC   7D01         MOV     R5,#0x1
    309            {
    310              DeviceList[DeviceNum].deviceid = DeviceNum;
   \                     ??Smart_home_Init_0:
   \   0000AE   8D82         MOV     DPL,R5
   \   0000B0   A882         MOV     R0,DPL
   \   0000B2   E8           MOV     A,R0
   \   0000B3   75F007       MOV     B,#0x7
   \   0000B6   A4           MUL     AB
   \   0000B7   FA           MOV     R2,A
   \   0000B8   ABF0         MOV     R3,B
   \   0000BA   74..         MOV     A,#DeviceList & 0xff
   \   0000BC   2A           ADD     A,R2
   \   0000BD   F582         MOV     DPL,A
   \   0000BF   74..         MOV     A,#(DeviceList >> 8) & 0xff
   \   0000C1   3B           ADDC    A,R3
   \   0000C2   F583         MOV     DPH,A
   \   0000C4   ED           MOV     A,R5
   \   0000C5   F0           MOVX    @DPTR,A
    311              DeviceList[DeviceNum].deviceStatus = DEVICE_OFFLINE;
   \   0000C6   A3           INC     DPTR
   \   0000C7   7402         MOV     A,#0x2
   \   0000C9   F0           MOVX    @DPTR,A
    312              DeviceCnt[DeviceNum]=0;
   \   0000CA   12....       LCALL   ?Subroutine23 & 0xFFFF
    313            }
   \                     ??CrossCallReturnLabel_47:
   \   0000CD   E4           CLR     A
   \   0000CE   F0           MOVX    @DPTR,A
   \   0000CF   0D           INC     R5
   \   0000D0   ED           MOV     A,R5
   \   0000D1   C3           CLR     C
   \   0000D2   9409         SUBB    A,#0x9
   \   0000D4   40D8         JC      ??Smart_home_Init_0
    314          }
   \   0000D6   741D         MOV     A,#0x1d
   \   0000D8   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000DB                REQUIRE ?Subroutine0
   \   0000DB                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   7C88         MOV     R4,#-0x78
   \   000002   7D13         MOV     R5,#0x13
   \   000004   7A80         MOV     R2,#-0x80
   \   000006                REQUIRE ??Subroutine27_0
   \   000006                ; // Fall through to label ??Subroutine27_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine27_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   74..         MOV     A,#DeviceCnt & 0xff
   \   000002   28           ADD     A,R0
   \   000003   F582         MOV     DPL,A
   \   000005   74..         MOV     A,#(DeviceCnt >> 8) & 0xff
   \   000007   3400         ADDC    A,#0x0
   \   000009   F583         MOV     DPH,A
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   12....       LCALL   ??NLME_PermitJoiningRequest?relay
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003   7A00         MOV     R2,#0x0
   \   000005   7901         MOV     R1,#0x1
   \   000007   12....       LCALL   ??HalLedSet?relay
   \   00000A   22           RET
    315          
    316          /*********************************************************************
    317           * @fn      Smart_home_ProcessEvent
    318           *
    319           * @brief   Generic Application Task event processor.
    320           *
    321           * @param   task_id  - The OSAL assigned task ID.
    322           * @param   events   - Bit map of events to process.
    323           *
    324           * @return  Event flags of all unprocessed events.
    325           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    326          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    327          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    328            (void)task_id;  // Intentionally unreferenced parameter
    329            afDataConfirm_t *afDataConfirm;
    330            
    331            //3.13 数据确认消息字段
    332            ZStatus_t sentStatus;
    333            byte sentEP;
    334            
    335            if ( events & SYS_EVENT_MSG )   //3.13 系统消息事件
   \   000009   5480         ANL     A,#0x80
   \   00000B   7020         JNZ     ??Smart_home_ProcessEvent_0
    336            {
    337              afIncomingMSGPacket_t *MSGpkt;
    338          
    339              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    340              {
    341                switch ( MSGpkt->hdr.event )
    342                {
    343                  case ZDO_CB_MSG:           //3.13 ZDO传入消息回调
    344                    Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    345                    break;
    346                    
    347                  case KEY_CHANGE:           //3.13 按键事件
    348                    Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    349                    break;
    350                   
    351                  case AF_DATA_CONFIRM_CMD:
    352                  //3.13 接收到此消息，作为对发送的数据包的确认。
    353                  //状态为ZStatus_t类型[在ZComDef.h中定义]
    354                  //消息字段在AF.h中定义
    355                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    356                    sentEP = afDataConfirm->endpoint;
    357                    sentStatus = afDataConfirm->hdr.status;
    358           
    359                    if ( (ZSuccess == sentStatus) &&
    360                         (Smart_home_epDesc.endPoint == sentEP) )
    361                    {  
    362                      //3.13 在消息发送确认成功后绿灯闪烁一下
    363                      HalLedSet(HAL_LED_1, HAL_LED_MODE_BLINK);
    364                    }
    365                    else
    366                    {
    367                      //3.13 红灯闪烁一下  硬件还没实现
    368                      //HalLedSet(HAL_LED_2, HAL_LED_MODE_BLINK);
    369                    }
    370                    break;
    371                    
    372                  case AF_INCOMING_MSG_CMD:   //3.13 消息传入处理
    373                    //3.13 在消息接收确认成功后绿灯闪烁一下
    374                    Smart_home_ProcessMSGCmd( MSGpkt );
    375                    break;
    376                  default:
    377                    break;
    378                }
    379          
    380                osal_msg_deallocate( (uint8 *)MSGpkt );
    381                
    382                // Next
    383                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID );
    384              }
    385              
    386              // Squash compiler warnings until values are used.
    387              (void)sentStatus;
    388              (void)sentEP;
    389              
    390              return ( events ^ SYS_EVENT_MSG );
    391            }
    392          
    393            if ( events & SMART_HOME_SEND_MSG_EVT )
   \   00000D   EE           MOV     A,R6
   \   00000E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000010   4003         JC      $+5
   \   000012   02....       LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
    394            {
    395              //Smart_home_Send();
    396              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   000015   6401         XRL     A,#0x1
   \   000017   FA           MOV     R2,A
   \   000018   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    397            }
   \                     ??Smart_home_ProcessEvent_3:
   \   00001B                ; Setup parameters for call to function Smart_home_ProcessMSGCmd
   \   00001B   12....       LCALL   ??Smart_home_ProcessMSGCmd?relay
   \                     ??Smart_home_ProcessEvent_4:
   \   00001E                ; Setup parameters for call to function osal_msg_deallocate
   \   00001E   AA..         MOV     R2,?V0 + 0
   \   000020   AB..         MOV     R3,?V0 + 1
   \   000022   12....       LCALL   ??osal_msg_deallocate?relay
   \   000025                ; Setup parameters for call to function osal_msg_receive
   \   000025   90....       MOV     DPTR,#Smart_home_TaskID
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F9           MOV     R1,A
   \   00002A   12....       LCALL   ??osal_msg_receive?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   00002D                ; Setup parameters for call to function osal_msg_receive
   \   00002D   90....       MOV     DPTR,#Smart_home_TaskID
   \   000030   E0           MOVX    A,@DPTR
   \   000031   F9           MOV     R1,A
   \   000032   12....       LCALL   ??osal_msg_receive?relay
   \   000035   8A..         MOV     ?V0 + 0,R2
   \   000037   8B..         MOV     ?V0 + 1,R3
   \   000039   EA           MOV     A,R2
   \   00003A   45..         ORL     A,?V0 + 1
   \   00003C   7003         JNZ     $+5
   \   00003E   02....       LJMP    ??Smart_home_ProcessEvent_5 & 0xFFFF
   \   000041   8A82         MOV     DPL,R2
   \   000043   8B83         MOV     DPH,R3
   \   000045   E0           MOVX    A,@DPTR
   \   000046   24E6         ADD     A,#-0x1a
   \   000048   60D1         JZ      ??Smart_home_ProcessEvent_3
   \   00004A   245A         ADD     A,#0x5a
   \   00004C   606F         JZ      ??Smart_home_ProcessEvent_6
   \   00004E   24ED         ADD     A,#-0x13
   \   000050   6006         JZ      ??Smart_home_ProcessEvent_7
   \   000052   24D6         ADD     A,#-0x2a
   \   000054   607B         JZ      ??Smart_home_ProcessEvent_8
   \   000056   80C6         SJMP    ??Smart_home_ProcessEvent_4
   \                     ??Smart_home_ProcessEvent_7:
   \   000058   EA           MOV     A,R2
   \   000059   240C         ADD     A,#0xc
   \   00005B   F582         MOV     DPL,A
   \   00005D   EB           MOV     A,R3
   \   00005E   3400         ADDC    A,#0x0
   \   000060   F583         MOV     DPH,A
   \   000062   E0           MOVX    A,@DPTR
   \   000063   F5..         MOV     ?V0 + 2,A
   \   000065   A3           INC     DPTR
   \   000066   E0           MOVX    A,@DPTR
   \   000067   F5..         MOV     ?V0 + 3,A
   \   000069   78..         MOV     R0,#?V0 + 2
   \   00006B   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Smart_home_ProcessEvent>_0`:
   \   00006E   0000         DW        0
   \   000070   0200         DW        2
   \   000072   0680         DW        32774
   \   000074   ....         DW        ??Smart_home_ProcessEvent_9
   \   000076   2080         DW        32800
   \   000078   ....         DW        ??Smart_home_ProcessEvent_10
   \   00007A   ....         DW        ??Smart_home_ProcessEvent_4
   \                     ??Smart_home_ProcessEvent_9:
   \   00007C                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   00007C   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   00007F   8A..         MOV     ?V0 + 2,R2
   \   000081   8B..         MOV     ?V0 + 3,R3
   \   000083   EA           MOV     A,R2
   \   000084   45..         ORL     A,?V0 + 3
   \   000086   6096         JZ      ??Smart_home_ProcessEvent_4
   \   000088   8A82         MOV     DPL,R2
   \   00008A   8B83         MOV     DPH,R3
   \   00008C   E0           MOVX    A,@DPTR
   \   00008D   700D         JNZ     ??Smart_home_ProcessEvent_11
   \   00008F   A3           INC     DPTR
   \   000090   A3           INC     DPTR
   \   000091   A3           INC     DPTR
   \   000092   E0           MOVX    A,@DPTR
   \   000093   6007         JZ      ??Smart_home_ProcessEvent_11
   \   000095                ; Setup parameters for call to function HalLedSet
   \   000095   7A01         MOV     R2,#0x1
   \   000097   7908         MOV     R1,#0x8
   \   000099   12....       LCALL   ??HalLedSet?relay
   \                     ??Smart_home_ProcessEvent_11:
   \   00009C                ; Setup parameters for call to function osal_mem_free
   \   00009C   AA..         MOV     R2,?V0 + 2
   \   00009E   AB..         MOV     R3,?V0 + 3
   \   0000A0   12....       LCALL   ??osal_mem_free?relay
   \   0000A3   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_10:
   \   0000A6   EA           MOV     A,R2
   \   0000A7   2413         ADD     A,#0x13
   \   0000A9   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_45:
   \   0000AC   E0           MOVX    A,@DPTR
   \   0000AD   700A         JNZ     ??Smart_home_ProcessEvent_12
   \   0000AF                ; Setup parameters for call to function HalLedSet
   \   0000AF   7A01         MOV     R2,#0x1
   \                     ??Smart_home_ProcessEvent_13:
   \   0000B1   7908         MOV     R1,#0x8
   \                     ??Smart_home_ProcessEvent_14:
   \   0000B3   12....       LCALL   ??HalLedSet?relay
   \   0000B6   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_12:
   \   0000B9                ; Setup parameters for call to function HalLedSet
   \   0000B9   7A04         MOV     R2,#0x4
   \   0000BB   80F4         SJMP    ??Smart_home_ProcessEvent_13
   \                     ??Smart_home_ProcessEvent_6:
   \   0000BD                ; Setup parameters for call to function Smart_home_HandleKeys
   \   0000BD   A3           INC     DPTR
   \   0000BE   A3           INC     DPTR
   \   0000BF   A3           INC     DPTR
   \   0000C0   E0           MOVX    A,@DPTR
   \   0000C1   FA           MOV     R2,A
   \   0000C2   85..82       MOV     DPL,?V0 + 0
   \   0000C5   8B83         MOV     DPH,R3
   \   0000C7   A3           INC     DPTR
   \   0000C8   A3           INC     DPTR
   \   0000C9   E0           MOVX    A,@DPTR
   \   0000CA   F9           MOV     R1,A
   \   0000CB   12....       LCALL   ??Smart_home_HandleKeys?relay
   \   0000CE   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_8:
   \   0000D1   A3           INC     DPTR
   \   0000D2   E0           MOVX    A,@DPTR
   \   0000D3   6003         JZ      $+5
   \   0000D5   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \   0000D8   8A82         MOV     DPL,R2
   \   0000DA   8B83         MOV     DPH,R3
   \   0000DC   A3           INC     DPTR
   \   0000DD   A3           INC     DPTR
   \   0000DE   E0           MOVX    A,@DPTR
   \   0000DF   6401         XRL     A,#0x1
   \   0000E1   6003         JZ      $+5
   \   0000E3   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \   0000E6                ; Setup parameters for call to function HalLedSet
   \   0000E6   7A02         MOV     R2,#0x2
   \   0000E8   7901         MOV     R1,#0x1
   \   0000EA   80C7         SJMP    ??Smart_home_ProcessEvent_14
   \                     ??Smart_home_ProcessEvent_5:
   \   0000EC   EE           MOV     A,R6
   \   0000ED   FA           MOV     R2,A
   \   0000EE   EF           MOV     A,R7
   \   0000EF   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_15:
   \   0000F1   FB           MOV     R3,A
   \   0000F2   8073         SJMP    ??Smart_home_ProcessEvent_2
    398            
    399            if ( events & SMART_HOME_DEVICE_CHECK_EVT )  //终端设备检查事件
   \                     ??Smart_home_ProcessEvent_1:
   \   0000F4   5480         ANL     A,#0x80
   \   0000F6   6053         JZ      ??Smart_home_ProcessEvent_16
    400            {
    401              Smart_home_Device_check();  //调用终端设备检查函数
   \   0000F8   90....       MOV     DPTR,#??DeviceID
   \   0000FB   7401         MOV     A,#0x1
   \   0000FD   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_17:
   \   0000FE   E0           MOVX    A,@DPTR
   \   0000FF   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_54:
   \   000102   E0           MOVX    A,@DPTR
   \   000103   6401         XRL     A,#0x1
   \   000105   90....       MOV     DPTR,#??DeviceID
   \   000108   6030         JZ      ??Smart_home_ProcessEvent_18
   \   00010A   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_20:
   \   00010D   E0           MOVX    A,@DPTR
   \   00010E   04           INC     A
   \   00010F   F0           MOVX    @DPTR,A
   \   000110   C3           CLR     C
   \   000111   9406         SUBB    A,#0x6
   \   000113   4010         JC      ??Smart_home_ProcessEvent_19
   \   000115   90....       MOV     DPTR,#??DeviceID
   \   000118   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_21:
   \   00011B   7405         MOV     A,#0x5
   \   00011D   F0           MOVX    @DPTR,A
   \   00011E   E8           MOV     A,R0
   \   00011F   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_55:
   \   000122   7402         MOV     A,#0x2
   \                     ??Smart_home_ProcessEvent_20:
   \   000124   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_19:
   \   000125   90....       MOV     DPTR,#??DeviceID
   \   000128   E0           MOVX    A,@DPTR
   \   000129   04           INC     A
   \   00012A   F0           MOVX    @DPTR,A
   \   00012B   C3           CLR     C
   \   00012C   9409         SUBB    A,#0x9
   \   00012E   40CE         JC      ??Smart_home_ProcessEvent_17
    402              
    403              osal_start_timerEx(Smart_home_TaskID,SMART_HOME_DEVICE_CHECK_EVT,
    404                                 DEVICE_CHECK_DELAY);
   \   000130                ; Setup parameters for call to function osal_start_timerEx
   \   000130   12....       LCALL   ?Subroutine13 & 0xFFFF
    405              return (events ^ SMART_HOME_DEVICE_CHECK_EVT);
   \                     ??CrossCallReturnLabel_57:
   \   000133   EE           MOV     A,R6
   \   000134   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_21:
   \   000136   FA           MOV     R2,A
   \   000137   EF           MOV     A,R7
   \   000138   80B7         SJMP    ??Smart_home_ProcessEvent_15
   \                     ??Smart_home_ProcessEvent_18:
   \   00013A   12....       LCALL   ?Subroutine10 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   00013D   E4           CLR     A
   \   00013E   F0           MOVX    @DPTR,A
   \   00013F   E8           MOV     A,R0
   \   000140   75F007       MOV     B,#0x7
   \   000143   A4           MUL     AB
   \   000144   F8           MOV     R0,A
   \   000145   12....       LCALL   ??Subroutine26_0 & 0xFFFF
    406            }
   \                     ??CrossCallReturnLabel_53:
   \   000148   E4           CLR     A
   \   000149   80D9         SJMP    ??Smart_home_ProcessEvent_20
    407            
    408            
    409            if( events & SMART_HOME_DISPLAY_EVT )
   \                     ??Smart_home_ProcessEvent_16:
   \   00014B   EE           MOV     A,R6
   \   00014C   5410         ANL     A,#0x10
   \   00014E   6013         JZ      ??Smart_home_ProcessEvent_22
    410            {
    411              Smart_home_Display();
   \   000150                ; Setup parameters for call to function Smart_home_Display
   \   000150   12....       LCALL   ??Smart_home_Display?relay
    412              //周期性刷新
    413              osal_start_timerEx( Smart_home_TaskID,events & SMART_HOME_DISPLAY_EVT,LCD_DISPLAY_TIMER);
   \   000153                ; Setup parameters for call to function osal_start_timerEx
   \   000153   7CE8         MOV     R4,#-0x18
   \   000155   7D03         MOV     R5,#0x3
   \   000157   EE           MOV     A,R6
   \   000158   5410         ANL     A,#0x10
   \   00015A   FA           MOV     R2,A
   \   00015B   12....       LCALL   ??Subroutine27_0 & 0xFFFF
    414              return (events ^ SMART_HOME_DISPLAY_EVT);
   \                     ??CrossCallReturnLabel_59:
   \   00015E   EE           MOV     A,R6
   \   00015F   6410         XRL     A,#0x10
   \   000161   80D3         SJMP    ??Smart_home_ProcessEvent_21
    415            }
    416          
    417            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_22:
   \   000163   7A00         MOV     R2,#0x0
   \   000165   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_2:
   \   000167   7F06         MOV     R7,#0x6
   \   000169   02....       LJMP    ?BANKED_LEAVE_XDATA
    418          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   F582         MOV     DPL,A
   \   000002   EB           MOV     A,R3
   \   000003   3400         ADDC    A,#0x0
   \   000005   F583         MOV     DPH,A
   \   000007   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_52:
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F583         MOV     DPH,A
   \   000006   8882         MOV     DPL,R0
   \   000008   22           RET
    419          
    420          /*********************************************************************
    421           * @fn      Smart_home_ProcessZDOMsgs()
    422           *
    423           * @brief   Process response messages
    424           *
    425           * @param   none
    426           *
    427           * @return  none
    428           */
    429          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
    430          {
    431            switch ( inMsg->clusterID )
    432            {
    433              case End_Device_Bind_rsp:
    434                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    435                {
    436                  // Light LED
    437                  HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    438                }
    439          #if defined(BLINK_LEDS)
    440                else
    441                {
    442                  // Flash LED to show failure
    443                  HalLedSet ( HAL_LED_4, HAL_LED_MODE_FLASH );
    444                }
    445          #endif
    446                break;
    447                
    448              case Match_Desc_rsp:
    449                {
    450                  ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
    451                  if ( pRsp )
    452                  {
    453                    if ( pRsp->status == ZSuccess && pRsp->cnt )
    454                    {
    455                      /*
    456                      Smart_home_TxAddr.addrMode = (afAddrMode_t)Addr16Bit;
    457                      Smart_home_TxAddr.addr.shortAddr = pRsp->nwkAddr;
    458                      // Take the first endpoint, Can be changed to search through endpoints
    459                      Smart_home_TxAddr.endPoint = pRsp->epList[0];
    460                      */
    461                      
    462                      // Light LED
    463                      HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    464                    }
    465                    osal_mem_free( pRsp );
    466                  }
    467                }
    468                break;
    469            }
    470          }
    471          
    472          /*********************************************************************
    473           * @fn      Smart_home_Key_add
    474           *
    475           * @brief   3.21新增，用来标识目前处于的控制状态，是附加项
    476           *          0 控制屏幕 1 控制继电器 2 控制电机
    477           *            
    478           *
    479           * @param   Ctrlcase 目前的控制号
    480           *
    481           * @return  屏幕回显
    482           *
    483          static void Smart_home_Key_add(uint8 Ctrlcase)
    484          {
    485          #if defined ( LCD_SUPPORTED )
    486            switch(Ctrlcase)
    487            {
    488              default:    
    489              case 0:
    490                HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
    491                //清除屏幕显示
    492                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    493                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    494                break;
    495              
    496              case 1:
    497                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
    498                //清除屏幕显示
    499                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    500                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    501                if(DeviceList[relay].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    502                {
    503                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
    504                }
    505                if(DeviceList[relay].deviceStatus != DEVICE_ONLINE)
    506                {
    507                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
    508                }
    509                break;
    510              
    511              case 2:
    512                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
    513                //清除屏幕显示
    514                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    515                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    516                if(DeviceList[motor].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    517                {
    518                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 );
    519                }
    520                if(DeviceList[motor].deviceStatus != DEVICE_ONLINE)
    521                {
    522                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
    523                }      
    524                break;
    525          #endif     
    526            }
    527          }
    528          */
    529          /*********************************************************************
    530           * @fn      Smart_home_HandleKeys
    531           *
    532           * @brief   设置按键事件
    533           *          目前事件设置    3.19
    534           *
    535           *          HAL_KEY_SW_1--UP     (上翻一页)
    536           *          HAL_KEY_SW_2--RIGHT  (选项向右)
    537           *          HAL_KEY_SW_3--DOWN   (下翻一页)
    538           *          HAL_KEY_SW_4--LEFT   (选项向左)
    539           *          HAL_KEY_SW_5--OK     (组网开)
    540           *          HAL_KEY_SW_7--CANCEL (组网关) 
    541           * + 3.21 新增  选项总共有3种，控制屏幕显示，控制继电器和控制电机
    542           *              控制继电器时 UP控制1，DOWN控制2
    543           *              控制电机时   UP加速， DOWN减速
    544           *
    545           * @param   shift - true if in shift/alt.
    546           * @param   keys  - bit field for key events.
    547           *
    548           * @return  none
    549           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    550          void Smart_home_HandleKeys( byte shift, byte keys )
   \                     Smart_home_HandleKeys:
    551          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    552            //zAddrType_t txAddr;
    553            static int8 MotorSpeed = 0;
    554            static uint8 NetWorkAllow = 0;
    555            /*这里这么设置似乎会出现内存问题
    556            static uint8 Relay1_on = 0x02;  //两个默认都是关闭
    557            static uint8 Relay2_on = 0x10;
    558            */
    559            /*3.21 LCD 显示*/
    560            static uint8 Relay1_on = 0;  //两个默认都是关闭
    561            static uint8 Relay2_on = 0;
    562            
    563            
    564            if ( keys & HAL_KEY_SW_1 )  //UP
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5053         JNC     ??Smart_home_HandleKeys_0
    565            {
    566              switch(Ctrlcase)
   \   00000B   90....       MOV     DPTR,#Ctrlcase
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   14           DEC     A
   \   000010   6016         JZ      ??Smart_home_HandleKeys_1
   \   000012   14           DEC     A
   \   000013   6029         JZ      ??Smart_home_HandleKeys_2
    567              {
    568                default:    
    569                case 0:
    570                {
    571                  if(LCD_Page < 3)       {LCD_Page++;}
   \   000015   90....       MOV     DPTR,#LCD_Page
   \   000018   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   00001B   5003         JNC     ??Smart_home_HandleKeys_3
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   04           INC     A
   \   00001F   F0           MOVX    @DPTR,A
    572                  if(LCD_Page > 2)       {LCD_Page=0;}
   \                     ??Smart_home_HandleKeys_3:
   \   000020   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   000023   4039         JC      ??Smart_home_HandleKeys_0
   \   000025   E4           CLR     A
   \   000026   8035         SJMP    ??Smart_home_HandleKeys_4
    573                  break;
    574                }
    575                case 1:
    576                {  
    577                  uint8 switch1;
    578                  if(Relay1_on == 0)  {Relay1_on = 1 ; switch1 = 0x02;}
   \                     ??Smart_home_HandleKeys_1:
   \   000028   90....       MOV     DPTR,#??Relay1_on
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   7007         JNZ     ??Smart_home_HandleKeys_5
   \   00002E   7401         MOV     A,#0x1
   \   000030   F0           MOVX    @DPTR,A
   \   000031   7902         MOV     R1,#0x2
   \   000033   8004         SJMP    ??Smart_home_HandleKeys_6
    579                  else if(Relay1_on == 1)  {Relay1_on = 0; switch1 = 0x01;}
   \                     ??Smart_home_HandleKeys_5:
   \   000035   E4           CLR     A
   \   000036   F0           MOVX    @DPTR,A
   \   000037   7901         MOV     R1,#0x1
    580                  else  {Relay1_on = 0; switch1 = 0x01;}       
    581                  Smart_home_Relay_Ctl(switch1);  
   \                     ??Smart_home_HandleKeys_6:
   \   000039                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   000039   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    582                  break;
   \   00003C   8020         SJMP    ??Smart_home_HandleKeys_0
    583                } 
    584                case 2:
    585                {
    586                  if(MotorSpeed < 80)     {MotorSpeed += 10;}
   \                     ??Smart_home_HandleKeys_2:
   \   00003E   90....       MOV     DPTR,#??MotorSpeed
   \   000041   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   000044   5004         JNC     ??Smart_home_HandleKeys_7
   \   000046   E0           MOVX    A,@DPTR
   \   000047   240A         ADD     A,#0xa
   \   000049   F0           MOVX    @DPTR,A
    587                  if(MotorSpeed >= 80)     
   \                     ??Smart_home_HandleKeys_7:
   \   00004A   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   00004D   400F         JC      ??Smart_home_HandleKeys_0
    588                  {
    589          #if defined ( LCD_SUPPORTED )
    590                     HalLcdWriteString( "Motor max Speed", HAL_LCD_LINE_4 );
   \   00004F                ; Setup parameters for call to function HalLcdWriteString
   \   00004F   7904         MOV     R1,#0x4
   \   000051   7A..         MOV     R2,#`?<Constant "Motor max Speed">` & 0xff
   \   000053   7B..         MOV     R3,#(`?<Constant "Motor max Speed">` >> 8) & 0xff
   \   000055   12....       LCALL   ??HalLcdWriteString?relay
    591          #endif 
    592                     MotorSpeed = 80;
   \   000058   90....       MOV     DPTR,#??MotorSpeed
   \   00005B   7450         MOV     A,#0x50
   \                     ??Smart_home_HandleKeys_4:
   \   00005D   F0           MOVX    @DPTR,A
    593                  }
    594                  break;
    595                }
    596                   
    597              }    
    598            }
    599            
    600            if ( keys & HAL_KEY_SW_3 )  //DOWN
   \                     ??Smart_home_HandleKeys_0:
   \   00005E   EE           MOV     A,R6
   \   00005F   A2E4         MOV     C,0xE0 /* A   */.4
   \   000061   505E         JNC     ??Smart_home_HandleKeys_8
    601            {
    602              switch(Ctrlcase)
   \   000063   90....       MOV     DPTR,#Ctrlcase
   \   000066   E0           MOVX    A,@DPTR
   \   000067   14           DEC     A
   \   000068   6017         JZ      ??Smart_home_HandleKeys_9
   \   00006A   14           DEC     A
   \   00006B   6034         JZ      ??Smart_home_HandleKeys_10
    603              {
    604                default:    
    605                case 0:
    606                {
    607                  if(LCD_Page >= 0)       {LCD_Page--;}
   \   00006D   90....       MOV     DPTR,#LCD_Page
   \   000070   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   000073   4003         JC      ??Smart_home_HandleKeys_11
   \   000075   E0           MOVX    A,@DPTR
   \   000076   14           DEC     A
   \   000077   F0           MOVX    @DPTR,A
    608                  if(LCD_Page < 0)        {LCD_Page=2;}
   \                     ??Smart_home_HandleKeys_11:
   \   000078   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   00007B   5044         JNC     ??Smart_home_HandleKeys_8
   \   00007D   7402         MOV     A,#0x2
   \   00007F   803F         SJMP    ??Smart_home_HandleKeys_12
    609                  break;
    610                }
    611                case 1:  
    612                {
    613                  uint8 switch2;
    614                  if(Relay2_on == 0)  {Relay2_on = 1 ; switch2 = 0x20;}
   \                     ??Smart_home_HandleKeys_9:
   \   000081   90....       MOV     DPTR,#??Relay2_on
   \   000084   E0           MOVX    A,@DPTR
   \   000085   7007         JNZ     ??Smart_home_HandleKeys_13
   \   000087   7401         MOV     A,#0x1
   \   000089   F0           MOVX    @DPTR,A
   \   00008A   7920         MOV     R1,#0x20
   \   00008C   800E         SJMP    ??Smart_home_HandleKeys_14
    615                  else if(Relay2_on == 1)  {Relay2_on = 0; switch2 = 0x10;}
   \                     ??Smart_home_HandleKeys_13:
   \   00008E   6401         XRL     A,#0x1
   \   000090   7006         JNZ     ??Smart_home_HandleKeys_15
   \   000092   E4           CLR     A
   \   000093   F0           MOVX    @DPTR,A
   \   000094   7910         MOV     R1,#0x10
   \   000096   8004         SJMP    ??Smart_home_HandleKeys_14
    616                  else  {Relay2_on = 0; switch2 = 0x01;}       
   \                     ??Smart_home_HandleKeys_15:
   \   000098   E4           CLR     A
   \   000099   F0           MOVX    @DPTR,A
   \   00009A   7901         MOV     R1,#0x1
    617                  Smart_home_Relay_Ctl(switch2);       
   \                     ??Smart_home_HandleKeys_14:
   \   00009C                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   00009C   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    618                  break;
   \   00009F   8020         SJMP    ??Smart_home_HandleKeys_8
    619                } 
    620                case 2:
    621                {
    622                  if(MotorSpeed > -80)     {MotorSpeed -= 10;}
   \                     ??Smart_home_HandleKeys_10:
   \   0000A1   90....       MOV     DPTR,#??MotorSpeed
   \   0000A4   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   0000A7   4004         JC      ??Smart_home_HandleKeys_16
   \   0000A9   E0           MOVX    A,@DPTR
   \   0000AA   24F6         ADD     A,#-0xa
   \   0000AC   F0           MOVX    @DPTR,A
    623                  if(MotorSpeed <= -80)     
   \                     ??Smart_home_HandleKeys_16:
   \   0000AD   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   0000B0   500F         JNC     ??Smart_home_HandleKeys_8
    624                  {
    625          #if defined ( LCD_SUPPORTED )
    626                     HalLcdWriteString( "Motor min Speed", HAL_LCD_LINE_4 );
   \   0000B2                ; Setup parameters for call to function HalLcdWriteString
   \   0000B2   7904         MOV     R1,#0x4
   \   0000B4   7A..         MOV     R2,#`?<Constant "Motor min Speed">` & 0xff
   \   0000B6   7B..         MOV     R3,#(`?<Constant "Motor min Speed">` >> 8) & 0xff
   \   0000B8   12....       LCALL   ??HalLcdWriteString?relay
    627          #endif 
    628                     MotorSpeed = -80;
   \   0000BB   90....       MOV     DPTR,#??MotorSpeed
   \   0000BE   74B0         MOV     A,#-0x50
   \                     ??Smart_home_HandleKeys_12:
   \   0000C0   F0           MOVX    @DPTR,A
    629                  }
    630                  break; 
    631                }
    632              }
    633            }
    634            
    635            if ( keys & HAL_KEY_SW_2 )  //RIGHT  
   \                     ??Smart_home_HandleKeys_8:
   \   0000C1   EE           MOV     A,R6
   \   0000C2   A2E1         MOV     C,0xE0 /* A   */.1
   \   0000C4   5012         JNC     ??Smart_home_HandleKeys_17
    636            /*3.22 这里在调试时出现问题，具体问题为 点击up时会出现屏幕变为禁止组网
    637              控制方面变为控制电机，问题在于汇编中的key值会出现  keys & HAL_KEY_SW_2 = 2
    638              的情况，暂时禁止，需要等待研究  还有key_7*/
    639            {
    640               if(Ctrlcase < 3)   { Ctrlcase++;}
   \   0000C6   90....       MOV     DPTR,#Ctrlcase
   \   0000C9   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   0000CC   5003         JNC     ??Smart_home_HandleKeys_18
   \   0000CE   E0           MOVX    A,@DPTR
   \   0000CF   04           INC     A
   \   0000D0   F0           MOVX    @DPTR,A
    641               if(Ctrlcase > 2)   { Ctrlcase=0;}
   \                     ??Smart_home_HandleKeys_18:
   \   0000D1   12....       LCALL   ?Subroutine11 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   0000D4   4002         JC      ??Smart_home_HandleKeys_17
   \   0000D6   E4           CLR     A
   \   0000D7   F0           MOVX    @DPTR,A
    642               //Smart_home_Key_add(Ctrlcase);
    643            }
    644            
    645            if ( keys & HAL_KEY_SW_4 )  //LEFT
   \                     ??Smart_home_HandleKeys_17:
   \   0000D8   EE           MOV     A,R6
   \   0000D9   A2E3         MOV     C,0xE0 /* A   */.3
   \   0000DB   5013         JNC     ??Smart_home_HandleKeys_19
    646            {
    647               if(Ctrlcase > -1)   { Ctrlcase--;}
   \   0000DD   90....       MOV     DPTR,#Ctrlcase
   \   0000E0   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   0000E3   4003         JC      ??Smart_home_HandleKeys_20
   \   0000E5   E0           MOVX    A,@DPTR
   \   0000E6   14           DEC     A
   \   0000E7   F0           MOVX    @DPTR,A
    648               if(Ctrlcase < 0)    { Ctrlcase=2;}
   \                     ??Smart_home_HandleKeys_20:
   \   0000E8   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   0000EB   5003         JNC     ??Smart_home_HandleKeys_19
   \   0000ED   7402         MOV     A,#0x2
   \   0000EF   F0           MOVX    @DPTR,A
    649               //Smart_home_Key_add(Ctrlcase);    
    650            }
    651            
    652            if ( keys & HAL_KEY_SW_5 )  //OK
    653            {
    654          
    655            }
    656            
    657            if ( keys & HAL_KEY_SW_7 )  //CENCEL
   \                     ??Smart_home_HandleKeys_19:
   \   0000F0   EE           MOV     A,R6
   \   0000F1   A2E6         MOV     C,0xE0 /* A   */.6
   \   0000F3   502C         JNC     ??Smart_home_HandleKeys_21
    658            {
    659               if(NetWorkAllow == 0)
   \   0000F5   90....       MOV     DPTR,#??NetWorkAllow
   \   0000F8   E0           MOVX    A,@DPTR
   \   0000F9   7017         JNZ     ??Smart_home_HandleKeys_22
    660               {
    661                 NetWorkAllow = 1;
   \   0000FB   7401         MOV     A,#0x1
   \   0000FD   F0           MOVX    @DPTR,A
    662                 NLME_PermitJoiningRequest(0xFF); // 组网，允许随时加入
   \   0000FE                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   0000FE   79FF         MOV     R1,#-0x1
   \   000100   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    663                 HalLedSet(HAL_LED_1, HAL_LED_MODE_ON);
   \   000103                ; Setup parameters for call to function HalLedSet
   \   000103   7A01         MOV     R2,#0x1
   \   000105   7901         MOV     R1,#0x1
   \   000107   12....       LCALL   ??HalLedSet?relay
    664          #if defined ( LCD_SUPPORTED )
    665                 HalLcdWriteString( "Allow networking", HAL_LCD_LINE_4 );
   \   00010A                ; Setup parameters for call to function HalLcdWriteString
   \   00010A   7904         MOV     R1,#0x4
   \   00010C   7A..         MOV     R2,#`?<Constant "Allow networking">` & 0xff
   \   00010E   7B..         MOV     R3,#(`?<Constant "Allow networking">` >> 8) & 0xff
   \   000110   800C         SJMP    ??Smart_home_HandleKeys_23
    666          #endif
    667               }
    668               else
    669               {
    670                 NetWorkAllow = 0;
   \                     ??Smart_home_HandleKeys_22:
   \   000112   E4           CLR     A
   \   000113   F0           MOVX    @DPTR,A
    671                 NLME_PermitJoiningRequest(0x00); // 不允许组网
   \   000114                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   000114   F9           MOV     R1,A
   \   000115   12....       LCALL   ?Subroutine17 & 0xFFFF
    672                 HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);  
    673          #if defined ( LCD_SUPPORTED )
    674                 HalLcdWriteString( "Ban   networking", HAL_LCD_LINE_4 );
   \                     ??CrossCallReturnLabel_36:
   \   000118                ; Setup parameters for call to function HalLcdWriteString
   \   000118   7904         MOV     R1,#0x4
   \   00011A   7A..         MOV     R2,#`?<Constant "Ban   networking">` & 0xff
   \   00011C   7B..         MOV     R3,#(`?<Constant "Ban   networking">` >> 8) & 0xff
   \                     ??Smart_home_HandleKeys_23:
   \   00011E   12....       LCALL   ??HalLcdWriteString?relay
    675          #endif        
    676               }
    677            }
    678          }
   \                     ??Smart_home_HandleKeys_21:
   \   000121   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   94B1         SUBB    A,#-0x4f
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9450         SUBB    A,#0x50
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9400         SUBB    A,#0x0
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9403         SUBB    A,#0x3
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??MotorSpeed:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??NetWorkAllow:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay1_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay2_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    679          
    680          /*********************************************************************
    681           * @fn      Smart_home_ProcessMSGCmd
    682           *
    683           * @brief   Data message processor callback. This function processes
    684           *          any incoming data - probably from other devices. Based
    685           *          on the cluster ID, perform the intended action.
    686           *
    687           * @param   pkt - pointer to the incoming message packet
    688           *
    689           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    690           *          FALSE otherwise.
    691           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    692          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
   \                     Smart_home_ProcessMSGCmd:
    693          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    694            switch ( pkt->clusterId )
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F5..         MOV     ?V0 + 0,A
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   F5..         MOV     ?V0 + 1,A
   \   000014   78..         MOV     R0,#?V0 + 0
   \   000016   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for Smart_home_ProcessMSGCmd>_0`:
   \   000019   0100         DW        1
   \   00001B   07           DB        7
   \   00001C   ....         DW        ??Smart_home_ProcessMSGCmd_0
   \   00001E   ....         DW        ??Smart_home_ProcessMSGCmd_1
   \   000020   ....         DW        ??Smart_home_ProcessMSGCmd_2
   \   000022   ....         DW        ??Smart_home_ProcessMSGCmd_3
   \   000024   ....         DW        ??Smart_home_ProcessMSGCmd_4
   \   000026   ....         DW        ??Smart_home_ProcessMSGCmd_5
   \   000028   ....         DW        ??Smart_home_ProcessMSGCmd_6
   \   00002A   ....         DW        ??Smart_home_ProcessMSGCmd_7
   \   00002C   ....         DW        ??Smart_home_ProcessMSGCmd_8
    695            {
    696            /***********************************************************************
    697              目前总共8种case
    698             #define Smart_home_CLUSTERID_HUMITMSG            1  // 温湿度
    699             #define Smart_home_CLUSTERID_TEMPLIGHTMSG        2  // 温度光照
    700             #define Smart_home_CLUSTERID_RFIDMSG             3  // 射频卡
    701             #define Smart_home_CLUSTERID_GASFLAMEMSG         4  // 烟雾火焰
    702             #define Smart_home_CLUSTERID_INFRAREDMSG         5  // 人体红外
    703             #define Smart_home_CLUSTERID_SOUNDVBMSG          6  // 声音振动
    704             #define Smart_home_CLUSTERID_MOTORSTATUSMSG      7  // 直流电机状态信息
    705             #define Smart_home_CLUSTERID_RELAYSTATUSMSG      8  // 继电器状态信息
    706              
    707             设备描述
    708             typedef struct DeviceInfo
    709             {
    710               uint8 deviceID;
    711               uint8 deviceStatus;
    712               uint8 data[5];
    713             } DeviceInfo; 
    714             ************************************************************************/ 
    715              //3.14 消息处理模块，共8个，行为类似 
    716              //3.21 修改为指针方法（DeviceList相关）
    717              case Smart_home_CLUSTERID_HUMITMSG:         // 温湿度
    718                DeviceList[Humit].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_1:
   \   00002E   90....       MOV     DPTR,#DeviceList + 8
   \   000031   12....       LCALL   ?Subroutine2 & 0xFFFF
    719                DeviceList[Humit].data[0] = pkt->cmd.Data[4]; // 湿度 
   \                     ??CrossCallReturnLabel_0:
   \   000034   90....       MOV     DPTR,#DeviceList + 9
   \   000037   12....       LCALL   ?Subroutine7 & 0xFFFF
    720                DeviceList[Humit].data[1] = pkt->cmd.Data[5]; // 温度
   \                     ??CrossCallReturnLabel_14:
   \   00003A   90....       MOV     DPTR,#DeviceList + 10
   \   00003D   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    721                break;
    722                
    723              case Smart_home_CLUSTERID_TEMPLIGHTMSG:     // 温度光照
    724                DeviceList[TempLight].deviceStatus = DEVICE_ONLINE;   //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_2:
   \   000040   90....       MOV     DPTR,#DeviceList + 15
   \   000043   12....       LCALL   ?Subroutine2 & 0xFFFF
    725                DeviceList[TempLight].data[0] = pkt->cmd.Data[4]; // 温度整数
   \                     ??CrossCallReturnLabel_1:
   \   000046   90....       MOV     DPTR,#DeviceList + 16
   \   000049   12....       LCALL   ?Subroutine8 & 0xFFFF
    726                DeviceList[TempLight].data[1] = pkt->cmd.Data[5]; // 温度小数
   \                     ??CrossCallReturnLabel_16:
   \   00004C   90....       MOV     DPTR,#DeviceList + 17
   \   00004F   12....       LCALL   ?Subroutine6 & 0xFFFF
    727                DeviceList[TempLight].data[2] = pkt->cmd.Data[6]; // 光照
   \                     ??CrossCallReturnLabel_12:
   \   000052   90....       MOV     DPTR,#DeviceList + 18
   \   000055   12....       LCALL   ?Subroutine5 & 0xFFFF
    728                DeviceList[TempLight].data[3] = pkt->cmd.Data[7]; // 光照
   \                     ??CrossCallReturnLabel_10:
   \   000058   E0           MOVX    A,@DPTR
   \   000059   90....       MOV     DPTR,#DeviceList + 19
   \   00005C   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    729                break;
    730                
    731              case Smart_home_CLUSTERID_RFIDMSG:          // 射频卡
    732                DeviceList[RfID].deviceStatus = DEVICE_ONLINE;        //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_3:
   \   00005F   90....       MOV     DPTR,#DeviceList + 22
   \   000062   12....       LCALL   ?Subroutine2 & 0xFFFF
    733                DeviceList[RfID].data[0] = pkt->cmd.Data[4]; // 射频卡类型
   \                     ??CrossCallReturnLabel_2:
   \   000065   90....       MOV     DPTR,#DeviceList + 23
   \   000068   12....       LCALL   ?Subroutine8 & 0xFFFF
    734                DeviceList[RfID].data[1] = pkt->cmd.Data[5]; // 4个字节的ID号
   \                     ??CrossCallReturnLabel_17:
   \   00006B   90....       MOV     DPTR,#DeviceList + 24
   \   00006E   12....       LCALL   ?Subroutine6 & 0xFFFF
    735                DeviceList[RfID].data[2] = pkt->cmd.Data[6]; //
   \                     ??CrossCallReturnLabel_13:
   \   000071   90....       MOV     DPTR,#DeviceList + 25
   \   000074   12....       LCALL   ?Subroutine18 & 0xFFFF
    736                DeviceList[RfID].data[3] = pkt->cmd.Data[7]; //
   \                     ??CrossCallReturnLabel_37:
   \   000077   A3           INC     DPTR
   \   000078   E0           MOVX    A,@DPTR
   \   000079   90....       MOV     DPTR,#DeviceList + 26
   \   00007C   12....       LCALL   ?Subroutine5 & 0xFFFF
    737                DeviceList[RfID].data[4] = pkt->cmd.Data[8]; //  
   \                     ??CrossCallReturnLabel_11:
   \   00007F   A3           INC     DPTR
   \   000080   E0           MOVX    A,@DPTR
   \   000081   90....       MOV     DPTR,#DeviceList + 27
   \   000084   8063         SJMP    ??Smart_home_ProcessMSGCmd_9
    738                break;
    739                
    740              case Smart_home_CLUSTERID_GASFLAMEMSG:      // 烟雾火焰
    741                DeviceList[gasFlame].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_4:
   \   000086   90....       MOV     DPTR,#DeviceList + 29
   \   000089   12....       LCALL   ?Subroutine3 & 0xFFFF
    742                DeviceList[gasFlame].data[0] = pkt->cmd.Data[4]; // 烟雾与火焰报警信息
   \                     ??CrossCallReturnLabel_4:
   \   00008C   90....       MOV     DPTR,#DeviceList + 30
   \   00008F   8058         SJMP    ??Smart_home_ProcessMSGCmd_9
    743                break;
    744                
    745              case Smart_home_CLUSTERID_INFRAREDMSG:      // 人体红外
    746                DeviceList[infrared].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_5:
   \   000091   90....       MOV     DPTR,#DeviceList + 36
   \   000094   12....       LCALL   ?Subroutine3 & 0xFFFF
    747                DeviceList[infrared].data[0] = pkt->cmd.Data[4]; // 人体红外 
   \                     ??CrossCallReturnLabel_5:
   \   000097   90....       MOV     DPTR,#DeviceList + 37
   \   00009A   804D         SJMP    ??Smart_home_ProcessMSGCmd_9
    748                break;
    749          
    750              case Smart_home_CLUSTERID_SOUNDVBMSG:       // 声音振动
    751                DeviceList[soundVb].deviceStatus = DEVICE_ONLINE;     //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_6:
   \   00009C   90....       MOV     DPTR,#DeviceList + 57
   \   00009F   12....       LCALL   ?Subroutine3 & 0xFFFF
    752                DeviceList[soundVb].data[0] = pkt->cmd.Data[4]; // 声音震动信息
   \                     ??CrossCallReturnLabel_6:
   \   0000A2   90....       MOV     DPTR,#DeviceList + 58
   \   0000A5   8042         SJMP    ??Smart_home_ProcessMSGCmd_9
    753                break;
    754                
    755              case Smart_home_CLUSTERID_MOTORSTATUSMSG:   // 直流电机状态信息
    756                DeviceList[motor].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_7:
   \   0000A7   90....       MOV     DPTR,#DeviceList + 43
   \   0000AA   7401         MOV     A,#0x1
   \   0000AC   F0           MOVX    @DPTR,A
    757                // 储存电机设备的网络地址，用于发送控制命令
    758                Motor_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0000AD   90....       MOV     DPTR,#Motor_addr + 8
   \   0000B0   12....       LCALL   ?Subroutine9 & 0xFFFF
    759                Motor_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_18:
   \   0000B3   90....       MOV     DPTR,#Motor_addr
   \   0000B6   E8           MOV     A,R0
   \   0000B7   F0           MOVX    @DPTR,A
   \   0000B8   A3           INC     DPTR
   \   0000B9   E9           MOV     A,R1
   \   0000BA   F0           MOVX    @DPTR,A
    760                
    761                Motor_addr.endPoint = 1;  // 目的节点的端口号
   \   0000BB   90....       MOV     DPTR,#Motor_addr + 9
   \   0000BE   12....       LCALL   ?Subroutine2 & 0xFFFF
    762                //TransmitApp_DstMotorAddr->endPoint = TRANSMITAPP_ENDPOINT;
    763               
    764                DeviceList[motor].data[0] = pkt->cmd.Data[4]; // 电机转速
   \                     ??CrossCallReturnLabel_3:
   \   0000C1   90....       MOV     DPTR,#DeviceList + 44
   \   0000C4   12....       LCALL   ?Subroutine7 & 0xFFFF
    765                DeviceList[motor].data[1] = pkt->cmd.Data[5]; // 电机状态
   \                     ??CrossCallReturnLabel_15:
   \   0000C7   90....       MOV     DPTR,#DeviceList + 45
   \   0000CA   801D         SJMP    ??Smart_home_ProcessMSGCmd_9
    766                break;
    767                
    768              case Smart_home_CLUSTERID_RELAYSTATUSMSG:   // 继电器状态信息
    769                DeviceList[relay].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线    
   \                     ??Smart_home_ProcessMSGCmd_8:
   \   0000CC   90....       MOV     DPTR,#DeviceList + 50
   \   0000CF   7401         MOV     A,#0x1
   \   0000D1   F0           MOVX    @DPTR,A
    770                
    771                // 储存继电器设备的网络地址，用于发送控制命令
    772                Relay_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0000D2   90....       MOV     DPTR,#Relay_addr + 8
   \   0000D5   12....       LCALL   ?Subroutine9 & 0xFFFF
    773                Relay_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;    
   \                     ??CrossCallReturnLabel_19:
   \   0000D8   90....       MOV     DPTR,#Relay_addr
   \   0000DB   E8           MOV     A,R0
   \   0000DC   F0           MOVX    @DPTR,A
   \   0000DD   A3           INC     DPTR
   \   0000DE   E9           MOV     A,R1
   \   0000DF   F0           MOVX    @DPTR,A
    774                Relay_addr.endPoint = 1; // 目的节点的端口号
   \   0000E0   90....       MOV     DPTR,#Relay_addr + 9
   \   0000E3   12....       LCALL   ?Subroutine3 & 0xFFFF
    775                DeviceList[relay].data[0] = pkt->cmd.Data[4]; 
   \                     ??CrossCallReturnLabel_7:
   \   0000E6   90....       MOV     DPTR,#DeviceList + 51
   \                     ??Smart_home_ProcessMSGCmd_9:
   \   0000E9   F0           MOVX    @DPTR,A
    776                break;
    777                
    778              default:
    779                break;
    780            }
    781          }
   \                     ??Smart_home_ProcessMSGCmd_0:
   \   0000EA                REQUIRE ?Subroutine1
   \   0000EA                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   04           INC     A
   \   000001   F0           MOVX    @DPTR,A
   \   000002   8A82         MOV     DPL,R2
   \   000004   8B83         MOV     DPH,R3
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F9           MOV     R1,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_49:
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_51:
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F9           MOV     R1,A
   \   00000B   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_50:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   E0           MOVX    A,@DPTR
   \   000005   FA           MOV     R2,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   A3           INC     DPTR
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   22           RET
    782          
    783          /*********************************************************************
    784           * @fn     Smart_home_Device_check
    785           *
    786           * @brief   设备计数器，用来检查设备在开始组网后多久在线.
    787           *          目前搜索为4次HeartBeat  (DEVICE_HEART_BEAT 3)
    788           *          3.21
    789           * @param   none
    790           *
    791           * @return  none
    792           */
    793          static void Smart_home_Device_check(void)
    794          {

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    795            static uint8 DeviceID;
   \                     ??DeviceID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    796            for(DeviceID=1;DeviceID<Smart_home_MAX_INCLUSTERS;DeviceID++)
    797            {
    798              if(DeviceList[DeviceID].deviceStatus != DEVICE_ONLINE)    //设备离线
    799              {
    800                DeviceCnt[DeviceID]++;
    801              }
    802              if(DeviceList[DeviceID].deviceStatus == DEVICE_ONLINE)    //设备在线
    803              {
    804                DeviceCnt[DeviceID] = 0;
    805                DeviceList[DeviceID].deviceStatus = 0;
    806              }
    807              if(DeviceCnt[DeviceID] > DEVICE_HEART_BEAT)
    808              {
    809                DeviceCnt[DeviceID] = DEVICE_HEART_BEAT;
    810                DeviceList[DeviceID].deviceStatus = DEVICE_OFFLINE;
    811              }
    812            }
    813            /*温湿度缓存 温度光照缓存 RFID 信息缓存 气体火焰缓存 
    814            人体红外 电机状态 继电器状态 声音震动*/
    815          }
    816          
    817          
    818          /*********************************************************************
    819           * @fn      Smart_home_Relay_Ctl
    820           *
    821           * @brief   发送继电器控制消息
    822           *
    823           * @param   none
    824           *
    825           * @return  none
    826           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    827          static void Smart_home_Relay_Ctl(uint8 cmd)
   \                     Smart_home_Relay_Ctl:
    828          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    829            uint8 tmp;
    830            
    831            // 只有设备在线时, 方发送控制命令
    832            if (DeviceList[relay].deviceStatus != DEVICE_OFFLINE)
   \   000007   90....       MOV     DPTR,#DeviceList + 50
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6402         XRL     A,#0x2
   \   00000D   6077         JZ      ??Smart_home_Relay_Ctl_0
    833            {
    834              // put the sequence number in the message
    835              tmp = HI_UINT8( RelayTransID );
   \   00000F   90....       MOV     DPTR,#RelayTransID
   \   000012   E0           MOVX    A,@DPTR
   \   000013   C4           SWAP    A
   \   000014   540F         ANL     A,#0xf
   \   000016   FA           MOV     R2,A
    836              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000017   C3           CLR     C
   \   000018   940A         SUBB    A,#0xa
   \   00001A   5004         JNC     ??Smart_home_Relay_Ctl_1
   \   00001C   7830         MOV     R0,#0x30
   \   00001E   8002         SJMP    ??Smart_home_Relay_Ctl_2
   \                     ??Smart_home_Relay_Ctl_1:
   \   000020   7837         MOV     R0,#0x37
    837              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_Relay_Ctl_2:
   \   000022   E8           MOV     A,R0
   \   000023   2A           ADD     A,R2
   \   000024   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000027   F0           MOVX    @DPTR,A
    838              tmp = LO_UINT8( RelayTransID );
   \   000028   90....       MOV     DPTR,#RelayTransID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   540F         ANL     A,#0xf
   \   00002E   FA           MOV     R2,A
    839              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   00002F   C3           CLR     C
   \   000030   940A         SUBB    A,#0xa
   \   000032   5004         JNC     ??Smart_home_Relay_Ctl_3
   \   000034   7830         MOV     R0,#0x30
   \   000036   8002         SJMP    ??Smart_home_Relay_Ctl_4
   \                     ??Smart_home_Relay_Ctl_3:
   \   000038   7837         MOV     R0,#0x37
    840              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_Relay_Ctl_4:
   \   00003A   E8           MOV     A,R0
   \   00003B   2A           ADD     A,R2
   \   00003C   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   00003F   F0           MOVX    @DPTR,A
    841              
    842              // 发送给继电器的控制命令 
    843              Coordinator_Msg[4] = cmd;
   \   000040   EE           MOV     A,R6
   \   000041   A3           INC     DPTR
   \   000042   F0           MOVX    @DPTR,A
    844              /********************************************
    845              *   屏幕显示部分*
    846          #if defined ( LCD_SUPPORTED )
    847              if(cmd == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
    848              if(cmd == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
    849              if(cmd == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
    850              if(cmd == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}
    851          #endif     
    852              ********************************************/
    853              tmp = AF_DataRequest( &Relay_addr,                         
    854                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    855                                     Smart_home_CLUSTERID_RELAYCTRL,
    856                                     RELAYSTATUSMSG_LEN,                 
    857                                     Coordinator_Msg,                    
    858                                    &RelayTransID,                       
    859                                     AF_DISCV_ROUTE,                     
    860                                     AF_DEFAULT_RADIUS );
   \   000043                ; Setup parameters for call to function AF_DataRequest
   \   000043   75..1E       MOV     ?V0 + 0,#0x1e
   \   000046   78..         MOV     R0,#?V0 + 0
   \   000048   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004B   75....       MOV     ?V0 + 0,#RelayTransID & 0xff
   \   00004E   75....       MOV     ?V0 + 1,#(RelayTransID >> 8) & 0xff
   \   000051   78..         MOV     R0,#?V0 + 0
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000056   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000059   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   00005C   78..         MOV     R0,#?V0 + 0
   \   00005E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000061   75..05       MOV     ?V0 + 0,#0x5
   \   000064   75..00       MOV     ?V0 + 1,#0x0
   \   000067   78..         MOV     R0,#?V0 + 0
   \   000069   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006C   75..0A       MOV     ?V0 + 0,#0xa
   \   00006F   78..         MOV     R0,#?V0 + 0
   \   000071   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000074   7920         MOV     R1,#0x20
   \   000076   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   000078   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   00007A   7A..         MOV     R2,#Relay_addr & 0xff
   \   00007C   7B..         MOV     R3,#(Relay_addr >> 8) & 0xff
   \   00007E   12....       LCALL   ??AF_DataRequest?relay
   \   000081   7409         MOV     A,#0x9
   \   000083   12....       LCALL   ?DEALLOC_XSTACK8
    861            } 
    862          }
   \                     ??Smart_home_Relay_Ctl_0:
   \   000086   02....       LJMP    ?Subroutine1 & 0xFFFF
    863          
    864          /*********************************************************************
    865           * @fn      Smart_home_Motor_Ctl
    866           *
    867           * @brief   发送电机控制消息
    868           *
    869           * @param   none
    870           *
    871           * @return  none
    872           */
    873          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed)
                             ^
Warning[Pe177]: function "Smart_home_Motor_Ctl" was declared but never
          referenced
    874          {
    875            uint8 tmp;
    876            
    877            // 只有设备在线时, 方发送控制命令
    878            if (DeviceList[motor].deviceStatus != DEVICE_OFFLINE)
    879            {
    880              // put the sequence number in the message
    881              tmp = HI_UINT8( MotorTransID );
    882              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    883              Coordinator_Msg[2] = tmp;
    884              tmp = LO_UINT8( RelayTransID );
    885              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    886              Coordinator_Msg[3] = tmp;
    887              
    888              // 发送给继电器的控制命令 
    889              Coordinator_Msg[4] = speed;
    890              Coordinator_Msg[5] = cmd;
    891              
    892              tmp = AF_DataRequest( &Motor_addr,                         
    893                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    894                                     Smart_home_CLUSTERID_MOTORCTRL,
    895                                     MOTORSTATUSMSG_LEN,                 
    896                                     Coordinator_Msg,                    
    897                                    &MotorTransID,                       
    898                                     AF_DISCV_ROUTE,                     
    899                                     AF_DEFAULT_RADIUS );
    900            }   
    901          }
    902          
    903          
    904          /*********************************************************************
    905           * @fn      Smart_home_Display
    906           *
    907           * @brief   屏幕回显函数，定义了内容如何显示.
    908           *
    909           * @param   port - UART port.
    910           * @param   event - the UART port event flag.
    911           *
    912           * @return  none
    913           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    914          static void Smart_home_Display(void)
   \                     Smart_home_Display:
    915          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    916          #if defined LCD_SUPPORTED
    917            switch(Ctrlcase)
   \   000005   90....       MOV     DPTR,#Ctrlcase
   \   000008   E0           MOVX    A,@DPTR
   \   000009   14           DEC     A
   \   00000A   600F         JZ      ??Smart_home_Display_0
   \   00000C   14           DEC     A
   \   00000D   7904         MOV     R1,#0x4
   \   00000F   6078         JZ      ??Smart_home_Display_1
    918            {
    919              default:    
    920              case 0:
    921                HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
   \   000011                ; Setup parameters for call to function HalLcdWriteString
   \   000011   7A..         MOV     R2,#`?<Constant "Flip use UP/DOWN">` & 0xff
   \   000013   7B..         MOV     R3,#(`?<Constant "Flip use UP/DOWN">` >> 8) & 0xff
   \   000015   12....       LCALL   ?Subroutine20 & 0xFFFF
    922                //清除屏幕显示
    923                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    924                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   \                     ??CrossCallReturnLabel_41:
   \   000018   02....       LJMP    ??Smart_home_Display_2 & 0xFFFF
    925                break;
    926              
    927              case 1:
    928                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
   \                     ??Smart_home_Display_0:
   \   00001B                ; Setup parameters for call to function HalLcdWriteString
   \   00001B   7904         MOV     R1,#0x4
   \   00001D   7A..         MOV     R2,#`?<Constant "Relay Contrling">` & 0xff
   \   00001F   7B..         MOV     R3,#(`?<Constant "Relay Contrling">` >> 8) & 0xff
   \   000021   12....       LCALL   ?Subroutine4 & 0xFFFF
    929                //清除屏幕显示
    930                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    931                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    932                if(DeviceList[relay].deviceStatus == DEVICE_ONLINE)  //设备在线回显
   \                     ??CrossCallReturnLabel_8:
   \   000024   90....       MOV     DPTR,#DeviceList + 50
   \   000027   E0           MOVX    A,@DPTR
   \   000028   6401         XRL     A,#0x1
   \   00002A   704D         JNZ     ??Smart_home_Display_3
    933                {
    934                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
   \   00002C                ; Setup parameters for call to function HalLcdWriteString
   \   00002C   7901         MOV     R1,#0x1
   \   00002E   7A..         MOV     R2,#`?<Constant "Relay Online">` & 0xff
   \   000030   7B..         MOV     R3,#(`?<Constant "Relay Online">` >> 8) & 0xff
   \   000032   12....       LCALL   ??HalLcdWriteString?relay
    935                //继电器控制界面
    936                  if(Ctrlcase == 1)
   \   000035   90....       MOV     DPTR,#Ctrlcase
   \   000038   E0           MOVX    A,@DPTR
   \   000039   6401         XRL     A,#0x1
   \   00003B   703C         JNZ     ??Smart_home_Display_3
    937                  {
    938                    const uint8 cmd =  DeviceList[relay].data[0];
   \   00003D   90....       MOV     DPTR,#DeviceList + 51
   \   000040   E0           MOVX    A,@DPTR
   \   000041   FE           MOV     R6,A
    939                    //消除抖动
    940                    if((cmd & 0x02) == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   \   000042   A2E1         MOV     C,0xE0 /* A   */.1
   \   000044   5009         JNC     ??Smart_home_Display_4
   \   000046                ; Setup parameters for call to function HalLcdWriteString
   \   000046   7902         MOV     R1,#0x2
   \   000048   7A..         MOV     R2,#`?<Constant "K1:ON">` & 0xff
   \   00004A   7B..         MOV     R3,#(`?<Constant "K1:ON">` >> 8) & 0xff
   \   00004C   12....       LCALL   ??HalLcdWriteString?relay
    941                    if((cmd & 0x01) == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_4:
   \   00004F   EE           MOV     A,R6
   \   000050   A2E0         MOV     C,0xE0 /* A   */.0
   \   000052   5009         JNC     ??Smart_home_Display_5
   \   000054                ; Setup parameters for call to function HalLcdWriteString
   \   000054   7902         MOV     R1,#0x2
   \   000056   7A..         MOV     R2,#`?<Constant "K1:OFF">` & 0xff
   \   000058   7B..         MOV     R3,#(`?<Constant "K1:OFF">` >> 8) & 0xff
   \   00005A   12....       LCALL   ??HalLcdWriteString?relay
    942                    if((cmd & 0x20) == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_5:
   \   00005D   EE           MOV     A,R6
   \   00005E   A2E5         MOV     C,0xE0 /* A   */.5
   \   000060   5009         JNC     ??Smart_home_Display_6
   \   000062                ; Setup parameters for call to function HalLcdWriteString
   \   000062   7903         MOV     R1,#0x3
   \   000064   7A..         MOV     R2,#`?<Constant "K2:ON">` & 0xff
   \   000066   7B..         MOV     R3,#(`?<Constant "K2:ON">` >> 8) & 0xff
   \   000068   12....       LCALL   ??HalLcdWriteString?relay
    943                    if((cmd & 0x10) == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}      
   \                     ??Smart_home_Display_6:
   \   00006B   EE           MOV     A,R6
   \   00006C   A2E4         MOV     C,0xE0 /* A   */.4
   \   00006E   5009         JNC     ??Smart_home_Display_3
   \   000070                ; Setup parameters for call to function HalLcdWriteString
   \   000070   7903         MOV     R1,#0x3
   \   000072   7A..         MOV     R2,#`?<Constant "K2:OFF">` & 0xff
   \   000074   7B..         MOV     R3,#(`?<Constant "K2:OFF">` >> 8) & 0xff
   \   000076   12....       LCALL   ??HalLcdWriteString?relay
    944                  } 
    945                }
    946                if(DeviceList[relay].deviceStatus != DEVICE_ONLINE)
   \                     ??Smart_home_Display_3:
   \   000079   90....       MOV     DPTR,#DeviceList + 50
   \   00007C   E0           MOVX    A,@DPTR
   \   00007D   6401         XRL     A,#0x1
   \   00007F   6031         JZ      ??Smart_home_Display_7
    947                {
    948                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
   \   000081                ; Setup parameters for call to function HalLcdWriteString
   \   000081   7901         MOV     R1,#0x1
   \   000083   7A..         MOV     R2,#`?<Constant "Relay Offline">` & 0xff
   \   000085   7B..         MOV     R3,#(`?<Constant "Relay Offline">` >> 8) & 0xff
   \   000087   8026         SJMP    ??Smart_home_Display_2
    949                }
    950                break;
    951              
    952              case 2:
    953                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
   \                     ??Smart_home_Display_1:
   \   000089                ; Setup parameters for call to function HalLcdWriteString
   \   000089   7A..         MOV     R2,#`?<Constant "Motor Contrling">` & 0xff
   \   00008B   7B..         MOV     R3,#(`?<Constant "Motor Contrling">` >> 8) & 0xff
   \   00008D   12....       LCALL   ?Subroutine4 & 0xFFFF
    954                //清除屏幕显示
    955                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    956                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    957                if(DeviceList[motor].deviceStatus == DEVICE_ONLINE)  //设备在线回显
   \                     ??CrossCallReturnLabel_9:
   \   000090   90....       MOV     DPTR,#DeviceList + 43
   \   000093   E0           MOVX    A,@DPTR
   \   000094   6401         XRL     A,#0x1
   \   000096   7009         JNZ     ??Smart_home_Display_8
    958                {
    959                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 );
   \   000098                ; Setup parameters for call to function HalLcdWriteString
   \   000098   7901         MOV     R1,#0x1
   \   00009A   7A..         MOV     R2,#`?<Constant "Motor Online">` & 0xff
   \   00009C   7B..         MOV     R3,#(`?<Constant "Motor Online">` >> 8) & 0xff
   \   00009E   12....       LCALL   ??HalLcdWriteString?relay
    960                }
    961                if(DeviceList[motor].deviceStatus != DEVICE_ONLINE)
   \                     ??Smart_home_Display_8:
   \   0000A1   90....       MOV     DPTR,#DeviceList + 43
   \   0000A4   E0           MOVX    A,@DPTR
   \   0000A5   6401         XRL     A,#0x1
   \   0000A7   6009         JZ      ??Smart_home_Display_7
    962                {
    963                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
   \   0000A9                ; Setup parameters for call to function HalLcdWriteString
   \   0000A9   7901         MOV     R1,#0x1
   \   0000AB   7A..         MOV     R2,#`?<Constant "Motor Offline">` & 0xff
   \   0000AD   7B..         MOV     R3,#(`?<Constant "Motor Offline">` >> 8) & 0xff
   \                     ??Smart_home_Display_2:
   \   0000AF   12....       LCALL   ??HalLcdWriteString?relay
    964                }      
    965                break;
    966            }
    967            
    968          #endif // LCD_SUPPORTED  
    969          }
   \                     ??Smart_home_Display_7:
   \   0000B2   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   000003   12....       LCALL   ??HalLcdWriteString?relay
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003   7902         MOV     R1,#0x2
   \   000005   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000007   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000009   12....       LCALL   ??HalLcdWriteString?relay
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C   7903         MOV     R1,#0x3
   \   00000E   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   75F007       MOV     B,#0x7
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007                REQUIRE ??Subroutine26_0
   \   000007                ; // Fall through to label ??Subroutine26_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine26_0:
   \   000000   74..         MOV     A,#(DeviceList + 1) & 0xff
   \   000002   28           ADD     A,R0
   \   000003   F582         MOV     DPL,A
   \   000005   74..         MOV     A,#((DeviceList + 1) >> 8) & 0xff
   \   000007   39           ADDC    A,R1
   \   000008   F583         MOV     DPH,A
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_48:
   \   000005   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessMSGCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessMSGCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Relay_Ctl?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Relay_Ctl

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Display?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Display

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Smart_home">`:
   \   000000   536D6172     DB "Smart_home"
   \            745F686F
   \            6D6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor max Speed">`:
   \   000000   4D6F746F     DB "Motor max Speed"
   \            72206D61
   \            78205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor min Speed">`:
   \   000000   4D6F746F     DB "Motor min Speed"
   \            72206D69
   \            6E205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Allow networking">`:
   \   000000   416C6C6F     DB "Allow networking"
   \            77206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Ban   networking">`:
   \   000000   42616E20     DB "Ban   networking"
   \            20206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Flip use UP/DOWN">`:
   \   000000   466C6970     DB "Flip use UP/DOWN"
   \            20757365
   \            2055502F
   \            444F574E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " ">`:
   \   000000   2000         DB " "

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Contrling">`:
   \   000000   52656C61     DB "Relay Contrling"
   \            7920436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Online">`:
   \   000000   52656C61     DB "Relay Online"
   \            79204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:ON">`:
   \   000000   4B313A4F     DB "K1:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:OFF">`:
   \   000000   4B313A4F     DB "K1:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:ON">`:
   \   000000   4B323A4F     DB "K2:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:OFF">`:
   \   000000   4B323A4F     DB "K2:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Offline">`:
   \   000000   52656C61     DB "Relay Offline"
   \            79204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Contrling">`:
   \   000000   4D6F746F     DB "Motor Contrling"
   \            7220436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Online">`:
   \   000000   4D6F746F     DB "Motor Online"
   \            72204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Offline">`:
   \   000000   4D6F746F     DB "Motor Offline"
   \            72204F66
   \            666C696E
   \            6500    
    970          
    971          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_Display                 0      0     23
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_HandleKeys              0      0     23
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_Init                    1      0     38
       -> afRegister                    0      0     76
       -> RegisterForKeys               0      0     76
       -> HalUARTOpen                   0      0     76
       -> HalLcdWriteString             0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> osal_start_timerEx            0      0     76
       -> osal_start_timerEx            0      0     76
       -> NLME_PermitJoiningRequest     0      0     76
       -> HalLedSet                     0      0     76
     Smart_home_ProcessEvent            0      0     14
       -> Smart_home_ProcessMSGCmd      0      0     28
       -> osal_msg_deallocate           0      0     28
       -> osal_msg_receive              0      0     28
       -> osal_msg_receive              0      0     28
       -> ZDO_ParseEPListRsp            0      0     28
       -> HalLedSet                     0      0     28
       -> osal_mem_free                 0      0     28
       -> HalLedSet                     0      0     28
       -> HalLedSet                     0      0     28
       -> Smart_home_HandleKeys         0      0     28
       -> HalLedSet                     0      0     28
       -> osal_start_timerEx            0      0     28
       -> Smart_home_Display            0      0     28
       -> osal_start_timerEx            0      0     28
     Smart_home_ProcessMSGCmd           0      0     24
     Smart_home_Relay_Ctl               0      0     28
       -> AF_DataRequest                0      0     38


   Segment part sizes:

     Function/Label                   Bytes
     --------------                   -----
     Smart_home_ClusterList_IN          18
     Smart_home_ClusterList_OUT         18
     Smart_home_SimpleDesc              12
     Smart_home_epDesc                   6
     Smart_home_TaskID                   1
     DeviceCnt                           9
     Ctrlcase                            1
     LCD_Page                            1
     DeviceList                         63
     Relay_addr                         12
     Motor_addr                         12
     Coordinator_Msg                   102
     RelayTransID                        1
     MotorTransID                        1
     Smart_home_Init                   219
     ?Subroutine0                        5
     ?Subroutine13                       6
     ??Subroutine27_0                   11
     ?Subroutine23                      12
     ?Subroutine17                      11
     Smart_home_ProcessEvent           364
     ?Subroutine22                      11
     ?Subroutine25                       9
     Smart_home_HandleKeys             292
     ?Subroutine15                      10
     ?Subroutine14                      10
     ?Subroutine12                      10
     ?Subroutine11                      10
     MotorSpeed                          1
     NetWorkAllow                        1
     Relay1_on                           1
     Relay2_on                           1
     Smart_home_ProcessMSGCmd          234
     ?Subroutine1                        5
     ?Subroutine9                       18
     ?Subroutine8                        7
     ?Subroutine7                        5
     ?Subroutine6                        5
     ?Subroutine18                       7
     ?Subroutine5                        6
     ?Subroutine19                      14
     ?Subroutine3                       15
     ?Subroutine2                       16
     ?Subroutine21                       4
     ?Subroutine24                      17
     DeviceID                            1
     Smart_home_Relay_Ctl              137
     Smart_home_Display                181
     ?Subroutine4                        7
     ?Subroutine20                      19
     ?Subroutine16                       7
     ??Subroutine26_0                   11
     ?Subroutine10                       6
     ??Smart_home_Init?relay             6
     ??Smart_home_ProcessEvent?relay     6
     ??Smart_home_HandleKeys?relay       6
     ??Smart_home_ProcessMSGCmd?relay    6
     ??Smart_home_Relay_Ctl?relay        6
     ??Smart_home_Display?relay          6
     ?<Constant "Smart_home">           11
     ?<Constant "Motor max Speed">      16
     ?<Constant "Motor min Speed">      16
     ?<Constant "Allow networking">     17
     ?<Constant "Ban   networking">     17
     ?<Constant "Flip use UP/DOWN">     17
     ?<Constant " ">                     2
     ?<Constant "Relay Contrling">      16
     ?<Constant "Relay Online">         13
     ?<Constant "K1:ON">                 6
     ?<Constant "K1:OFF">                7
     ?<Constant "K2:ON">                 6
     ?<Constant "K2:OFF">                7
     ?<Constant "Relay Offline">        14
     ?<Constant "Motor Contrling">      16
     ?<Constant "Motor Online">         13
     ?<Constant "Motor Offline">        14

 
 1 701 bytes in segment BANKED_CODE
    36 bytes in segment BANK_RELAYS
   262 bytes in segment XDATA_ROM_C
   208 bytes in segment XDATA_Z
 
 1 737 bytes of CODE  memory
   262 bytes of CONST memory
   208 bytes of XDATA memory

Errors: none
Warnings: 1
