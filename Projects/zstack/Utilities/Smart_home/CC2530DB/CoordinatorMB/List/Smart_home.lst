###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         06/May/2021  19:44:24 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_home.c                   #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wConfig.cfg (-DZIGBEEPRO -DSECURE=0               #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          ome.c -D LCD_SUPPORTED -D ZDO_COORDINATOR -D       #
#                          xNV_RESTORE -D HAL_UART=TRUE -D xNV_INIT -D        #
#                          xREFLECTOR -D xHAL_UART_TEST -lC                   #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\ -lA      #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\          #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\ -e        #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530MB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\Smart_hom #
#                          e.lst                                              #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\Smart_home #
#                          .r51                                               #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c
      1          /**************************************************************************************************
      2            文件名：Smart_home.c
      3            作 者： 柳成林
      4            功 能： 作为网关节点，实现传感器信息的采集，并可以通过其控制一些节点
      5                    终端设备主要分为8个，分别为
      6               1、温度与光照度传感器；2、烟雾与火焰传感器；3、继电器；4、温湿度传感器；
      7               5、声音与震动传感器；  6、人体红外检测传感器；7、电机；8、RFID检测器。
      8            更新日志(2021)
      9            3.13
     10            + 新增 8种传感器的Project并设置好编译情况
     11            + 修改 Smart_home_ProcessEvent() （增加各种处理器的事件）
     12                   Smart_home_Init()         （初始化内容修改，添加设备默认离线）
     13            3.14
     14            + 修改 Smart_home_ProcessMSGCmd()（添加终端节点类型判断，具体处理留空）
     15            + 新增 Hal层各种传感器驱动(头文件)
     16                   ClusterList (添加8个终端，分开出与入)
     17            3.17
     18            + 修改 Smart_home_ProcessMSGCmd() （完成接收后对于各终端处理）
     19            + 添加 Smart_home_HandleKeys()     (修改原来函数增添概念，未补全)
     20            + 删除 static void Smart_home_Send(void);
     21                   static void Smart_home_Resp(void);
     22                   两个函数
     23            3.19
     24            + 检查 出现的warning并做标识
     25            + 修改 Smart_home_HandleKeys() （补全设计函数）
     26            + 新增 Smart_home_Device_check() (设备是否在线检查)
     27          
     28            3.21
     29            + 新增 DeviceList以方便初始化和设备在线检查（本地变量部分）
     30                   Smart_home_Display()    （屏幕显示，未补全）
     31                   Smart_home_Key_add()     (控制按键，附加项)
     32            + 修改 Smart_home_Device_check()
     33                   Smart_home_Init()
     34                   Smart_home_ProcessMSGCmd()
     35                   调整有关DeviceList（设备列表）部分的修改
     36                   直接使用数组位置号作为设备编号
     37                   按键控制方式，用按键情况控制
     38            3.22
     39            + 修改 Smart_home_Display()    （屏幕显示，补全）
     40                   Smart_home_Key_add()     (屏幕显示中的电机与继电器部分加入这里)
     41                   重写别名方式减少内存损耗
     42                   出现无法初始化的问题，需要项目重构
     43            3.23
     44            + Warn 代码初始化后会产生直接进入key的情况,需debug
     45                   OK键问题无法修复，放弃使用OK键，修改为Cencel组网 禁止组网
     46            3.23 正式完成网关节点部分，（显示函数部分除外）
     47            3.24 
     48            + 修改 Smart_home_Key_add()与display函数整合
     49            + bug:在每十秒一次调用的周期检查函数中会导致显示屏将近一秒时间不显示
     50              已解决： 在状态0的时候作为在线即可
     51            + 完成 显示功能设置
     52             
     53            经调试程序无bug，可以接收各个传感器消息。//3.22
     54            当我没说。。好像出了内存问题//3.22
     55            项目重构啦！，现在又只有一个小问题了/3.23
     56          *********************************************************************/
     57          
     58          /*********************************************************************
     59           * INCLUDES
     60           */
     61          
     62          #include "OSAL.h"
     63          #include "AF.h"
     64          #include "ZDObject.h"
     65          #include "ZDProfile.h"
     66          #include "nwk_util.h"
     67          
     68          #include "Smart_home.h"
     69          #include "OnBoard.h"
     70          
     71          #include "DebugTrace.h"
     72          #include "string.h"
     73          
     74          /* HAL */
     75          #include "hal_lcd.h"
     76          #include "hal_led.h"
     77          #include "hal_key.h"
     78          #include "hal_uart.h"
     79          
     80          /*********************************************************************
     81           * MACROS
     82           */
     83          /*设备链接相关设置*/
     84          /*判断设备是否在线的最大次数*/
     85          #define DEVICE_HEART_BEAT    3
     86          #define DEVICE_CHECK_DELAY   5000
     87          #define DEVICE_CHECK_TIMER   2000
     88          
     89          /*LCD相关设置*/
     90          /*单屏显示时常   MS*/
     91          #define LCD_DISPLAY_LENGTH   10000
     92          #define LCD_DISPLAY_TIMER    2000  //多久更新一次 
     93          
     94          /*关于显示部分相关的宏*/
     95          #define LCD_PAGE_MAX         4     //目前目录页最多4页
     96          
     97          /* 直流电机状态(status)定义*/
     98          #define  HAL_MOTOR_STOP            0x01
     99          #define  HAL_MOTOR_FORWARD         0x02
    100          #define  HAL_MOTOR_BACKWARD        0x03
    101          #define  MOTOR_MAX_SPEED           2400
    102          
    103          /*********************************************************************
    104           * CONSTANTS
    105           */
    106          
    107          #define SMART_HOME_PORT  0x00
    108          
    109          //#define SMART_HOME_BAUD  HAL_UART_BR_38400
    110          #define SMART_HOME_BAUD  HAL_UART_BR_115200
    111          
    112          // When the Rx buf space is less than this threshold, invoke the Rx callback.
    113          #define SMART_HOME_THRESH  64
    114          #define SMART_HOME_RX_SZ  128
    115          #define SMART_HOME_TX_SZ  128
    116          
    117          // Millisecs of idle time after a byte is received before invoking Rx callback.
    118          #define SMART_HOME_IDLE  6
    119          
    120          // Loopback Rx bytes to Tx for throughput testing.
    121          #define SMART_HOME_LOOPBACK  FALSE
    122          
    123          // This is the max byte count per OTA message.
    124          #if !defined( SMART_HOME_TX_MAX )
    125          #define SMART_HOME_TX_MAX  80
    126          #endif
    127          
    128          //3.14 This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    129          const cId_t Smart_home_ClusterList_IN[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
   \   000008   0500         DW 5
   \   00000A   0600         DW 6
   \   00000C   0700         DW 7
   \   00000E   0800         DW 8
   \   000010   0000         DW 0
    130          {
    131            Smart_home_CLUSTERID_HUMITMSG,              // 温湿度
    132            Smart_home_CLUSTERID_TEMPLIGHTMSG,          // 温度光照
    133            Smart_home_CLUSTERID_RFIDMSG,               // 射频卡
    134            Smart_home_CLUSTERID_GASFLAMEMSG,           // 烟雾火焰
    135            Smart_home_CLUSTERID_INFRAREDMSG,           // 人体红外
    136            Smart_home_CLUSTERID_SOUNDVBMSG,            // 声音振动
    137            Smart_home_CLUSTERID_MOTORSTATUSMSG,        // 直流电机状态信息
    138            Smart_home_CLUSTERID_RELAYSTATUSMSG         // 继电器
    139          };
    140          

   \                                 In  segment XDATA_ROM_C, align 1
    141          const cId_t Smart_home_ClusterList_OUT[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0900         DW 9
   \   000002   0B00         DW 11
   \   000004   0A00         DW 10
   \   000006   0000         DW 0
   \   000008   0000         DW 0
   \   00000A   0000         DW 0
   \   00000C   0000         DW 0
   \   00000E   0000         DW 0
   \   000010   0000         DW 0
    142          {
    143            Smart_home_CLUSTERID_TEXT,
    144            Smart_home_CLUSTERID_MOTORCTRL,             //直流电机控制
    145            Smart_home_CLUSTERID_RELAYCTRL              //继电器控制
    146          };
    147          

   \                                 In  segment XDATA_ROM_C, align 1
    148          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    149          {
    150            Smart_home_ENDPOINT,              //  int   Endpoint;
    151            Smart_home_PROFID,                //  uint16 AppProfId[2];
    152            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    153            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    154            Smart_home_FLAGS,                 //  int   AppFlags:4;
    155            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    156            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    157            Smart_home_MAX_OUTCLUSTERS,          //  byte  AppNumOutClusters;
    158            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    159          };
    160          

   \                                 In  segment XDATA_ROM_C, align 1
    161          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    162          {
    163            Smart_home_ENDPOINT,
    164            &Smart_home_TaskID,
    165            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    166            noLatencyReqs
    167          };
    168          
    169          /*********************************************************************
    170           * TYPEDEFS
    171           */
    172          
    173          /*********************************************************************
    174           * GLOBAL VARIABLES
    175           */
    176          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    177          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    178          
    179          /*********************************************************************
    180           * EXTERNAL VARIABLES
    181           */
    182          
    183          /*********************************************************************
    184           * EXTERNAL FUNCTIONS
    185           */
    186          
    187          /*********************************************************************
    188           * LOCAL VARIABLES
    189           */
    190          
    191          /*3.18 终端节点的设备详细信息缓存*/
    192          /*5.6 尝试利用离散变量的方式*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    193          DeviceInfo   DeviceList[Smart_home_MAX_INCLUSTERS];                      //设备列表  
   \                     DeviceList:
   \   000000                DS 63
   \   00003F                REQUIRE __INIT_XDATA_Z
    194          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    195          static uint8 DeviceCnt[Smart_home_MAX_INCLUSTERS];
   \                     DeviceCnt:
   \   000000                DS 9
   \   000009                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    196          static int8 Ctrlcase = 0;    //0用来控制屏幕显示，1控制继电器，2控制电机
   \                     Ctrlcase:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    197          static int8 LCD_Page  =  0;  //终端状态显示
   \                     LCD_Page:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    198          
    199          /*********************************************************************************
    200          //这些似乎会引起内存问题  3.22
    201          DeviceInfo *Humit = DeviceList+Smart_home_CLUSTERID_HUMITMSG;          //温湿度缓存
    202          DeviceInfo *TempLight = DeviceList+Smart_home_CLUSTERID_TEMPLIGHTMSG;  // 温度光照缓存
    203          DeviceInfo *RfID = DeviceList+Smart_home_CLUSTERID_RFIDMSG;            // RFID 信息缓存
    204          DeviceInfo *gasFlame = DeviceList+Smart_home_CLUSTERID_GASFLAMEMSG;    //气体火焰缓存
    205          DeviceInfo *infrared = DeviceList+Smart_home_CLUSTERID_INFRAREDMSG;    //人体红外
    206          DeviceInfo *motor = DeviceList+Smart_home_CLUSTERID_MOTORSTATUSMSG;     //电机状态
    207          DeviceInfo *relay = DeviceList+Smart_home_CLUSTERID_RELAYSTATUSMSG;    //继电器状态
    208          DeviceInfo *soundVb = DeviceList+Smart_home_CLUSTERID_SOUNDVBMSG;      //声音震动
    209          修改如下
    210          ***********************************************************************************/
    211          #define Humit     1     //温湿度缓存
    212          #define TempLight 2     // 温度光照缓存
    213          #define RfID      3     // RFID 信息缓存
    214          #define gasFlame  4     //气体火焰缓存
    215          #define infrared  5     //人体红外
    216          #define soundVb   6     //电机状态
    217          #define motor     7     //继电器状态
    218          #define relay     8     //声音震动
    219          
    220          /*3.14 消息发送部分*/
    221          /*3.17短地址存储*/
    222          /*
    223          static afAddrType_t Humit_addr;
    224          static afAddrType_t Light_addr;
    225          static afAddrType_t GasF_addr;
    226          static afAddrType_t Sound_addr;
    227          static afAddrType_t Card_addr;
    228          static afAddrType_t Infrared_addr;
    229          */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    230          static afAddrType_t Relay_addr;
   \                     Relay_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    231          static afAddrType_t Motor_addr;
   \                     Motor_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    232          
    233          /*消息发送数组*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    234          byte Coordinator_Msg[MSG_MAX_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    235          uint16 Smart_home_MaxDataLength;
   \                     Smart_home_MaxDataLength:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    236          
    237          /*3.19 协议栈中有但暂时不知道要他们干嘛的东西*/
    238          /*3.21 现在我会了！！！*/
    239          /*3.22 那些没用！删掉了！*/
    240          //static uint8 Smart_home_MsgID;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    241          static uint8 RelayTransID;  // This is the unique message ID (counter)
   \                     RelayTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    242          static uint8 MotorTransID;  // This is the unique message ID (counter)
   \                     MotorTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    243          
    244          /*********************************************************************
    245           * LOCAL FUNCTIONS
    246           */
    247          
    248          void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    249          //static void Smart_home_Key_add(uint8 Ctrlcase);
    250          void Smart_home_HandleKeys( byte shift, byte keys );
    251          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    252          void Smart_home_Device_check(void);
    253          void Smart_home_Relay_Ctl(uint8 cmd);
    254          void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed);
    255          void Smart_home_Display(void);
    256          void Smart_home_Motor_cmd(int8 speed);
    257          void Smart_home_CallBack(uint8 port, uint8 event);
    258          
    259          /*********************************************************************
    260           * @fn      Smart_home_Init
    261           *
    262           * @brief   This is called during OSAL tasks' initialization.
    263           *
    264           * @param   task_id - the Task ID assigned by OSAL.
    265           *
    266           * @return  none
    267           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    268          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    269          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 31
   \   000005   74E1         MOV     A,#-0x1f
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    270            halUARTCfg_t uartConfig;
    271            uint8 DeviceNum;                                    //DeviceList初始化用变量
    272            uint8 i;
    273            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   00000C                ; Setup parameters for call to function afRegister
   \   00000C   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   00000E   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   000010   12....       LCALL   ??afRegister?relay
    274            Smart_home_TaskID = task_id;
   \   000013   EE           MOV     A,R6
   \   000014   90....       MOV     DPTR,#Smart_home_TaskID
   \   000017   F0           MOVX    @DPTR,A
    275            MotorTransID = 0;
   \   000018   90....       MOV     DPTR,#MotorTransID
   \   00001B   E4           CLR     A
   \   00001C   F0           MOVX    @DPTR,A
    276            RelayTransID = 0;
   \   00001D   90....       MOV     DPTR,#RelayTransID
   \   000020   F0           MOVX    @DPTR,A
    277          
    278            RegisterForKeys( task_id );
   \   000021                ; Setup parameters for call to function RegisterForKeys
   \   000021   EE           MOV     A,R6
   \   000022   F9           MOV     R1,A
   \   000023   12....       LCALL   ??RegisterForKeys?relay
    279          
    280            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000026   7402         MOV     A,#0x2
   \   000028   12....       LCALL   ?XSTACK_DISP0_8
   \   00002B   7401         MOV     A,#0x1
   \   00002D   F0           MOVX    @DPTR,A
    281            uartConfig.baudRate             = SMART_HOME_BAUD;
   \   00002E   7403         MOV     A,#0x3
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7404         MOV     A,#0x4
   \   000035   F0           MOVX    @DPTR,A
    282            uartConfig.flowControl          = FALSE;
   \   000036   12....       LCALL   ?XSTACK_DISP0_8
   \   000039   E4           CLR     A
   \   00003A   F0           MOVX    @DPTR,A
    283            uartConfig.flowControlThreshold = SMART_HOME_THRESH; // 2x30 don't care - see uart driver.
   \   00003B   7405         MOV     A,#0x5
   \   00003D   12....       LCALL   ?XSTACK_DISP0_8
   \   000040   7440         MOV     A,#0x40
   \   000042   F0           MOVX    @DPTR,A
   \   000043   A3           INC     DPTR
   \   000044   E4           CLR     A
   \   000045   F0           MOVX    @DPTR,A
    284            uartConfig.rx.maxBufSize        = SMART_HOME_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000046   740C         MOV     A,#0xc
   \   000048   12....       LCALL   ?XSTACK_DISP0_8
   \   00004B   7480         MOV     A,#-0x80
   \   00004D   F0           MOVX    @DPTR,A
   \   00004E   A3           INC     DPTR
   \   00004F   E4           CLR     A
   \   000050   F0           MOVX    @DPTR,A
    285            uartConfig.tx.maxBufSize        = SMART_HOME_TX_SZ;  // 2x30 don't care - see uart driver.
   \   000051   7414         MOV     A,#0x14
   \   000053   12....       LCALL   ?XSTACK_DISP0_8
   \   000056   7480         MOV     A,#-0x80
   \   000058   F0           MOVX    @DPTR,A
   \   000059   A3           INC     DPTR
   \   00005A   E4           CLR     A
   \   00005B   F0           MOVX    @DPTR,A
    286            uartConfig.idleTimeout          = SMART_HOME_IDLE;   // 2x30 don't care - see uart driver.
   \   00005C   7407         MOV     A,#0x7
   \   00005E   12....       LCALL   ?XSTACK_DISP0_8
   \   000061   7406         MOV     A,#0x6
   \   000063   F0           MOVX    @DPTR,A
    287            uartConfig.intEnable            = FALSE;              // 2x30 don't care - see uart driver.
   \   000064   7418         MOV     A,#0x18
   \   000066   12....       LCALL   ?XSTACK_DISP0_8
   \   000069   E4           CLR     A
   \   00006A   F0           MOVX    @DPTR,A
    288            uartConfig.callBackFunc         = Smart_home_CallBack;
   \   00006B   741D         MOV     A,#0x1d
   \   00006D   12....       LCALL   ?XSTACK_DISP0_8
   \   000070   74..         MOV     A,#??Smart_home_CallBack?relay & 0xff
   \   000072   F0           MOVX    @DPTR,A
   \   000073   A3           INC     DPTR
   \   000074   74..         MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
   \   000076   F0           MOVX    @DPTR,A
    289            HalUARTOpen (SMART_HOME_PORT, &uartConfig);
   \   000077                ; Setup parameters for call to function HalUARTOpen
   \   000077   7402         MOV     A,#0x2
   \   000079   12....       LCALL   ?XSTACK_DISP0_8
   \   00007C   AA82         MOV     R2,DPL
   \   00007E   AB83         MOV     R3,DPH
   \   000080   7900         MOV     R1,#0x0
   \   000082   12....       LCALL   ??HalUARTOpen?relay
    290          
    291          #if !defined ( TRANSMITAPP_FRAGMENTED )
    292            afDataReqMTU_t mtu;
    293          #endif  
    294            
    295          #if defined ( LCD_SUPPORTED )
    296            HalLcdWriteString( "Smart_home", HAL_LCD_LINE_2 );
   \   000085                ; Setup parameters for call to function HalLcdWriteString
   \   000085   7902         MOV     R1,#0x2
   \   000087   7A..         MOV     R2,#`?<Constant "Smart_home">` & 0xff
   \   000089   7B..         MOV     R3,#(`?<Constant "Smart_home">` >> 8) & 0xff
   \   00008B   12....       LCALL   ??HalLcdWriteString?relay
    297          #endif
    298            
    299          #if (HAL_UART == TRUE)
    300            HalUARTWrite(HAL_UART_PORT_0, "Init Success!\n",   strlen("Init Success!\n"));
   \   00008E                ; Setup parameters for call to function HalUARTWrite
   \   00008E   7C0E         MOV     R4,#0xe
   \   000090   7D00         MOV     R5,#0x0
   \   000092   7A..         MOV     R2,#`?<Constant "Init Success!\\n">` & 0xff
   \   000094   7B..         MOV     R3,#(`?<Constant "Init Success!\\n">` >> 8) & 0xff
   \   000096   12....       LCALL   ?Subroutine12 & 0xFFFF
    301          #endif
    302            
    303            // Set the data length
    304          #if defined ( Smart_Home_FRAGMENTED )
    305            Smart_home_MaxDataLength = MSG_MAX_LEN;
    306          #else
    307            mtu.kvp        = FALSE;
   \                     ??CrossCallReturnLabel_26:
   \   000099   E4           CLR     A
   \   00009A   F0           MOVX    @DPTR,A
    308            mtu.aps.secure = FALSE;
   \   00009B   04           INC     A
   \   00009C   12....       LCALL   ?XSTACK_DISP0_8
   \   00009F   E4           CLR     A
   \   0000A0   F0           MOVX    @DPTR,A
    309            Smart_home_MaxDataLength = afDataReqMTU( &mtu );
   \   0000A1                ; Setup parameters for call to function afDataReqMTU
   \   0000A1   85..82       MOV     DPL,?XSP + 0
   \   0000A4   85..83       MOV     DPH,?XSP + 1
   \   0000A7   AA82         MOV     R2,DPL
   \   0000A9   AB83         MOV     R3,DPH
   \   0000AB   12....       LCALL   ??afDataReqMTU?relay
   \   0000AE   E9           MOV     A,R1
   \   0000AF   90....       MOV     DPTR,#Smart_home_MaxDataLength
   \   0000B2   F0           MOVX    @DPTR,A
   \   0000B3   A3           INC     DPTR
   \   0000B4   E4           CLR     A
   \   0000B5   F0           MOVX    @DPTR,A
    310          #endif
    311            
    312            for(i=0;i<Smart_home_MaxDataLength;i++)
   \   0000B6   90....       MOV     DPTR,#Smart_home_MaxDataLength
   \   0000B9   E0           MOVX    A,@DPTR
   \   0000BA   6014         JZ      ??Smart_home_Init_0
    313            {
    314              Coordinator_Msg[i] = 0;
   \   0000BC   F8           MOV     R0,A
   \   0000BD   7900         MOV     R1,#0x0
   \   0000BF   90....       MOV     DPTR,#Coordinator_Msg
   \                     ??Smart_home_Init_1:
   \   0000C2   E4           CLR     A
   \   0000C3   F0           MOVX    @DPTR,A
   \   0000C4   A3           INC     DPTR
   \   0000C5   E8           MOV     A,R0
   \   0000C6   24FF         ADD     A,#-0x1
   \   0000C8   18           DEC     R0
   \   0000C9   E9           MOV     A,R1
   \   0000CA   34FF         ADDC    A,#-0x1
   \   0000CC   F9           MOV     R1,A
   \   0000CD   48           ORL     A,R0
   \   0000CE   70F2         JNZ     ??Smart_home_Init_1
    315            }
    316            
    317            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \                     ??Smart_home_Init_0:
   \   0000D0                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000D0   7A20         MOV     R2,#0x20
   \   0000D2   7B80         MOV     R3,#-0x80
   \   0000D4   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000D7   E0           MOVX    A,@DPTR
   \   0000D8   F9           MOV     R1,A
   \   0000D9   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    318            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   0000DC                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000DC   7A06         MOV     R2,#0x6
   \   0000DE   7B80         MOV     R3,#-0x80
   \   0000E0   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000E3   E0           MOVX    A,@DPTR
   \   0000E4   F9           MOV     R1,A
   \   0000E5   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    319            
    320            //3.22 显示延时
    321            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DISPLAY_EVT, 
    322                                LCD_DISPLAY_LENGTH);
   \   0000E8                ; Setup parameters for call to function osal_start_timerEx
   \   0000E8   7C10         MOV     R4,#0x10
   \   0000EA   7D27         MOV     R5,#0x27
   \   0000EC   7A10         MOV     R2,#0x10
   \   0000EE   12....       LCALL   ??Subroutine30_0 & 0xFFFF
    323            
    324            
    325            //3.14 打开设备在线检测，第一次开启检测延时较长时间
    326            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DEVICE_CHECK_EVT, 
    327                                DEVICE_CHECK_DELAY);
   \                     ??CrossCallReturnLabel_64:
   \   0000F1                ; Setup parameters for call to function osal_start_timerEx
   \   0000F1   7C88         MOV     R4,#-0x78
   \   0000F3   7D13         MOV     R5,#0x13
   \   0000F5   12....       LCALL   ?Subroutine16 & 0xFFFF
    328           
    329            //3.13 关闭LED灯(D4)，表示协调器默认不允许组网
    330            NLME_PermitJoiningRequest(0x00);
   \                     ??CrossCallReturnLabel_62:
   \   0000F8                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   0000F8   7900         MOV     R1,#0x0
   \   0000FA   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    331            HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);
   \   0000FD                ; Setup parameters for call to function HalLedSet
   \   0000FD   7A00         MOV     R2,#0x0
   \   0000FF   7901         MOV     R1,#0x1
   \   000101   12....       LCALL   ??HalLedSet?relay
    332            HalLedSet(HAL_LED_2, HAL_LED_MODE_OFF);
   \   000104                ; Setup parameters for call to function HalLedSet
   \   000104   7A00         MOV     R2,#0x0
   \   000106   7902         MOV     R1,#0x2
   \   000108   12....       LCALL   ??HalLedSet?relay
    333            
    334            //3.21 初始化页面为0 第一页
    335            //LCD_Page=0;
    336            
    337            //3.13 设备离线状态检测初始化，初始化为离线
    338            //3.21 修改为DeviceList方式，初始化DeviceCnt
    339            for(DeviceNum=0;DeviceNum<Smart_home_MAX_INCLUSTERS;DeviceNum++) //只初始化终端
   \   00010B   7D00         MOV     R5,#0x0
    340            {
    341              DeviceList[DeviceNum].deviceid = DeviceNum;
   \                     ??Smart_home_Init_2:
   \   00010D   8D82         MOV     DPL,R5
   \   00010F   A882         MOV     R0,DPL
   \   000111   E8           MOV     A,R0
   \   000112   75F007       MOV     B,#0x7
   \   000115   A4           MUL     AB
   \   000116   FA           MOV     R2,A
   \   000117   ABF0         MOV     R3,B
   \   000119   74..         MOV     A,#DeviceList & 0xff
   \   00011B   2A           ADD     A,R2
   \   00011C   F582         MOV     DPL,A
   \   00011E   74..         MOV     A,#(DeviceList >> 8) & 0xff
   \   000120   3B           ADDC    A,R3
   \   000121   F583         MOV     DPH,A
   \   000123   ED           MOV     A,R5
   \   000124   F0           MOVX    @DPTR,A
    342              DeviceList[DeviceNum].deviceStatus = DEVICE_OFFLINE;
   \   000125   A3           INC     DPTR
   \   000126   7402         MOV     A,#0x2
   \   000128   F0           MOVX    @DPTR,A
    343              DeviceCnt[DeviceNum]=0;
   \   000129   74..         MOV     A,#DeviceCnt & 0xff
   \   00012B   28           ADD     A,R0
   \   00012C   F582         MOV     DPL,A
   \   00012E   74..         MOV     A,#(DeviceCnt >> 8) & 0xff
   \   000130   3400         ADDC    A,#0x0
   \   000132   F583         MOV     DPH,A
   \   000134   E4           CLR     A
   \   000135   F0           MOVX    @DPTR,A
    344              //printf("%d \n",&DeviceNum);
    345            }
   \   000136   0D           INC     R5
   \   000137   ED           MOV     A,R5
   \   000138   C3           CLR     C
   \   000139   9409         SUBB    A,#0x9
   \   00013B   40D0         JC      ??Smart_home_Init_2
    346          }
   \   00013D   741F         MOV     A,#0x1f
   \   00013F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000142                REQUIRE ?Subroutine0
   \   000142                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   7A80         MOV     R2,#-0x80
   \   000002                REQUIRE ??Subroutine30_0
   \   000002                ; // Fall through to label ??Subroutine30_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine30_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   7900         MOV     R1,#0x0
   \   000002   12....       LCALL   ??HalUARTWrite?relay
   \   000005                ; Setup parameters for call to function osal_msg_deallocate
   \   000005   85..82       MOV     DPL,?XSP + 0
   \   000008   85..83       MOV     DPH,?XSP + 1
   \   00000B   22           RET
    347          
    348          /*********************************************************************
    349           * @fn      Smart_home_ProcessEvent
    350           *
    351           * @brief   Generic Application Task event processor.
    352           *
    353           * @param   task_id  - The OSAL assigned task ID.
    354           * @param   events   - Bit map of events to process.
    355           *
    356           * @return  Event flags of all unprocessed events.
    357           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    358          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    359          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    360            afIncomingMSGPacket_t *MSGpkt;
    361            (void)task_id;  // Intentionally unreferenced parameter
    362            afDataConfirm_t *afDataConfirm;
    363            
    364            //3.13 数据确认消息字段
    365            ZStatus_t sentStatus;
    366            byte sentEP;
    367            
    368            if ( events & SYS_EVENT_MSG )   //3.13 系统消息事件
   \   000009   5480         ANL     A,#0x80
   \   00000B   701C         JNZ     ??Smart_home_ProcessEvent_0
    369            {
    370              
    371              
    372              
    373              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    374              {
    375                switch ( MSGpkt->hdr.event )
    376                {
    377                  case ZDO_CB_MSG:           //3.13 ZDO传入消息回调
    378                    Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    379                    break;
    380                    
    381                  case KEY_CHANGE:           //3.13 按键事件
    382                    Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    383                    break;
    384                   
    385                  case AF_DATA_CONFIRM_CMD:
    386                  //3.13 接收到此消息，作为对发送的数据包的确认。
    387                  //状态为ZStatus_t类型[在ZComDef.h中定义]
    388                  //消息字段在AF.h中定义
    389                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    390                    sentEP = afDataConfirm->endpoint;
    391                    sentStatus = afDataConfirm->hdr.status;
    392           
    393                    if ( (ZSuccess == sentStatus) &&
    394                         (Smart_home_epDesc.endPoint == sentEP) )
    395                    {  
    396                      //3.13 在消息发送确认成功后绿灯闪烁一下
    397                      //HalLedSet(HAL_LED_1, HAL_LED_MODE_BLINK);
    398                    }
    399                    break;
    400                    
    401                  case AF_INCOMING_MSG_CMD:   //3.13 消息传入处理
    402                    //3.13 在消息接收确认成功后绿灯闪烁一下
    403                    
    404                    Smart_home_ProcessMSGCmd( MSGpkt );
    405                    //HalLedSet(HAL_LED_1, HAL_LED_MODE_BLINK);
    406                    break;
    407                    
    408                  case ZDO_STATE_CHANGE:
    409                    break;
    410                    
    411                  default:
    412                    break;
    413                }
    414          
    415                osal_msg_deallocate( (uint8 *)MSGpkt );
    416                
    417                // Next
    418                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID );
    419              }
    420              
    421              // Squash compiler warnings until values are used.
    422              (void)sentStatus;
    423              (void)sentEP;
    424          
    425              return ( events ^ SYS_EVENT_MSG );
    426            }
    427          
    428            if ( events & SMART_HOME_SEND_MSG_EVT )
   \   00000D   EE           MOV     A,R6
   \   00000E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000010   5050         JNC     ??Smart_home_ProcessEvent_1
    429            {
    430              //Smart_home_Send();
    431              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   000012   6401         XRL     A,#0x1
   \   000014   FA           MOV     R2,A
   \   000015   807F         SJMP    ??Smart_home_ProcessEvent_2
    432            }
   \                     ??Smart_home_ProcessEvent_3:
   \   000017                ; Setup parameters for call to function Smart_home_ProcessMSGCmd
   \   000017   12....       LCALL   ??Smart_home_ProcessMSGCmd?relay
   \                     ??Smart_home_ProcessEvent_4:
   \   00001A                ; Setup parameters for call to function osal_msg_deallocate
   \   00001A   AA..         MOV     R2,?V0 + 0
   \   00001C   AB..         MOV     R3,?V0 + 1
   \   00001E   12....       LCALL   ??osal_msg_deallocate?relay
   \   000021                ; Setup parameters for call to function osal_msg_receive
   \   000021   90....       MOV     DPTR,#Smart_home_TaskID
   \   000024   E0           MOVX    A,@DPTR
   \   000025   F9           MOV     R1,A
   \   000026   12....       LCALL   ??osal_msg_receive?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   000029                ; Setup parameters for call to function osal_msg_receive
   \   000029   90....       MOV     DPTR,#Smart_home_TaskID
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   F9           MOV     R1,A
   \   00002E   12....       LCALL   ??osal_msg_receive?relay
   \   000031   8A..         MOV     ?V0 + 0,R2
   \   000033   8B..         MOV     ?V0 + 1,R3
   \   000035   EA           MOV     A,R2
   \   000036   45..         ORL     A,?V0 + 1
   \   000038   6020         JZ      ??Smart_home_ProcessEvent_5
   \   00003A   8A82         MOV     DPL,R2
   \   00003C   8B83         MOV     DPH,R3
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   24E6         ADD     A,#-0x1a
   \   000041   60D4         JZ      ??Smart_home_ProcessEvent_3
   \   000043   245A         ADD     A,#0x5a
   \   000045   70D3         JNZ     ??Smart_home_ProcessEvent_4
   \   000047                ; Setup parameters for call to function Smart_home_HandleKeys
   \   000047   A3           INC     DPTR
   \   000048   A3           INC     DPTR
   \   000049   A3           INC     DPTR
   \   00004A   E0           MOVX    A,@DPTR
   \   00004B   FA           MOV     R2,A
   \   00004C   85..82       MOV     DPL,?V0 + 0
   \   00004F   8B83         MOV     DPH,R3
   \   000051   A3           INC     DPTR
   \   000052   A3           INC     DPTR
   \   000053   E0           MOVX    A,@DPTR
   \   000054   F9           MOV     R1,A
   \   000055   12....       LCALL   ??Smart_home_HandleKeys?relay
   \   000058   80C0         SJMP    ??Smart_home_ProcessEvent_4
   \                     ??Smart_home_ProcessEvent_5:
   \   00005A   EE           MOV     A,R6
   \   00005B   FA           MOV     R2,A
   \   00005C   EF           MOV     A,R7
   \   00005D   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_6:
   \   00005F   FB           MOV     R3,A
   \   000060   8034         SJMP    ??Smart_home_ProcessEvent_2
    433            
    434            if ( events & SMART_HOME_DEVICE_CHECK_EVT )  //终端设备检查事件
   \                     ??Smart_home_ProcessEvent_1:
   \   000062   5480         ANL     A,#0x80
   \   000064   6011         JZ      ??Smart_home_ProcessEvent_7
    435            {
    436              Smart_home_Device_check();  //调用终端设备检查函数
   \   000066                ; Setup parameters for call to function Smart_home_Device_check
   \   000066   12....       LCALL   ??Smart_home_Device_check?relay
    437              
    438              osal_start_timerEx(Smart_home_TaskID,SMART_HOME_DEVICE_CHECK_EVT,
    439                                 DEVICE_CHECK_TIMER);
   \   000069                ; Setup parameters for call to function osal_start_timerEx
   \   000069   7CD0         MOV     R4,#-0x30
   \   00006B   7D07         MOV     R5,#0x7
   \   00006D   12....       LCALL   ?Subroutine16 & 0xFFFF
    440              return (events ^ SMART_HOME_DEVICE_CHECK_EVT);
   \                     ??CrossCallReturnLabel_63:
   \   000070   EE           MOV     A,R6
   \   000071   6480         XRL     A,#0x80
   \   000073   FA           MOV     R2,A
   \   000074   EF           MOV     A,R7
   \   000075   80E8         SJMP    ??Smart_home_ProcessEvent_6
    441            }
    442            
    443            
    444            if( events & SMART_HOME_DISPLAY_EVT )
   \                     ??Smart_home_ProcessEvent_7:
   \   000077   EE           MOV     A,R6
   \   000078   5410         ANL     A,#0x10
   \   00007A   6016         JZ      ??Smart_home_ProcessEvent_8
    445            {
    446              Smart_home_Display();
   \   00007C                ; Setup parameters for call to function Smart_home_Display
   \   00007C   12....       LCALL   ??Smart_home_Display?relay
    447              //周期性刷新
    448              osal_start_timerEx( Smart_home_TaskID,events & SMART_HOME_DISPLAY_EVT,LCD_DISPLAY_TIMER);
   \   00007F                ; Setup parameters for call to function osal_start_timerEx
   \   00007F   7CD0         MOV     R4,#-0x30
   \   000081   7D07         MOV     R5,#0x7
   \   000083   EE           MOV     A,R6
   \   000084   5410         ANL     A,#0x10
   \   000086   FA           MOV     R2,A
   \   000087   12....       LCALL   ??Subroutine30_0 & 0xFFFF
    449              return (events ^ SMART_HOME_DISPLAY_EVT);
   \                     ??CrossCallReturnLabel_65:
   \   00008A   EE           MOV     A,R6
   \   00008B   6410         XRL     A,#0x10
   \   00008D   FA           MOV     R2,A
   \   00008E   EF           MOV     A,R7
   \   00008F   FB           MOV     R3,A
   \   000090   8004         SJMP    ??Smart_home_ProcessEvent_2
    450            }
    451          
    452            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_8:
   \   000092   7A00         MOV     R2,#0x0
   \   000094   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_2:
   \   000096   7F04         MOV     R7,#0x4
   \   000098   02....       LJMP    ?BANKED_LEAVE_XDATA
    453          }
    454          
    455          /*********************************************************************
    456           * @fn      Smart_home_ProcessZDOMsgs()
    457           *
    458           * @brief   Process response messages
    459           *
    460           * @param   none
    461           *
    462           * @return  none
    463           */
    464          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
    465          {
    466            /*
    467            switch ( inMsg->clusterID )
    468            {
    469              case End_Device_Bind_rsp:
    470                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    471                {
    472                  // Light LED
    473                  HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    474                }
    475          #if defined(BLINK_LEDS)
    476                else
    477                {
    478                  // Flash LED to show failure
    479                  HalLedSet ( HAL_LED_4, HAL_LED_MODE_FLASH );
    480                }
    481          #endif
    482                break;
    483                
    484              case Match_Desc_rsp:
    485                {
    486                  ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
    487                  if ( pRsp )
    488                  {
    489                    if ( pRsp->status == ZSuccess && pRsp->cnt )
    490                    {
    491                      
    492                      Smart_home_TxAddr.addrMode = (afAddrMode_t)Addr16Bit;
    493                      Smart_home_TxAddr.addr.shortAddr = pRsp->nwkAddr;
    494                      // Take the first endpoint, Can be changed to search through endpoints
    495                      Smart_home_TxAddr.endPoint = pRsp->epList[0];
    496                      
    497                      
    498                      // Light LED
    499                      HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    500                    }
    501                    osal_mem_free( pRsp );
    502                  }
    503                }
    504                break;
    505            }
    506            */
    507          }
    508          
    509          /*********************************************************************
    510           * @fn      Smart_home_Key_add
    511           *
    512           * @brief   3.21新增，用来标识目前处于的控制状态，是附加项
    513           *          0 控制屏幕 1 控制继电器 2 控制电机
    514           *            
    515           *
    516           * @param   Ctrlcase 目前的控制号
    517           *
    518           * @return  屏幕回显
    519           *
    520          static void Smart_home_Key_add(uint8 Ctrlcase)
    521          {
    522          #if defined ( LCD_SUPPORTED )
    523            switch(Ctrlcase)
    524            {
    525              default:    
    526              case 0:
    527                HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
    528                //清除屏幕显示
    529                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    530                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    531                break;
    532              
    533              case 1:
    534                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
    535                //清除屏幕显示
    536                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    537                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    538                if(DeviceList[relay].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    539                {
    540                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
    541                }
    542                if(DeviceList[relay].deviceStatus != DEVICE_ONLINE)
    543                {
    544                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
    545                }
    546                break;
    547              
    548              case 2:
    549                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
    550                //清除屏幕显示
    551                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    552                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    553                if(DeviceList[motor].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    554                {
    555                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 );
    556                }
    557                if(DeviceList[motor].deviceStatus != DEVICE_ONLINE)
    558                {
    559                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
    560                }      
    561                break;
    562          #endif     
    563            }
    564          }
    565          */
    566          /*********************************************************************
    567           * @fn      Smart_home_Motor_cmd
    568           * 
    569           * @brief   通过电机速度判断电机转向
    570           * 
    571           * 
    572           * @param   uint8 电机转速
    573           * 
    574           * @return  
    575           *          #define  HAL_MOTOR_STOP            0x01
    576           *          #define  HAL_MOTOR_FORWARD         0x02
    577           *          #define  HAL_MOTOR_BACKWARD        0x03
    578           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    579          void Smart_home_Motor_cmd(int8 speed)
   \                     Smart_home_Motor_cmd:
    580          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    581            uint8 outspeed;
    582            uint8 cmd;
    583            if(speed == 0)
   \   000007   7006         JNZ     ??Smart_home_Motor_cmd_0
    584            {
    585              outspeed = 0;
   \                     ??Smart_home_Motor_cmd_1:
   \   000009   7F00         MOV     R7,#0x0
    586              cmd = HAL_MOTOR_STOP;
   \   00000B   7A01         MOV     R2,#0x1
   \   00000D   8021         SJMP    ??Smart_home_Motor_cmd_2
    587            }   
    588            else if(speed > 0)
   \                     ??Smart_home_Motor_cmd_0:
   \   00000F   C3           CLR     C
   \   000010   9401         SUBB    A,#0x1
   \   000012   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000014   65D0         XRL     A,PSW
   \   000016   33           RLC     A
   \   000017   EE           MOV     A,R6
   \   000018   4005         JC      ??Smart_home_Motor_cmd_3
    589            {
    590              outspeed = speed;
   \   00001A   FF           MOV     R7,A
    591              cmd = HAL_MOTOR_FORWARD;
   \   00001B   7A02         MOV     R2,#0x2
   \   00001D   8011         SJMP    ??Smart_home_Motor_cmd_2
    592            }
    593            
    594            else if(speed < 0)
   \                     ??Smart_home_Motor_cmd_3:
   \   00001F   C3           CLR     C
   \   000020   9400         SUBB    A,#0x0
   \   000022   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000024   65D0         XRL     A,PSW
   \   000026   33           RLC     A
   \   000027   50E0         JNC     ??Smart_home_Motor_cmd_1
    595            {
    596              outspeed = 0xff - speed;
   \   000029   74FF         MOV     A,#-0x1
   \   00002B   C3           CLR     C
   \   00002C   9E           SUBB    A,R6
   \   00002D   FF           MOV     R7,A
    597              cmd = HAL_MOTOR_BACKWARD;
   \   00002E   7A03         MOV     R2,#0x3
    598            }
    599            
    600            else
    601            {
    602              outspeed = 0;
    603              cmd = HAL_MOTOR_STOP;    
    604            }
    605            Smart_home_Motor_Ctl(cmd,outspeed); 
   \                     ??Smart_home_Motor_cmd_2:
   \   000030   90....       MOV     DPTR,#DeviceList + 50
   \   000033   E0           MOVX    A,@DPTR
   \   000034   6402         XRL     A,#0x2
   \   000036   607A         JZ      ??Smart_home_Motor_cmd_4
   \   000038   90....       MOV     DPTR,#MotorTransID
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   C4           SWAP    A
   \   00003D   540F         ANL     A,#0xf
   \   00003F   FB           MOV     R3,A
   \   000040   C3           CLR     C
   \   000041   940A         SUBB    A,#0xa
   \   000043   5004         JNC     ??Smart_home_Motor_cmd_5
   \   000045   7830         MOV     R0,#0x30
   \   000047   8002         SJMP    ??Smart_home_Motor_cmd_6
   \                     ??Smart_home_Motor_cmd_5:
   \   000049   7837         MOV     R0,#0x37
   \                     ??Smart_home_Motor_cmd_6:
   \   00004B   E8           MOV     A,R0
   \   00004C   2B           ADD     A,R3
   \   00004D   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000050   F0           MOVX    @DPTR,A
   \   000051   90....       MOV     DPTR,#MotorTransID
   \   000054   E0           MOVX    A,@DPTR
   \   000055   540F         ANL     A,#0xf
   \   000057   FB           MOV     R3,A
   \   000058   C3           CLR     C
   \   000059   940A         SUBB    A,#0xa
   \   00005B   5004         JNC     ??Smart_home_Motor_cmd_7
   \   00005D   7830         MOV     R0,#0x30
   \   00005F   8002         SJMP    ??Smart_home_Motor_cmd_8
   \                     ??Smart_home_Motor_cmd_7:
   \   000061   7837         MOV     R0,#0x37
   \                     ??Smart_home_Motor_cmd_8:
   \   000063   E8           MOV     A,R0
   \   000064   2B           ADD     A,R3
   \   000065   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   000068   F0           MOVX    @DPTR,A
   \   000069   EF           MOV     A,R7
   \   00006A   A3           INC     DPTR
   \   00006B   F0           MOVX    @DPTR,A
   \   00006C   EA           MOV     A,R2
   \   00006D   A3           INC     DPTR
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F                ; Setup parameters for call to function AF_DataRequest
   \   00006F   75..1E       MOV     ?V0 + 0,#0x1e
   \   000072   78..         MOV     R0,#?V0 + 0
   \   000074   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000077   75....       MOV     ?V0 + 0,#MotorTransID & 0xff
   \   00007A   75....       MOV     ?V0 + 1,#(MotorTransID >> 8) & 0xff
   \   00007D   78..         MOV     R0,#?V0 + 0
   \   00007F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000082   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000085   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   000088   78..         MOV     R0,#?V0 + 0
   \   00008A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008D   75..06       MOV     ?V0 + 0,#0x6
   \   000090   75..00       MOV     ?V0 + 1,#0x0
   \   000093   78..         MOV     R0,#?V0 + 0
   \   000095   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000098   75..0B       MOV     ?V0 + 0,#0xb
   \   00009B   78..         MOV     R0,#?V0 + 0
   \   00009D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A0   7920         MOV     R1,#0x20
   \   0000A2   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   0000A4   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   0000A6   7A..         MOV     R2,#Motor_addr & 0xff
   \   0000A8   7B..         MOV     R3,#(Motor_addr >> 8) & 0xff
   \   0000AA   12....       LCALL   ??AF_DataRequest?relay
   \   0000AD   7409         MOV     A,#0x9
   \   0000AF   12....       LCALL   ?DEALLOC_XSTACK8
    606          }
   \                     ??Smart_home_Motor_cmd_4:
   \   0000B2   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    607          
    608          /*********************************************************************
    609           * @fn      Smart_home_HandleKeys
    610           *
    611           * @brief   设置按键事件
    612           *          目前事件设置    3.19
    613           *
    614           *          HAL_KEY_SW_1--UP     (上翻一页)
    615           *          HAL_KEY_SW_2--RIGHT  (选项向右)
    616           *          HAL_KEY_SW_3--DOWN   (下翻一页)
    617           *          HAL_KEY_SW_4--LEFT   (选项向左)
    618           *          HAL_KEY_SW_5--OK     (组网开)
    619           *          HAL_KEY_SW_7--CANCEL (组网关) 
    620           * + 3.21 新增  选项总共有3种，控制屏幕显示，控制继电器和控制电机
    621           *              控制继电器时 UP控制1，DOWN控制2
    622           *              控制电机时   UP加速， DOWN减速
    623           *
    624           * @param   shift - true if in shift/alt.
    625           * @param   keys  - bit field for key events.
    626           *
    627           * @return  none
    628           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    629          void Smart_home_HandleKeys( byte shift, byte keys )
   \                     Smart_home_HandleKeys:
    630          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    631            //zAddrType_t txAddr;
    632            static int8 MotorSpeed = 0;
    633            static uint8 NetWorkAllow = 0;
    634            /*这里这么设置似乎会出现内存问题
    635            static uint8 Relay1_on = 0x02;  //两个默认都是关闭
    636            static uint8 Relay2_on = 0x10;
    637            */
    638            /*3.21 LCD 显示*/
    639            static uint8 Relay1_on = 0;  //两个默认都是关闭
    640            static uint8 Relay2_on = 0;
    641            
    642            
    643            if ( keys & HAL_KEY_SW_1 )  //UP
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5059         JNC     ??Smart_home_HandleKeys_0
    644            {
    645              switch(Ctrlcase)
   \   00000B   90....       MOV     DPTR,#Ctrlcase
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   14           DEC     A
   \   000010   6017         JZ      ??Smart_home_HandleKeys_1
   \   000012   14           DEC     A
   \   000013   602A         JZ      ??Smart_home_HandleKeys_2
    646              {
    647                default:    
    648                case 0:
    649                {
    650                  if(LCD_Page < LCD_PAGE_MAX)       {LCD_Page++;}
   \   000015   90....       MOV     DPTR,#LCD_Page
   \   000018   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   00001B   5003         JNC     ??Smart_home_HandleKeys_3
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   04           INC     A
   \   00001F   F0           MOVX    @DPTR,A
    651                  if(LCD_Page > LCD_PAGE_MAX - 1)       {LCD_Page = 0;}
   \                     ??Smart_home_HandleKeys_3:
   \   000020   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   000023   403F         JC      ??Smart_home_HandleKeys_0
   \   000025   E4           CLR     A
   \   000026   F0           MOVX    @DPTR,A
   \   000027   803B         SJMP    ??Smart_home_HandleKeys_0
    652                  break;
    653                }
    654                case 1:
    655                {  
    656                  uint8 switch1;
    657                  if(Relay1_on == 0)  {Relay1_on = 1 ; switch1 = 0x02;}
   \                     ??Smart_home_HandleKeys_1:
   \   000029   90....       MOV     DPTR,#??Relay1_on
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   7007         JNZ     ??Smart_home_HandleKeys_4
   \   00002F   7401         MOV     A,#0x1
   \   000031   F0           MOVX    @DPTR,A
   \   000032   7902         MOV     R1,#0x2
   \   000034   8004         SJMP    ??Smart_home_HandleKeys_5
    658                  else if(Relay1_on == 1)  {Relay1_on = 0; switch1 = 0x01;}
   \                     ??Smart_home_HandleKeys_4:
   \   000036   E4           CLR     A
   \   000037   F0           MOVX    @DPTR,A
   \   000038   7901         MOV     R1,#0x1
    659                  else  {Relay1_on = 0; switch1 = 0x01;}       
    660                  Smart_home_Relay_Ctl(switch1);  
   \                     ??Smart_home_HandleKeys_5:
   \   00003A                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   00003A   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    661                  break;
   \   00003D   8025         SJMP    ??Smart_home_HandleKeys_0
    662                } 
    663                case 2:
    664                {
    665                  if(MotorSpeed < 50)     {MotorSpeed += 10;}
   \                     ??Smart_home_HandleKeys_2:
   \   00003F   90....       MOV     DPTR,#??MotorSpeed
   \   000042   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   000045   5004         JNC     ??Smart_home_HandleKeys_6
   \   000047   E0           MOVX    A,@DPTR
   \   000048   240A         ADD     A,#0xa
   \   00004A   F0           MOVX    @DPTR,A
    666                  if(MotorSpeed >= 50)     
   \                     ??Smart_home_HandleKeys_6:
   \   00004B   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   00004E   400F         JC      ??Smart_home_HandleKeys_7
    667                  {
    668          #if defined ( LCD_SUPPORTED )
    669                     HalLcdWriteString( "Motor max Speed", HAL_LCD_LINE_4 );
   \   000050                ; Setup parameters for call to function HalLcdWriteString
   \   000050   7904         MOV     R1,#0x4
   \   000052   7A..         MOV     R2,#`?<Constant "Motor max Speed">` & 0xff
   \   000054   7B..         MOV     R3,#(`?<Constant "Motor max Speed">` >> 8) & 0xff
   \   000056   12....       LCALL   ??HalLcdWriteString?relay
    670          #endif 
    671                     MotorSpeed = 50;
   \   000059   90....       MOV     DPTR,#??MotorSpeed
   \   00005C   7432         MOV     A,#0x32
   \   00005E   F0           MOVX    @DPTR,A
    672                  }
    673                  Smart_home_Motor_cmd(MotorSpeed);
   \                     ??Smart_home_HandleKeys_7:
   \   00005F                ; Setup parameters for call to function Smart_home_Motor_cmd
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   F9           MOV     R1,A
   \   000061   12....       LCALL   ??Smart_home_Motor_cmd?relay
    674                  
    675                  break;
    676                }
    677                   
    678              }    
    679            }
    680            
    681            if ( keys & HAL_KEY_SW_3 )  //DOWN
   \                     ??Smart_home_HandleKeys_0:
   \   000064   EE           MOV     A,R6
   \   000065   A2E4         MOV     C,0xE0 /* A   */.4
   \   000067   5064         JNC     ??Smart_home_HandleKeys_8
    682            {
    683              switch(Ctrlcase)
   \   000069   90....       MOV     DPTR,#Ctrlcase
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   14           DEC     A
   \   00006E   6018         JZ      ??Smart_home_HandleKeys_9
   \   000070   14           DEC     A
   \   000071   6035         JZ      ??Smart_home_HandleKeys_10
    684              {
    685                default:    
    686                case 0:
    687                {
    688                  if(LCD_Page >= 0)       {LCD_Page--;}
   \   000073   90....       MOV     DPTR,#LCD_Page
   \   000076   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   000079   4003         JC      ??Smart_home_HandleKeys_11
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   14           DEC     A
   \   00007D   F0           MOVX    @DPTR,A
    689                  if(LCD_Page < 0)        {LCD_Page = LCD_PAGE_MAX;}
   \                     ??Smart_home_HandleKeys_11:
   \   00007E   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   000081   504A         JNC     ??Smart_home_HandleKeys_8
   \   000083   7404         MOV     A,#0x4
   \   000085   F0           MOVX    @DPTR,A
   \   000086   8045         SJMP    ??Smart_home_HandleKeys_8
    690                  break;
    691                }
    692                case 1:  
    693                {
    694                  uint8 switch2;
    695                  if(Relay2_on == 0)  {Relay2_on = 1 ; switch2 = 0x20;}
   \                     ??Smart_home_HandleKeys_9:
   \   000088   90....       MOV     DPTR,#??Relay2_on
   \   00008B   E0           MOVX    A,@DPTR
   \   00008C   7007         JNZ     ??Smart_home_HandleKeys_12
   \   00008E   7401         MOV     A,#0x1
   \   000090   F0           MOVX    @DPTR,A
   \   000091   7920         MOV     R1,#0x20
   \   000093   800E         SJMP    ??Smart_home_HandleKeys_13
    696                  else if(Relay2_on == 1)  {Relay2_on = 0; switch2 = 0x10;}
   \                     ??Smart_home_HandleKeys_12:
   \   000095   6401         XRL     A,#0x1
   \   000097   7006         JNZ     ??Smart_home_HandleKeys_14
   \   000099   E4           CLR     A
   \   00009A   F0           MOVX    @DPTR,A
   \   00009B   7910         MOV     R1,#0x10
   \   00009D   8004         SJMP    ??Smart_home_HandleKeys_13
    697                  else  {Relay2_on = 0; switch2 = 0x01;}       
   \                     ??Smart_home_HandleKeys_14:
   \   00009F   E4           CLR     A
   \   0000A0   F0           MOVX    @DPTR,A
   \   0000A1   7901         MOV     R1,#0x1
    698                  Smart_home_Relay_Ctl(switch2);       
   \                     ??Smart_home_HandleKeys_13:
   \   0000A3                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   0000A3   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    699                  break;
   \   0000A6   8025         SJMP    ??Smart_home_HandleKeys_8
    700                } 
    701                case 2:
    702                {
    703                  /*
    704                  #define  HAL_MOTOR_STOP            0x01
    705                  #define  HAL_MOTOR_FORWORD         0x02
    706                  #define  HAL_MOTOR_BACKWORD        0x03*/
    707                  if(MotorSpeed > -50)     {MotorSpeed -= 10;}
   \                     ??Smart_home_HandleKeys_10:
   \   0000A8   90....       MOV     DPTR,#??MotorSpeed
   \   0000AB   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   0000AE   4004         JC      ??Smart_home_HandleKeys_15
   \   0000B0   E0           MOVX    A,@DPTR
   \   0000B1   24F6         ADD     A,#-0xa
   \   0000B3   F0           MOVX    @DPTR,A
    708                  if(MotorSpeed <= -50)     
   \                     ??Smart_home_HandleKeys_15:
   \   0000B4   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   0000B7   500F         JNC     ??Smart_home_HandleKeys_16
    709                  {
    710          #if defined ( LCD_SUPPORTED )
    711                     HalLcdWriteString( "Motor min Speed", HAL_LCD_LINE_4 );
   \   0000B9                ; Setup parameters for call to function HalLcdWriteString
   \   0000B9   7904         MOV     R1,#0x4
   \   0000BB   7A..         MOV     R2,#`?<Constant "Motor min Speed">` & 0xff
   \   0000BD   7B..         MOV     R3,#(`?<Constant "Motor min Speed">` >> 8) & 0xff
   \   0000BF   12....       LCALL   ??HalLcdWriteString?relay
    712          #endif 
    713                     MotorSpeed = -80;
   \   0000C2   90....       MOV     DPTR,#??MotorSpeed
   \   0000C5   74B0         MOV     A,#-0x50
   \   0000C7   F0           MOVX    @DPTR,A
    714                  }
    715                  Smart_home_Motor_cmd(MotorSpeed);
   \                     ??Smart_home_HandleKeys_16:
   \   0000C8                ; Setup parameters for call to function Smart_home_Motor_cmd
   \   0000C8   E0           MOVX    A,@DPTR
   \   0000C9   F9           MOV     R1,A
   \   0000CA   12....       LCALL   ??Smart_home_Motor_cmd?relay
    716                  break; 
    717                }
    718              }
    719            }
    720            
    721            if ( keys & HAL_KEY_SW_2 )  //RIGHT  
   \                     ??Smart_home_HandleKeys_8:
   \   0000CD   EE           MOV     A,R6
   \   0000CE   A2E1         MOV     C,0xE0 /* A   */.1
   \   0000D0   5012         JNC     ??Smart_home_HandleKeys_17
    722            /*3.22 这里在调试时出现问题，具体问题为 点击up时会出现屏幕变为禁止组网
    723              控制方面变为控制电机，问题在于汇编中的key值会出现  keys & HAL_KEY_SW_2 = 2
    724              的情况，暂时禁止，需要等待研究  还有key_7*/
    725            {
    726               if(Ctrlcase < 3)   { Ctrlcase++;}
   \   0000D2   90....       MOV     DPTR,#Ctrlcase
   \   0000D5   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   0000D8   5003         JNC     ??Smart_home_HandleKeys_18
   \   0000DA   E0           MOVX    A,@DPTR
   \   0000DB   04           INC     A
   \   0000DC   F0           MOVX    @DPTR,A
    727               if(Ctrlcase > 2)   { Ctrlcase=0;}
   \                     ??Smart_home_HandleKeys_18:
   \   0000DD   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   0000E0   4002         JC      ??Smart_home_HandleKeys_17
   \   0000E2   E4           CLR     A
   \   0000E3   F0           MOVX    @DPTR,A
    728               //Smart_home_Key_add(Ctrlcase);
    729            }
    730            
    731            if ( keys & HAL_KEY_SW_4 )  //LEFT
   \                     ??Smart_home_HandleKeys_17:
   \   0000E4   EE           MOV     A,R6
   \   0000E5   A2E3         MOV     C,0xE0 /* A   */.3
   \   0000E7   5013         JNC     ??Smart_home_HandleKeys_19
    732            {
    733               if(Ctrlcase > -1)   { Ctrlcase--;}
   \   0000E9   90....       MOV     DPTR,#Ctrlcase
   \   0000EC   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   0000EF   4003         JC      ??Smart_home_HandleKeys_20
   \   0000F1   E0           MOVX    A,@DPTR
   \   0000F2   14           DEC     A
   \   0000F3   F0           MOVX    @DPTR,A
    734               if(Ctrlcase < 0)    { Ctrlcase=2;}
   \                     ??Smart_home_HandleKeys_20:
   \   0000F4   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   0000F7   5003         JNC     ??Smart_home_HandleKeys_19
   \   0000F9   7402         MOV     A,#0x2
   \   0000FB   F0           MOVX    @DPTR,A
    735               //Smart_home_Key_add(Ctrlcase);    
    736            }
    737            
    738            if ( keys & HAL_KEY_SW_5 )  //OK
    739            {
    740          
    741            }
    742            
    743            if ( keys & HAL_KEY_SW_7 )  //CENCEL
   \                     ??Smart_home_HandleKeys_19:
   \   0000FC   EE           MOV     A,R6
   \   0000FD   A2E6         MOV     C,0xE0 /* A   */.6
   \   0000FF   5025         JNC     ??Smart_home_HandleKeys_21
    744            {
    745               if(NetWorkAllow == 0)
   \   000101   90....       MOV     DPTR,#??NetWorkAllow
   \   000104   E0           MOVX    A,@DPTR
   \   000105   7010         JNZ     ??Smart_home_HandleKeys_22
    746               {
    747                 NetWorkAllow = 1;
   \   000107   7401         MOV     A,#0x1
   \   000109   F0           MOVX    @DPTR,A
    748                 NLME_PermitJoiningRequest(0xFF); // 组网，允许随时加入
   \   00010A                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   00010A   79FF         MOV     R1,#-0x1
   \   00010C   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    749                 //HalLedSet(HAL_LED_1, HAL_LED_MODE_ON);
    750                 //HalLedSet(HAL_LED_2, HAL_LED_MODE_ON);
    751          #if defined ( LCD_SUPPORTED )
    752                 HalLcdWriteString( "Allow networking", HAL_LCD_LINE_4 );
   \   00010F                ; Setup parameters for call to function HalLcdWriteString
   \   00010F   7904         MOV     R1,#0x4
   \   000111   7A..         MOV     R2,#`?<Constant "Allow networking">` & 0xff
   \   000113   7B..         MOV     R3,#(`?<Constant "Allow networking">` >> 8) & 0xff
   \   000115   800C         SJMP    ??Smart_home_HandleKeys_23
    753          #endif
    754               }
    755               else
    756               {
    757                 NetWorkAllow = 0;
   \                     ??Smart_home_HandleKeys_22:
   \   000117   E4           CLR     A
   \   000118   F0           MOVX    @DPTR,A
    758                 NLME_PermitJoiningRequest(0x00); // 不允许组网
   \   000119                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   000119   F9           MOV     R1,A
   \   00011A   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    759                 //HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);  
    760                 //HalLedSet(HAL_LED_2, HAL_LED_MODE_OFF); 
    761          #if defined ( LCD_SUPPORTED )
    762                 HalLcdWriteString( "Ban   networking", HAL_LCD_LINE_4 );
   \   00011D                ; Setup parameters for call to function HalLcdWriteString
   \   00011D   7904         MOV     R1,#0x4
   \   00011F   7A..         MOV     R2,#`?<Constant "Ban   networking">` & 0xff
   \   000121   7B..         MOV     R3,#(`?<Constant "Ban   networking">` >> 8) & 0xff
   \                     ??Smart_home_HandleKeys_23:
   \   000123   12....       LCALL   ??HalLcdWriteString?relay
    763          #endif        
    764               }
    765            }
    766          }
   \                     ??Smart_home_HandleKeys_21:
   \   000126   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9403         SUBB    A,#0x3
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   94CF         SUBB    A,#-0x31
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9432         SUBB    A,#0x32
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9404         SUBB    A,#0x4
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9400         SUBB    A,#0x0
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??MotorSpeed:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??NetWorkAllow:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay1_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay2_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    767          
    768          /*********************************************************************
    769           * @fn      Smart_home_ProcessMSGCmd
    770           *
    771           * @brief   Data message processor callback. This function processes
    772           *          any incoming data - probably from other devices. Based
    773           *          on the cluster ID, perform the intended action.
    774           *
    775           * @param   pkt - pointer to the incoming message packet
    776           *
    777           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    778           *          FALSE otherwise.
    779           */
    780           /***********************************************************************
    781             目前总共8种case
    782          #define Smart_home_CLUSTERID_HUMITMSG            1  // 温湿度
    783          #define Smart_home_CLUSTERID_TEMPLIGHTMSG        2  // 温度光照
    784          #define Smart_home_CLUSTERID_RFIDMSG             3  // 射频卡
    785          #define Smart_home_CLUSTERID_GASFLAMEMSG         4  // 烟雾火焰
    786          #define Smart_home_CLUSTERID_INFRAREDMSG         5  // 人体红外
    787          #define Smart_home_CLUSTERID_SOUNDVBMSG          6  // 声音振动
    788          #define Smart_home_CLUSTERID_MOTORSTATUSMSG      7  // 直流电机状态信息
    789          #define Smart_home_CLUSTERID_RELAYSTATUSMSG      8  // 继电器状态信息
    790              
    791             设备描述
    792             typedef struct DeviceInfo
    793             {
    794               uint8 deviceID;
    795               uint8 deviceStatus;
    796               uint8 data[5];
    797             } DeviceInfo; 
    798             ************************************************************************/ 
    799          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    800          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
   \                     Smart_home_ProcessMSGCmd:
    801          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 20
   \   000005   74EC         MOV     A,#-0x14
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    802            
    803            switch ( pkt->clusterId )
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   8B83         MOV     DPH,R3
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 1,A
   \   000019   78..         MOV     R0,#?V0 + 0
   \   00001B   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for Smart_home_ProcessMSGCmd>_0`:
   \   00001E   0100         DW        1
   \   000020   07           DB        7
   \   000021   ....         DW        ??Smart_home_ProcessMSGCmd_0
   \   000023   ....         DW        ??Smart_home_ProcessMSGCmd_1
   \   000025   ....         DW        ??Smart_home_ProcessMSGCmd_2
   \   000027   ....         DW        ??Smart_home_ProcessMSGCmd_3
   \   000029   ....         DW        ??Smart_home_ProcessMSGCmd_4
   \   00002B   ....         DW        ??Smart_home_ProcessMSGCmd_5
   \   00002D   ....         DW        ??Smart_home_ProcessMSGCmd_6
   \   00002F   ....         DW        ??Smart_home_ProcessMSGCmd_7
   \   000031   ....         DW        ??Smart_home_ProcessMSGCmd_8
    804            {
    805          
    806              //3.14 消息处理模块，共8个，行为类似 
    807              //3.21 修改为指针方法（DeviceList相关）
    808              case Smart_home_CLUSTERID_HUMITMSG:         // 温湿度
    809              {
    810                uint8 sendbufHumit[4] = {0};
   \                     ??Smart_home_ProcessMSGCmd_1:
   \   000033   85..82       MOV     DPL,?XSP + 0
   \   000036   85..83       MOV     DPH,?XSP + 1
   \   000039   AC82         MOV     R4,DPL
   \   00003B   AD83         MOV     R5,DPH
   \   00003D   7583..       MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
   \   000040   7582..       MOV     DPL,#`?<Constant {0}>` & 0xff
   \   000043   7404         MOV     A,#0x4
   \   000045   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    811                sendbufHumit[0] = '1';
   \   000048   85..82       MOV     DPL,?XSP + 0
   \   00004B   85..83       MOV     DPH,?XSP + 1
   \   00004E   7431         MOV     A,#0x31
   \   000050   F0           MOVX    @DPTR,A
    812                
    813                DeviceList[Humit].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \   000051   90....       MOV     DPTR,#DeviceList + 8
   \   000054   12....       LCALL   ?Subroutine2 & 0xFFFF
    814                sendbufHumit[1] = DeviceList[Humit].data[0] = pkt->cmd.Data[4]; // 湿度 
   \                     ??CrossCallReturnLabel_0:
   \   000057   90....       MOV     DPTR,#DeviceList + 9
   \   00005A   F0           MOVX    @DPTR,A
   \   00005B   C0E0         PUSH    A
   \   00005D   7401         MOV     A,#0x1
   \   00005F   12....       LCALL   ?XSTACK_DISP0_8
   \   000062   D0E0         POP     A
   \   000064   12....       LCALL   ?Subroutine7 & 0xFFFF
    815                sendbufHumit[2] = DeviceList[Humit].data[1] = pkt->cmd.Data[5]; // 温度
   \                     ??CrossCallReturnLabel_15:
   \   000067   90....       MOV     DPTR,#DeviceList + 10
   \                     ??Smart_home_ProcessMSGCmd_9:
   \   00006A   F0           MOVX    @DPTR,A
   \   00006B   C0E0         PUSH    A
   \   00006D   7402         MOV     A,#0x2
   \   00006F   12....       LCALL   ?XSTACK_DISP0_8
   \   000072   D0E0         POP     A
   \   000074   F0           MOVX    @DPTR,A
    816          
    817                sendbufHumit[3] = '\n';
   \   000075   7403         MOV     A,#0x3
   \   000077   12....       LCALL   ?XSTACK_DISP0_8
   \   00007A   740A         MOV     A,#0xa
   \   00007C   F0           MOVX    @DPTR,A
    818                
    819          #if (HAL_UART == TRUE)
    820                HalUARTWrite(HAL_UART_PORT_0, sendbufHumit,   4);
   \   00007D                ; Setup parameters for call to function HalUARTWrite
   \   00007D   7C04         MOV     R4,#0x4
   \   00007F   02....       LJMP    ??Smart_home_ProcessMSGCmd_10 & 0xFFFF
    821          #endif
    822                osal_msg_deallocate(sendbufHumit);
    823                break;
    824              }
    825                
    826              case Smart_home_CLUSTERID_TEMPLIGHTMSG:     // 温度光照
    827              {    
    828                uint8 sendbufTempLight[6] = {0};
   \                     ??Smart_home_ProcessMSGCmd_2:
   \   000082   7407         MOV     A,#0x7
   \   000084   12....       LCALL   ?XSTACK_DISP0_8
   \   000087   AC82         MOV     R4,DPL
   \   000089   AD83         MOV     R5,DPH
   \   00008B   7583..       MOV     DPH,#(`?<Constant {0}>_1` >> 8) & 0xff
   \   00008E   7582..       MOV     DPL,#`?<Constant {0}>_1` & 0xff
   \   000091   7406         MOV     A,#0x6
   \   000093   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    829                sendbufTempLight[0] = '2';
   \   000096   7407         MOV     A,#0x7
   \   000098   12....       LCALL   ?XSTACK_DISP0_8
   \   00009B   7432         MOV     A,#0x32
   \   00009D   F0           MOVX    @DPTR,A
    830                
    831                DeviceList[TempLight].deviceStatus = DEVICE_ONLINE;   //收到消息设置为在线
   \   00009E   90....       MOV     DPTR,#DeviceList + 15
   \   0000A1   12....       LCALL   ?Subroutine2 & 0xFFFF
    832                
    833                sendbufTempLight[1] = DeviceList[TempLight].data[0] = pkt->cmd.Data[4]; // 温度整数
   \                     ??CrossCallReturnLabel_1:
   \   0000A4   90....       MOV     DPTR,#DeviceList + 16
   \   0000A7   F0           MOVX    @DPTR,A
   \   0000A8   C0E0         PUSH    A
   \   0000AA   7408         MOV     A,#0x8
   \   0000AC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000AF   D0E0         POP     A
   \   0000B1   12....       LCALL   ?Subroutine8 & 0xFFFF
    834                sendbufTempLight[2] = DeviceList[TempLight].data[1] = pkt->cmd.Data[5]; // 温度小数
   \                     ??CrossCallReturnLabel_17:
   \   0000B4   90....       MOV     DPTR,#DeviceList + 17
   \   0000B7   F0           MOVX    @DPTR,A
   \   0000B8   C0E0         PUSH    A
   \   0000BA   7409         MOV     A,#0x9
   \   0000BC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BF   D0E0         POP     A
   \   0000C1   12....       LCALL   ?Subroutine6 & 0xFFFF
    835                sendbufTempLight[3] = DeviceList[TempLight].data[2] = pkt->cmd.Data[6]; // 光照
   \                     ??CrossCallReturnLabel_13:
   \   0000C4   90....       MOV     DPTR,#DeviceList + 18
   \   0000C7   F0           MOVX    @DPTR,A
   \   0000C8   C0E0         PUSH    A
   \   0000CA   740A         MOV     A,#0xa
   \   0000CC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000CF   D0E0         POP     A
   \   0000D1   12....       LCALL   ?Subroutine5 & 0xFFFF
    836                sendbufTempLight[4] = DeviceList[TempLight].data[3] = pkt->cmd.Data[7]; // 光照
   \                     ??CrossCallReturnLabel_11:
   \   0000D4   E0           MOVX    A,@DPTR
   \   0000D5   90....       MOV     DPTR,#DeviceList + 19
   \   0000D8   F0           MOVX    @DPTR,A
   \   0000D9   C0E0         PUSH    A
   \   0000DB   740B         MOV     A,#0xb
   \   0000DD   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E0   D0E0         POP     A
   \   0000E2   F0           MOVX    @DPTR,A
    837                /*
    838                sendbufTempLight[1] = '1'; // 温度整数
    839                sendbufTempLight[2] = '2'; // 温度小数
    840                sendbufTempLight[3] = '3'; // 光照
    841                sendbufTempLight[4] = '4'; // 光照
    842                */
    843                sendbufTempLight[5] = '\n';
   \   0000E3   740C         MOV     A,#0xc
   \   0000E5   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E8   740A         MOV     A,#0xa
   \   0000EA   F0           MOVX    @DPTR,A
    844                
    845          #if (HAL_UART == TRUE)
    846                HalUARTWrite(HAL_UART_PORT_0, sendbufTempLight,   6);
   \   0000EB                ; Setup parameters for call to function HalUARTWrite
   \   0000EB   7C06         MOV     R4,#0x6
   \   0000ED   7D00         MOV     R5,#0x0
   \   0000EF   7407         MOV     A,#0x7
   \   0000F1   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F4   AA82         MOV     R2,DPL
   \   0000F6   AB83         MOV     R3,DPH
   \   0000F8   7900         MOV     R1,#0x0
   \   0000FA   12....       LCALL   ??HalUARTWrite?relay
    847          #endif
    848                osal_msg_deallocate(sendbufTempLight);
   \   0000FD                ; Setup parameters for call to function osal_msg_deallocate
   \   0000FD   7407         MOV     A,#0x7
   \                     ??Smart_home_ProcessMSGCmd_11:
   \   0000FF   12....       LCALL   ?XSTACK_DISP0_8
   \   000102   02....       LJMP    ??CrossCallReturnLabel_27 & 0xFFFF
    849                break;
    850              }
    851                
    852              case Smart_home_CLUSTERID_RFIDMSG:          // 射频卡
    853              {
    854                uint8 sendbufRfID[7] = {0};
   \                     ??Smart_home_ProcessMSGCmd_3:
   \   000105   740D         MOV     A,#0xd
   \   000107   12....       LCALL   ?XSTACK_DISP0_8
   \   00010A   AC82         MOV     R4,DPL
   \   00010C   AD83         MOV     R5,DPH
   \   00010E   7583..       MOV     DPH,#(`?<Constant {0}>_2` >> 8) & 0xff
   \   000111   7582..       MOV     DPL,#`?<Constant {0}>_2` & 0xff
   \   000114   7407         MOV     A,#0x7
   \   000116   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    855                sendbufRfID[0] = '3';
   \   000119   740D         MOV     A,#0xd
   \   00011B   12....       LCALL   ?XSTACK_DISP0_8
   \   00011E   7433         MOV     A,#0x33
   \   000120   F0           MOVX    @DPTR,A
    856                
    857                DeviceList[RfID].deviceStatus = DEVICE_ONLINE;        //收到消息设置为在线
   \   000121   90....       MOV     DPTR,#DeviceList + 22
   \   000124   12....       LCALL   ?Subroutine2 & 0xFFFF
    858                sendbufRfID[1] = DeviceList[RfID].data[0] = pkt->cmd.Data[4]; // 射频卡类型
   \                     ??CrossCallReturnLabel_2:
   \   000127   90....       MOV     DPTR,#DeviceList + 23
   \   00012A   F0           MOVX    @DPTR,A
   \   00012B   C0E0         PUSH    A
   \   00012D   740E         MOV     A,#0xe
   \   00012F   12....       LCALL   ?XSTACK_DISP0_8
   \   000132   D0E0         POP     A
   \   000134   12....       LCALL   ?Subroutine8 & 0xFFFF
    859                sendbufRfID[2] = DeviceList[RfID].data[1] = pkt->cmd.Data[5]; // 4个字节的ID号
   \                     ??CrossCallReturnLabel_18:
   \   000137   90....       MOV     DPTR,#DeviceList + 24
   \   00013A   F0           MOVX    @DPTR,A
   \   00013B   C0E0         PUSH    A
   \   00013D   740F         MOV     A,#0xf
   \   00013F   12....       LCALL   ?XSTACK_DISP0_8
   \   000142   D0E0         POP     A
   \   000144   12....       LCALL   ?Subroutine6 & 0xFFFF
    860                sendbufRfID[3] = DeviceList[RfID].data[2] = pkt->cmd.Data[6]; //
   \                     ??CrossCallReturnLabel_14:
   \   000147   90....       MOV     DPTR,#DeviceList + 25
   \   00014A   F0           MOVX    @DPTR,A
   \   00014B   C0E0         PUSH    A
   \   00014D   7410         MOV     A,#0x10
   \   00014F   12....       LCALL   ?XSTACK_DISP0_8
   \   000152   D0E0         POP     A
   \   000154   12....       LCALL   ?Subroutine22 & 0xFFFF
    861                sendbufRfID[4] = DeviceList[RfID].data[3] = pkt->cmd.Data[7]; //
   \                     ??CrossCallReturnLabel_45:
   \   000157   A3           INC     DPTR
   \   000158   E0           MOVX    A,@DPTR
   \   000159   90....       MOV     DPTR,#DeviceList + 26
   \   00015C   F0           MOVX    @DPTR,A
   \   00015D   C0E0         PUSH    A
   \   00015F   7411         MOV     A,#0x11
   \   000161   12....       LCALL   ?XSTACK_DISP0_8
   \   000164   D0E0         POP     A
   \   000166   12....       LCALL   ?Subroutine5 & 0xFFFF
    862                sendbufRfID[5] = DeviceList[RfID].data[4] = pkt->cmd.Data[8]; //  
   \                     ??CrossCallReturnLabel_12:
   \   000169   A3           INC     DPTR
   \   00016A   E0           MOVX    A,@DPTR
   \   00016B   90....       MOV     DPTR,#DeviceList + 27
   \   00016E   F0           MOVX    @DPTR,A
   \   00016F   C0E0         PUSH    A
   \   000171   7412         MOV     A,#0x12
   \   000173   12....       LCALL   ?XSTACK_DISP0_8
   \   000176   D0E0         POP     A
   \   000178   F0           MOVX    @DPTR,A
    863                
    864                sendbufRfID[6] = '\n';
   \   000179   7413         MOV     A,#0x13
   \   00017B   12....       LCALL   ?XSTACK_DISP0_8
   \   00017E   740A         MOV     A,#0xa
   \   000180   F0           MOVX    @DPTR,A
    865                
    866          #if (HAL_UART == TRUE)
    867                HalUARTWrite(HAL_UART_PORT_0, sendbufRfID,   7);
   \   000181                ; Setup parameters for call to function HalUARTWrite
   \   000181   7C07         MOV     R4,#0x7
   \   000183   7D00         MOV     R5,#0x0
   \   000185   740D         MOV     A,#0xd
   \   000187   12....       LCALL   ?XSTACK_DISP0_8
   \   00018A   AA82         MOV     R2,DPL
   \   00018C   AB83         MOV     R3,DPH
   \   00018E   7900         MOV     R1,#0x0
   \   000190   12....       LCALL   ??HalUARTWrite?relay
    868          #endif
    869                osal_msg_deallocate(sendbufRfID);
   \   000193                ; Setup parameters for call to function osal_msg_deallocate
   \   000193   740D         MOV     A,#0xd
   \   000195   02....       LJMP    ??Smart_home_ProcessMSGCmd_11 & 0xFFFF
    870                break;
    871              }
    872                
    873              case Smart_home_CLUSTERID_GASFLAMEMSG:      // 烟雾火焰
    874              {
    875                uint8 sendbufgasFlame[3] = {0};
   \                     ??Smart_home_ProcessMSGCmd_4:
   \   000198   7404         MOV     A,#0x4
   \   00019A   12....       LCALL   ?XSTACK_DISP0_8
   \   00019D   AC82         MOV     R4,DPL
   \   00019F   AD83         MOV     R5,DPH
   \   0001A1   7583..       MOV     DPH,#(`?<Constant {0}>_3` >> 8) & 0xff
   \   0001A4   7582..       MOV     DPL,#`?<Constant {0}>_3` & 0xff
   \   0001A7   7403         MOV     A,#0x3
   \   0001A9   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    876                sendbufgasFlame[0] = '4';
   \   0001AC   7404         MOV     A,#0x4
   \   0001AE   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B1   7434         MOV     A,#0x34
   \   0001B3   F0           MOVX    @DPTR,A
    877                
    878                DeviceList[gasFlame].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \   0001B4   90....       MOV     DPTR,#DeviceList + 29
   \   0001B7   12....       LCALL   ?Subroutine3 & 0xFFFF
    879                sendbufgasFlame[1] = DeviceList[gasFlame].data[0] = pkt->cmd.Data[4]; // 烟雾与火焰报警信息
   \                     ??CrossCallReturnLabel_4:
   \   0001BA   90....       MOV     DPTR,#DeviceList + 30
   \                     ??Smart_home_ProcessMSGCmd_12:
   \   0001BD   F0           MOVX    @DPTR,A
   \   0001BE   C0E0         PUSH    A
   \   0001C0   7405         MOV     A,#0x5
   \   0001C2   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C5   D0E0         POP     A
   \   0001C7   F0           MOVX    @DPTR,A
    880          
    881                sendbufgasFlame[2] = '\n';
   \   0001C8   7406         MOV     A,#0x6
   \   0001CA   12....       LCALL   ?XSTACK_DISP0_8
   \   0001CD   740A         MOV     A,#0xa
   \   0001CF   F0           MOVX    @DPTR,A
    882                
    883          #if (HAL_UART == TRUE)
    884                HalUARTWrite(HAL_UART_PORT_0, sendbufgasFlame,   3);
   \   0001D0                ; Setup parameters for call to function HalUARTWrite
   \   0001D0   7C03         MOV     R4,#0x3
   \   0001D2   7D00         MOV     R5,#0x0
   \   0001D4   7404         MOV     A,#0x4
   \   0001D6   12....       LCALL   ?XSTACK_DISP0_8
   \   0001D9   AA82         MOV     R2,DPL
   \   0001DB   AB83         MOV     R3,DPH
   \   0001DD   7900         MOV     R1,#0x0
   \   0001DF   12....       LCALL   ??HalUARTWrite?relay
    885          #endif
    886                osal_msg_deallocate(sendbufgasFlame);
   \   0001E2                ; Setup parameters for call to function osal_msg_deallocate
   \   0001E2   7404         MOV     A,#0x4
   \   0001E4   02....       LJMP    ??Smart_home_ProcessMSGCmd_11 & 0xFFFF
    887                break;
    888              }
    889                
    890              case Smart_home_CLUSTERID_INFRAREDMSG:      // 人体红外
    891              {
    892                uint8 sendbufinfrared[3] = {0};
   \                     ??Smart_home_ProcessMSGCmd_5:
   \   0001E7   7404         MOV     A,#0x4
   \   0001E9   12....       LCALL   ?XSTACK_DISP0_8
   \   0001EC   AC82         MOV     R4,DPL
   \   0001EE   AD83         MOV     R5,DPH
   \   0001F0   7583..       MOV     DPH,#(`?<Constant {0}>_4` >> 8) & 0xff
   \   0001F3   7582..       MOV     DPL,#`?<Constant {0}>_4` & 0xff
   \   0001F6   7403         MOV     A,#0x3
   \   0001F8   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    893                sendbufinfrared[0] = '5';
   \   0001FB   7404         MOV     A,#0x4
   \   0001FD   12....       LCALL   ?XSTACK_DISP0_8
   \   000200   7435         MOV     A,#0x35
   \   000202   F0           MOVX    @DPTR,A
    894                
    895                DeviceList[infrared].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \   000203   90....       MOV     DPTR,#DeviceList + 36
   \   000206   12....       LCALL   ?Subroutine3 & 0xFFFF
    896                sendbufinfrared[1] = DeviceList[infrared].data[0] = pkt->cmd.Data[4]; // 人体红外
    897          
    898                sendbufinfrared[2] = '\n';
    899                
    900          #if (HAL_UART == TRUE)
    901                HalUARTWrite(HAL_UART_PORT_0, sendbufinfrared,   3);
    902          #endif
    903                osal_msg_deallocate(sendbufinfrared);
    904                break;
    905              }
   \                     ??CrossCallReturnLabel_5:
   \   000209   90....       MOV     DPTR,#DeviceList + 37
   \   00020C   80AF         SJMP    ??Smart_home_ProcessMSGCmd_12
    906          
    907              case Smart_home_CLUSTERID_SOUNDVBMSG:       // 声音振动
    908              {
    909                uint8 sendbufsoundVb[4] = {0};
   \                     ??Smart_home_ProcessMSGCmd_6:
   \   00020E   85..82       MOV     DPL,?XSP + 0
   \   000211   85..83       MOV     DPH,?XSP + 1
   \   000214   AC82         MOV     R4,DPL
   \   000216   AD83         MOV     R5,DPH
   \   000218   7583..       MOV     DPH,#(`?<Constant {0}>_5` >> 8) & 0xff
   \   00021B   7582..       MOV     DPL,#`?<Constant {0}>_5` & 0xff
   \   00021E   7404         MOV     A,#0x4
   \   000220   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    910                sendbufsoundVb[0] = '6';
   \   000223   85..82       MOV     DPL,?XSP + 0
   \   000226   85..83       MOV     DPH,?XSP + 1
   \   000229   7436         MOV     A,#0x36
   \   00022B   F0           MOVX    @DPTR,A
    911                
    912                DeviceList[soundVb].deviceStatus = DEVICE_ONLINE;     //收到消息设置为在线
   \   00022C   90....       MOV     DPTR,#DeviceList + 43
   \   00022F   12....       LCALL   ?Subroutine3 & 0xFFFF
    913                sendbufsoundVb[1] = DeviceList[soundVb].data[0] = pkt->cmd.Data[4]; // 声音震动信息
    914                
    915                
    916                sendbufsoundVb[2] = '\n';
    917                
    918          #if (HAL_UART == TRUE)
    919                HalUARTWrite(HAL_UART_PORT_0, sendbufsoundVb,   3);
    920          #endif
    921                osal_msg_deallocate(sendbufsoundVb);
    922                break;
    923              }
   \                     ??CrossCallReturnLabel_6:
   \   000232   90....       MOV     DPTR,#DeviceList + 44
   \   000235   02....       LJMP    ??Smart_home_ProcessMSGCmd_13 & 0xFFFF
    924                
    925              case Smart_home_CLUSTERID_MOTORSTATUSMSG:   // 直流电机状态信息
    926              {  
    927                uint8 sendbufmotor[4] = {0};
   \                     ??Smart_home_ProcessMSGCmd_7:
   \   000238   85..82       MOV     DPL,?XSP + 0
   \   00023B   85..83       MOV     DPH,?XSP + 1
   \   00023E   AC82         MOV     R4,DPL
   \   000240   AD83         MOV     R5,DPH
   \   000242   7583..       MOV     DPH,#(`?<Constant {0}>_6` >> 8) & 0xff
   \   000245   7582..       MOV     DPL,#`?<Constant {0}>_6` & 0xff
   \   000248   7404         MOV     A,#0x4
   \   00024A   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    928                sendbufmotor[0] = '7';
   \   00024D   85..82       MOV     DPL,?XSP + 0
   \   000250   85..83       MOV     DPH,?XSP + 1
   \   000253   7437         MOV     A,#0x37
   \   000255   F0           MOVX    @DPTR,A
    929                
    930                DeviceList[motor].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \   000256   90....       MOV     DPTR,#DeviceList + 50
   \   000259   7401         MOV     A,#0x1
   \   00025B   F0           MOVX    @DPTR,A
    931                // 储存电机设备的网络地址，用于发送控制命令
    932                Motor_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   00025C   90....       MOV     DPTR,#Motor_addr + 8
   \   00025F   12....       LCALL   ?Subroutine9 & 0xFFFF
    933                Motor_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_19:
   \   000262   90....       MOV     DPTR,#Motor_addr
   \   000265   E8           MOV     A,R0
   \   000266   F0           MOVX    @DPTR,A
   \   000267   A3           INC     DPTR
   \   000268   E9           MOV     A,R1
   \   000269   F0           MOVX    @DPTR,A
    934                
    935                Motor_addr.endPoint = 1;  // 目的节点的端口号
   \   00026A   90....       MOV     DPTR,#Motor_addr + 9
   \   00026D   12....       LCALL   ?Subroutine2 & 0xFFFF
    936                //TransmitApp_DstMotorAddr->endPoint = TRANSMITAPP_ENDPOINT;
    937               
    938                sendbufmotor[1] = DeviceList[motor].data[0] = pkt->cmd.Data[4]; // 电机转速
    939                sendbufmotor[2] = DeviceList[motor].data[1] = pkt->cmd.Data[5]; // 电机状态
    940          
    941                sendbufmotor[3] = '\n';
    942                
    943          #if (HAL_UART == TRUE)
    944                HalUARTWrite(HAL_UART_PORT_0, sendbufmotor,   4);
    945          #endif
    946                osal_msg_deallocate(sendbufmotor);
    947                break;
    948              }
   \                     ??CrossCallReturnLabel_3:
   \   000270   90....       MOV     DPTR,#DeviceList + 51
   \   000273   F0           MOVX    @DPTR,A
   \   000274   C0E0         PUSH    A
   \   000276   7401         MOV     A,#0x1
   \   000278   12....       LCALL   ?XSTACK_DISP0_8
   \   00027B   D0E0         POP     A
   \   00027D   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_16:
   \   000280   90....       MOV     DPTR,#DeviceList + 52
   \   000283   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    949                
    950              case Smart_home_CLUSTERID_RELAYSTATUSMSG:   // 继电器状态信息
    951              {
    952                uint8 sendbufrelay[4] = {0};
   \                     ??Smart_home_ProcessMSGCmd_8:
   \   000286   85..82       MOV     DPL,?XSP + 0
   \   000289   85..83       MOV     DPH,?XSP + 1
   \   00028C   AC82         MOV     R4,DPL
   \   00028E   AD83         MOV     R5,DPH
   \   000290   7583..       MOV     DPH,#(`?<Constant {0}>_7` >> 8) & 0xff
   \   000293   7582..       MOV     DPL,#`?<Constant {0}>_7` & 0xff
   \   000296   7404         MOV     A,#0x4
   \   000298   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    953                sendbufrelay[0] = '8';
   \   00029B   85..82       MOV     DPL,?XSP + 0
   \   00029E   85..83       MOV     DPH,?XSP + 1
   \   0002A1   7438         MOV     A,#0x38
   \   0002A3   F0           MOVX    @DPTR,A
    954                
    955                DeviceList[relay].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线    
   \   0002A4   90....       MOV     DPTR,#DeviceList + 57
   \   0002A7   7401         MOV     A,#0x1
   \   0002A9   F0           MOVX    @DPTR,A
    956                
    957                // 储存继电器设备的网络地址，用于发送控制命令
    958                Relay_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0002AA   90....       MOV     DPTR,#Relay_addr + 8
   \   0002AD   12....       LCALL   ?Subroutine9 & 0xFFFF
    959                Relay_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;    
   \                     ??CrossCallReturnLabel_20:
   \   0002B0   90....       MOV     DPTR,#Relay_addr
   \   0002B3   E8           MOV     A,R0
   \   0002B4   F0           MOVX    @DPTR,A
   \   0002B5   A3           INC     DPTR
   \   0002B6   E9           MOV     A,R1
   \   0002B7   F0           MOVX    @DPTR,A
    960                Relay_addr.endPoint = 1; // 目的节点的端口号
   \   0002B8   90....       MOV     DPTR,#Relay_addr + 9
   \   0002BB   12....       LCALL   ?Subroutine3 & 0xFFFF
    961                sendbufrelay[1] = DeviceList[relay].data[0] = pkt->cmd.Data[4]; 
   \                     ??CrossCallReturnLabel_7:
   \   0002BE   90....       MOV     DPTR,#DeviceList + 58
   \                     ??Smart_home_ProcessMSGCmd_13:
   \   0002C1   F0           MOVX    @DPTR,A
   \   0002C2   C0E0         PUSH    A
   \   0002C4   7401         MOV     A,#0x1
   \   0002C6   12....       LCALL   ?XSTACK_DISP0_8
   \   0002C9   D0E0         POP     A
   \   0002CB   F0           MOVX    @DPTR,A
    962          
    963                sendbufrelay[2] = '\n';
   \   0002CC   7402         MOV     A,#0x2
   \   0002CE   12....       LCALL   ?XSTACK_DISP0_8
   \   0002D1   740A         MOV     A,#0xa
   \   0002D3   F0           MOVX    @DPTR,A
    964                
    965          #if (HAL_UART == TRUE)
    966                HalUARTWrite(HAL_UART_PORT_0, sendbufrelay,   3);
   \   0002D4                ; Setup parameters for call to function HalUARTWrite
   \   0002D4   7C03         MOV     R4,#0x3
   \                     ??Smart_home_ProcessMSGCmd_10:
   \   0002D6   7D00         MOV     R5,#0x0
   \   0002D8   85..82       MOV     DPL,?XSP + 0
   \   0002DB   85..83       MOV     DPH,?XSP + 1
   \   0002DE   AA82         MOV     R2,DPL
   \   0002E0   AB83         MOV     R3,DPH
   \   0002E2   12....       LCALL   ?Subroutine12 & 0xFFFF
    967          #endif
    968                osal_msg_deallocate(sendbufrelay);
   \                     ??CrossCallReturnLabel_27:
   \   0002E5   AA82         MOV     R2,DPL
   \   0002E7   AB83         MOV     R3,DPH
   \   0002E9   12....       LCALL   ??osal_msg_deallocate?relay
    969                break;
    970              }
    971                
    972              default:
    973                break;
    974            }
    975          }
   \                     ??Smart_home_ProcessMSGCmd_0:
   \   0002EC   7414         MOV     A,#0x14
   \   0002EE   12....       LCALL   ?DEALLOC_XSTACK8
   \   0002F1   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   04           INC     A
   \   000001   F0           MOVX    @DPTR,A
   \   000002   8A82         MOV     DPL,R2
   \   000004   8B83         MOV     DPH,R3
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F9           MOV     R1,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_55:
   \   000003   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_52:
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_47:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_56:
   \   000003   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_58:
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine27:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   E0           MOVX    A,@DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_48:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_57:
   \   000003   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_61:
   \   000006   A3           INC     DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_49:
   \   000003   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_60:
   \   000006   E0           MOVX    A,@DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine29:
   \   000000   F8           MOV     R0,A
   \   000001   A3           INC     DPTR
   \   000002   E0           MOVX    A,@DPTR
   \   000003   F583         MOV     DPH,A
   \   000005   8882         MOV     DPL,R0
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_50:
   \   000003   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_51:
   \   000006   E0           MOVX    A,@DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_59:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine28:
   \   000000   FA           MOV     R2,A
   \   000001   A3           INC     DPTR
   \   000002   E0           MOVX    A,@DPTR
   \   000003   F583         MOV     DPH,A
   \   000005   8A82         MOV     DPL,R2
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F9           MOV     R1,A
   \   00000B   8882         MOV     DPL,R0
   \   00000D   8983         MOV     DPH,R1
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   22           RET
    976          
    977          /*********************************************************************
    978           * @fn     Smart_home_Device_check
    979           *
    980           * @brief   设备计数器，用来检查设备在开始组网后多久在线.
    981           *          目前搜索为4次HeartBeat  (DEVICE_HEART_BEAT 3)
    982           *          3.21
    983           * @param   none
    984           *
    985           * @return  none
    986           */
    987          /*3.24 这里的检测时常有点长 改为变量外提的方式加快处理速度*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    988          void Smart_home_Device_check(void)
   \                     Smart_home_Device_check:
    989          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    990            static uint8 DeviceID;
    991            static uint8* counttmp;
    992            for(DeviceID=1;DeviceID<Smart_home_MAX_INCLUSTERS;DeviceID++)
   \   000004   90....       MOV     DPTR,#??DeviceID
   \   000007   7401         MOV     A,#0x1
   \   000009   F0           MOVX    @DPTR,A
    993            {  
    994              counttmp = & DeviceCnt[DeviceID];
   \                     ??Smart_home_Device_check_0:
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   74..         MOV     A,#DeviceCnt & 0xff
   \   00000E   28           ADD     A,R0
   \   00000F   FA           MOV     R2,A
   \   000010   74..         MOV     A,#(DeviceCnt >> 8) & 0xff
   \   000012   3400         ADDC    A,#0x0
   \   000014   FB           MOV     R3,A
   \   000015   90....       MOV     DPTR,#??counttmp
   \   000018   EA           MOV     A,R2
   \   000019   F0           MOVX    @DPTR,A
   \   00001A   A3           INC     DPTR
   \   00001B   EB           MOV     A,R3
   \   00001C   F0           MOVX    @DPTR,A
    995              if(DeviceList[DeviceID].deviceStatus != DEVICE_ONLINE)    //设备离线
   \   00001D   E8           MOV     A,R0
   \   00001E   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_53:
   \   000021   E0           MOVX    A,@DPTR
   \   000022   6401         XRL     A,#0x1
   \   000024   600D         JZ      ??Smart_home_Device_check_1
    996              {
    997                (*counttmp)++;
   \   000026   12....       LCALL   ?Subroutine21 & 0xFFFF
    998              }
   \                     ??CrossCallReturnLabel_67:
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   04           INC     A
   \   00002B   12....       LCALL   ?Subroutine4 & 0xFFFF
    999              if(DeviceList[DeviceID].deviceStatus == DEVICE_ONLINE)    //设备在线
   \                     ??CrossCallReturnLabel_8:
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   6401         XRL     A,#0x1
   \   000031   7009         JNZ     ??Smart_home_Device_check_2
   1000              {
   1001                *counttmp = 0;
   \                     ??Smart_home_Device_check_1:
   \   000033   12....       LCALL   ?Subroutine21 & 0xFFFF
   1002                DeviceList[DeviceID].deviceStatus = 0;
   1003              }
   \                     ??CrossCallReturnLabel_68:
   \   000036   E4           CLR     A
   \   000037   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_9:
   \   00003A   E4           CLR     A
   \   00003B   F0           MOVX    @DPTR,A
   1004              if((*counttmp) > DEVICE_HEART_BEAT)
   \                     ??Smart_home_Device_check_2:
   \   00003C   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_69:
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   C3           CLR     C
   \   000041   9404         SUBB    A,#0x4
   \   000043   400E         JC      ??Smart_home_Device_check_3
   1005              {
   1006                *counttmp = DEVICE_HEART_BEAT;
   \   000045   90....       MOV     DPTR,#??counttmp + 1
   \   000048   12....       LCALL   ??Subroutine31_0 & 0xFFFF
   1007                DeviceList[DeviceID].deviceStatus = DEVICE_OFFLINE;
   1008              }
   1009            }
   \                     ??CrossCallReturnLabel_66:
   \   00004B   7403         MOV     A,#0x3
   \   00004D   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_10:
   \   000050   7402         MOV     A,#0x2
   \   000052   F0           MOVX    @DPTR,A
   \                     ??Smart_home_Device_check_3:
   \   000053   90....       MOV     DPTR,#??DeviceID
   \   000056   E0           MOVX    A,@DPTR
   \   000057   04           INC     A
   \   000058   F0           MOVX    @DPTR,A
   \   000059   C3           CLR     C
   \   00005A   9409         SUBB    A,#0x9
   \   00005C   40AC         JC      ??Smart_home_Device_check_0
   1010            /*温湿度缓存 温度光照缓存 RFID 信息缓存 气体火焰缓存 
   1011            人体红外 电机状态 继电器状态 声音震动*/
   1012          }
   \   00005E   D083         POP     DPH
   \   000060   D082         POP     DPL
   \   000062   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   90....       MOV     DPTR,#??counttmp
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F8           MOV     R0,A
   \   000005   A3           INC     DPTR
   \   000006                REQUIRE ??Subroutine31_0
   \   000006                ; // Fall through to label ??Subroutine31_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine31_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F583         MOV     DPH,A
   \   000003   8882         MOV     DPL,R0
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   90....       MOV     DPTR,#??DeviceID
   \   000004   E0           MOVX    A,@DPTR
   \   000005   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_54:
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine26:
   \   000000   75F007       MOV     B,#0x7
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007   74..         MOV     A,#(DeviceList + 1) & 0xff
   \   000009   28           ADD     A,R0
   \   00000A   F582         MOV     DPL,A
   \   00000C   74..         MOV     A,#((DeviceList + 1) >> 8) & 0xff
   \   00000E   39           ADDC    A,R1
   \   00000F   F583         MOV     DPH,A
   \   000011   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??DeviceID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??counttmp:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
   1013          
   1014          
   1015          /*********************************************************************
   1016           * @fn      Smart_home_Relay_Ctl
   1017           *
   1018           * @brief   发送继电器控制消息
   1019           *
   1020           * @param   none
   1021           *
   1022           * @return  none
   1023           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1024          static void Smart_home_Relay_Ctl(uint8 cmd)
   \                     Smart_home_Relay_Ctl:
   1025          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   1026            uint8 tmp;
   1027            
   1028            // 只有设备在线时, 方发送控制命令
   1029            if (DeviceList[relay].deviceStatus != DEVICE_OFFLINE)
   \   000007   90....       MOV     DPTR,#DeviceList + 57
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6402         XRL     A,#0x2
   \   00000D   6077         JZ      ??Smart_home_Relay_Ctl_0
   1030            {
   1031              // put the sequence number in the message
   1032              tmp = HI_UINT8( RelayTransID );
   \   00000F   90....       MOV     DPTR,#RelayTransID
   \   000012   E0           MOVX    A,@DPTR
   \   000013   C4           SWAP    A
   \   000014   540F         ANL     A,#0xf
   \   000016   FA           MOV     R2,A
   1033              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000017   C3           CLR     C
   \   000018   940A         SUBB    A,#0xa
   \   00001A   5004         JNC     ??Smart_home_Relay_Ctl_1
   \   00001C   7830         MOV     R0,#0x30
   \   00001E   8002         SJMP    ??Smart_home_Relay_Ctl_2
   \                     ??Smart_home_Relay_Ctl_1:
   \   000020   7837         MOV     R0,#0x37
   1034              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_Relay_Ctl_2:
   \   000022   E8           MOV     A,R0
   \   000023   2A           ADD     A,R2
   \   000024   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000027   F0           MOVX    @DPTR,A
   1035              tmp = LO_UINT8( RelayTransID );
   \   000028   90....       MOV     DPTR,#RelayTransID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   540F         ANL     A,#0xf
   \   00002E   FA           MOV     R2,A
   1036              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   00002F   C3           CLR     C
   \   000030   940A         SUBB    A,#0xa
   \   000032   5004         JNC     ??Smart_home_Relay_Ctl_3
   \   000034   7830         MOV     R0,#0x30
   \   000036   8002         SJMP    ??Smart_home_Relay_Ctl_4
   \                     ??Smart_home_Relay_Ctl_3:
   \   000038   7837         MOV     R0,#0x37
   1037              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_Relay_Ctl_4:
   \   00003A   E8           MOV     A,R0
   \   00003B   2A           ADD     A,R2
   \   00003C   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   00003F   F0           MOVX    @DPTR,A
   1038              
   1039              // 发送给继电器的控制命令 
   1040              Coordinator_Msg[4] = cmd;
   \   000040   EE           MOV     A,R6
   \   000041   A3           INC     DPTR
   \   000042   F0           MOVX    @DPTR,A
   1041              /********************************************
   1042              *   屏幕显示部分*
   1043          #if defined ( LCD_SUPPORTED )
   1044              if(cmd == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   1045              if(cmd == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   1046              if(cmd == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   1047              if(cmd == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}
   1048          #endif     
   1049              ********************************************/
   1050              tmp = AF_DataRequest( &Relay_addr,                         
   1051                                    (endPointDesc_t *)&Smart_home_epDesc,                  
   1052                                     Smart_home_CLUSTERID_RELAYCTRL,
   1053                                     RELAYSTATUSMSG_LEN,                 
   1054                                     Coordinator_Msg,                    
   1055                                    &RelayTransID,                       
   1056                                     AF_DISCV_ROUTE,                     
   1057                                     AF_DEFAULT_RADIUS );
   \   000043                ; Setup parameters for call to function AF_DataRequest
   \   000043   75..1E       MOV     ?V0 + 0,#0x1e
   \   000046   78..         MOV     R0,#?V0 + 0
   \   000048   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004B   75....       MOV     ?V0 + 0,#RelayTransID & 0xff
   \   00004E   75....       MOV     ?V0 + 1,#(RelayTransID >> 8) & 0xff
   \   000051   78..         MOV     R0,#?V0 + 0
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000056   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000059   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   00005C   78..         MOV     R0,#?V0 + 0
   \   00005E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000061   75..05       MOV     ?V0 + 0,#0x5
   \   000064   75..00       MOV     ?V0 + 1,#0x0
   \   000067   78..         MOV     R0,#?V0 + 0
   \   000069   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006C   75..0A       MOV     ?V0 + 0,#0xa
   \   00006F   78..         MOV     R0,#?V0 + 0
   \   000071   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000074   7920         MOV     R1,#0x20
   \   000076   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   000078   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   00007A   7A..         MOV     R2,#Relay_addr & 0xff
   \   00007C   7B..         MOV     R3,#(Relay_addr >> 8) & 0xff
   \   00007E   12....       LCALL   ??AF_DataRequest?relay
   \   000081   7409         MOV     A,#0x9
   \   000083   12....       LCALL   ?DEALLOC_XSTACK8
   1058            } 
   1059          }
   \                     ??Smart_home_Relay_Ctl_0:
   \   000086                REQUIRE ?Subroutine1
   \   000086                ; // Fall through to label ?Subroutine1
   1060          
   1061          /*********************************************************************
   1062           * @fn      Smart_home_Motor_Ctl
   1063           *
   1064           * @brief   发送电机控制消息
   1065           *
   1066           * @param   none
   1067           *
   1068           * @return  none
   1069           */
   1070          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed)
   1071          {
   1072            uint8 tmp;
   1073            
   1074            // 只有设备在线时, 方发送控制命令
   1075            if (DeviceList[motor].deviceStatus != DEVICE_OFFLINE)
   1076            {
   1077              // put the sequence number in the message
   1078              tmp = HI_UINT8( MotorTransID );
   1079              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   1080              Coordinator_Msg[2] = tmp;
   1081              tmp = LO_UINT8( MotorTransID );
   1082              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   1083              Coordinator_Msg[3] = tmp;
   1084              
   1085              // 发送给电机的控制命令 
   1086              Coordinator_Msg[4] = speed;
   1087              Coordinator_Msg[5] = cmd;
   1088              
   1089              tmp = AF_DataRequest( &Motor_addr,                         
   1090                                    (endPointDesc_t *)&Smart_home_epDesc,                  
   1091                                     Smart_home_CLUSTERID_MOTORCTRL,
   1092                                     MOTORSTATUSMSG_LEN,                 
   1093                                     Coordinator_Msg,                    
   1094                                    &MotorTransID,                       
   1095                                     AF_DISCV_ROUTE,                     
   1096                                     AF_DEFAULT_RADIUS );
   1097            }   
   1098          }
   1099          
   1100          
   1101          /*********************************************************************
   1102           * @fn      Smart_home_Display
   1103           *
   1104           * @brief   屏幕回显函数，定义了内容如何显示.
   1105           *
   1106           * @param   port - UART port.
   1107           * @param   event - the UART port event flag.
   1108           *
   1109           * @return  none
   1110           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1111          static void Smart_home_Display(void)
   \                     Smart_home_Display:
   1112          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   1113          #if defined LCD_SUPPORTED
   1114            static uint8 percent;
   1115            switch(Ctrlcase)
   \   000005   90....       MOV     DPTR,#Ctrlcase
   \   000008   E0           MOVX    A,@DPTR
   \   000009   14           DEC     A
   \   00000A   7003         JNZ     $+5
   \   00000C   02....       LJMP    ??Smart_home_Display_0 & 0xFFFF
   \   00000F   14           DEC     A
   \   000010   7003         JNZ     $+5
   \   000012   02....       LJMP    ??Smart_home_Display_1 & 0xFFFF
   1116            {
   1117              default:    
   1118              case 0:
   1119                HalLcdWriteString( "      Menu      ", HAL_LCD_LINE_1 );
   \   000015                ; Setup parameters for call to function HalLcdWriteString
   \   000015   7901         MOV     R1,#0x1
   \   000017   7A..         MOV     R2,#`?<Constant "      Menu      ">` & 0xff
   \   000019   7B..         MOV     R3,#(`?<Constant "      Menu      ">` >> 8) & 0xff
   \   00001B   12....       LCALL   ?Subroutine11 & 0xFFFF
   1120                //HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
   1121                //清除屏幕显示
   1122                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1123                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1124                
   1125                switch(LCD_Page)
   \                     ??CrossCallReturnLabel_23:
   \   00001E   90....       MOV     DPTR,#LCD_Page
   \   000021   E0           MOVX    A,@DPTR
   \   000022   14           DEC     A
   \   000023   7003         JNZ     $+5
   \   000025   02....       LJMP    ??Smart_home_Display_2 & 0xFFFF
   \   000028   14           DEC     A
   \   000029   7003         JNZ     $+5
   \   00002B   02....       LJMP    ??Smart_home_Display_3 & 0xFFFF
   \   00002E   14           DEC     A
   \   00002F   7003         JNZ     $+5
   \   000031   02....       LJMP    ??Smart_home_Display_4 & 0xFFFF
   1126                {
   1127                  default:
   1128                  case 0:
   1129                  { 
   1130                    DeviceInfo* Devhum = &DeviceList[Humit];
   1131                    DeviceInfo* DevSound = &DeviceList[soundVb];
   1132                    //第一页第二行显示温度
   1133                    //      第三行显示光照
   1134                    if(Devhum->deviceStatus != DEVICE_OFFLINE)
   \   000034   90....       MOV     DPTR,#DeviceList + 8
   \   000037   E0           MOVX    A,@DPTR
   \   000038   6402         XRL     A,#0x2
   \   00003A   6040         JZ      ??Smart_home_Display_5
   1135                    {    
   1136                        HalLcdWriteStringValueValue( "Hum:", Devhum->data[0], 10, "% T_1:", Devhum->data[1], 10, HAL_LCD_LINE_2 );
   \   00003C                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   00003C   75..02       MOV     ?V0 + 0,#0x2
   \   00003F   78..         MOV     R0,#?V0 + 0
   \   000041   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000044   75..0A       MOV     ?V0 + 0,#0xa
   \   000047   78..         MOV     R0,#?V0 + 0
   \   000049   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004C   90....       MOV     DPTR,#DeviceList + 10
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   F5..         MOV     ?V0 + 0,A
   \   000052   75..00       MOV     ?V0 + 1,#0x0
   \   000055   78..         MOV     R0,#?V0 + 0
   \   000057   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005A   75....       MOV     ?V0 + 0,#`?<Constant "% T_1:">` & 0xff
   \   00005D   75....       MOV     ?V0 + 1,#(`?<Constant "% T_1:">` >> 8) & 0xff
   \   000060   78..         MOV     R0,#?V0 + 0
   \   000062   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000065   790A         MOV     R1,#0xa
   \   000067   90....       MOV     DPTR,#DeviceList + 9
   \   00006A   E0           MOVX    A,@DPTR
   \   00006B   FC           MOV     R4,A
   \   00006C   7D00         MOV     R5,#0x0
   \   00006E   7A..         MOV     R2,#`?<Constant "Hum:">` & 0xff
   \   000070   7B..         MOV     R3,#(`?<Constant "Hum:">` >> 8) & 0xff
   \   000072   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000075   7406         MOV     A,#0x6
   \   000077   12....       LCALL   ?DEALLOC_XSTACK8
   \   00007A   8009         SJMP    ??Smart_home_Display_6
   1137                    }
   1138                    else
   1139                    {
   1140                        HalLcdWriteString( "Hum:OFF T_1:OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_5:
   \   00007C                ; Setup parameters for call to function HalLcdWriteString
   \   00007C   7902         MOV     R1,#0x2
   \   00007E   7A..         MOV     R2,#`?<Constant "Hum:OFF T_1:OFF">` & 0xff
   \   000080   7B..         MOV     R3,#(`?<Constant "Hum:OFF T_1:OFF">` >> 8) & 0xff
   \   000082   12....       LCALL   ??HalLcdWriteString?relay
   1141                    }
   1142                    
   1143                    
   1144                    if(DevSound->deviceStatus != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_6:
   \   000085   90....       MOV     DPTR,#DeviceList + 43
   \   000088   E0           MOVX    A,@DPTR
   \   000089   6402         XRL     A,#0x2
   \   00008B   6014         JZ      ??Smart_home_Display_7
   1145                    {    
   1146                        if(DevSound->data[0] & 0x01 == 0x01) { HalLcdWriteString( "Sound: Voice", HAL_LCD_LINE_3 ); }
   \   00008D   A3           INC     DPTR
   \   00008E   E0           MOVX    A,@DPTR
   \   00008F   A2E0         MOV     C,0xE0 /* A   */.0
   \   000091   7903         MOV     R1,#0x3
   \   000093   5006         JNC     ??Smart_home_Display_8
   \   000095                ; Setup parameters for call to function HalLcdWriteString
   \   000095   7A..         MOV     R2,#`?<Constant "Sound: Voice">` & 0xff
   \   000097   7B..         MOV     R3,#(`?<Constant "Sound: Voice">` >> 8) & 0xff
   \   000099   800C         SJMP    ??Smart_home_Display_9
   1147                        else if(DevSound->data[0] & 0x02 == 0x02) { HalLcdWriteString( "Sound: Vibration", HAL_LCD_LINE_3 ); }
   1148                        else if(DevSound->data[0] & 0x03 == 0x03) { HalLcdWriteString( "Sound: All", HAL_LCD_LINE_3 ); }
   1149                        else {HalLcdWriteString( "Sound: None", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_8:
   \   00009B                ; Setup parameters for call to function HalLcdWriteString
   \   00009B   7A..         MOV     R2,#`?<Constant "Sound: None">` & 0xff
   \   00009D   7B..         MOV     R3,#(`?<Constant "Sound: None">` >> 8) & 0xff
   \   00009F   8006         SJMP    ??Smart_home_Display_9
   1150                    }
   1151                    else
   1152                    {
   1153                        HalLcdWriteString( "Sound:OFFLINE", HAL_LCD_LINE_3 ); 
   \                     ??Smart_home_Display_7:
   \   0000A1                ; Setup parameters for call to function HalLcdWriteString
   \   0000A1   7903         MOV     R1,#0x3
   \   0000A3   7A..         MOV     R2,#`?<Constant "Sound:OFFLINE">` & 0xff
   \   0000A5   7B..         MOV     R3,#(`?<Constant "Sound:OFFLINE">` >> 8) & 0xff
   \                     ??Smart_home_Display_9:
   \   0000A7   12....       LCALL   ??HalLcdWriteString?relay
   1154                    }
   1155                 
   1156                    //HalLcdWriteStringValue( "Sound:", SoundVb, 16, HAL_LCD_LINE_3 );
   1157                    
   1158                    
   1159                    //显示最下面的百分比条
   1160                    percent = (1 * 100) / LCD_PAGE_MAX;
   \   0000AA   90....       MOV     DPTR,#??percent
   \   0000AD   7419         MOV     A,#0x19
   \                     ??Smart_home_Display_10:
   \   0000AF   12....       LCALL   ?Subroutine10 & 0xFFFF
   1161                    HalLcdDisplayPercentBar("",percent);
   1162                    break;
   \                     ??CrossCallReturnLabel_21:
   \   0000B2   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1163                  }
   1164                  case 1:
   1165                  {
   1166                    //第二页只有光照
   1167                    //第一页第二行显示温度
   1168                    //      第三行显示光照
   1169                    DeviceInfo* Devtmp = &DeviceList[TempLight];
   1170                    if(Devtmp->deviceStatus != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_2:
   \   0000B5   90....       MOV     DPTR,#DeviceList + 15
   \   0000B8   E0           MOVX    A,@DPTR
   \   0000B9   6402         XRL     A,#0x2
   \   0000BB   7003         JNZ     $+5
   \   0000BD   02....       LJMP    ??Smart_home_Display_12 & 0xFFFF
   1171                    {    
   1172                        static uint16 Light;
   1173                        static uint8 lightmp;
   1174                    
   1175          
   1176                        lightmp = Devtmp->data[3];
   \   0000C0   90....       MOV     DPTR,#DeviceList + 19
   \   0000C3   E0           MOVX    A,@DPTR
   \   0000C4   90....       MOV     DPTR,#??lightmp
   \   0000C7   F0           MOVX    @DPTR,A
   1177                        Light = (uint16)Devtmp->data[4];
   \   0000C8   90....       MOV     DPTR,#DeviceList + 20
   \   0000CB   E0           MOVX    A,@DPTR
   \   0000CC   90....       MOV     DPTR,#??Light
   \   0000CF   F0           MOVX    @DPTR,A
   \   0000D0   A3           INC     DPTR
   \   0000D1   E4           CLR     A
   \   0000D2   F0           MOVX    @DPTR,A
   1178                        memcpy(&Light,&lightmp,sizeof(lightmp));
   \   0000D3                ; Setup parameters for call to function memcpy
   \   0000D3   75..01       MOV     ?V0 + 0,#0x1
   \   0000D6   F5..         MOV     ?V0 + 1,A
   \   0000D8   78..         MOV     R0,#?V0 + 0
   \   0000DA   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000DD   7C..         MOV     R4,#??lightmp & 0xff
   \   0000DF   7D..         MOV     R5,#(??lightmp >> 8) & 0xff
   \   0000E1   7A..         MOV     R2,#??Light & 0xff
   \   0000E3   7B..         MOV     R3,#(??Light >> 8) & 0xff
   \   0000E5   12....       LCALL   ??memcpy?relay
   \   0000E8   7402         MOV     A,#0x2
   \   0000EA   12....       LCALL   ?DEALLOC_XSTACK8
   1179                    
   1180                        HalLcdWriteStringValueValue( "Temper_2:", Devtmp->data[0], 10, ".", Devtmp->data[1], 10, HAL_LCD_LINE_2 );
   \   0000ED                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   0000ED   75..02       MOV     ?V0 + 0,#0x2
   \   0000F0   78..         MOV     R0,#?V0 + 0
   \   0000F2   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000F5   75..0A       MOV     ?V0 + 0,#0xa
   \   0000F8   78..         MOV     R0,#?V0 + 0
   \   0000FA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000FD   90....       MOV     DPTR,#DeviceList + 17
   \   000100   E0           MOVX    A,@DPTR
   \   000101   F5..         MOV     ?V0 + 0,A
   \   000103   78..         MOV     R0,#?V0 + 0
   \   000105   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000108   75....       MOV     ?V0 + 0,#`?<Constant ".">` & 0xff
   \   00010B   75....       MOV     ?V0 + 1,#(`?<Constant ".">` >> 8) & 0xff
   \   00010E   78..         MOV     R0,#?V0 + 0
   \   000110   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000113   790A         MOV     R1,#0xa
   \   000115   90....       MOV     DPTR,#DeviceList + 16
   \   000118   E0           MOVX    A,@DPTR
   \   000119   FC           MOV     R4,A
   \   00011A   7D00         MOV     R5,#0x0
   \   00011C   7A..         MOV     R2,#`?<Constant "Temper_2:">` & 0xff
   \   00011E   7B..         MOV     R3,#(`?<Constant "Temper_2:">` >> 8) & 0xff
   \   000120   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000123   7406         MOV     A,#0x6
   \   000125   12....       LCALL   ?DEALLOC_XSTACK8
   1181                        HalLcdWriteStringValue( "Light:", Light, 10, HAL_LCD_LINE_3 );
   \   000128                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000128   75..03       MOV     ?V0 + 0,#0x3
   \   00012B   78..         MOV     R0,#?V0 + 0
   \   00012D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000130   790A         MOV     R1,#0xa
   \   000132   90....       MOV     DPTR,#??Light
   \   000135   E0           MOVX    A,@DPTR
   \   000136   FC           MOV     R4,A
   \   000137   A3           INC     DPTR
   \   000138   E0           MOVX    A,@DPTR
   \   000139   FD           MOV     R5,A
   \   00013A   7A..         MOV     R2,#`?<Constant "Light:">` & 0xff
   \   00013C   7B..         MOV     R3,#(`?<Constant "Light:">` >> 8) & 0xff
   \   00013E   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   000141   7401         MOV     A,#0x1
   \   000143   12....       LCALL   ?DEALLOC_XSTACK8
   1182                        
   1183                        osal_msg_deallocate((uint8*)Light);
   \   000146                ; Setup parameters for call to function osal_msg_deallocate
   \   000146   90....       MOV     DPTR,#??Light
   \   000149   12....       LCALL   ?Subroutine15 & 0xFFFF
   1184                    }
   \                     ??CrossCallReturnLabel_34:
   \   00014C   8012         SJMP    ??Smart_home_Display_13
   1185                    else
   1186                    {
   1187                        HalLcdWriteString( "Temper_2:OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_12:
   \   00014E                ; Setup parameters for call to function HalLcdWriteString
   \   00014E   7902         MOV     R1,#0x2
   \   000150   7A..         MOV     R2,#`?<Constant "Temper_2:OFF">` & 0xff
   \   000152   7B..         MOV     R3,#(`?<Constant "Temper_2:OFF">` >> 8) & 0xff
   \   000154   12....       LCALL   ??HalLcdWriteString?relay
   1188                        HalLcdWriteString( "Light:OFF", HAL_LCD_LINE_3 ); 
   \   000157                ; Setup parameters for call to function HalLcdWriteString
   \   000157   7903         MOV     R1,#0x3
   \   000159   7A..         MOV     R2,#`?<Constant "Light:OFF">` & 0xff
   \   00015B   7B..         MOV     R3,#(`?<Constant "Light:OFF">` >> 8) & 0xff
   \   00015D   12....       LCALL   ??HalLcdWriteString?relay
   1189                    }
   1190                    
   1191                    //显示最下面的百分比条
   1192                    percent = (2 * 100) / LCD_PAGE_MAX;
   \                     ??Smart_home_Display_13:
   \   000160   90....       MOV     DPTR,#??percent
   \   000163   7432         MOV     A,#0x32
   \   000165   02....       LJMP    ??Smart_home_Display_10 & 0xFFFF
   1193                    HalLcdDisplayPercentBar("",percent);
   1194                    break;
   1195                    
   1196                    
   1197                  }
   1198                  
   1199                case 2:
   1200                {
   1201                    static uint16 Data1;
   1202                    static uint16 Data2;
   1203                    //显示最下面的百分比条
   1204                    DeviceInfo* rfid = &DeviceList[RfID];
   1205                    
   1206                    Data1 = ( rfid->data[1] << 8) | rfid->data[2];
   \                     ??Smart_home_Display_3:
   \   000168   90....       MOV     DPTR,#DeviceList + 24
   \   00016B   E0           MOVX    A,@DPTR
   \   00016C   F9           MOV     R1,A
   \   00016D   A3           INC     DPTR
   \   00016E   E0           MOVX    A,@DPTR
   \   00016F   90....       MOV     DPTR,#??Data1
   \   000172   F0           MOVX    @DPTR,A
   \   000173   A3           INC     DPTR
   \   000174   E9           MOV     A,R1
   \   000175   F0           MOVX    @DPTR,A
   1207                    Data2 = ( rfid->data[3] << 8) | rfid->data[4];
   \   000176   90....       MOV     DPTR,#DeviceList + 26
   \   000179   E0           MOVX    A,@DPTR
   \   00017A   F9           MOV     R1,A
   \   00017B   A3           INC     DPTR
   \   00017C   E0           MOVX    A,@DPTR
   \   00017D   90....       MOV     DPTR,#??Data2
   \   000180   F0           MOVX    @DPTR,A
   \   000181   A3           INC     DPTR
   \   000182   E9           MOV     A,R1
   \   000183   F0           MOVX    @DPTR,A
   1208                    
   1209                    switch(rfid->data[0])
   \   000184   90....       MOV     DPTR,#DeviceList + 23
   \   000187   E0           MOVX    A,@DPTR
   \   000188   14           DEC     A
   \   000189   600E         JZ      ??Smart_home_Display_14
   \   00018B   14           DEC     A
   \   00018C   6013         JZ      ??Smart_home_Display_15
   \   00018E   14           DEC     A
   \   00018F   6018         JZ      ??Smart_home_Display_16
   \   000191   14           DEC     A
   \   000192   601D         JZ      ??Smart_home_Display_17
   \   000194   14           DEC     A
   \   000195   6022         JZ      ??Smart_home_Display_18
   \   000197   8028         SJMP    ??Smart_home_Display_19
   1210                    {
   1211                    case 0x01:
   1212                      HalLcdWriteString( "MFOne-S50", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_14:
   \   000199                ; Setup parameters for call to function HalLcdWriteString
   \   000199   7902         MOV     R1,#0x2
   \   00019B   7A..         MOV     R2,#`?<Constant "MFOne-S50">` & 0xff
   \   00019D   7B..         MOV     R3,#(`?<Constant "MFOne-S50">` >> 8) & 0xff
   \   00019F   8026         SJMP    ??Smart_home_Display_20
   1213                      break;
   1214                    case 0x02:
   1215                      HalLcdWriteString( "MFOne-S70", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_15:
   \   0001A1                ; Setup parameters for call to function HalLcdWriteString
   \   0001A1   7902         MOV     R1,#0x2
   \   0001A3   7A..         MOV     R2,#`?<Constant "MFOne-S70">` & 0xff
   \   0001A5   7B..         MOV     R3,#(`?<Constant "MFOne-S70">` >> 8) & 0xff
   \   0001A7   801E         SJMP    ??Smart_home_Display_20
   1216                      break;
   1217                    case 0x03:
   1218                      HalLcdWriteString( "MF-UltraLight", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_16:
   \   0001A9                ; Setup parameters for call to function HalLcdWriteString
   \   0001A9   7902         MOV     R1,#0x2
   \   0001AB   7A..         MOV     R2,#`?<Constant "MF-UltraLight">` & 0xff
   \   0001AD   7B..         MOV     R3,#(`?<Constant "MF-UltraLight">` >> 8) & 0xff
   \   0001AF   8016         SJMP    ??Smart_home_Display_20
   1219                      break;
   1220                    case 0x04:
   1221                      HalLcdWriteString( "MF-Pro", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_17:
   \   0001B1                ; Setup parameters for call to function HalLcdWriteString
   \   0001B1   7902         MOV     R1,#0x2
   \   0001B3   7A..         MOV     R2,#`?<Constant "MF-Pro">` & 0xff
   \   0001B5   7B..         MOV     R3,#(`?<Constant "MF-Pro">` >> 8) & 0xff
   \   0001B7   800E         SJMP    ??Smart_home_Display_20
   1222                      break;
   1223                    case 0x05:
   1224                      HalLcdWriteString( "MF-DesFire", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_18:
   \   0001B9                ; Setup parameters for call to function HalLcdWriteString
   \   0001B9   7902         MOV     R1,#0x2
   \   0001BB   7A..         MOV     R2,#`?<Constant "MF-DesFire">` & 0xff
   \   0001BD   7B..         MOV     R3,#(`?<Constant "MF-DesFire">` >> 8) & 0xff
   \   0001BF   8006         SJMP    ??Smart_home_Display_20
   1225                      break;
   1226                      
   1227                    default:
   1228                      HalLcdWriteString( "No Card", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_19:
   \   0001C1                ; Setup parameters for call to function HalLcdWriteString
   \   0001C1   7902         MOV     R1,#0x2
   \   0001C3   7A..         MOV     R2,#`?<Constant "No Card">` & 0xff
   \   0001C5   7B..         MOV     R3,#(`?<Constant "No Card">` >> 8) & 0xff
   1229                      break;
   1230                    }
   \                     ??Smart_home_Display_20:
   \   0001C7   12....       LCALL   ?Subroutine13 & 0xFFFF
   1231                    
   1232                    HalLcdWriteStringValueValue( "ID: ", Data1, 16, "-", Data2, 16, HAL_LCD_LINE_3 );
   \                     ??CrossCallReturnLabel_28:
   \   0001CA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001CD   75..10       MOV     ?V0 + 0,#0x10
   \   0001D0   78..         MOV     R0,#?V0 + 0
   \   0001D2   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001D5   90....       MOV     DPTR,#??Data2
   \   0001D8   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0001DB   75....       MOV     ?V0 + 0,#`?<Constant "-">` & 0xff
   \   0001DE   75....       MOV     ?V0 + 1,#(`?<Constant "-">` >> 8) & 0xff
   \   0001E1   78..         MOV     R0,#?V0 + 0
   \   0001E3   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001E6   7910         MOV     R1,#0x10
   \   0001E8   90....       MOV     DPTR,#??Data1
   \   0001EB   E0           MOVX    A,@DPTR
   \   0001EC   FC           MOV     R4,A
   \   0001ED   A3           INC     DPTR
   \   0001EE   E0           MOVX    A,@DPTR
   \   0001EF   FD           MOV     R5,A
   \   0001F0   7A..         MOV     R2,#`?<Constant "ID: ">` & 0xff
   \   0001F2   7B..         MOV     R3,#(`?<Constant "ID: ">` >> 8) & 0xff
   \   0001F4   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   0001F7   7406         MOV     A,#0x6
   \   0001F9   12....       LCALL   ?DEALLOC_XSTACK8
   1233                    
   1234                    percent = (3 * 100) / LCD_PAGE_MAX;
   \   0001FC   90....       MOV     DPTR,#??percent
   \   0001FF   744B         MOV     A,#0x4b
   \   000201   12....       LCALL   ?Subroutine10 & 0xFFFF
   1235                    HalLcdDisplayPercentBar("",percent);
   1236                    
   1237                    osal_msg_deallocate((uint8*)Data1);
   \                     ??CrossCallReturnLabel_22:
   \   000204                ; Setup parameters for call to function osal_msg_deallocate
   \   000204   90....       MOV     DPTR,#??Data1
   \   000207   12....       LCALL   ?Subroutine15 & 0xFFFF
   1238                    osal_msg_deallocate((uint8*)Data2);
   \                     ??CrossCallReturnLabel_35:
   \   00020A                ; Setup parameters for call to function osal_msg_deallocate
   \   00020A   90....       MOV     DPTR,#??Data2
   \   00020D   12....       LCALL   ?Subroutine15 & 0xFFFF
   1239                    
   1240                    break;
   \                     ??CrossCallReturnLabel_36:
   \   000210   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1241                }
   1242                
   1243                case 3:
   1244                {        
   1245                    DeviceInfo* DevGas = &DeviceList[gasFlame];
   1246                    DeviceInfo* DevInf = &DeviceList[infrared];         
   1247                    
   1248                    if(DevGas->deviceStatus != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_4:
   \   000213   90....       MOV     DPTR,#DeviceList + 29
   \   000216   E0           MOVX    A,@DPTR
   \   000217   6402         XRL     A,#0x2
   \   000219   6014         JZ      ??Smart_home_Display_21
   1249                    {    
   1250                        if(DevGas->data[0] & 0x01 == 0x01) { HalLcdWriteString( "GasFlame: Flame", HAL_LCD_LINE_2 ); }         //0位是火焰
   \   00021B   A3           INC     DPTR
   \   00021C   E0           MOVX    A,@DPTR
   \   00021D   A2E0         MOV     C,0xE0 /* A   */.0
   \   00021F   7902         MOV     R1,#0x2
   \   000221   5006         JNC     ??Smart_home_Display_22
   \   000223                ; Setup parameters for call to function HalLcdWriteString
   \   000223   7A..         MOV     R2,#`?<Constant "GasFlame: Flame">` & 0xff
   \   000225   7B..         MOV     R3,#(`?<Constant "GasFlame: Flame">` >> 8) & 0xff
   \   000227   800C         SJMP    ??Smart_home_Display_23
   1251                        else if(DevGas->data[0] & 0x02 == 0x02) { HalLcdWriteString( "GasFlame: Gas", HAL_LCD_LINE_2 ); }//1位是气体
   1252                        else if(DevGas->data[0] & 0x03 == 0x03) { HalLcdWriteString( "GasFlame: All", HAL_LCD_LINE_2 ); }
   1253                        else {HalLcdWriteString( "GasFlame: None", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_22:
   \   000229                ; Setup parameters for call to function HalLcdWriteString
   \   000229   7A..         MOV     R2,#`?<Constant "GasFlame: None">` & 0xff
   \   00022B   7B..         MOV     R3,#(`?<Constant "GasFlame: None">` >> 8) & 0xff
   \   00022D   8006         SJMP    ??Smart_home_Display_23
   1254                    }
   1255                    else
   1256                    {
   1257                        HalLcdWriteString( "GasFlame: OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_21:
   \   00022F                ; Setup parameters for call to function HalLcdWriteString
   \   00022F   7902         MOV     R1,#0x2
   \   000231   7A..         MOV     R2,#`?<Constant "GasFlame: OFF">` & 0xff
   \   000233   7B..         MOV     R3,#(`?<Constant "GasFlame: OFF">` >> 8) & 0xff
   \                     ??Smart_home_Display_23:
   \   000235   12....       LCALL   ??HalLcdWriteString?relay
   1258                    }
   1259                    
   1260                    
   1261                    if(DevInf->deviceStatus != DEVICE_OFFLINE)
   \   000238   90....       MOV     DPTR,#DeviceList + 36
   \   00023B   E0           MOVX    A,@DPTR
   \   00023C   6402         XRL     A,#0x2
   \   00023E   6014         JZ      ??Smart_home_Display_24
   1262                    {    
   1263                        if(DevInf->data[0] == 0x01)
   \   000240   A3           INC     DPTR
   \   000241   E0           MOVX    A,@DPTR
   \   000242   6401         XRL     A,#0x1
   \   000244   7903         MOV     R1,#0x3
   \   000246   7006         JNZ     ??Smart_home_Display_25
   1264                        {
   1265                          HalLcdWriteString("Infrared: Human", HAL_LCD_LINE_3 );
   \   000248                ; Setup parameters for call to function HalLcdWriteString
   \   000248   7A..         MOV     R2,#`?<Constant "Infrared: Human">` & 0xff
   \   00024A   7B..         MOV     R3,#(`?<Constant "Infrared: Human">` >> 8) & 0xff
   \   00024C   800C         SJMP    ??Smart_home_Display_26
   1266                        }
   1267                        else{
   1268                          HalLcdWriteString("Infrared: NoHuman", HAL_LCD_LINE_3 );
   \                     ??Smart_home_Display_25:
   \   00024E                ; Setup parameters for call to function HalLcdWriteString
   \   00024E   7A..         MOV     R2,#`?<Constant "Infrared: NoHuman">` & 0xff
   \   000250   7B..         MOV     R3,#(`?<Constant "Infrared: NoHuman">` >> 8) & 0xff
   \   000252   8006         SJMP    ??Smart_home_Display_26
   1269                        }
   1270                    }
   1271                    else
   1272                    {
   1273                        HalLcdWriteString( "Infrared: OFF", HAL_LCD_LINE_3 ); 
   \                     ??Smart_home_Display_24:
   \   000254                ; Setup parameters for call to function HalLcdWriteString
   \   000254   7903         MOV     R1,#0x3
   \   000256   7A..         MOV     R2,#`?<Constant "Infrared: OFF">` & 0xff
   \   000258   7B..         MOV     R3,#(`?<Constant "Infrared: OFF">` >> 8) & 0xff
   \                     ??Smart_home_Display_26:
   \   00025A   12....       LCALL   ??HalLcdWriteString?relay
   1274                    }         
   1275          
   1276                    
   1277                    
   1278                    //显示最下面的百分比条
   1279                    percent = (4 * 100) / LCD_PAGE_MAX;
   \   00025D   90....       MOV     DPTR,#??percent
   \   000260   7464         MOV     A,#0x64
   \   000262   02....       LJMP    ??Smart_home_Display_10 & 0xFFFF
   1280                    HalLcdDisplayPercentBar("",percent);
   1281                    break;
   1282                }
   1283                    
   1284              }
   1285                
   1286                break;
   1287              
   1288              case 1:
   1289                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
   \                     ??Smart_home_Display_0:
   \   000265                ; Setup parameters for call to function HalLcdWriteString
   \   000265   7904         MOV     R1,#0x4
   \   000267   7A..         MOV     R2,#`?<Constant "Relay Contrling">` & 0xff
   \   000269   7B..         MOV     R3,#(`?<Constant "Relay Contrling">` >> 8) & 0xff
   \   00026B   12....       LCALL   ?Subroutine11 & 0xFFFF
   1290                //清除屏幕显示
   1291                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1292                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1293                //这里的deviceStatus 可能是0x00,所以会出现bug 这个0在Device检查时被设置 2.24
   1294                if(DeviceList[relay].deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_24:
   \   00026E   90....       MOV     DPTR,#DeviceList + 57
   \   000271   E0           MOVX    A,@DPTR
   \   000272   6402         XRL     A,#0x2
   \   000274   7901         MOV     R1,#0x1
   \   000276   700A         JNZ     ??Smart_home_Display_27
   1295                {
   1296                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
   \   000278                ; Setup parameters for call to function HalLcdWriteString
   \   000278   7A..         MOV     R2,#`?<Constant "Relay Offline">` & 0xff
   \   00027A   7B..         MOV     R3,#(`?<Constant "Relay Offline">` >> 8) & 0xff
   \                     ??Smart_home_Display_28:
   \   00027C   12....       LCALL   ??HalLcdWriteString?relay
   \   00027F   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1297                }
   1298                else  //设备在线回显  设备在线可能是 0/1
   1299                {
   1300                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_27:
   \   000282                ; Setup parameters for call to function HalLcdWriteString
   \   000282   7A..         MOV     R2,#`?<Constant "Relay Online">` & 0xff
   \   000284   7B..         MOV     R3,#(`?<Constant "Relay Online">` >> 8) & 0xff
   \   000286   12....       LCALL   ??HalLcdWriteString?relay
   1301                  //继电器控制界面
   1302          
   1303                  if((DeviceList[relay].data[0]& 0x02) == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   \   000289   90....       MOV     DPTR,#DeviceList + 58
   \   00028C   E0           MOVX    A,@DPTR
   \   00028D   A2E1         MOV     C,0xE0 /* A   */.1
   \   00028F   5009         JNC     ??Smart_home_Display_29
   \   000291                ; Setup parameters for call to function HalLcdWriteString
   \   000291   7902         MOV     R1,#0x2
   \   000293   7A..         MOV     R2,#`?<Constant "K1:ON">` & 0xff
   \   000295   7B..         MOV     R3,#(`?<Constant "K1:ON">` >> 8) & 0xff
   \   000297   12....       LCALL   ??HalLcdWriteString?relay
   1304                  if((DeviceList[relay].data[0] & 0x01) == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_29:
   \   00029A   90....       MOV     DPTR,#DeviceList + 58
   \   00029D   E0           MOVX    A,@DPTR
   \   00029E   A2E0         MOV     C,0xE0 /* A   */.0
   \   0002A0   5009         JNC     ??Smart_home_Display_30
   \   0002A2                ; Setup parameters for call to function HalLcdWriteString
   \   0002A2   7902         MOV     R1,#0x2
   \   0002A4   7A..         MOV     R2,#`?<Constant "K1:OFF">` & 0xff
   \   0002A6   7B..         MOV     R3,#(`?<Constant "K1:OFF">` >> 8) & 0xff
   \   0002A8   12....       LCALL   ??HalLcdWriteString?relay
   1305                  if((DeviceList[relay].data[0] & 0x20) == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_30:
   \   0002AB   90....       MOV     DPTR,#DeviceList + 58
   \   0002AE   E0           MOVX    A,@DPTR
   \   0002AF   A2E5         MOV     C,0xE0 /* A   */.5
   \   0002B1   5009         JNC     ??Smart_home_Display_31
   \   0002B3                ; Setup parameters for call to function HalLcdWriteString
   \   0002B3   7903         MOV     R1,#0x3
   \   0002B5   7A..         MOV     R2,#`?<Constant "K2:ON">` & 0xff
   \   0002B7   7B..         MOV     R3,#(`?<Constant "K2:ON">` >> 8) & 0xff
   \   0002B9   12....       LCALL   ??HalLcdWriteString?relay
   1306                  if((DeviceList[relay].data[0] & 0x10) == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}      
   \                     ??Smart_home_Display_31:
   \   0002BC   90....       MOV     DPTR,#DeviceList + 58
   \   0002BF   E0           MOVX    A,@DPTR
   \   0002C0   A2E4         MOV     C,0xE0 /* A   */.4
   \   0002C2   5062         JNC     ??Smart_home_Display_11
   \   0002C4                ; Setup parameters for call to function HalLcdWriteString
   \   0002C4   7903         MOV     R1,#0x3
   \   0002C6   7A..         MOV     R2,#`?<Constant "K2:OFF">` & 0xff
   \   0002C8   7B..         MOV     R3,#(`?<Constant "K2:OFF">` >> 8) & 0xff
   \   0002CA   80B0         SJMP    ??Smart_home_Display_28
   1307                }
   1308          
   1309                break;
   1310              
   1311              case 2:
   1312                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
   \                     ??Smart_home_Display_1:
   \   0002CC                ; Setup parameters for call to function HalLcdWriteString
   \   0002CC   7904         MOV     R1,#0x4
   \   0002CE   7A..         MOV     R2,#`?<Constant "Motor Contrling">` & 0xff
   \   0002D0   7B..         MOV     R3,#(`?<Constant "Motor Contrling">` >> 8) & 0xff
   \   0002D2   12....       LCALL   ?Subroutine11 & 0xFFFF
   1313                //清除屏幕显示
   1314                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1315                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1316                if(DeviceList[motor].deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_25:
   \   0002D5   90....       MOV     DPTR,#DeviceList + 50
   \   0002D8   E0           MOVX    A,@DPTR
   \   0002D9   6402         XRL     A,#0x2
   \   0002DB   7901         MOV     R1,#0x1
   \   0002DD   7006         JNZ     ??Smart_home_Display_32
   1317                {
   1318                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
   \   0002DF                ; Setup parameters for call to function HalLcdWriteString
   \   0002DF   7A..         MOV     R2,#`?<Constant "Motor Offline">` & 0xff
   \   0002E1   7B..         MOV     R3,#(`?<Constant "Motor Offline">` >> 8) & 0xff
   \   0002E3   8097         SJMP    ??Smart_home_Display_28
   1319                }
   1320                else  //设备在线回显  设备在线可能是 0/1
   1321                {
   1322                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_32:
   \   0002E5                ; Setup parameters for call to function HalLcdWriteString
   \   0002E5   7A..         MOV     R2,#`?<Constant "Motor Online">` & 0xff
   \   0002E7   7B..         MOV     R3,#(`?<Constant "Motor Online">` >> 8) & 0xff
   \   0002E9   12....       LCALL   ??HalLcdWriteString?relay
   1323                  //电机控制界面
   1324                  switch(DeviceList[motor].data[1])
   \   0002EC   90....       MOV     DPTR,#DeviceList + 52
   \   0002EF   E0           MOVX    A,@DPTR
   \   0002F0   24FE         ADD     A,#-0x2
   \   0002F2   600B         JZ      ??Smart_home_Display_33
   \   0002F4   14           DEC     A
   \   0002F5   7902         MOV     R1,#0x2
   \   0002F7   600E         JZ      ??Smart_home_Display_34
   1325                  {
   1326                  default:
   1327                  case 1:
   1328                    HalLcdWriteString( "Status: STOP", HAL_LCD_LINE_2 );
   \   0002F9                ; Setup parameters for call to function HalLcdWriteString
   \   0002F9   7A..         MOV     R2,#`?<Constant "Status: STOP">` & 0xff
   \   0002FB   7B..         MOV     R3,#(`?<Constant "Status: STOP">` >> 8) & 0xff
   \   0002FD   800C         SJMP    ??Smart_home_Display_35
   1329                    break;
   1330                  case 2:
   1331                    HalLcdWriteString( "Status: FORWARD", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_33:
   \   0002FF                ; Setup parameters for call to function HalLcdWriteString
   \   0002FF   7902         MOV     R1,#0x2
   \   000301   7A..         MOV     R2,#`?<Constant "Status: FORWARD">` & 0xff
   \   000303   7B..         MOV     R3,#(`?<Constant "Status: FORWARD">` >> 8) & 0xff
   \   000305   8004         SJMP    ??Smart_home_Display_35
   1332                    break;
   1333                  case 3:
   1334                    HalLcdWriteString( "Status: BACKWARD", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_34:
   \   000307                ; Setup parameters for call to function HalLcdWriteString
   \   000307   7A..         MOV     R2,#`?<Constant "Status: BACKWARD">` & 0xff
   \   000309   7B..         MOV     R3,#(`?<Constant "Status: BACKWARD">` >> 8) & 0xff
   1335                    break;
   1336                  }
   1337                  
   1338                  HalLcdWriteStringValue( "Speed:", DeviceList[motor].data[0], 10, HAL_LCD_LINE_3 );
   1339                
   1340                }
   1341            }
   \                     ??Smart_home_Display_35:
   \   00030B   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   00030E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000311   790A         MOV     R1,#0xa
   \   000313   90....       MOV     DPTR,#DeviceList + 51
   \   000316   E0           MOVX    A,@DPTR
   \   000317   FC           MOV     R4,A
   \   000318   7D00         MOV     R5,#0x0
   \   00031A   7A..         MOV     R2,#`?<Constant "Speed:">` & 0xff
   \   00031C   7B..         MOV     R3,#(`?<Constant "Speed:">` >> 8) & 0xff
   \   00031E   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   000321   7401         MOV     A,#0x1
   \   000323   12....       LCALL   ?DEALLOC_XSTACK8
   1342            
   1343          #endif // LCD_SUPPORTED  
   1344          }
   \                     ??Smart_home_Display_11:
   \   000326   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   12....       LCALL   ??osal_msg_deallocate?relay
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   000003                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000003   75..03       MOV     ?V0 + 0,#0x3
   \   000006   78..         MOV     R0,#?V0 + 0
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003   7902         MOV     R1,#0x2
   \   000005   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000007   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000009   12....       LCALL   ??HalLcdWriteString?relay
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C   7903         MOV     R1,#0x3
   \   00000E   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000012   12....       LCALL   ??HalLcdWriteString?relay
   \   000015   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   000001                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   000001   F9           MOV     R1,A
   \   000002   7A..         MOV     R2,#`?<Constant "">` & 0xff
   \   000004   7B..         MOV     R3,#(`?<Constant "">` >> 8) & 0xff
   \   000006   12....       LCALL   ??HalLcdDisplayPercentBar?relay
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Light:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??lightmp:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data1:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data2:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
   1345          
   1346          
   1347          /*******************************************************************************
   1348           * @fn      Smart_home_CallBack
   1349           *
   1350           * @brief   Send data OTA.
   1351           *
   1352           * @param   port - UART port.
   1353           * @param   event - the UART port event flag.
   1354           *
   1355           * @return  none
   1356           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1357          void Smart_home_CallBack(uint8 port, uint8 event)
   \                     Smart_home_CallBack:
   1358          { 
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   1359          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Motor_cmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Motor_cmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessMSGCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessMSGCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Device_check?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Device_check

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Relay_Ctl?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Relay_Ctl

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Display?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Display

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_CallBack

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Smart_home">`:
   \   000000   536D6172     DB "Smart_home"
   \            745F686F
   \            6D6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Init Success!\\n">`:
   \   000000   496E6974     DB "Init Success!\012"
   \            20537563
   \            63657373
   \            210A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor max Speed">`:
   \   000000   4D6F746F     DB "Motor max Speed"
   \            72206D61
   \            78205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor min Speed">`:
   \   000000   4D6F746F     DB "Motor min Speed"
   \            72206D69
   \            6E205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Allow networking">`:
   \   000000   416C6C6F     DB "Allow networking"
   \            77206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Ban   networking">`:
   \   000000   42616E20     DB "Ban   networking"
   \            20206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_1`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_2`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0
   \            0000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_3`:
   \   000000   00           DB 0
   \   000001   0000         DB 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_4`:
   \   000000   00           DB 0
   \   000001   0000         DB 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_5`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_6`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_7`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "      Menu      ">`:
   \   000000   20202020     DB "      Menu      "
   \            20204D65
   \            6E752020
   \            20202020
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " ">`:
   \   000000   2000         DB " "

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hum:">`:
   \   000000   48756D3A     DB "Hum:"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "% T_1:">`:
   \   000000   2520545F     DB "% T_1:"
   \            313A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hum:OFF T_1:OFF">`:
   \   000000   48756D3A     DB "Hum:OFF T_1:OFF"
   \            4F464620
   \            545F313A
   \            4F464600

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound: Voice">`:
   \   000000   536F756E     DB "Sound: Voice"
   \            643A2056
   \            6F696365
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   536F756E     DB "Sound: Vibration"
   \            643A2056
   \            69627261
   \            74696F6E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   536F756E     DB "Sound: All"
   \            643A2041
   \            6C6C00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound: None">`:
   \   000000   536F756E     DB "Sound: None"
   \            643A204E
   \            6F6E6500

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound:OFFLINE">`:
   \   000000   536F756E     DB "Sound:OFFLINE"
   \            643A4F46
   \            464C494E
   \            4500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "">`:
   \   000000   00           DB ""

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temper_2:">`:
   \   000000   54656D70     DB "Temper_2:"
   \            65725F32
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ".">`:
   \   000000   2E00         DB "."

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Light:">`:
   \   000000   4C696768     DB "Light:"
   \            743A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temper_2:OFF">`:
   \   000000   54656D70     DB "Temper_2:OFF"
   \            65725F32
   \            3A4F4646
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Light:OFF">`:
   \   000000   4C696768     DB "Light:OFF"
   \            743A4F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S50">`:
   \   000000   4D464F6E     DB "MFOne-S50"
   \            652D5335
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S70">`:
   \   000000   4D464F6E     DB "MFOne-S70"
   \            652D5337
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-UltraLight">`:
   \   000000   4D462D55     DB "MF-UltraLight"
   \            6C747261
   \            4C696768
   \            7400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-Pro">`:
   \   000000   4D462D50     DB "MF-Pro"
   \            726F00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-DesFire">`:
   \   000000   4D462D44     DB "MF-DesFire"
   \            65734669
   \            726500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "No Card">`:
   \   000000   4E6F2043     DB "No Card"
   \            61726400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "ID: ">`:
   \   000000   49443A20     DB "ID: "
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "-">`:
   \   000000   2D00         DB "-"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: Flame">`:
   \   000000   47617346     DB "GasFlame: Flame"
   \            6C616D65
   \            3A20466C
   \            616D6500

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   47617346     DB "GasFlame: Gas"
   \            6C616D65
   \            3A204761
   \            7300    

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   47617346     DB "GasFlame: All"
   \            6C616D65
   \            3A20416C
   \            6C00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: None">`:
   \   000000   47617346     DB "GasFlame: None"
   \            6C616D65
   \            3A204E6F
   \            6E6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: OFF">`:
   \   000000   47617346     DB "GasFlame: OFF"
   \            6C616D65
   \            3A204F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: Human">`:
   \   000000   496E6672     DB "Infrared: Human"
   \            61726564
   \            3A204875
   \            6D616E00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: NoHuman">`:
   \   000000   496E6672     DB "Infrared: NoHuman"
   \            61726564
   \            3A204E6F
   \            48756D61
   \            6E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: OFF">`:
   \   000000   496E6672     DB "Infrared: OFF"
   \            61726564
   \            3A204F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Contrling">`:
   \   000000   52656C61     DB "Relay Contrling"
   \            7920436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Offline">`:
   \   000000   52656C61     DB "Relay Offline"
   \            79204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Online">`:
   \   000000   52656C61     DB "Relay Online"
   \            79204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:ON">`:
   \   000000   4B313A4F     DB "K1:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:OFF">`:
   \   000000   4B313A4F     DB "K1:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:ON">`:
   \   000000   4B323A4F     DB "K2:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:OFF">`:
   \   000000   4B323A4F     DB "K2:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Contrling">`:
   \   000000   4D6F746F     DB "Motor Contrling"
   \            7220436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Offline">`:
   \   000000   4D6F746F     DB "Motor Offline"
   \            72204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Online">`:
   \   000000   4D6F746F     DB "Motor Online"
   \            72204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: STOP">`:
   \   000000   53746174     DB "Status: STOP"
   \            75733A20
   \            53544F50
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: FORWARD">`:
   \   000000   53746174     DB "Status: FORWARD"
   \            75733A20
   \            464F5257
   \            41524400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: BACKWARD">`:
   \   000000   53746174     DB "Status: BACKWARD"
   \            75733A20
   \            4241434B
   \            57415244
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Speed:">`:
   \   000000   53706565     DB "Speed:"
   \            643A00  
   1360          
   1361          /*******************************************************************************
   1362          *******************************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_CallBack                0      0      0
     Smart_home_Device_check            2      0     12
     Smart_home_Display                 0      0     28
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> memcpy                        0      0     24
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdWriteStringValue        0      0     22
       -> osal_msg_deallocate           0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdDisplayPercentBar       0      0     20
       -> osal_msg_deallocate           0      0     20
       -> osal_msg_deallocate           0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValue        0      0     22
     Smart_home_HandleKeys              0      0     21
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Motor_cmd          0      0     18
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Motor_cmd          0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_Init                    1      0     40
       -> afRegister                    0      0     80
       -> RegisterForKeys               0      0     80
       -> HalUARTOpen                   0      0     80
       -> HalLcdWriteString             0      0     80
       -> HalUARTWrite                  0      0     80
       -> afDataReqMTU                  0      0     80
       -> ZDO_RegisterForZDOMsg         0      0     80
       -> ZDO_RegisterForZDOMsg         0      0     80
       -> osal_start_timerEx            0      0     80
       -> osal_start_timerEx            0      0     80
       -> NLME_PermitJoiningRequest     0      0     80
       -> HalLedSet                     0      0     80
       -> HalLedSet                     0      0     80
     Smart_home_Motor_cmd               0      0     28
       -> AF_DataRequest                0      0     38
     Smart_home_ProcessEvent            0      0     12
       -> Smart_home_ProcessMSGCmd      0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> osal_msg_receive              0      0     24
       -> Smart_home_HandleKeys         0      0     24
       -> Smart_home_Device_check       0      0     24
       -> osal_start_timerEx            0      0     24
       -> Smart_home_Display            0      0     24
       -> osal_start_timerEx            0      0     24
     Smart_home_ProcessMSGCmd           2      0     42
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
     Smart_home_Relay_Ctl               0      0     28
       -> AF_DataRequest                0      0     38


   Segment part sizes:

     Function/Label                   Bytes
     --------------                   -----
     Smart_home_ClusterList_IN          18
     Smart_home_ClusterList_OUT         18
     Smart_home_SimpleDesc              12
     Smart_home_epDesc                   6
     Smart_home_TaskID                   1
     DeviceList                         63
     DeviceCnt                           9
     Ctrlcase                            1
     LCD_Page                            1
     Relay_addr                         12
     Motor_addr                         12
     Coordinator_Msg                   102
     Smart_home_MaxDataLength            2
     RelayTransID                        1
     MotorTransID                        1
     Smart_home_Init                   322
     ?Subroutine0                        5
     ?Subroutine16                       2
     ??Subroutine30_0                   11
     ?Subroutine12                      12
     Smart_home_ProcessEvent           155
     Smart_home_Motor_cmd              181
     ?Subroutine1                        5
     Smart_home_HandleKeys             297
     ?Subroutine20                      10
     ?Subroutine19                      10
     ?Subroutine18                      10
     ?Subroutine17                      10
     ?Subroutine14                      10
     MotorSpeed                          1
     NetWorkAllow                        1
     Relay1_on                           1
     Relay2_on                           1
     Smart_home_ProcessMSGCmd          756
     ?Subroutine9                       18
     ?Subroutine8                        9
     ?Subroutine7                        5
     ?Subroutine6                        5
     ?Subroutine22                       9
     ?Subroutine27                       7
     ?Subroutine5                        6
     ?Subroutine23                       8
     ?Subroutine3                        8
     ?Subroutine29                      12
     ?Subroutine2                        8
     ?Subroutine25                       4
     ?Subroutine28                      12
     ?Subroutine24                      17
     Smart_home_Device_check           101
     ?Subroutine21                       6
     ??Subroutine31_0                    6
     ?Subroutine4                        9
     ?Subroutine26                      18
     DeviceID                            1
     counttmp                            2
     Smart_home_Relay_Ctl              134
     Smart_home_Display                809
     ?Subroutine15                       9
     ?Subroutine13                       9
     ?Subroutine11                      22
     ?Subroutine10                      10
     percent                             1
     Light                               2
     lightmp                             1
     Data1                               2
     Data2                               2
     Smart_home_CallBack                 3
     ??Smart_home_Init?relay             6
     ??Smart_home_ProcessEvent?relay     6
     ??Smart_home_Motor_cmd?relay        6
     ??Smart_home_HandleKeys?relay       6
     ??Smart_home_ProcessMSGCmd?relay    6
     ??Smart_home_Device_check?relay     6
     ??Smart_home_Relay_Ctl?relay        6
     ??Smart_home_Display?relay          6
     ??Smart_home_CallBack?relay         6
     ?<Constant "Smart_home">           11
     ?<Constant "Init Success!\n">      15
     ?<Constant "Motor max Speed">      16
     ?<Constant "Motor min Speed">      16
     ?<Constant "Allow networking">     17
     ?<Constant "Ban   networking">     17
     ?<Constant {0}>                     4
     ?<Constant {0}>_1                   6
     ?<Constant {0}>_2                   7
     ?<Constant {0}>_3                   3
     ?<Constant {0}>_4                   3
     ?<Constant {0}>_5                   4
     ?<Constant {0}>_6                   4
     ?<Constant {0}>_7                   4
     ?<Constant "      Menu      ">     17
     ?<Constant " ">                     2
     ?<Constant "Hum:">                  5
     ?<Constant "% T_1:">                7
     ?<Constant "Hum:OFF T_1:OFF">      16
     ?<Constant "Sound: Voice">         13
     ?<Constant "Sound: Vibration">     17
     ?<Constant "Sound: All">           11
     ?<Constant "Sound: None">          12
     ?<Constant "Sound:OFFLINE">        14
     ?<Constant "">                      1
     ?<Constant "Temper_2:">            10
     ?<Constant ".">                     2
     ?<Constant "Light:">                7
     ?<Constant "Temper_2:OFF">         13
     ?<Constant "Light:OFF">            10
     ?<Constant "MFOne-S50">            10
     ?<Constant "MFOne-S70">            10
     ?<Constant "MF-UltraLight">        14
     ?<Constant "MF-Pro">                7
     ?<Constant "MF-DesFire">           11
     ?<Constant "No Card">               8
     ?<Constant "ID: ">                  5
     ?<Constant "-">                     2
     ?<Constant "GasFlame: Flame">      16
     ?<Constant "GasFlame: Gas">        14
     ?<Constant "GasFlame: All">        14
     ?<Constant "GasFlame: None">       15
     ?<Constant "GasFlame: OFF">        14
     ?<Constant "Infrared: Human">      16
     ?<Constant "Infrared: NoHuman">    18
     ?<Constant "Infrared: OFF">        14
     ?<Constant "Relay Contrling">      16
     ?<Constant "Relay Offline">        14
     ?<Constant "Relay Online">         13
     ?<Constant "K1:ON">                 6
     ?<Constant "K1:OFF">                7
     ?<Constant "K2:ON">                 6
     ?<Constant "K2:OFF">                7
     ?<Constant "Motor Contrling">      16
     ?<Constant "Motor Offline">        14
     ?<Constant "Motor Online">         13
     ?<Constant "Status: STOP">         13
     ?<Constant "Status: FORWARD">      16
     ?<Constant "Status: BACKWARD">     17
     ?<Constant "Speed:">                7

 
 3 060 bytes in segment BANKED_CODE
    54 bytes in segment BANK_RELAYS
   691 bytes in segment XDATA_ROM_C
   220 bytes in segment XDATA_Z
 
 3 114 bytes of CODE  memory
   691 bytes of CONST memory
   220 bytes of XDATA memory

Errors: none
Warnings: none
