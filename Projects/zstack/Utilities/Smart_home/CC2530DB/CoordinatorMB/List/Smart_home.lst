###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         25/Mar/2021  01:37:30 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_home.c                   #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wConfig.cfg (-DZIGBEEPRO -DSECURE=0               #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          ome.c -D LCD_SUPPORTED -D ZDO_COORDINATOR -D       #
#                          xNV_RESTORE -D xNV_INIT -D xREFLECTOR -D           #
#                          xHAL_UART=TRUE -D xHAL_UART_TEST -lC               #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\ -lA      #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\          #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\ -e        #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530MB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\Smart_hom #
#                          e.lst                                              #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\Smart_home #
#                          .r51                                               #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c
      1          /**************************************************************************************************
      2            文件名：Smart_home.c
      3            作 者： 柳成林
      4            功 能： 作为网关节点，实现传感器信息的采集，并可以通过其控制一些节点
      5                    终端设备主要分为8个，分别为
      6               1、温度与光照度传感器；2、烟雾与火焰传感器；3、继电器；4、温湿度传感器；
      7               5、声音与震动传感器；  6、人体红外检测传感器；7、电机；8、RFID检测器。
      8            更新日志(2021)
      9            3.13
     10            + 新增 8种传感器的Project并设置好编译情况
     11            + 修改 Smart_home_ProcessEvent() （增加各种处理器的事件）
     12                   Smart_home_Init()         （初始化内容修改，添加设备默认离线）
     13            3.14
     14            + 修改 Smart_home_ProcessMSGCmd()（添加终端节点类型判断，具体处理留空）
     15            + 新增 Hal层各种传感器驱动(头文件)
     16                   ClusterList (添加8个终端，分开出与入)
     17            3.17
     18            + 修改 Smart_home_ProcessMSGCmd() （完成接收后对于各终端处理）
     19            + 添加 Smart_home_HandleKeys()     (修改原来函数增添概念，未补全)
     20            + 删除 static void Smart_home_Send(void);
     21                   static void Smart_home_Resp(void);
     22                   两个函数
     23            3.19
     24            + 检查 出现的warning并做标识
     25            + 修改 Smart_home_HandleKeys() （补全设计函数）
     26            + 新增 Smart_home_Device_check() (设备是否在线检查)
     27          
     28            3.21
     29            + 新增 DeviceList以方便初始化和设备在线检查（本地变量部分）
     30                   Smart_home_Display()    （屏幕显示，未补全）
     31                   Smart_home_Key_add()     (控制按键，附加项)
     32            + 修改 Smart_home_Device_check()
     33                   Smart_home_Init()
     34                   Smart_home_ProcessMSGCmd()
     35                   调整有关DeviceList（设备列表）部分的修改
     36                   直接使用数组位置号作为设备编号
     37                   按键控制方式，用按键情况控制
     38            3.22
     39            + 修改 Smart_home_Display()    （屏幕显示，补全）
     40                   Smart_home_Key_add()     (屏幕显示中的电机与继电器部分加入这里)
     41                   重写别名方式减少内存损耗
     42                   出现无法初始化的问题，需要项目重构
     43            3.23
     44            + Warn 代码初始化后会产生直接进入key的情况,需debug
     45                   OK键问题无法修复，放弃使用OK键，修改为Cencel组网 禁止组网
     46            3.23 正式完成网关节点部分，（显示函数部分除外）
     47            3.24 
     48            + 修改 Smart_home_Key_add()与display函数整合
     49            + bug:在每十秒一次调用的周期检查函数中会导致显示屏将近一秒时间不显示
     50              已解决： 在状态0的时候作为在线即可
     51            + 完成 显示功能设置
     52             
     53            经调试程序无bug，可以接收各个传感器消息。//3.22
     54            当我没说。。好像出了内存问题//3.22
     55            项目重构啦！，现在又只有一个小问题了/3.23
     56          *********************************************************************/
     57          
     58          /*********************************************************************
     59           * INCLUDES
     60           */
     61          
     62          #include "OSAL.h"
     63          #include "AF.h"
     64          #include "ZDObject.h"
     65          #include "ZDProfile.h"
     66          #include "nwk_util.h"
     67          
     68          #include "Smart_home.h"
     69          #include "OnBoard.h"
     70          
     71          #include "DebugTrace.h"
     72          #include "string.h"
     73          
     74          /* HAL */
     75          #include "hal_lcd.h"
     76          #include "hal_led.h"
     77          #include "hal_key.h"
     78          #include "hal_uart.h"
     79          
     80          /*********************************************************************
     81           * MACROS
     82           */
     83          /*设备链接相关设置*/
     84          /*判断设备是否在线的最大次数*/
     85          #define DEVICE_HEART_BEAT    3
     86          #define DEVICE_CHECK_DELAY   10000
     87          
     88          /*LCD相关设置*/
     89          /*单屏显示时常   MS*/
     90          #define LCD_DISPLAY_LENGTH   10000
     91          #define LCD_DISPLAY_TIMER    1000  //多久更新一次 
     92          
     93          /*关于显示部分相关的宏*/
     94          #define LCD_PAGE_MAX         4     //目前目录页最多4页
     95          
     96          /*********************************************************************
     97           * CONSTANTS
     98           */
     99          
    100          #if !defined( SMART_HOME_PORT )
    101          #define SMART_HOME_PORT  0
    102          #endif
    103          
    104          #if !defined( SMART_HOME_BAUD )
    105          #define SMART_HOME_BAUD  HAL_UART_BR_38400
    106          //#define SMART_HOME_BAUD  HAL_UART_BR_115200
    107          #endif
    108          
    109          // When the Rx buf space is less than this threshold, invoke the Rx callback.
    110          #if !defined( SMART_HOME_THRESH )
    111          #define SMART_HOME_THRESH  64
    112          #endif
    113          
    114          #if !defined( SMART_HOME_RX_SZ )
    115          #define SMART_HOME_RX_SZ  128
    116          #endif
    117          
    118          #if !defined( SMART_HOME_TX_SZ )
    119          #define SMART_HOME_TX_SZ  128
    120          #endif
    121          
    122          // Millisecs of idle time after a byte is received before invoking Rx callback.
    123          #if !defined( SMART_HOME_IDLE )
    124          #define SMART_HOME_IDLE  6
    125          #endif
    126          
    127          // Loopback Rx bytes to Tx for throughput testing.
    128          #if !defined( SMART_HOME_LOOPBACK )
    129          #define SMART_HOME_LOOPBACK  FALSE
    130          #endif
    131          
    132          // This is the max byte count per OTA message.
    133          #if !defined( SMART_HOME_TX_MAX )
    134          #define SMART_HOME_TX_MAX  80
    135          #endif
    136          
    137          #define SMART_HOME_RSP_CNT  4
    138          
    139          //3.14 This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    140          const cId_t Smart_home_ClusterList_IN[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
   \   000008   0500         DW 5
   \   00000A   0600         DW 6
   \   00000C   0700         DW 7
   \   00000E   0800         DW 8
   \   000010   0000         DW 0
    141          {
    142            Smart_home_CLUSTERID_HUMITMSG,              // 温湿度
    143            Smart_home_CLUSTERID_TEMPLIGHTMSG,          // 温度光照
    144            Smart_home_CLUSTERID_RFIDMSG,               // 射频卡
    145            Smart_home_CLUSTERID_GASFLAMEMSG,           // 烟雾火焰
    146            Smart_home_CLUSTERID_INFRAREDMSG,           // 人体红外
    147            Smart_home_CLUSTERID_SOUNDVBMSG,            // 声音振动
    148            Smart_home_CLUSTERID_MOTORSTATUSMSG,        // 直流电机状态信息
    149            Smart_home_CLUSTERID_RELAYSTATUSMSG         // 继电器
    150          };
    151          

   \                                 In  segment XDATA_ROM_C, align 1
    152          const cId_t Smart_home_ClusterList_OUT[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0B00         DW 11
   \   000002   0A00         DW 10
   \   000004   0000         DW 0
   \   000006   0000         DW 0
   \   000008   0000         DW 0
   \   00000A   0000         DW 0
   \   00000C   0000         DW 0
   \   00000E   0000         DW 0
   \   000010   0000         DW 0
    153          {
    154            Smart_home_CLUSTERID_MOTORCTRL,             //直流电机控制
    155            Smart_home_CLUSTERID_RELAYCTRL              //继电器控制
    156          };
    157          

   \                                 In  segment XDATA_ROM_C, align 1
    158          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    159          {
    160            Smart_home_ENDPOINT,              //  int   Endpoint;
    161            Smart_home_PROFID,                //  uint16 AppProfId[2];
    162            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    163            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    164            Smart_home_FLAGS,                 //  int   AppFlags:4;
    165            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    166            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    167            Smart_home_MAX_OUTCLUSTERS,          //  byte  AppNumOutClusters;
    168            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    169          };
    170          

   \                                 In  segment XDATA_ROM_C, align 1
    171          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    172          {
    173            Smart_home_ENDPOINT,
    174            &Smart_home_TaskID,
    175            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    176            noLatencyReqs
    177          };
    178          
    179          /*********************************************************************
    180           * TYPEDEFS
    181           */
    182          
    183          /*********************************************************************
    184           * GLOBAL VARIABLES
    185           */
    186          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    187          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    188          
    189          /*********************************************************************
    190           * EXTERNAL VARIABLES
    191           */
    192          
    193          /*********************************************************************
    194           * EXTERNAL FUNCTIONS
    195           */
    196          
    197          /*********************************************************************
    198           * LOCAL VARIABLES
    199           */
    200          
    201          /*3.18 终端节点的设备详细信息缓存*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    202          static uint8 DeviceCnt[Smart_home_MAX_INCLUSTERS];
   \                     DeviceCnt:
   \   000000                DS 9
   \   000009                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    203          static int8 Ctrlcase = 0;    //0用来控制屏幕显示，1控制继电器，2控制电机
   \                     Ctrlcase:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    204          static int8 LCD_Page  =  0;  //终端状态显示
   \                     LCD_Page:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    205          DeviceInfo DeviceList[Smart_home_MAX_INCLUSTERS];                      //设备列表  
   \                     DeviceList:
   \   000000                DS 63
   \   00003F                REQUIRE __INIT_XDATA_Z
    206          /*********************************************************************************
    207          //这些似乎会引起内存问题  3.22
    208          DeviceInfo *Humit = DeviceList+Smart_home_CLUSTERID_HUMITMSG;          //温湿度缓存
    209          DeviceInfo *TempLight = DeviceList+Smart_home_CLUSTERID_TEMPLIGHTMSG;  // 温度光照缓存
    210          DeviceInfo *RfID = DeviceList+Smart_home_CLUSTERID_RFIDMSG;            // RFID 信息缓存
    211          DeviceInfo *gasFlame = DeviceList+Smart_home_CLUSTERID_GASFLAMEMSG;    //气体火焰缓存
    212          DeviceInfo *infrared = DeviceList+Smart_home_CLUSTERID_INFRAREDMSG;    //人体红外
    213          DeviceInfo *motor = DeviceList+Smart_home_CLUSTERID_MOTORSTATUSMSG;     //电机状态
    214          DeviceInfo *relay = DeviceList+Smart_home_CLUSTERID_RELAYSTATUSMSG;    //继电器状态
    215          DeviceInfo *soundVb = DeviceList+Smart_home_CLUSTERID_SOUNDVBMSG;      //声音震动
    216          修改如下
    217          ***********************************************************************************/
    218          #define Humit     1     //温湿度缓存
    219          #define TempLight 2     // 温度光照缓存
    220          #define RfID      3     // RFID 信息缓存
    221          #define gasFlame  4     //气体火焰缓存
    222          #define infrared  5     //人体红外
    223          #define motor     6     //电机状态
    224          #define relay     7     //继电器状态
    225          #define soundVb   8     //声音震动
    226          
    227          /*3.14 消息发送部分*/
    228          /*3.17短地址存储*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    229          static afAddrType_t Relay_addr;
   \                     Relay_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    230          static afAddrType_t Motor_addr;
   \                     Motor_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    231          
    232          /*消息发送数组*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    233          byte Coordinator_Msg[MSG_MAX_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
    234          
    235          
    236          /*3.19 协议栈中有但暂时不知道要他们干嘛的东西*/
    237          /*3.21 现在我会了！！！*/
    238          /*3.22 那些没用！删掉了！*/
    239          //static uint8 Smart_home_MsgID;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    240          static uint8 RelayTransID;  // This is the unique message ID (counter)
   \                     RelayTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    241          static uint8 MotorTransID;  // This is the unique message ID (counter)
   \                     MotorTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    242          
    243          /*********************************************************************
    244           * LOCAL FUNCTIONS
    245           */
    246          
    247          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    248          //static void Smart_home_Key_add(uint8 Ctrlcase);
    249          static void Smart_home_HandleKeys( byte shift, byte keys );
    250          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    251          static void Smart_home_Device_check(void);
    252          static void Smart_home_Relay_Ctl(uint8 cmd);
    253          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed);
    254          static void Smart_home_Display(void);
    255          
    256          /*********************************************************************
    257           * @fn      Smart_home_Init
    258           *
    259           * @brief   This is called during OSAL tasks' initialization.
    260           *
    261           * @param   task_id - the Task ID assigned by OSAL.
    262           *
    263           * @return  none
    264           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    265          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    266          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    267            halUARTCfg_t uartConfig;
    268            uint8 DeviceNum;                                    //DeviceList初始化用变量
    269          
    270            Smart_home_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#Smart_home_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    271            MotorTransID = 0;
   \   000010   90....       MOV     DPTR,#MotorTransID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    272            RelayTransID = 0;
   \   000015   90....       MOV     DPTR,#RelayTransID
   \   000018   F0           MOVX    @DPTR,A
    273          
    274            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   000019                ; Setup parameters for call to function afRegister
   \   000019   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   00001B   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   00001D   12....       LCALL   ??afRegister?relay
    275          
    276            RegisterForKeys( task_id );
   \   000020                ; Setup parameters for call to function RegisterForKeys
   \   000020   EE           MOV     A,R6
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??RegisterForKeys?relay
    277          
    278            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000025   85..82       MOV     DPL,?XSP + 0
   \   000028   85..83       MOV     DPH,?XSP + 1
   \   00002B   7401         MOV     A,#0x1
   \   00002D   F0           MOVX    @DPTR,A
    279            uartConfig.baudRate             = SMART_HOME_BAUD;
   \   00002E   12....       LCALL   ?XSTACK_DISP0_8
   \   000031   7402         MOV     A,#0x2
   \   000033   F0           MOVX    @DPTR,A
    280            uartConfig.flowControl          = TRUE;
   \   000034   12....       LCALL   ?XSTACK_DISP0_8
   \   000037   7401         MOV     A,#0x1
   \   000039   F0           MOVX    @DPTR,A
    281            uartConfig.flowControlThreshold = SMART_HOME_THRESH; // 2x30 don't care - see uart driver.
   \   00003A   7403         MOV     A,#0x3
   \   00003C   12....       LCALL   ?XSTACK_DISP0_8
   \   00003F   7440         MOV     A,#0x40
   \   000041   12....       LCALL   ?Subroutine12 & 0xFFFF
    282            uartConfig.rx.maxBufSize        = SMART_HOME_RX_SZ;  // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_25:
   \   000044   740A         MOV     A,#0xa
   \   000046   12....       LCALL   ?XSTACK_DISP0_8
   \   000049   7480         MOV     A,#-0x80
   \   00004B   12....       LCALL   ?Subroutine12 & 0xFFFF
    283            uartConfig.tx.maxBufSize        = SMART_HOME_TX_SZ;  // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_26:
   \   00004E   7412         MOV     A,#0x12
   \   000050   12....       LCALL   ?XSTACK_DISP0_8
   \   000053   7480         MOV     A,#-0x80
   \   000055   12....       LCALL   ?Subroutine10 & 0xFFFF
    284            uartConfig.idleTimeout          = SMART_HOME_IDLE;   // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_20:
   \   000058   12....       LCALL   ?XSTACK_DISP0_8
   \   00005B   7406         MOV     A,#0x6
   \   00005D   F0           MOVX    @DPTR,A
    285            uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
   \   00005E   7416         MOV     A,#0x16
   \   000060   12....       LCALL   ?XSTACK_DISP0_8
   \   000063   7401         MOV     A,#0x1
   \   000065   F0           MOVX    @DPTR,A
    286            //uartConfig.callBackFunc         = Smart_home_CallBack;
    287            HalUARTOpen (SMART_HOME_PORT, &uartConfig);
   \   000066                ; Setup parameters for call to function HalUARTOpen
   \   000066   85..82       MOV     DPL,?XSP + 0
   \   000069   85..83       MOV     DPH,?XSP + 1
   \   00006C   AA82         MOV     R2,DPL
   \   00006E   AB83         MOV     R3,DPH
   \   000070   7900         MOV     R1,#0x0
   \   000072   12....       LCALL   ??HalUARTOpen?relay
    288          
    289          #if defined ( LCD_SUPPORTED )
    290            HalLcdWriteString( "Smart_home", HAL_LCD_LINE_2 );
   \   000075                ; Setup parameters for call to function HalLcdWriteString
   \   000075   7902         MOV     R1,#0x2
   \   000077   7A..         MOV     R2,#`?<Constant "Smart_home">` & 0xff
   \   000079   7B..         MOV     R3,#(`?<Constant "Smart_home">` >> 8) & 0xff
   \   00007B   12....       LCALL   ??HalLcdWriteString?relay
    291          #endif
    292            
    293            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \   00007E                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00007E   7A20         MOV     R2,#0x20
   \   000080   7B80         MOV     R3,#-0x80
   \   000082   90....       MOV     DPTR,#Smart_home_TaskID
   \   000085   E0           MOVX    A,@DPTR
   \   000086   F9           MOV     R1,A
   \   000087   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    294            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   00008A                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00008A   7A06         MOV     R2,#0x6
   \   00008C   7B80         MOV     R3,#-0x80
   \   00008E   90....       MOV     DPTR,#Smart_home_TaskID
   \   000091   E0           MOVX    A,@DPTR
   \   000092   F9           MOV     R1,A
   \   000093   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    295            
    296            //3.22 显示延时
    297            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DISPLAY_EVT, 
    298                                SMART_HOME_DEVICE_DISPLAY_DELAY);
   \   000096                ; Setup parameters for call to function osal_start_timerEx
   \   000096   7C10         MOV     R4,#0x10
   \   000098   7D27         MOV     R5,#0x27
   \   00009A   7A10         MOV     R2,#0x10
   \   00009C   12....       LCALL   ??Subroutine33_0 & 0xFFFF
    299            
    300            
    301            //3.14 打开设备在线检测，第一次开启检测延时较长时间
    302            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DEVICE_CHECK_EVT, 
    303                                SMART_HOME_DEVICE_CHECK_DELAY);
   \                     ??CrossCallReturnLabel_82:
   \   00009F                ; Setup parameters for call to function osal_start_timerEx
   \   00009F   7C88         MOV     R4,#-0x78
   \   0000A1   7D13         MOV     R5,#0x13
   \   0000A3   12....       LCALL   ?Subroutine17 & 0xFFFF
    304           
    305            //3.13 关闭LED灯(D4)，表示协调器默认不允许组网
    306            NLME_PermitJoiningRequest(0x00);
   \                     ??CrossCallReturnLabel_80:
   \   0000A6                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   0000A6   7900         MOV     R1,#0x0
   \   0000A8   12....       LCALL   ?Subroutine23 & 0xFFFF
    307            HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);
    308            
    309            //3.21 初始化页面为0 第一页
    310            //LCD_Page=0;
    311            
    312            //3.13 设备离线状态检测初始化，初始化为离线
    313            //3.21 修改为DeviceList方式，初始化DeviceCnt
    314            for(DeviceNum=1;DeviceNum<Smart_home_MAX_INCLUSTERS;DeviceNum++) //只初始化终端
   \                     ??CrossCallReturnLabel_55:
   \   0000AB   7D01         MOV     R5,#0x1
    315            {
    316              DeviceList[DeviceNum].deviceid = DeviceNum;
   \                     ??Smart_home_Init_0:
   \   0000AD   8D82         MOV     DPL,R5
   \   0000AF   A882         MOV     R0,DPL
   \   0000B1   E8           MOV     A,R0
   \   0000B2   75F007       MOV     B,#0x7
   \   0000B5   A4           MUL     AB
   \   0000B6   FA           MOV     R2,A
   \   0000B7   ABF0         MOV     R3,B
   \   0000B9   74..         MOV     A,#DeviceList & 0xff
   \   0000BB   2A           ADD     A,R2
   \   0000BC   F582         MOV     DPL,A
   \   0000BE   74..         MOV     A,#(DeviceList >> 8) & 0xff
   \   0000C0   3B           ADDC    A,R3
   \   0000C1   F583         MOV     DPH,A
   \   0000C3   ED           MOV     A,R5
   \   0000C4   F0           MOVX    @DPTR,A
    317              DeviceList[DeviceNum].deviceStatus = DEVICE_OFFLINE;
   \   0000C5   A3           INC     DPTR
   \   0000C6   7402         MOV     A,#0x2
   \   0000C8   F0           MOVX    @DPTR,A
    318              DeviceCnt[DeviceNum]=0;
   \   0000C9   74..         MOV     A,#DeviceCnt & 0xff
   \   0000CB   28           ADD     A,R0
   \   0000CC   F582         MOV     DPL,A
   \   0000CE   74..         MOV     A,#(DeviceCnt >> 8) & 0xff
   \   0000D0   3400         ADDC    A,#0x0
   \   0000D2   F583         MOV     DPH,A
   \   0000D4   E4           CLR     A
   \   0000D5   F0           MOVX    @DPTR,A
    319            }
   \   0000D6   0D           INC     R5
   \   0000D7   ED           MOV     A,R5
   \   0000D8   C3           CLR     C
   \   0000D9   9409         SUBB    A,#0x9
   \   0000DB   40D0         JC      ??Smart_home_Init_0
    320          }
   \   0000DD   741D         MOV     A,#0x1d
   \   0000DF   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000E2                REQUIRE ?Subroutine0
   \   0000E2                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   7A80         MOV     R2,#-0x80
   \   000002                REQUIRE ??Subroutine33_0
   \   000002                ; // Fall through to label ??Subroutine33_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine33_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   12....       LCALL   ??NLME_PermitJoiningRequest?relay
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003   7A00         MOV     R2,#0x0
   \   000005   7901         MOV     R1,#0x1
   \   000007   12....       LCALL   ??HalLedSet?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   E4           CLR     A
   \   000003   F0           MOVX    @DPTR,A
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   E4           CLR     A
   \   000003   F0           MOVX    @DPTR,A
   \   000004   7405         MOV     A,#0x5
   \   000006   22           RET
    321          
    322          /*********************************************************************
    323           * @fn      Smart_home_ProcessEvent
    324           *
    325           * @brief   Generic Application Task event processor.
    326           *
    327           * @param   task_id  - The OSAL assigned task ID.
    328           * @param   events   - Bit map of events to process.
    329           *
    330           * @return  Event flags of all unprocessed events.
    331           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    332          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    333          {
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    334            (void)task_id;  // Intentionally unreferenced parameter
    335            afDataConfirm_t *afDataConfirm;
    336            
    337            //3.13 数据确认消息字段
    338            ZStatus_t sentStatus;
    339            byte sentEP;
    340            
    341            if ( events & SYS_EVENT_MSG )   //3.13 系统消息事件
   \   000009   5480         ANL     A,#0x80
   \   00000B   7020         JNZ     ??Smart_home_ProcessEvent_0
    342            {
    343              afIncomingMSGPacket_t *MSGpkt;
    344          
    345              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    346              {
    347                switch ( MSGpkt->hdr.event )
    348                {
    349                  case ZDO_CB_MSG:           //3.13 ZDO传入消息回调
    350                    Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    351                    break;
    352                    
    353                  case KEY_CHANGE:           //3.13 按键事件
    354                    Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    355                    break;
    356                   
    357                  case AF_DATA_CONFIRM_CMD:
    358                  //3.13 接收到此消息，作为对发送的数据包的确认。
    359                  //状态为ZStatus_t类型[在ZComDef.h中定义]
    360                  //消息字段在AF.h中定义
    361                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    362                    sentEP = afDataConfirm->endpoint;
    363                    sentStatus = afDataConfirm->hdr.status;
    364           
    365                    if ( (ZSuccess == sentStatus) &&
    366                         (Smart_home_epDesc.endPoint == sentEP) )
    367                    {  
    368                      //3.13 在消息发送确认成功后绿灯闪烁一下
    369                      HalLedSet(HAL_LED_1, HAL_LED_MODE_BLINK);
    370                    }
    371                    else
    372                    {
    373                      //3.13 红灯闪烁一下  硬件还没实现
    374                      //HalLedSet(HAL_LED_2, HAL_LED_MODE_BLINK);
    375                    }
    376                    break;
    377                    
    378                  case AF_INCOMING_MSG_CMD:   //3.13 消息传入处理
    379                    //3.13 在消息接收确认成功后绿灯闪烁一下
    380                    Smart_home_ProcessMSGCmd( MSGpkt );
    381                    break;
    382                  default:
    383                    break;
    384                }
    385          
    386                osal_msg_deallocate( (uint8 *)MSGpkt );
    387                
    388                // Next
    389                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID );
    390              }
    391              
    392              // Squash compiler warnings until values are used.
    393              (void)sentStatus;
    394              (void)sentEP;
    395              
    396              return ( events ^ SYS_EVENT_MSG );
    397            }
    398          
    399            if ( events & SMART_HOME_SEND_MSG_EVT )
   \   00000D   EE           MOV     A,R6
   \   00000E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000010   4003         JC      $+5
   \   000012   02....       LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
    400            {
    401              //Smart_home_Send();
    402              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   000015   6401         XRL     A,#0x1
   \   000017   FA           MOV     R2,A
   \   000018   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    403            }
   \                     ??Smart_home_ProcessEvent_3:
   \   00001B                ; Setup parameters for call to function Smart_home_ProcessMSGCmd
   \   00001B   12....       LCALL   ??Smart_home_ProcessMSGCmd?relay
   \                     ??Smart_home_ProcessEvent_4:
   \   00001E                ; Setup parameters for call to function osal_msg_deallocate
   \   00001E   AA..         MOV     R2,?V0 + 0
   \   000020   AB..         MOV     R3,?V0 + 1
   \   000022   12....       LCALL   ??osal_msg_deallocate?relay
   \   000025                ; Setup parameters for call to function osal_msg_receive
   \   000025   90....       MOV     DPTR,#Smart_home_TaskID
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F9           MOV     R1,A
   \   00002A   12....       LCALL   ??osal_msg_receive?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   00002D                ; Setup parameters for call to function osal_msg_receive
   \   00002D   90....       MOV     DPTR,#Smart_home_TaskID
   \   000030   E0           MOVX    A,@DPTR
   \   000031   F9           MOV     R1,A
   \   000032   12....       LCALL   ??osal_msg_receive?relay
   \   000035   8A..         MOV     ?V0 + 0,R2
   \   000037   8B..         MOV     ?V0 + 1,R3
   \   000039   EA           MOV     A,R2
   \   00003A   45..         ORL     A,?V0 + 1
   \   00003C   7003         JNZ     $+5
   \   00003E   02....       LJMP    ??Smart_home_ProcessEvent_5 & 0xFFFF
   \   000041   8A82         MOV     DPL,R2
   \   000043   8B83         MOV     DPH,R3
   \   000045   E0           MOVX    A,@DPTR
   \   000046   24E6         ADD     A,#-0x1a
   \   000048   60D1         JZ      ??Smart_home_ProcessEvent_3
   \   00004A   245A         ADD     A,#0x5a
   \   00004C   6078         JZ      ??Smart_home_ProcessEvent_6
   \   00004E   24ED         ADD     A,#-0x13
   \   000050   6009         JZ      ??Smart_home_ProcessEvent_7
   \   000052   24D6         ADD     A,#-0x2a
   \   000054   7003         JNZ     $+5
   \   000056   02....       LJMP    ??Smart_home_ProcessEvent_8 & 0xFFFF
   \   000059   80C3         SJMP    ??Smart_home_ProcessEvent_4
   \                     ??Smart_home_ProcessEvent_7:
   \   00005B   EA           MOV     A,R2
   \   00005C   240C         ADD     A,#0xc
   \   00005E   F582         MOV     DPL,A
   \   000060   EB           MOV     A,R3
   \   000061   3400         ADDC    A,#0x0
   \   000063   F583         MOV     DPH,A
   \   000065   E0           MOVX    A,@DPTR
   \   000066   F5..         MOV     ?V0 + 2,A
   \   000068   A3           INC     DPTR
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   F5..         MOV     ?V0 + 3,A
   \   00006C   78..         MOV     R0,#?V0 + 2
   \   00006E   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Smart_home_ProcessEvent>_0`:
   \   000071   0000         DW        0
   \   000073   0200         DW        2
   \   000075   0680         DW        32774
   \   000077   ....         DW        ??Smart_home_ProcessEvent_9
   \   000079   2080         DW        32800
   \   00007B   ....         DW        ??Smart_home_ProcessEvent_10
   \   00007D   ....         DW        ??Smart_home_ProcessEvent_4
   \                     ??Smart_home_ProcessEvent_9:
   \   00007F                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   00007F   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   000082   8A..         MOV     ?V0 + 2,R2
   \   000084   8B..         MOV     ?V0 + 3,R3
   \   000086   EA           MOV     A,R2
   \   000087   45..         ORL     A,?V0 + 3
   \   000089   6093         JZ      ??Smart_home_ProcessEvent_4
   \   00008B   8A82         MOV     DPL,R2
   \   00008D   8B83         MOV     DPH,R3
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   700D         JNZ     ??Smart_home_ProcessEvent_11
   \   000092   A3           INC     DPTR
   \   000093   A3           INC     DPTR
   \   000094   A3           INC     DPTR
   \   000095   E0           MOVX    A,@DPTR
   \   000096   6007         JZ      ??Smart_home_ProcessEvent_11
   \   000098                ; Setup parameters for call to function HalLedSet
   \   000098   7A01         MOV     R2,#0x1
   \   00009A   7908         MOV     R1,#0x8
   \   00009C   12....       LCALL   ??HalLedSet?relay
   \                     ??Smart_home_ProcessEvent_11:
   \   00009F                ; Setup parameters for call to function osal_mem_free
   \   00009F   AA..         MOV     R2,?V0 + 2
   \   0000A1   AB..         MOV     R3,?V0 + 3
   \   0000A3   12....       LCALL   ??osal_mem_free?relay
   \   0000A6   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_10:
   \   0000A9   EA           MOV     A,R2
   \   0000AA   2413         ADD     A,#0x13
   \   0000AC   F582         MOV     DPL,A
   \   0000AE   EB           MOV     A,R3
   \   0000AF   3400         ADDC    A,#0x0
   \   0000B1   F583         MOV     DPH,A
   \   0000B3   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_45:
   \   0000B6   700A         JNZ     ??Smart_home_ProcessEvent_12
   \   0000B8                ; Setup parameters for call to function HalLedSet
   \   0000B8   7A01         MOV     R2,#0x1
   \                     ??Smart_home_ProcessEvent_13:
   \   0000BA   7908         MOV     R1,#0x8
   \                     ??Smart_home_ProcessEvent_14:
   \   0000BC   12....       LCALL   ??HalLedSet?relay
   \   0000BF   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_12:
   \   0000C2                ; Setup parameters for call to function HalLedSet
   \   0000C2   7A04         MOV     R2,#0x4
   \   0000C4   80F4         SJMP    ??Smart_home_ProcessEvent_13
   \                     ??Smart_home_ProcessEvent_6:
   \   0000C6                ; Setup parameters for call to function Smart_home_HandleKeys
   \   0000C6   A3           INC     DPTR
   \   0000C7   A3           INC     DPTR
   \   0000C8   A3           INC     DPTR
   \   0000C9   E0           MOVX    A,@DPTR
   \   0000CA   FA           MOV     R2,A
   \   0000CB   85..82       MOV     DPL,?V0 + 0
   \   0000CE   8B83         MOV     DPH,R3
   \   0000D0   A3           INC     DPTR
   \   0000D1   A3           INC     DPTR
   \   0000D2   E0           MOVX    A,@DPTR
   \   0000D3   F9           MOV     R1,A
   \   0000D4   12....       LCALL   ??Smart_home_HandleKeys?relay
   \   0000D7   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_8:
   \   0000DA   A3           INC     DPTR
   \   0000DB   E0           MOVX    A,@DPTR
   \   0000DC   6003         JZ      $+5
   \   0000DE   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \   0000E1   8A82         MOV     DPL,R2
   \   0000E3   8B83         MOV     DPH,R3
   \   0000E5   A3           INC     DPTR
   \   0000E6   A3           INC     DPTR
   \   0000E7   E0           MOVX    A,@DPTR
   \   0000E8   6401         XRL     A,#0x1
   \   0000EA   6003         JZ      $+5
   \   0000EC   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
   \   0000EF                ; Setup parameters for call to function HalLedSet
   \   0000EF   7A02         MOV     R2,#0x2
   \   0000F1   7901         MOV     R1,#0x1
   \   0000F3   80C7         SJMP    ??Smart_home_ProcessEvent_14
   \                     ??Smart_home_ProcessEvent_5:
   \   0000F5   EE           MOV     A,R6
   \   0000F6   FA           MOV     R2,A
   \   0000F7   EF           MOV     A,R7
   \   0000F8   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_15:
   \   0000FA   FB           MOV     R3,A
   \   0000FB   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    404            
    405            if ( events & SMART_HOME_DEVICE_CHECK_EVT )  //终端设备检查事件
   \                     ??Smart_home_ProcessEvent_1:
   \   0000FE   5480         ANL     A,#0x80
   \   000100   607F         JZ      ??Smart_home_ProcessEvent_16
    406            {
    407              Smart_home_Device_check();  //调用终端设备检查函数
   \   000102   90....       MOV     DPTR,#??DeviceID
   \   000105   7401         MOV     A,#0x1
   \   000107   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_17:
   \   000108   E0           MOVX    A,@DPTR
   \   000109   FA           MOV     R2,A
   \   00010A   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_57:
   \   00010D   E0           MOVX    A,@DPTR
   \   00010E   90....       MOV     DPTR,#??Device_status
   \   000111   F0           MOVX    @DPTR,A
   \   000112   74..         MOV     A,#DeviceCnt & 0xff
   \   000114   2A           ADD     A,R2
   \   000115   F8           MOV     R0,A
   \   000116   74..         MOV     A,#(DeviceCnt >> 8) & 0xff
   \   000118   3400         ADDC    A,#0x0
   \   00011A   F9           MOV     R1,A
   \   00011B   90....       MOV     DPTR,#??counttmp
   \   00011E   E8           MOV     A,R0
   \   00011F   F0           MOVX    @DPTR,A
   \   000120   A3           INC     DPTR
   \   000121   E9           MOV     A,R1
   \   000122   F0           MOVX    @DPTR,A
   \   000123   90....       MOV     DPTR,#??Device_status
   \   000126   E0           MOVX    A,@DPTR
   \   000127   6401         XRL     A,#0x1
   \   000129   90....       MOV     DPTR,#??counttmp + 1
   \   00012C   6007         JZ      ??Smart_home_ProcessEvent_18
   \   00012E   12....       LCALL   ??Subroutine32_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_75:
   \   000131   E0           MOVX    A,@DPTR
   \   000132   04           INC     A
   \   000133   8008         SJMP    ??Smart_home_ProcessEvent_19
   \                     ??Smart_home_ProcessEvent_18:
   \   000135   12....       LCALL   ??Subroutine32_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_76:
   \   000138   E4           CLR     A
   \   000139   F0           MOVX    @DPTR,A
   \   00013A   90....       MOV     DPTR,#??Device_status
   \                     ??Smart_home_ProcessEvent_19:
   \   00013D   F0           MOVX    @DPTR,A
   \   00013E   90....       MOV     DPTR,#??counttmp
   \   000141   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   000144   C3           CLR     C
   \   000145   9404         SUBB    A,#0x4
   \   000147   400E         JC      ??Smart_home_ProcessEvent_20
   \   000149   90....       MOV     DPTR,#??counttmp + 1
   \   00014C   12....       LCALL   ??Subroutine32_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_77:
   \   00014F   7403         MOV     A,#0x3
   \   000151   F0           MOVX    @DPTR,A
   \   000152   90....       MOV     DPTR,#??Device_status
   \   000155   14           DEC     A
   \   000156   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_20:
   \   000157   90....       MOV     DPTR,#??Device_status
   \   00015A   E0           MOVX    A,@DPTR
   \   00015B   C0E0         PUSH    A
   \   00015D   90....       MOV     DPTR,#??DeviceID
   \   000160   E0           MOVX    A,@DPTR
   \   000161   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_58:
   \   000164   D0E0         POP     A
   \   000166   F0           MOVX    @DPTR,A
   \   000167   90....       MOV     DPTR,#??DeviceID
   \   00016A   E0           MOVX    A,@DPTR
   \   00016B   04           INC     A
   \   00016C   F0           MOVX    @DPTR,A
   \   00016D   C3           CLR     C
   \   00016E   9409         SUBB    A,#0x9
   \   000170   4096         JC      ??Smart_home_ProcessEvent_17
    408              
    409              osal_start_timerEx(Smart_home_TaskID,SMART_HOME_DEVICE_CHECK_EVT,
    410                                 DEVICE_CHECK_DELAY);
   \   000172                ; Setup parameters for call to function osal_start_timerEx
   \   000172   7C10         MOV     R4,#0x10
   \   000174   7D27         MOV     R5,#0x27
   \   000176   12....       LCALL   ?Subroutine17 & 0xFFFF
    411              return (events ^ SMART_HOME_DEVICE_CHECK_EVT);
   \                     ??CrossCallReturnLabel_81:
   \   000179   EE           MOV     A,R6
   \   00017A   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_21:
   \   00017C   FA           MOV     R2,A
   \   00017D   EF           MOV     A,R7
   \   00017E   02....       LJMP    ??Smart_home_ProcessEvent_15 & 0xFFFF
    412            }
    413            
    414            
    415            if( events & SMART_HOME_DISPLAY_EVT )
   \                     ??Smart_home_ProcessEvent_16:
   \   000181   EE           MOV     A,R6
   \   000182   5410         ANL     A,#0x10
   \   000184   6013         JZ      ??Smart_home_ProcessEvent_22
    416            {
    417              Smart_home_Display();
   \   000186                ; Setup parameters for call to function Smart_home_Display
   \   000186   12....       LCALL   ??Smart_home_Display?relay
    418              //周期性刷新
    419              osal_start_timerEx( Smart_home_TaskID,events & SMART_HOME_DISPLAY_EVT,LCD_DISPLAY_TIMER);
   \   000189                ; Setup parameters for call to function osal_start_timerEx
   \   000189   7CE8         MOV     R4,#-0x18
   \   00018B   7D03         MOV     R5,#0x3
   \   00018D   EE           MOV     A,R6
   \   00018E   5410         ANL     A,#0x10
   \   000190   FA           MOV     R2,A
   \   000191   12....       LCALL   ??Subroutine33_0 & 0xFFFF
    420              return (events ^ SMART_HOME_DISPLAY_EVT);
   \                     ??CrossCallReturnLabel_83:
   \   000194   EE           MOV     A,R6
   \   000195   6410         XRL     A,#0x10
   \   000197   80E3         SJMP    ??Smart_home_ProcessEvent_21
    421            }
    422          
    423            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_22:
   \   000199   7A00         MOV     R2,#0x0
   \   00019B   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_2:
   \   00019D   7F06         MOV     R7,#0x6
   \   00019F   02....       LJMP    ?BANKED_LEAVE_XDATA
    424          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   12....       LCALL   ?Subroutine30 & 0xFFFF
   \                     ??CrossCallReturnLabel_79:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine30:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003                REQUIRE ??Subroutine32_0
   \   000003                ; // Fall through to label ??Subroutine32_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine32_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F583         MOV     DPH,A
   \   000003   8882         MOV     DPL,R0
   \   000005   22           RET
    425          
    426          /*********************************************************************
    427           * @fn      Smart_home_ProcessZDOMsgs()
    428           *
    429           * @brief   Process response messages
    430           *
    431           * @param   none
    432           *
    433           * @return  none
    434           */
    435          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
    436          {
    437            switch ( inMsg->clusterID )
    438            {
    439              case End_Device_Bind_rsp:
    440                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    441                {
    442                  // Light LED
    443                  HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    444                }
    445          #if defined(BLINK_LEDS)
    446                else
    447                {
    448                  // Flash LED to show failure
    449                  HalLedSet ( HAL_LED_4, HAL_LED_MODE_FLASH );
    450                }
    451          #endif
    452                break;
    453                
    454              case Match_Desc_rsp:
    455                {
    456                  ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
    457                  if ( pRsp )
    458                  {
    459                    if ( pRsp->status == ZSuccess && pRsp->cnt )
    460                    {
    461                      /*
    462                      Smart_home_TxAddr.addrMode = (afAddrMode_t)Addr16Bit;
    463                      Smart_home_TxAddr.addr.shortAddr = pRsp->nwkAddr;
    464                      // Take the first endpoint, Can be changed to search through endpoints
    465                      Smart_home_TxAddr.endPoint = pRsp->epList[0];
    466                      */
    467                      
    468                      // Light LED
    469                      HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    470                    }
    471                    osal_mem_free( pRsp );
    472                  }
    473                }
    474                break;
    475            }
    476          }
    477          
    478          /*********************************************************************
    479           * @fn      Smart_home_Key_add
    480           *
    481           * @brief   3.21新增，用来标识目前处于的控制状态，是附加项
    482           *          0 控制屏幕 1 控制继电器 2 控制电机
    483           *            
    484           *
    485           * @param   Ctrlcase 目前的控制号
    486           *
    487           * @return  屏幕回显
    488           *
    489          static void Smart_home_Key_add(uint8 Ctrlcase)
    490          {
    491          #if defined ( LCD_SUPPORTED )
    492            switch(Ctrlcase)
    493            {
    494              default:    
    495              case 0:
    496                HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
    497                //清除屏幕显示
    498                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    499                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    500                break;
    501              
    502              case 1:
    503                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
    504                //清除屏幕显示
    505                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    506                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    507                if(DeviceList[relay].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    508                {
    509                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
    510                }
    511                if(DeviceList[relay].deviceStatus != DEVICE_ONLINE)
    512                {
    513                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
    514                }
    515                break;
    516              
    517              case 2:
    518                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
    519                //清除屏幕显示
    520                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    521                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    522                if(DeviceList[motor].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    523                {
    524                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 );
    525                }
    526                if(DeviceList[motor].deviceStatus != DEVICE_ONLINE)
    527                {
    528                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
    529                }      
    530                break;
    531          #endif     
    532            }
    533          }
    534          */
    535          /*********************************************************************
    536           * @fn      Smart_home_HandleKeys
    537           *
    538           * @brief   设置按键事件
    539           *          目前事件设置    3.19
    540           *
    541           *          HAL_KEY_SW_1--UP     (上翻一页)
    542           *          HAL_KEY_SW_2--RIGHT  (选项向右)
    543           *          HAL_KEY_SW_3--DOWN   (下翻一页)
    544           *          HAL_KEY_SW_4--LEFT   (选项向左)
    545           *          HAL_KEY_SW_5--OK     (组网开)
    546           *          HAL_KEY_SW_7--CANCEL (组网关) 
    547           * + 3.21 新增  选项总共有3种，控制屏幕显示，控制继电器和控制电机
    548           *              控制继电器时 UP控制1，DOWN控制2
    549           *              控制电机时   UP加速， DOWN减速
    550           *
    551           * @param   shift - true if in shift/alt.
    552           * @param   keys  - bit field for key events.
    553           *
    554           * @return  none
    555           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    556          void Smart_home_HandleKeys( byte shift, byte keys )
   \                     Smart_home_HandleKeys:
    557          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    558            //zAddrType_t txAddr;
    559            static int8 MotorSpeed = 0;
    560            static uint8 NetWorkAllow = 0;
    561            /*这里这么设置似乎会出现内存问题
    562            static uint8 Relay1_on = 0x02;  //两个默认都是关闭
    563            static uint8 Relay2_on = 0x10;
    564            */
    565            /*3.21 LCD 显示*/
    566            static uint8 Relay1_on = 0;  //两个默认都是关闭
    567            static uint8 Relay2_on = 0;
    568            
    569            
    570            if ( keys & HAL_KEY_SW_1 )  //UP
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5053         JNC     ??Smart_home_HandleKeys_0
    571            {
    572              switch(Ctrlcase)
   \   00000B   90....       MOV     DPTR,#Ctrlcase
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   14           DEC     A
   \   000010   6016         JZ      ??Smart_home_HandleKeys_1
   \   000012   14           DEC     A
   \   000013   6029         JZ      ??Smart_home_HandleKeys_2
    573              {
    574                default:    
    575                case 0:
    576                {
    577                  if(LCD_Page < LCD_PAGE_MAX)       {LCD_Page++;}
   \   000015   90....       MOV     DPTR,#LCD_Page
   \   000018   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_47:
   \   00001B   5003         JNC     ??Smart_home_HandleKeys_3
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   04           INC     A
   \   00001F   F0           MOVX    @DPTR,A
    578                  if(LCD_Page > LCD_PAGE_MAX - 1)       {LCD_Page = 0;}
   \                     ??Smart_home_HandleKeys_3:
   \   000020   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_48:
   \   000023   4039         JC      ??Smart_home_HandleKeys_0
   \   000025   E4           CLR     A
   \   000026   8035         SJMP    ??Smart_home_HandleKeys_4
    579                  break;
    580                }
    581                case 1:
    582                {  
    583                  uint8 switch1;
    584                  if(Relay1_on == 0)  {Relay1_on = 1 ; switch1 = 0x02;}
   \                     ??Smart_home_HandleKeys_1:
   \   000028   90....       MOV     DPTR,#??Relay1_on
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   7007         JNZ     ??Smart_home_HandleKeys_5
   \   00002E   7401         MOV     A,#0x1
   \   000030   F0           MOVX    @DPTR,A
   \   000031   7902         MOV     R1,#0x2
   \   000033   8004         SJMP    ??Smart_home_HandleKeys_6
    585                  else if(Relay1_on == 1)  {Relay1_on = 0; switch1 = 0x01;}
   \                     ??Smart_home_HandleKeys_5:
   \   000035   E4           CLR     A
   \   000036   F0           MOVX    @DPTR,A
   \   000037   7901         MOV     R1,#0x1
    586                  else  {Relay1_on = 0; switch1 = 0x01;}       
    587                  Smart_home_Relay_Ctl(switch1);  
   \                     ??Smart_home_HandleKeys_6:
   \   000039                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   000039   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    588                  break;
   \   00003C   8020         SJMP    ??Smart_home_HandleKeys_0
    589                } 
    590                case 2:
    591                {
    592                  if(MotorSpeed < 80)     {MotorSpeed += 10;}
   \                     ??Smart_home_HandleKeys_2:
   \   00003E   90....       MOV     DPTR,#??MotorSpeed
   \   000041   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_49:
   \   000044   5004         JNC     ??Smart_home_HandleKeys_7
   \   000046   E0           MOVX    A,@DPTR
   \   000047   240A         ADD     A,#0xa
   \   000049   F0           MOVX    @DPTR,A
    593                  if(MotorSpeed >= 80)     
   \                     ??Smart_home_HandleKeys_7:
   \   00004A   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_50:
   \   00004D   400F         JC      ??Smart_home_HandleKeys_0
    594                  {
    595          #if defined ( LCD_SUPPORTED )
    596                     HalLcdWriteString( "Motor max Speed", HAL_LCD_LINE_4 );
   \   00004F                ; Setup parameters for call to function HalLcdWriteString
   \   00004F   7904         MOV     R1,#0x4
   \   000051   7A..         MOV     R2,#`?<Constant "Motor max Speed">` & 0xff
   \   000053   7B..         MOV     R3,#(`?<Constant "Motor max Speed">` >> 8) & 0xff
   \   000055   12....       LCALL   ??HalLcdWriteString?relay
    597          #endif 
    598                     MotorSpeed = 80;
   \   000058   90....       MOV     DPTR,#??MotorSpeed
   \   00005B   7450         MOV     A,#0x50
   \                     ??Smart_home_HandleKeys_4:
   \   00005D   F0           MOVX    @DPTR,A
    599                  }
    600                  break;
    601                }
    602                   
    603              }    
    604            }
    605            
    606            if ( keys & HAL_KEY_SW_3 )  //DOWN
   \                     ??Smart_home_HandleKeys_0:
   \   00005E   EE           MOV     A,R6
   \   00005F   A2E4         MOV     C,0xE0 /* A   */.4
   \   000061   505E         JNC     ??Smart_home_HandleKeys_8
    607            {
    608              switch(Ctrlcase)
   \   000063   90....       MOV     DPTR,#Ctrlcase
   \   000066   E0           MOVX    A,@DPTR
   \   000067   14           DEC     A
   \   000068   6017         JZ      ??Smart_home_HandleKeys_9
   \   00006A   14           DEC     A
   \   00006B   6034         JZ      ??Smart_home_HandleKeys_10
    609              {
    610                default:    
    611                case 0:
    612                {
    613                  if(LCD_Page >= 0)       {LCD_Page--;}
   \   00006D   90....       MOV     DPTR,#LCD_Page
   \   000070   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   000073   4003         JC      ??Smart_home_HandleKeys_11
   \   000075   E0           MOVX    A,@DPTR
   \   000076   14           DEC     A
   \   000077   F0           MOVX    @DPTR,A
    614                  if(LCD_Page < 0)        {LCD_Page = LCD_PAGE_MAX;}
   \                     ??Smart_home_HandleKeys_11:
   \   000078   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   00007B   5044         JNC     ??Smart_home_HandleKeys_8
   \   00007D   7404         MOV     A,#0x4
   \   00007F   803F         SJMP    ??Smart_home_HandleKeys_12
    615                  break;
    616                }
    617                case 1:  
    618                {
    619                  uint8 switch2;
    620                  if(Relay2_on == 0)  {Relay2_on = 1 ; switch2 = 0x20;}
   \                     ??Smart_home_HandleKeys_9:
   \   000081   90....       MOV     DPTR,#??Relay2_on
   \   000084   E0           MOVX    A,@DPTR
   \   000085   7007         JNZ     ??Smart_home_HandleKeys_13
   \   000087   7401         MOV     A,#0x1
   \   000089   F0           MOVX    @DPTR,A
   \   00008A   7920         MOV     R1,#0x20
   \   00008C   800E         SJMP    ??Smart_home_HandleKeys_14
    621                  else if(Relay2_on == 1)  {Relay2_on = 0; switch2 = 0x10;}
   \                     ??Smart_home_HandleKeys_13:
   \   00008E   6401         XRL     A,#0x1
   \   000090   7006         JNZ     ??Smart_home_HandleKeys_15
   \   000092   E4           CLR     A
   \   000093   F0           MOVX    @DPTR,A
   \   000094   7910         MOV     R1,#0x10
   \   000096   8004         SJMP    ??Smart_home_HandleKeys_14
    622                  else  {Relay2_on = 0; switch2 = 0x01;}       
   \                     ??Smart_home_HandleKeys_15:
   \   000098   E4           CLR     A
   \   000099   F0           MOVX    @DPTR,A
   \   00009A   7901         MOV     R1,#0x1
    623                  Smart_home_Relay_Ctl(switch2);       
   \                     ??Smart_home_HandleKeys_14:
   \   00009C                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   00009C   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    624                  break;
   \   00009F   8020         SJMP    ??Smart_home_HandleKeys_8
    625                } 
    626                case 2:
    627                {
    628                  if(MotorSpeed > -80)     {MotorSpeed -= 10;}
   \                     ??Smart_home_HandleKeys_10:
   \   0000A1   90....       MOV     DPTR,#??MotorSpeed
   \   0000A4   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_51:
   \   0000A7   4004         JC      ??Smart_home_HandleKeys_16
   \   0000A9   E0           MOVX    A,@DPTR
   \   0000AA   24F6         ADD     A,#-0xa
   \   0000AC   F0           MOVX    @DPTR,A
    629                  if(MotorSpeed <= -80)     
   \                     ??Smart_home_HandleKeys_16:
   \   0000AD   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_52:
   \   0000B0   500F         JNC     ??Smart_home_HandleKeys_8
    630                  {
    631          #if defined ( LCD_SUPPORTED )
    632                     HalLcdWriteString( "Motor min Speed", HAL_LCD_LINE_4 );
   \   0000B2                ; Setup parameters for call to function HalLcdWriteString
   \   0000B2   7904         MOV     R1,#0x4
   \   0000B4   7A..         MOV     R2,#`?<Constant "Motor min Speed">` & 0xff
   \   0000B6   7B..         MOV     R3,#(`?<Constant "Motor min Speed">` >> 8) & 0xff
   \   0000B8   12....       LCALL   ??HalLcdWriteString?relay
    633          #endif 
    634                     MotorSpeed = -80;
   \   0000BB   90....       MOV     DPTR,#??MotorSpeed
   \   0000BE   74B0         MOV     A,#-0x50
   \                     ??Smart_home_HandleKeys_12:
   \   0000C0   F0           MOVX    @DPTR,A
    635                  }
    636                  break; 
    637                }
    638              }
    639            }
    640            
    641            if ( keys & HAL_KEY_SW_2 )  //RIGHT  
   \                     ??Smart_home_HandleKeys_8:
   \   0000C1   EE           MOV     A,R6
   \   0000C2   A2E1         MOV     C,0xE0 /* A   */.1
   \   0000C4   5012         JNC     ??Smart_home_HandleKeys_17
    642            /*3.22 这里在调试时出现问题，具体问题为 点击up时会出现屏幕变为禁止组网
    643              控制方面变为控制电机，问题在于汇编中的key值会出现  keys & HAL_KEY_SW_2 = 2
    644              的情况，暂时禁止，需要等待研究  还有key_7*/
    645            {
    646               if(Ctrlcase < 3)   { Ctrlcase++;}
   \   0000C6   90....       MOV     DPTR,#Ctrlcase
   \   0000C9   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_53:
   \   0000CC   5003         JNC     ??Smart_home_HandleKeys_18
   \   0000CE   E0           MOVX    A,@DPTR
   \   0000CF   04           INC     A
   \   0000D0   F0           MOVX    @DPTR,A
    647               if(Ctrlcase > 2)   { Ctrlcase=0;}
   \                     ??Smart_home_HandleKeys_18:
   \   0000D1   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_54:
   \   0000D4   4002         JC      ??Smart_home_HandleKeys_17
   \   0000D6   E4           CLR     A
   \   0000D7   F0           MOVX    @DPTR,A
    648               //Smart_home_Key_add(Ctrlcase);
    649            }
    650            
    651            if ( keys & HAL_KEY_SW_4 )  //LEFT
   \                     ??Smart_home_HandleKeys_17:
   \   0000D8   EE           MOV     A,R6
   \   0000D9   A2E3         MOV     C,0xE0 /* A   */.3
   \   0000DB   5013         JNC     ??Smart_home_HandleKeys_19
    652            {
    653               if(Ctrlcase > -1)   { Ctrlcase--;}
   \   0000DD   90....       MOV     DPTR,#Ctrlcase
   \   0000E0   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   0000E3   4003         JC      ??Smart_home_HandleKeys_20
   \   0000E5   E0           MOVX    A,@DPTR
   \   0000E6   14           DEC     A
   \   0000E7   F0           MOVX    @DPTR,A
    654               if(Ctrlcase < 0)    { Ctrlcase=2;}
   \                     ??Smart_home_HandleKeys_20:
   \   0000E8   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   0000EB   5003         JNC     ??Smart_home_HandleKeys_19
   \   0000ED   7402         MOV     A,#0x2
   \   0000EF   F0           MOVX    @DPTR,A
    655               //Smart_home_Key_add(Ctrlcase);    
    656            }
    657            
    658            if ( keys & HAL_KEY_SW_5 )  //OK
    659            {
    660          
    661            }
    662            
    663            if ( keys & HAL_KEY_SW_7 )  //CENCEL
   \                     ??Smart_home_HandleKeys_19:
   \   0000F0   EE           MOV     A,R6
   \   0000F1   A2E6         MOV     C,0xE0 /* A   */.6
   \   0000F3   502C         JNC     ??Smart_home_HandleKeys_21
    664            {
    665               if(NetWorkAllow == 0)
   \   0000F5   90....       MOV     DPTR,#??NetWorkAllow
   \   0000F8   E0           MOVX    A,@DPTR
   \   0000F9   7017         JNZ     ??Smart_home_HandleKeys_22
    666               {
    667                 NetWorkAllow = 1;
   \   0000FB   7401         MOV     A,#0x1
   \   0000FD   F0           MOVX    @DPTR,A
    668                 NLME_PermitJoiningRequest(0xFF); // 组网，允许随时加入
   \   0000FE                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   0000FE   79FF         MOV     R1,#-0x1
   \   000100   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    669                 HalLedSet(HAL_LED_1, HAL_LED_MODE_ON);
   \   000103                ; Setup parameters for call to function HalLedSet
   \   000103   7A01         MOV     R2,#0x1
   \   000105   7901         MOV     R1,#0x1
   \   000107   12....       LCALL   ??HalLedSet?relay
    670          #if defined ( LCD_SUPPORTED )
    671                 HalLcdWriteString( "Allow networking", HAL_LCD_LINE_4 );
   \   00010A                ; Setup parameters for call to function HalLcdWriteString
   \   00010A   7904         MOV     R1,#0x4
   \   00010C   7A..         MOV     R2,#`?<Constant "Allow networking">` & 0xff
   \   00010E   7B..         MOV     R3,#(`?<Constant "Allow networking">` >> 8) & 0xff
   \   000110   800C         SJMP    ??Smart_home_HandleKeys_23
    672          #endif
    673               }
    674               else
    675               {
    676                 NetWorkAllow = 0;
   \                     ??Smart_home_HandleKeys_22:
   \   000112   E4           CLR     A
   \   000113   F0           MOVX    @DPTR,A
    677                 NLME_PermitJoiningRequest(0x00); // 不允许组网
   \   000114                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   000114   F9           MOV     R1,A
   \   000115   12....       LCALL   ?Subroutine23 & 0xFFFF
    678                 HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);  
    679          #if defined ( LCD_SUPPORTED )
    680                 HalLcdWriteString( "Ban   networking", HAL_LCD_LINE_4 );
   \                     ??CrossCallReturnLabel_56:
   \   000118                ; Setup parameters for call to function HalLcdWriteString
   \   000118   7904         MOV     R1,#0x4
   \   00011A   7A..         MOV     R2,#`?<Constant "Ban   networking">` & 0xff
   \   00011C   7B..         MOV     R3,#(`?<Constant "Ban   networking">` >> 8) & 0xff
   \                     ??Smart_home_HandleKeys_23:
   \   00011E   12....       LCALL   ??HalLcdWriteString?relay
    681          #endif        
    682               }
    683            }
    684          }
   \                     ??Smart_home_HandleKeys_21:
   \   000121   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9403         SUBB    A,#0x3
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   94B1         SUBB    A,#-0x4f
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9450         SUBB    A,#0x50
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9404         SUBB    A,#0x4
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9400         SUBB    A,#0x0
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??MotorSpeed:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??NetWorkAllow:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay1_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay2_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    685          
    686          /*********************************************************************
    687           * @fn      Smart_home_ProcessMSGCmd
    688           *
    689           * @brief   Data message processor callback. This function processes
    690           *          any incoming data - probably from other devices. Based
    691           *          on the cluster ID, perform the intended action.
    692           *
    693           * @param   pkt - pointer to the incoming message packet
    694           *
    695           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    696           *          FALSE otherwise.
    697           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    698          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
   \                     Smart_home_ProcessMSGCmd:
    699          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    700            switch ( pkt->clusterId )
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F5..         MOV     ?V0 + 0,A
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   F5..         MOV     ?V0 + 1,A
   \   000014   78..         MOV     R0,#?V0 + 0
   \   000016   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for Smart_home_ProcessMSGCmd>_0`:
   \   000019   0100         DW        1
   \   00001B   07           DB        7
   \   00001C   ....         DW        ??Smart_home_ProcessMSGCmd_0
   \   00001E   ....         DW        ??Smart_home_ProcessMSGCmd_1
   \   000020   ....         DW        ??Smart_home_ProcessMSGCmd_2
   \   000022   ....         DW        ??Smart_home_ProcessMSGCmd_3
   \   000024   ....         DW        ??Smart_home_ProcessMSGCmd_4
   \   000026   ....         DW        ??Smart_home_ProcessMSGCmd_5
   \   000028   ....         DW        ??Smart_home_ProcessMSGCmd_6
   \   00002A   ....         DW        ??Smart_home_ProcessMSGCmd_7
   \   00002C   ....         DW        ??Smart_home_ProcessMSGCmd_8
    701            {
    702            /***********************************************************************
    703              目前总共8种case
    704             #define Smart_home_CLUSTERID_HUMITMSG            1  // 温湿度
    705             #define Smart_home_CLUSTERID_TEMPLIGHTMSG        2  // 温度光照
    706             #define Smart_home_CLUSTERID_RFIDMSG             3  // 射频卡
    707             #define Smart_home_CLUSTERID_GASFLAMEMSG         4  // 烟雾火焰
    708             #define Smart_home_CLUSTERID_INFRAREDMSG         5  // 人体红外
    709             #define Smart_home_CLUSTERID_SOUNDVBMSG          6  // 声音振动
    710             #define Smart_home_CLUSTERID_MOTORSTATUSMSG      7  // 直流电机状态信息
    711             #define Smart_home_CLUSTERID_RELAYSTATUSMSG      8  // 继电器状态信息
    712              
    713             设备描述
    714             typedef struct DeviceInfo
    715             {
    716               uint8 deviceID;
    717               uint8 deviceStatus;
    718               uint8 data[5];
    719             } DeviceInfo; 
    720             ************************************************************************/ 
    721              //3.14 消息处理模块，共8个，行为类似 
    722              //3.21 修改为指针方法（DeviceList相关）
    723              case Smart_home_CLUSTERID_HUMITMSG:         // 温湿度
    724                DeviceList[Humit].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_1:
   \   00002E   90....       MOV     DPTR,#DeviceList + 8
   \   000031   12....       LCALL   ?Subroutine2 & 0xFFFF
    725                DeviceList[Humit].data[0] = pkt->cmd.Data[4]; // 湿度 
   \                     ??CrossCallReturnLabel_0:
   \   000034   90....       MOV     DPTR,#DeviceList + 9
   \   000037   12....       LCALL   ?Subroutine6 & 0xFFFF
    726                DeviceList[Humit].data[1] = pkt->cmd.Data[5]; // 温度
   \                     ??CrossCallReturnLabel_12:
   \   00003A   90....       MOV     DPTR,#DeviceList + 10
   \   00003D   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    727                break;
    728                
    729              case Smart_home_CLUSTERID_TEMPLIGHTMSG:     // 温度光照
    730                DeviceList[TempLight].deviceStatus = DEVICE_ONLINE;   //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_2:
   \   000040   90....       MOV     DPTR,#DeviceList + 15
   \   000043   12....       LCALL   ?Subroutine2 & 0xFFFF
    731                DeviceList[TempLight].data[0] = pkt->cmd.Data[4]; // 温度整数
   \                     ??CrossCallReturnLabel_1:
   \   000046   90....       MOV     DPTR,#DeviceList + 16
   \   000049   12....       LCALL   ?Subroutine7 & 0xFFFF
    732                DeviceList[TempLight].data[1] = pkt->cmd.Data[5]; // 温度小数
   \                     ??CrossCallReturnLabel_14:
   \   00004C   90....       MOV     DPTR,#DeviceList + 17
   \   00004F   12....       LCALL   ?Subroutine5 & 0xFFFF
    733                DeviceList[TempLight].data[2] = pkt->cmd.Data[6]; // 光照
   \                     ??CrossCallReturnLabel_10:
   \   000052   90....       MOV     DPTR,#DeviceList + 18
   \   000055   12....       LCALL   ?Subroutine4 & 0xFFFF
    734                DeviceList[TempLight].data[3] = pkt->cmd.Data[7]; // 光照
   \                     ??CrossCallReturnLabel_8:
   \   000058   E0           MOVX    A,@DPTR
   \   000059   90....       MOV     DPTR,#DeviceList + 19
   \   00005C   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    735                break;
    736                
    737              case Smart_home_CLUSTERID_RFIDMSG:          // 射频卡
    738                DeviceList[RfID].deviceStatus = DEVICE_ONLINE;        //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_3:
   \   00005F   90....       MOV     DPTR,#DeviceList + 22
   \   000062   12....       LCALL   ?Subroutine2 & 0xFFFF
    739                DeviceList[RfID].data[0] = pkt->cmd.Data[4]; // 射频卡类型
   \                     ??CrossCallReturnLabel_2:
   \   000065   90....       MOV     DPTR,#DeviceList + 23
   \   000068   12....       LCALL   ?Subroutine7 & 0xFFFF
    740                DeviceList[RfID].data[1] = pkt->cmd.Data[5]; // 4个字节的ID号
   \                     ??CrossCallReturnLabel_15:
   \   00006B   90....       MOV     DPTR,#DeviceList + 24
   \   00006E   12....       LCALL   ?Subroutine5 & 0xFFFF
    741                DeviceList[RfID].data[2] = pkt->cmd.Data[6]; //
   \                     ??CrossCallReturnLabel_11:
   \   000071   90....       MOV     DPTR,#DeviceList + 25
   \   000074   12....       LCALL   ?Subroutine27 & 0xFFFF
    742                DeviceList[RfID].data[3] = pkt->cmd.Data[7]; //
   \                     ??CrossCallReturnLabel_67:
   \   000077   A3           INC     DPTR
   \   000078   E0           MOVX    A,@DPTR
   \   000079   90....       MOV     DPTR,#DeviceList + 26
   \   00007C   12....       LCALL   ?Subroutine4 & 0xFFFF
    743                DeviceList[RfID].data[4] = pkt->cmd.Data[8]; //  
   \                     ??CrossCallReturnLabel_9:
   \   00007F   A3           INC     DPTR
   \   000080   E0           MOVX    A,@DPTR
   \   000081   90....       MOV     DPTR,#DeviceList + 27
   \   000084   8063         SJMP    ??Smart_home_ProcessMSGCmd_9
    744                break;
    745                
    746              case Smart_home_CLUSTERID_GASFLAMEMSG:      // 烟雾火焰
    747                DeviceList[gasFlame].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_4:
   \   000086   90....       MOV     DPTR,#DeviceList + 29
   \   000089   12....       LCALL   ?Subroutine3 & 0xFFFF
    748                DeviceList[gasFlame].data[0] = pkt->cmd.Data[4]; // 烟雾与火焰报警信息
   \                     ??CrossCallReturnLabel_4:
   \   00008C   90....       MOV     DPTR,#DeviceList + 30
   \   00008F   8058         SJMP    ??Smart_home_ProcessMSGCmd_9
    749                break;
    750                
    751              case Smart_home_CLUSTERID_INFRAREDMSG:      // 人体红外
    752                DeviceList[infrared].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_5:
   \   000091   90....       MOV     DPTR,#DeviceList + 36
   \   000094   12....       LCALL   ?Subroutine3 & 0xFFFF
    753                DeviceList[infrared].data[0] = pkt->cmd.Data[4]; // 人体红外 
   \                     ??CrossCallReturnLabel_5:
   \   000097   90....       MOV     DPTR,#DeviceList + 37
   \   00009A   804D         SJMP    ??Smart_home_ProcessMSGCmd_9
    754                break;
    755          
    756              case Smart_home_CLUSTERID_SOUNDVBMSG:       // 声音振动
    757                DeviceList[soundVb].deviceStatus = DEVICE_ONLINE;     //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_6:
   \   00009C   90....       MOV     DPTR,#DeviceList + 57
   \   00009F   12....       LCALL   ?Subroutine3 & 0xFFFF
    758                DeviceList[soundVb].data[0] = pkt->cmd.Data[4]; // 声音震动信息
   \                     ??CrossCallReturnLabel_6:
   \   0000A2   90....       MOV     DPTR,#DeviceList + 58
   \   0000A5   8042         SJMP    ??Smart_home_ProcessMSGCmd_9
    759                break;
    760                
    761              case Smart_home_CLUSTERID_MOTORSTATUSMSG:   // 直流电机状态信息
    762                DeviceList[motor].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \                     ??Smart_home_ProcessMSGCmd_7:
   \   0000A7   90....       MOV     DPTR,#DeviceList + 43
   \   0000AA   7401         MOV     A,#0x1
   \   0000AC   F0           MOVX    @DPTR,A
    763                // 储存电机设备的网络地址，用于发送控制命令
    764                Motor_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0000AD   90....       MOV     DPTR,#Motor_addr + 8
   \   0000B0   12....       LCALL   ?Subroutine8 & 0xFFFF
    765                Motor_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_16:
   \   0000B3   90....       MOV     DPTR,#Motor_addr
   \   0000B6   E8           MOV     A,R0
   \   0000B7   F0           MOVX    @DPTR,A
   \   0000B8   A3           INC     DPTR
   \   0000B9   E9           MOV     A,R1
   \   0000BA   F0           MOVX    @DPTR,A
    766                
    767                Motor_addr.endPoint = 1;  // 目的节点的端口号
   \   0000BB   90....       MOV     DPTR,#Motor_addr + 9
   \   0000BE   12....       LCALL   ?Subroutine2 & 0xFFFF
    768                //TransmitApp_DstMotorAddr->endPoint = TRANSMITAPP_ENDPOINT;
    769               
    770                DeviceList[motor].data[0] = pkt->cmd.Data[4]; // 电机转速
   \                     ??CrossCallReturnLabel_3:
   \   0000C1   90....       MOV     DPTR,#DeviceList + 44
   \   0000C4   12....       LCALL   ?Subroutine6 & 0xFFFF
    771                DeviceList[motor].data[1] = pkt->cmd.Data[5]; // 电机状态
   \                     ??CrossCallReturnLabel_13:
   \   0000C7   90....       MOV     DPTR,#DeviceList + 45
   \   0000CA   801D         SJMP    ??Smart_home_ProcessMSGCmd_9
    772                break;
    773                
    774              case Smart_home_CLUSTERID_RELAYSTATUSMSG:   // 继电器状态信息
    775                DeviceList[relay].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线    
   \                     ??Smart_home_ProcessMSGCmd_8:
   \   0000CC   90....       MOV     DPTR,#DeviceList + 50
   \   0000CF   7401         MOV     A,#0x1
   \   0000D1   F0           MOVX    @DPTR,A
    776                
    777                // 储存继电器设备的网络地址，用于发送控制命令
    778                Relay_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0000D2   90....       MOV     DPTR,#Relay_addr + 8
   \   0000D5   12....       LCALL   ?Subroutine8 & 0xFFFF
    779                Relay_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;    
   \                     ??CrossCallReturnLabel_17:
   \   0000D8   90....       MOV     DPTR,#Relay_addr
   \   0000DB   E8           MOV     A,R0
   \   0000DC   F0           MOVX    @DPTR,A
   \   0000DD   A3           INC     DPTR
   \   0000DE   E9           MOV     A,R1
   \   0000DF   F0           MOVX    @DPTR,A
    780                Relay_addr.endPoint = 1; // 目的节点的端口号
   \   0000E0   90....       MOV     DPTR,#Relay_addr + 9
   \   0000E3   12....       LCALL   ?Subroutine3 & 0xFFFF
    781                DeviceList[relay].data[0] = pkt->cmd.Data[4]; 
   \                     ??CrossCallReturnLabel_7:
   \   0000E6   90....       MOV     DPTR,#DeviceList + 51
   \                     ??Smart_home_ProcessMSGCmd_9:
   \   0000E9   F0           MOVX    @DPTR,A
    782                break;
    783                
    784              default:
    785                break;
    786            }
    787          }
   \                     ??Smart_home_ProcessMSGCmd_0:
   \   0000EA                REQUIRE ?Subroutine1
   \   0000EA                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   04           INC     A
   \   000001   F0           MOVX    @DPTR,A
   \   000002   8A82         MOV     DPL,R2
   \   000004   8B83         MOV     DPH,R3
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F9           MOV     R1,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_72:
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_69:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_68:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine27:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine31 & 0xFFFF
   \                     ??CrossCallReturnLabel_73:
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_70:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine28:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F8           MOV     R0,A
   \   000007   A3           INC     DPTR
   \   000008   E0           MOVX    A,@DPTR
   \   000009   F583         MOV     DPH,A
   \   00000B   8882         MOV     DPL,R0
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   F582         MOV     DPL,A
   \   000008   EB           MOV     A,R3
   \   000009   3400         ADDC    A,#0x0
   \   00000B   F583         MOV     DPH,A
   \   00000D   12....       LCALL   ?Subroutine30 & 0xFFFF
   \                     ??CrossCallReturnLabel_78:
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   A3           INC     DPTR
   \   000013   A3           INC     DPTR
   \   000014   E0           MOVX    A,@DPTR
   \   000015   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F9           MOV     R1,A
   \   00000B   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_71:
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine29:
   \   000000   12....       LCALL   ?Subroutine31 & 0xFFFF
   \                     ??CrossCallReturnLabel_74:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine31:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   E0           MOVX    A,@DPTR
   \   000005   FA           MOV     R2,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   A3           INC     DPTR
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   22           RET
    788          
    789          /*********************************************************************
    790           * @fn     Smart_home_Device_check
    791           *
    792           * @brief   设备计数器，用来检查设备在开始组网后多久在线.
    793           *          目前搜索为4次HeartBeat  (DEVICE_HEART_BEAT 3)
    794           *          3.21
    795           * @param   none
    796           *
    797           * @return  none
    798           */
    799          /*3.24 这里的检测时常有点长 改为变量外提的方式加快处理速度*/
    800          static void Smart_home_Device_check(void)
    801          {

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    802            static uint8 DeviceID;
   \                     ??DeviceID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    803            static uint8 Device_status =  0;
   \                     ??Device_status:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    804            static uint8* counttmp;
   \                     ??counttmp:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    805            for(DeviceID=1;DeviceID<Smart_home_MAX_INCLUSTERS;DeviceID++)
    806            {  
    807              Device_status = DeviceList[DeviceID].deviceStatus;
    808              counttmp = & DeviceCnt[DeviceID];
    809              if(Device_status != DEVICE_ONLINE)    //设备离线
    810              {
    811                (*counttmp)++;
    812              }
    813              if(Device_status == DEVICE_ONLINE)    //设备在线
    814              {
    815                *counttmp = 0;
    816                Device_status = 0;
    817              }
    818              if((*counttmp) > DEVICE_HEART_BEAT)
    819              {
    820                *counttmp = DEVICE_HEART_BEAT;
    821                Device_status = DEVICE_OFFLINE;
    822              }
    823              DeviceList[DeviceID].deviceStatus = Device_status;
    824            }
    825            /*温湿度缓存 温度光照缓存 RFID 信息缓存 气体火焰缓存 
    826            人体红外 电机状态 继电器状态 声音震动*/
    827          }
    828          
    829          
    830          /*********************************************************************
    831           * @fn      Smart_home_Relay_Ctl
    832           *
    833           * @brief   发送继电器控制消息
    834           *
    835           * @param   none
    836           *
    837           * @return  none
    838           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    839          static void Smart_home_Relay_Ctl(uint8 cmd)
   \                     Smart_home_Relay_Ctl:
    840          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    841            uint8 tmp;
    842            
    843            // 只有设备在线时, 方发送控制命令
    844            if (DeviceList[relay].deviceStatus != DEVICE_OFFLINE)
   \   000007   90....       MOV     DPTR,#DeviceList + 50
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6402         XRL     A,#0x2
   \   00000D   6077         JZ      ??Smart_home_Relay_Ctl_0
    845            {
    846              // put the sequence number in the message
    847              tmp = HI_UINT8( RelayTransID );
   \   00000F   90....       MOV     DPTR,#RelayTransID
   \   000012   E0           MOVX    A,@DPTR
   \   000013   C4           SWAP    A
   \   000014   540F         ANL     A,#0xf
   \   000016   FA           MOV     R2,A
    848              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000017   C3           CLR     C
   \   000018   940A         SUBB    A,#0xa
   \   00001A   5004         JNC     ??Smart_home_Relay_Ctl_1
   \   00001C   7830         MOV     R0,#0x30
   \   00001E   8002         SJMP    ??Smart_home_Relay_Ctl_2
   \                     ??Smart_home_Relay_Ctl_1:
   \   000020   7837         MOV     R0,#0x37
    849              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_Relay_Ctl_2:
   \   000022   E8           MOV     A,R0
   \   000023   2A           ADD     A,R2
   \   000024   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000027   F0           MOVX    @DPTR,A
    850              tmp = LO_UINT8( RelayTransID );
   \   000028   90....       MOV     DPTR,#RelayTransID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   540F         ANL     A,#0xf
   \   00002E   FA           MOV     R2,A
    851              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   00002F   C3           CLR     C
   \   000030   940A         SUBB    A,#0xa
   \   000032   5004         JNC     ??Smart_home_Relay_Ctl_3
   \   000034   7830         MOV     R0,#0x30
   \   000036   8002         SJMP    ??Smart_home_Relay_Ctl_4
   \                     ??Smart_home_Relay_Ctl_3:
   \   000038   7837         MOV     R0,#0x37
    852              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_Relay_Ctl_4:
   \   00003A   E8           MOV     A,R0
   \   00003B   2A           ADD     A,R2
   \   00003C   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   00003F   F0           MOVX    @DPTR,A
    853              
    854              // 发送给继电器的控制命令 
    855              Coordinator_Msg[4] = cmd;
   \   000040   EE           MOV     A,R6
   \   000041   A3           INC     DPTR
   \   000042   F0           MOVX    @DPTR,A
    856              /********************************************
    857              *   屏幕显示部分*
    858          #if defined ( LCD_SUPPORTED )
    859              if(cmd == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
    860              if(cmd == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
    861              if(cmd == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
    862              if(cmd == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}
    863          #endif     
    864              ********************************************/
    865              tmp = AF_DataRequest( &Relay_addr,                         
    866                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    867                                     Smart_home_CLUSTERID_RELAYCTRL,
    868                                     RELAYSTATUSMSG_LEN,                 
    869                                     Coordinator_Msg,                    
    870                                    &RelayTransID,                       
    871                                     AF_DISCV_ROUTE,                     
    872                                     AF_DEFAULT_RADIUS );
   \   000043                ; Setup parameters for call to function AF_DataRequest
   \   000043   75..1E       MOV     ?V0 + 0,#0x1e
   \   000046   78..         MOV     R0,#?V0 + 0
   \   000048   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004B   75....       MOV     ?V0 + 0,#RelayTransID & 0xff
   \   00004E   75....       MOV     ?V0 + 1,#(RelayTransID >> 8) & 0xff
   \   000051   78..         MOV     R0,#?V0 + 0
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000056   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000059   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   00005C   78..         MOV     R0,#?V0 + 0
   \   00005E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000061   75..05       MOV     ?V0 + 0,#0x5
   \   000064   75..00       MOV     ?V0 + 1,#0x0
   \   000067   78..         MOV     R0,#?V0 + 0
   \   000069   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006C   75..0A       MOV     ?V0 + 0,#0xa
   \   00006F   78..         MOV     R0,#?V0 + 0
   \   000071   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000074   7920         MOV     R1,#0x20
   \   000076   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   000078   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   00007A   7A..         MOV     R2,#Relay_addr & 0xff
   \   00007C   7B..         MOV     R3,#(Relay_addr >> 8) & 0xff
   \   00007E   12....       LCALL   ??AF_DataRequest?relay
   \   000081   7409         MOV     A,#0x9
   \   000083   12....       LCALL   ?DEALLOC_XSTACK8
    873            } 
    874          }
   \                     ??Smart_home_Relay_Ctl_0:
   \   000086   02....       LJMP    ?Subroutine1 & 0xFFFF
    875          
    876          /*********************************************************************
    877           * @fn      Smart_home_Motor_Ctl
    878           *
    879           * @brief   发送电机控制消息
    880           *
    881           * @param   none
    882           *
    883           * @return  none
    884           */
    885          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed)
    886          {
    887            uint8 tmp;
    888            
    889            // 只有设备在线时, 方发送控制命令
    890            if (DeviceList[motor].deviceStatus != DEVICE_OFFLINE)
    891            {
    892              // put the sequence number in the message
    893              tmp = HI_UINT8( MotorTransID );
    894              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    895              Coordinator_Msg[2] = tmp;
    896              tmp = LO_UINT8( RelayTransID );
    897              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    898              Coordinator_Msg[3] = tmp;
    899              
    900              // 发送给继电器的控制命令 
    901              Coordinator_Msg[4] = speed;
    902              Coordinator_Msg[5] = cmd;
    903              
    904              tmp = AF_DataRequest( &Motor_addr,                         
    905                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    906                                     Smart_home_CLUSTERID_MOTORCTRL,
    907                                     MOTORSTATUSMSG_LEN,                 
    908                                     Coordinator_Msg,                    
    909                                    &MotorTransID,                       
    910                                     AF_DISCV_ROUTE,                     
    911                                     AF_DEFAULT_RADIUS );
    912            }   
    913          }
    914          
    915          
    916          /*********************************************************************
    917           * @fn      Smart_home_Display
    918           *
    919           * @brief   屏幕回显函数，定义了内容如何显示.
    920           *
    921           * @param   port - UART port.
    922           * @param   event - the UART port event flag.
    923           *
    924           * @return  none
    925           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    926          static void Smart_home_Display(void)
   \                     Smart_home_Display:
    927          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 14
   \   000005   74F2         MOV     A,#-0xe
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    928          #if defined LCD_SUPPORTED
    929            switch(Ctrlcase)
   \   00000A   90....       MOV     DPTR,#Ctrlcase
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   14           DEC     A
   \   00000F   7003         JNZ     $+5
   \   000011   02....       LJMP    ??Smart_home_Display_0 & 0xFFFF
   \   000014   14           DEC     A
   \   000015   7003         JNZ     $+5
   \   000017   02....       LJMP    ??Smart_home_Display_1 & 0xFFFF
    930            {
    931              default:    
    932              case 0:
    933                HalLcdWriteString( "      Menu      ", HAL_LCD_LINE_1 );
   \   00001A                ; Setup parameters for call to function HalLcdWriteString
   \   00001A   7901         MOV     R1,#0x1
   \   00001C   7A..         MOV     R2,#`?<Constant "      Menu      ">` & 0xff
   \   00001E   7B..         MOV     R3,#(`?<Constant "      Menu      ">` >> 8) & 0xff
   \   000020   12....       LCALL   ?Subroutine26 & 0xFFFF
    934                //HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
    935                //清除屏幕显示
    936                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    937                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    938                
    939                switch(LCD_Page)
   \                     ??CrossCallReturnLabel_65:
   \   000023   90....       MOV     DPTR,#LCD_Page
   \   000026   E0           MOVX    A,@DPTR
   \   000027   14           DEC     A
   \   000028   7003         JNZ     $+5
   \   00002A   02....       LJMP    ??Smart_home_Display_2 & 0xFFFF
   \   00002D   14           DEC     A
   \   00002E   7003         JNZ     $+5
   \   000030   02....       LJMP    ??Smart_home_Display_3 & 0xFFFF
   \   000033   14           DEC     A
   \   000034   7003         JNZ     $+5
   \   000036   02....       LJMP    ??Smart_home_Display_4 & 0xFFFF
    940                {
    941                  default:
    942                  case 0:
    943                  {
    944                    static uint16 humit;
    945                    static uint16 temper;
    946                    static uint16 SoundVb; 
    947                    
    948                    DeviceInfo Devhum = DeviceList[Humit];
   \   000039   85..82       MOV     DPL,?XSP + 0
   \   00003C   85..83       MOV     DPH,?XSP + 1
   \   00003F   AC82         MOV     R4,DPL
   \   000041   AD83         MOV     R5,DPH
   \   000043   7583..       MOV     DPH,#((DeviceList + 7) >> 8) & 0xff
   \   000046   7582..       MOV     DPL,#(DeviceList + 7) & 0xff
   \   000049   7407         MOV     A,#0x7
   \   00004B   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    949                    DeviceInfo DevSound = DeviceList[soundVb];
   \   00004E   7407         MOV     A,#0x7
   \   000050   12....       LCALL   ?XSTACK_DISP0_8
   \   000053   AC82         MOV     R4,DPL
   \   000055   AD83         MOV     R5,DPH
   \   000057   7583..       MOV     DPH,#((DeviceList + 56) >> 8) & 0xff
   \   00005A   7582..       MOV     DPL,#(DeviceList + 56) & 0xff
   \   00005D   7407         MOV     A,#0x7
   \   00005F   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    950                    //第一页第二行显示温度
    951                    //      第三行显示光照
    952                    humit = (uint16)Devhum.data[0];
   \   000062   7402         MOV     A,#0x2
   \   000064   12....       LCALL   ?XSTACK_DISP0_8
   \   000067   E0           MOVX    A,@DPTR
   \   000068   90....       MOV     DPTR,#??humit
   \   00006B   12....       LCALL   ?Subroutine12 & 0xFFFF
    953                    temper = (uint16)Devhum.data[1];
   \                     ??CrossCallReturnLabel_27:
   \   00006E   7403         MOV     A,#0x3
   \   000070   12....       LCALL   ?XSTACK_DISP0_8
   \   000073   E0           MOVX    A,@DPTR
   \   000074   90....       MOV     DPTR,#??temper
   \   000077   12....       LCALL   ?Subroutine12 & 0xFFFF
    954                    SoundVb = (uint16)DevSound.data[0];
   \                     ??CrossCallReturnLabel_28:
   \   00007A   7409         MOV     A,#0x9
   \   00007C   12....       LCALL   ?XSTACK_DISP0_8
   \   00007F   E0           MOVX    A,@DPTR
   \   000080   90....       MOV     DPTR,#??SoundVb
   \   000083   12....       LCALL   ?Subroutine11 & 0xFFFF
    955          
    956                    HalLcdWriteStringValueValue( "Hum:", humit, 10, "% Tem_1:", temper, 10, HAL_LCD_LINE_2 );
   \                     ??CrossCallReturnLabel_23:
   \   000086   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000089   75..0A       MOV     ?V0 + 0,#0xa
   \   00008C   78..         MOV     R0,#?V0 + 0
   \   00008E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000091   90....       MOV     DPTR,#??temper
   \   000094   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000097   75....       MOV     ?V0 + 0,#`?<Constant "% Tem_1:">` & 0xff
   \   00009A   75....       MOV     ?V0 + 1,#(`?<Constant "% Tem_1:">` >> 8) & 0xff
   \   00009D   78..         MOV     R0,#?V0 + 0
   \   00009F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A2   790A         MOV     R1,#0xa
   \   0000A4   90....       MOV     DPTR,#??humit
   \   0000A7   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   0000AA   7A..         MOV     R2,#`?<Constant "Hum:">` & 0xff
   \   0000AC   7B..         MOV     R3,#(`?<Constant "Hum:">` >> 8) & 0xff
   \   0000AE   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   0000B1   7406         MOV     A,#0x6
   \   0000B3   12....       LCALL   ?DEALLOC_XSTACK8
    957                    HalLcdWriteStringValue("Sound", SoundVb, 10, HAL_LCD_LINE_3 );
   \   0000B6                ; Setup parameters for call to function HalLcdWriteStringValue
   \   0000B6   75..03       MOV     ?V0 + 0,#0x3
   \   0000B9   78..         MOV     R0,#?V0 + 0
   \   0000BB   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000BE   790A         MOV     R1,#0xa
   \   0000C0   90....       MOV     DPTR,#??SoundVb
   \   0000C3   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   0000C6   7A..         MOV     R2,#`?<Constant "Sound">` & 0xff
   \   0000C8   7B..         MOV     R3,#(`?<Constant "Sound">` >> 8) & 0xff
   \   0000CA   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_59:
   \   0000CD   12....       LCALL   ?DEALLOC_XSTACK8
    958                    
    959                    //显示最下面的百分比条
    960                    static uint8 percent;
    961                    percent = (1 * 100) / LCD_PAGE_MAX;
   \   0000D0   90....       MOV     DPTR,#??percent
   \   0000D3   7419         MOV     A,#0x19
   \                     ??Smart_home_Display_5:
   \   0000D5   F0           MOVX    @DPTR,A
    962                    HalLcdDisplayPercentBar("",percent);
   \   0000D6                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   0000D6   F9           MOV     R1,A
   \   0000D7   7A..         MOV     R2,#`?<Constant "">` & 0xff
   \   0000D9   7B..         MOV     R3,#(`?<Constant "">` >> 8) & 0xff
   \                     ??Smart_home_Display_6:
   \   0000DB   12....       LCALL   ??HalLcdDisplayPercentBar?relay
    963                    break;
   \   0000DE   02....       LJMP    ??Smart_home_Display_7 & 0xFFFF
    964                  }
    965                  case 1:
    966                  {
    967                    static uint16 Light;
    968                    static uint8 lightmp;
    969                    static uint16 integer;
    970                    static uint16 decimals;
    971                    DeviceInfo Devtmp = DeviceList[TempLight];
   \                     ??Smart_home_Display_2:
   \   0000E1   85..82       MOV     DPL,?XSP + 0
   \   0000E4   85..83       MOV     DPH,?XSP + 1
   \   0000E7   AC82         MOV     R4,DPL
   \   0000E9   AD83         MOV     R5,DPH
   \   0000EB   7583..       MOV     DPH,#((DeviceList + 14) >> 8) & 0xff
   \   0000EE   7582..       MOV     DPL,#(DeviceList + 14) & 0xff
   \   0000F1   7407         MOV     A,#0x7
   \   0000F3   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    972                    //第一页第二行显示温度
    973                    //      第三行显示光照
    974                    integer = (uint16)Devtmp.data[0];
   \   0000F6   7402         MOV     A,#0x2
   \   0000F8   12....       LCALL   ?XSTACK_DISP0_8
   \   0000FB   E0           MOVX    A,@DPTR
   \   0000FC   90....       MOV     DPTR,#??integer
   \   0000FF   12....       LCALL   ?Subroutine12 & 0xFFFF
    975                    decimals = (uint16)Devtmp.data[1];
   \                     ??CrossCallReturnLabel_29:
   \   000102   7403         MOV     A,#0x3
   \   000104   12....       LCALL   ?XSTACK_DISP0_8
   \   000107   E0           MOVX    A,@DPTR
   \   000108   90....       MOV     DPTR,#??decimals
   \   00010B   12....       LCALL   ?Subroutine10 & 0xFFFF
    976                    lightmp = Devtmp.data[3];
   \                     ??CrossCallReturnLabel_21:
   \   00010E   12....       LCALL   ?XSTACK_DISP0_8
   \   000111   E0           MOVX    A,@DPTR
   \   000112   90....       MOV     DPTR,#??lightmp
   \   000115   F0           MOVX    @DPTR,A
    977                    Light = (uint16)Devtmp.data[4];
   \   000116   7406         MOV     A,#0x6
   \   000118   12....       LCALL   ?XSTACK_DISP0_8
   \   00011B   E0           MOVX    A,@DPTR
   \   00011C   90....       MOV     DPTR,#??Light
   \   00011F   12....       LCALL   ?Subroutine9 & 0xFFFF
    978                    memcpy(&Light,&lightmp,sizeof(lightmp));
   \                     ??CrossCallReturnLabel_18:
   \   000122   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000125   7C..         MOV     R4,#??lightmp & 0xff
   \   000127   7D..         MOV     R5,#(??lightmp >> 8) & 0xff
   \   000129   7A..         MOV     R2,#??Light & 0xff
   \   00012B   7B..         MOV     R3,#(??Light >> 8) & 0xff
   \   00012D   12....       LCALL   ??memcpy?relay
   \   000130   7402         MOV     A,#0x2
   \   000132   12....       LCALL   ?DEALLOC_XSTACK8
    979                    HalLcdWriteStringValueValue( "Temper_2:", integer, 10, ".", decimals, 10, HAL_LCD_LINE_2 );
   \   000135                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   000135   75..02       MOV     ?V0 + 0,#0x2
   \   000138   78..         MOV     R0,#?V0 + 0
   \   00013A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00013D   75..0A       MOV     ?V0 + 0,#0xa
   \   000140   78..         MOV     R0,#?V0 + 0
   \   000142   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000145   90....       MOV     DPTR,#??decimals
   \   000148   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   00014B   75....       MOV     ?V0 + 0,#`?<Constant ".">` & 0xff
   \   00014E   75....       MOV     ?V0 + 1,#(`?<Constant ".">` >> 8) & 0xff
   \   000151   78..         MOV     R0,#?V0 + 0
   \   000153   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000156   790A         MOV     R1,#0xa
   \   000158   90....       MOV     DPTR,#??integer
   \   00015B   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   00015E   7A..         MOV     R2,#`?<Constant "Temper_2:">` & 0xff
   \   000160   7B..         MOV     R3,#(`?<Constant "Temper_2:">` >> 8) & 0xff
   \   000162   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000165   7406         MOV     A,#0x6
   \   000167   12....       LCALL   ?DEALLOC_XSTACK8
    980                    HalLcdWriteStringValue( "Light:", Light, 10, HAL_LCD_LINE_3 );
   \   00016A                ; Setup parameters for call to function HalLcdWriteStringValue
   \   00016A   75..03       MOV     ?V0 + 0,#0x3
   \   00016D   78..         MOV     R0,#?V0 + 0
   \   00016F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000172   790A         MOV     R1,#0xa
   \   000174   90....       MOV     DPTR,#??Light
   \   000177   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   00017A   7A..         MOV     R2,#`?<Constant "Light:">` & 0xff
   \   00017C   7B..         MOV     R3,#(`?<Constant "Light:">` >> 8) & 0xff
   \   00017E   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_60:
   \   000181   12....       LCALL   ?DEALLOC_XSTACK8
    981                    
    982                    //显示最下面的百分比条
    983                    static uint8 percent;
    984                    percent = (2 * 100) / LCD_PAGE_MAX;
   \   000184   90....       MOV     DPTR,#??percent_1
   \   000187   7432         MOV     A,#0x32
   \   000189   02....       LJMP    ??Smart_home_Display_5 & 0xFFFF
    985                    HalLcdDisplayPercentBar("",percent);
    986                    break;
    987                  }
    988                  
    989                case 2:
    990                {
    991                    static uint8 kind;
    992                    static uint8 tmp1;
    993                    static uint8 tmp2;
    994                    static uint16 Data1;
    995                    static uint16 Data2;
    996                    //显示最下面的百分比条
    997                    DeviceInfo rfid = DeviceList[RfID];
   \                     ??Smart_home_Display_3:
   \   00018C   85..82       MOV     DPL,?XSP + 0
   \   00018F   85..83       MOV     DPH,?XSP + 1
   \   000192   AC82         MOV     R4,DPL
   \   000194   AD83         MOV     R5,DPH
   \   000196   7583..       MOV     DPH,#((DeviceList + 21) >> 8) & 0xff
   \   000199   7582..       MOV     DPL,#(DeviceList + 21) & 0xff
   \   00019C   7407         MOV     A,#0x7
   \   00019E   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    998                    
    999                    kind = rfid.data[0];
   \   0001A1   7402         MOV     A,#0x2
   \   0001A3   12....       LCALL   ?XSTACK_DISP0_8
   \   0001A6   E0           MOVX    A,@DPTR
   \   0001A7   90....       MOV     DPTR,#??kind
   \   0001AA   F0           MOVX    @DPTR,A
   1000                    tmp1 = rfid.data[1];
   \   0001AB   7403         MOV     A,#0x3
   \   0001AD   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B0   E0           MOVX    A,@DPTR
   \   0001B1   90....       MOV     DPTR,#??tmp1
   \   0001B4   F0           MOVX    @DPTR,A
   1001                    Data1 = (uint16)rfid.data[2];
   \   0001B5   7404         MOV     A,#0x4
   \   0001B7   12....       LCALL   ?XSTACK_DISP0_8
   \   0001BA   E0           MOVX    A,@DPTR
   \   0001BB   90....       MOV     DPTR,#??Data1
   \   0001BE   12....       LCALL   ?Subroutine10 & 0xFFFF
   1002                    tmp2 = rfid.data[3];
   \                     ??CrossCallReturnLabel_22:
   \   0001C1   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C4   E0           MOVX    A,@DPTR
   \   0001C5   90....       MOV     DPTR,#??tmp2
   \   0001C8   F0           MOVX    @DPTR,A
   1003                    Data2 = (uint16)rfid.data[4];
   \   0001C9   7406         MOV     A,#0x6
   \   0001CB   12....       LCALL   ?XSTACK_DISP0_8
   \   0001CE   E0           MOVX    A,@DPTR
   \   0001CF   90....       MOV     DPTR,#??Data2
   \   0001D2   12....       LCALL   ?Subroutine9 & 0xFFFF
   1004                    
   1005                    memcpy(&Data1,&tmp1,sizeof(tmp1));
   \                     ??CrossCallReturnLabel_19:
   \   0001D5   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001D8   7C..         MOV     R4,#??tmp1 & 0xff
   \   0001DA   7D..         MOV     R5,#(??tmp1 >> 8) & 0xff
   \   0001DC   7A..         MOV     R2,#??Data1 & 0xff
   \   0001DE   7B..         MOV     R3,#(??Data1 >> 8) & 0xff
   \   0001E0   12....       LCALL   ??memcpy?relay
   \   0001E3   7402         MOV     A,#0x2
   \   0001E5   12....       LCALL   ?DEALLOC_XSTACK8
   1006                    memcpy(&Data2,&tmp2,sizeof(tmp2));
   \   0001E8                ; Setup parameters for call to function memcpy
   \   0001E8   78..         MOV     R0,#?V0 + 0
   \   0001EA   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001ED   7C..         MOV     R4,#??tmp2 & 0xff
   \   0001EF   7D..         MOV     R5,#(??tmp2 >> 8) & 0xff
   \   0001F1   7A..         MOV     R2,#??Data2 & 0xff
   \   0001F3   7B..         MOV     R3,#(??Data2 >> 8) & 0xff
   \   0001F5   12....       LCALL   ??memcpy?relay
   \   0001F8   7402         MOV     A,#0x2
   \   0001FA   12....       LCALL   ?DEALLOC_XSTACK8
   1007                    
   1008                    if(kind == 0x01) {HalLcdWriteString( "MFOne-S50", HAL_LCD_LINE_2 );}
   \   0001FD   90....       MOV     DPTR,#??kind
   \   000200   E0           MOVX    A,@DPTR
   \   000201   6401         XRL     A,#0x1
   \   000203   7008         JNZ     ??Smart_home_Display_8
   \   000205                ; Setup parameters for call to function HalLcdWriteString
   \   000205   7902         MOV     R1,#0x2
   \   000207   7A..         MOV     R2,#`?<Constant "MFOne-S50">` & 0xff
   \   000209   7B..         MOV     R3,#(`?<Constant "MFOne-S50">` >> 8) & 0xff
   \   00020B   8038         SJMP    ??Smart_home_Display_9
   1009                    else if(kind == 0x02) {HalLcdWriteString( "MFOne-S70", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_8:
   \   00020D   E0           MOVX    A,@DPTR
   \   00020E   6402         XRL     A,#0x2
   \   000210   7008         JNZ     ??Smart_home_Display_10
   \   000212                ; Setup parameters for call to function HalLcdWriteString
   \   000212   7902         MOV     R1,#0x2
   \   000214   7A..         MOV     R2,#`?<Constant "MFOne-S70">` & 0xff
   \   000216   7B..         MOV     R3,#(`?<Constant "MFOne-S70">` >> 8) & 0xff
   \   000218   802B         SJMP    ??Smart_home_Display_9
   1010                    else if(kind == 0x03) {HalLcdWriteString( "MF-UltraLight", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_10:
   \   00021A   E0           MOVX    A,@DPTR
   \   00021B   6403         XRL     A,#0x3
   \   00021D   7008         JNZ     ??Smart_home_Display_11
   \   00021F                ; Setup parameters for call to function HalLcdWriteString
   \   00021F   7902         MOV     R1,#0x2
   \   000221   7A..         MOV     R2,#`?<Constant "MF-UltraLight">` & 0xff
   \   000223   7B..         MOV     R3,#(`?<Constant "MF-UltraLight">` >> 8) & 0xff
   \   000225   801E         SJMP    ??Smart_home_Display_9
   1011                    else if(kind == 0x04) {HalLcdWriteString( "MF-Pro", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_11:
   \   000227   E0           MOVX    A,@DPTR
   \   000228   6404         XRL     A,#0x4
   \   00022A   7008         JNZ     ??Smart_home_Display_12
   \   00022C                ; Setup parameters for call to function HalLcdWriteString
   \   00022C   7902         MOV     R1,#0x2
   \   00022E   7A..         MOV     R2,#`?<Constant "MF-Pro">` & 0xff
   \   000230   7B..         MOV     R3,#(`?<Constant "MF-Pro">` >> 8) & 0xff
   \   000232   8011         SJMP    ??Smart_home_Display_9
   1012                    else if(kind == 0x05) {HalLcdWriteString( "MF-DesFire", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_12:
   \   000234   E0           MOVX    A,@DPTR
   \   000235   6405         XRL     A,#0x5
   \   000237   7902         MOV     R1,#0x2
   \   000239   7006         JNZ     ??Smart_home_Display_13
   \   00023B                ; Setup parameters for call to function HalLcdWriteString
   \   00023B   7A..         MOV     R2,#`?<Constant "MF-DesFire">` & 0xff
   \   00023D   7B..         MOV     R3,#(`?<Constant "MF-DesFire">` >> 8) & 0xff
   \   00023F   8004         SJMP    ??Smart_home_Display_9
   1013                    else {HalLcdWriteString( "No Card", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_13:
   \   000241                ; Setup parameters for call to function HalLcdWriteString
   \   000241   7A..         MOV     R2,#`?<Constant "No Card">` & 0xff
   \   000243   7B..         MOV     R3,#(`?<Constant "No Card">` >> 8) & 0xff
   \                     ??Smart_home_Display_9:
   \   000245   12....       LCALL   ??HalLcdWriteString?relay
   1014                    
   1015          
   1016                    HalLcdWriteStringValueValue( "", Data1, 16, "", Data2, 16, HAL_LCD_LINE_3 );
   \   000248   75....       MOV     ?V0 + 0,#`?<Constant "">` & 0xff
   \   00024B   75....       MOV     ?V0 + 1,#(`?<Constant "">` >> 8) & 0xff
   \   00024E                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   00024E   75..03       MOV     ?V0 + 2,#0x3
   \   000251   78..         MOV     R0,#?V0 + 2
   \   000253   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000256   75..10       MOV     ?V0 + 2,#0x10
   \   000259   78..         MOV     R0,#?V0 + 2
   \   00025B   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00025E   90....       MOV     DPTR,#??Data2
   \   000261   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000264   78..         MOV     R0,#?V0 + 0
   \   000266   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000269   7910         MOV     R1,#0x10
   \   00026B   90....       MOV     DPTR,#??Data1
   \   00026E   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   000271   AA..         MOV     R2,?V0 + 0
   \   000273   AB..         MOV     R3,?V0 + 1
   \   000275   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000278   7406         MOV     A,#0x6
   \   00027A   12....       LCALL   ?DEALLOC_XSTACK8
   1017                    
   1018                    static uint8 percent;
   1019                    percent = (3 * 100) / LCD_PAGE_MAX;
   \   00027D   90....       MOV     DPTR,#??percent_2
   \   000280   744B         MOV     A,#0x4b
   \   000282   F0           MOVX    @DPTR,A
   1020                    HalLcdDisplayPercentBar("",percent);
   \   000283                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   000283   F9           MOV     R1,A
   \   000284   AA..         MOV     R2,?V0 + 0
   \   000286   AB..         MOV     R3,?V0 + 1
   \   000288   02....       LJMP    ??Smart_home_Display_6 & 0xFFFF
   1021                    break;
   1022                }
   1023                
   1024                case 3:
   1025                {
   1026                    static uint16 GasF;
   1027                    static uint16 Infrared;         
                                         ^
Warning[Pe550]: variable "Infrared" was set but never used

  static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed)
              ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c",885  Warning[Pe177]: 
          function "Smart_home_Motor_Ctl" was declared but never referenced
   1028          
   1029                    DeviceInfo DevGas = DeviceList[GasF];
   \                     ??Smart_home_Display_4:
   \   00028B   90....       MOV     DPTR,#??GasF
   \   00028E   E0           MOVX    A,@DPTR
   \   00028F   F8           MOV     R0,A
   \   000290   A3           INC     DPTR
   \   000291   E0           MOVX    A,@DPTR
   \   000292   F9           MOV     R1,A
   \   000293   E8           MOV     A,R0
   \   000294   75F007       MOV     B,#0x7
   \   000297   A4           MUL     AB
   \   000298   F8           MOV     R0,A
   \   000299   AAF0         MOV     R2,B
   \   00029B   75F007       MOV     B,#0x7
   \   00029E   E9           MOV     A,R1
   \   00029F   A4           MUL     AB
   \   0002A0   2A           ADD     A,R2
   \   0002A1   F9           MOV     R1,A
   \   0002A2   74..         MOV     A,#DeviceList & 0xff
   \   0002A4   28           ADD     A,R0
   \   0002A5   F582         MOV     DPL,A
   \   0002A7   74..         MOV     A,#(DeviceList >> 8) & 0xff
   \   0002A9   39           ADDC    A,R1
   \   0002AA   C082         PUSH    DPL
   \   0002AC   85..82       MOV     DPL,?XSP + 0
   \   0002AF   85..83       MOV     DPH,?XSP + 1
   \   0002B2   AC82         MOV     R4,DPL
   \   0002B4   AD83         MOV     R5,DPH
   \   0002B6   F583         MOV     DPH,A
   \   0002B8   D082         POP     DPL
   \   0002BA   7407         MOV     A,#0x7
   \   0002BC   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   1030                    DeviceInfo DevInf = DeviceList[infrared]; 
   \   0002BF   7407         MOV     A,#0x7
   \   0002C1   12....       LCALL   ?XSTACK_DISP0_8
   \   0002C4   AC82         MOV     R4,DPL
   \   0002C6   AD83         MOV     R5,DPH
   \   0002C8   7583..       MOV     DPH,#((DeviceList + 35) >> 8) & 0xff
   \   0002CB   7582..       MOV     DPL,#(DeviceList + 35) & 0xff
   \   0002CE   7407         MOV     A,#0x7
   \   0002D0   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   1031                    
   1032                    GasF = (uint16)DevGas.data[0];
   \   0002D3   7402         MOV     A,#0x2
   \   0002D5   12....       LCALL   ?XSTACK_DISP0_8
   \   0002D8   E0           MOVX    A,@DPTR
   \   0002D9   90....       MOV     DPTR,#??GasF
   \   0002DC   12....       LCALL   ?Subroutine12 & 0xFFFF
   1033                    Infrared = (uint16)DevInf.data[0];
   \                     ??CrossCallReturnLabel_30:
   \   0002DF   7409         MOV     A,#0x9
   \   0002E1   12....       LCALL   ?XSTACK_DISP0_8
   \   0002E4   E0           MOVX    A,@DPTR
   \   0002E5   90....       MOV     DPTR,#??Infrared
   \   0002E8   12....       LCALL   ?Subroutine11 & 0xFFFF
   1034                    
   1035                    HalLcdWriteStringValue("GasFlame: ", GasF, 10, HAL_LCD_LINE_2 );
   \                     ??CrossCallReturnLabel_24:
   \   0002EB   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0002EE   790A         MOV     R1,#0xa
   \   0002F0   90....       MOV     DPTR,#??GasF
   \   0002F3   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   0002F6   7A..         MOV     R2,#`?<Constant "GasFlame: ">` & 0xff
   \   0002F8   7B..         MOV     R3,#(`?<Constant "GasFlame: ">` >> 8) & 0xff
   \   0002FA   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_61:
   \   0002FD   12....       LCALL   ?DEALLOC_XSTACK8
   1036                    HalLcdWriteStringValue("Infrared: ", infrared, 10, HAL_LCD_LINE_3 );
   \   000300                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000300   75..03       MOV     ?V0 + 0,#0x3
   \   000303   78..         MOV     R0,#?V0 + 0
   \   000305   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000308   790A         MOV     R1,#0xa
   \   00030A   7C05         MOV     R4,#0x5
   \   00030C   7D00         MOV     R5,#0x0
   \   00030E   7A..         MOV     R2,#`?<Constant "Infrared: ">` & 0xff
   \   000310   7B..         MOV     R3,#(`?<Constant "Infrared: ">` >> 8) & 0xff
   \   000312   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_62:
   \   000315   12....       LCALL   ?DEALLOC_XSTACK8
   1037                    
   1038                    //显示最下面的百分比条
   1039                    static uint8 percent;
   1040                    percent = (4 * 100) / LCD_PAGE_MAX;
   \   000318   90....       MOV     DPTR,#??percent_3
   \   00031B   7464         MOV     A,#0x64
   \   00031D   02....       LJMP    ??Smart_home_Display_5 & 0xFFFF
   1041                    HalLcdDisplayPercentBar("",percent);
   1042                    break;
   1043                }
   1044                    
   1045              }
   1046                
   1047                break;
   1048              
   1049              case 1:
   1050                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
   \                     ??Smart_home_Display_0:
   \   000320                ; Setup parameters for call to function HalLcdWriteString
   \   000320   7904         MOV     R1,#0x4
   \   000322   7A..         MOV     R2,#`?<Constant "Relay Contrling">` & 0xff
   \   000324   7B..         MOV     R3,#(`?<Constant "Relay Contrling">` >> 8) & 0xff
   \   000326   12....       LCALL   ?Subroutine13 & 0xFFFF
   1051                //清除屏幕显示
   1052                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1053                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1054                //这里的deviceStatus 可能是0x00,所以会出现bug 这个0在Device检查时被设置 2.24
   1055                if(DeviceList[relay].deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_31:
   \   000329   700A         JNZ     ??Smart_home_Display_14
   1056                {
   1057                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
   \   00032B                ; Setup parameters for call to function HalLcdWriteString
   \   00032B   7A..         MOV     R2,#`?<Constant "Relay Offline">` & 0xff
   \   00032D   7B..         MOV     R3,#(`?<Constant "Relay Offline">` >> 8) & 0xff
   \                     ??Smart_home_Display_15:
   \   00032F   12....       LCALL   ??HalLcdWriteString?relay
   \   000332   02....       LJMP    ??Smart_home_Display_7 & 0xFFFF
   1058                }
   1059                else  //设备在线回显  设备在线可能是 0/1
   1060                {
   1061                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_14:
   \   000335                ; Setup parameters for call to function HalLcdWriteString
   \   000335   7A..         MOV     R2,#`?<Constant "Relay Online">` & 0xff
   \   000337   7B..         MOV     R3,#(`?<Constant "Relay Online">` >> 8) & 0xff
   \   000339   12....       LCALL   ?Subroutine14 & 0xFFFF
   1062                  //继电器控制界面
   1063                  const uint8 cmd =  DeviceList[relay].data[0];
   1064          
   1065                  if((cmd & 0x02) == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   \                     ??CrossCallReturnLabel_33:
   \   00033C   A2E1         MOV     C,0xE0 /* A   */.1
   \   00033E   5009         JNC     ??Smart_home_Display_16
   \   000340                ; Setup parameters for call to function HalLcdWriteString
   \   000340   7902         MOV     R1,#0x2
   \   000342   7A..         MOV     R2,#`?<Constant "K1:ON">` & 0xff
   \   000344   7B..         MOV     R3,#(`?<Constant "K1:ON">` >> 8) & 0xff
   \   000346   12....       LCALL   ??HalLcdWriteString?relay
   1066                  if((cmd & 0x01) == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_16:
   \   000349   EE           MOV     A,R6
   \   00034A   A2E0         MOV     C,0xE0 /* A   */.0
   \   00034C   5009         JNC     ??Smart_home_Display_17
   \   00034E                ; Setup parameters for call to function HalLcdWriteString
   \   00034E   7902         MOV     R1,#0x2
   \   000350   7A..         MOV     R2,#`?<Constant "K1:OFF">` & 0xff
   \   000352   7B..         MOV     R3,#(`?<Constant "K1:OFF">` >> 8) & 0xff
   \   000354   12....       LCALL   ??HalLcdWriteString?relay
   1067                  if((cmd & 0x20) == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_17:
   \   000357   EE           MOV     A,R6
   \   000358   A2E5         MOV     C,0xE0 /* A   */.5
   \   00035A   5009         JNC     ??Smart_home_Display_18
   \   00035C                ; Setup parameters for call to function HalLcdWriteString
   \   00035C   7903         MOV     R1,#0x3
   \   00035E   7A..         MOV     R2,#`?<Constant "K2:ON">` & 0xff
   \   000360   7B..         MOV     R3,#(`?<Constant "K2:ON">` >> 8) & 0xff
   \   000362   12....       LCALL   ??HalLcdWriteString?relay
   1068                  if((cmd & 0x10) == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}      
   \                     ??Smart_home_Display_18:
   \   000365   EE           MOV     A,R6
   \   000366   A2E4         MOV     C,0xE0 /* A   */.4
   \   000368   5053         JNC     ??Smart_home_Display_7
   \   00036A                ; Setup parameters for call to function HalLcdWriteString
   \   00036A   7903         MOV     R1,#0x3
   \   00036C   7A..         MOV     R2,#`?<Constant "K2:OFF">` & 0xff
   \   00036E   7B..         MOV     R3,#(`?<Constant "K2:OFF">` >> 8) & 0xff
   \   000370   80BD         SJMP    ??Smart_home_Display_15
   1069                }
   1070          
   1071                break;
   1072              
   1073              case 2:
   1074                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
   \                     ??Smart_home_Display_1:
   \   000372                ; Setup parameters for call to function HalLcdWriteString
   \   000372   7904         MOV     R1,#0x4
   \   000374   7A..         MOV     R2,#`?<Constant "Motor Contrling">` & 0xff
   \   000376   7B..         MOV     R3,#(`?<Constant "Motor Contrling">` >> 8) & 0xff
   \   000378   12....       LCALL   ?Subroutine13 & 0xFFFF
   1075                //清除屏幕显示
   1076                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1077                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1078                if(DeviceList[relay].deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_32:
   \   00037B   7006         JNZ     ??Smart_home_Display_19
   1079                {
   1080                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
   \   00037D                ; Setup parameters for call to function HalLcdWriteString
   \   00037D   7A..         MOV     R2,#`?<Constant "Motor Offline">` & 0xff
   \   00037F   7B..         MOV     R3,#(`?<Constant "Motor Offline">` >> 8) & 0xff
   \   000381   80AC         SJMP    ??Smart_home_Display_15
   1081                }
   1082                else  //设备在线回显  设备在线可能是 0/1
   1083                {
   1084                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_19:
   \   000383                ; Setup parameters for call to function HalLcdWriteString
   \   000383   7A..         MOV     R2,#`?<Constant "Motor Online">` & 0xff
   \   000385   7B..         MOV     R3,#(`?<Constant "Motor Online">` >> 8) & 0xff
   \   000387   12....       LCALL   ?Subroutine14 & 0xFFFF
   1085                  //电机控制界面
   1086                  const uint16 speed =  (uint16) DeviceList[relay].data[0];
   1087                  const uint16 status = (uint16) DeviceList[relay].data[1];
   1088                  
   1089                  HalLcdWriteStringValue( "Status:", status, 10, HAL_LCD_LINE_2 );
   \                     ??CrossCallReturnLabel_34:
   \   00038A                ; Setup parameters for call to function HalLcdWriteStringValue
   \   00038A   75..02       MOV     ?V0 + 0,#0x2
   \   00038D   78..         MOV     R0,#?V0 + 0
   \   00038F   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000392   790A         MOV     R1,#0xa
   \   000394   90....       MOV     DPTR,#DeviceList + 52
   \   000397   E0           MOVX    A,@DPTR
   \   000398   FC           MOV     R4,A
   \   000399   7D00         MOV     R5,#0x0
   \   00039B   7A..         MOV     R2,#`?<Constant "Status:">` & 0xff
   \   00039D   7B..         MOV     R3,#(`?<Constant "Status:">` >> 8) & 0xff
   \   00039F   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_63:
   \   0003A2   12....       LCALL   ?DEALLOC_XSTACK8
   1090                  HalLcdWriteStringValue( "Speed:", speed, 10, HAL_LCD_LINE_3 );
   \   0003A5                ; Setup parameters for call to function HalLcdWriteStringValue
   \   0003A5   75..03       MOV     ?V0 + 0,#0x3
   \   0003A8   78..         MOV     R0,#?V0 + 0
   \   0003AA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0003AD   790A         MOV     R1,#0xa
   \   0003AF   EE           MOV     A,R6
   \   0003B0   FC           MOV     R4,A
   \   0003B1   7D00         MOV     R5,#0x0
   \   0003B3   7A..         MOV     R2,#`?<Constant "Speed:">` & 0xff
   \   0003B5   7B..         MOV     R3,#(`?<Constant "Speed:">` >> 8) & 0xff
   \   0003B7   12....       LCALL   ?Subroutine25 & 0xFFFF
   1091                
   1092                }
   1093            }
   \                     ??CrossCallReturnLabel_64:
   \   0003BA   12....       LCALL   ?DEALLOC_XSTACK8
   1094            
   1095          #endif // LCD_SUPPORTED  
   1096          }
   \                     ??Smart_home_Display_7:
   \   0003BD   740E         MOV     A,#0xe
   \   0003BF   12....       LCALL   ?DEALLOC_XSTACK8
   \   0003C2   7F03         MOV     R7,#0x3
   \   0003C4   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   000003   7401         MOV     A,#0x1
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FC           MOV     R4,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FD           MOV     R5,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003   90....       MOV     DPTR,#DeviceList + 51
   \   000006   E0           MOVX    A,@DPTR
   \   000007   FE           MOV     R6,A
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_66:
   \   000003   90....       MOV     DPTR,#DeviceList + 50
   \   000006   E0           MOVX    A,@DPTR
   \   000007   6402         XRL     A,#0x2
   \   000009   7901         MOV     R1,#0x1
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine26:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003   7902         MOV     R1,#0x2
   \   000005   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000007   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000009   12....       LCALL   ??HalLcdWriteString?relay
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C   7903         MOV     R1,#0x3
   \   00000E   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000012   12....       LCALL   ??HalLcdWriteString?relay
   \   000015   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   E4           CLR     A
   \   000003   F0           MOVX    @DPTR,A
   \   000004                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   000004                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000004   75..02       MOV     ?V0 + 0,#0x2
   \   000007   78..         MOV     R0,#?V0 + 0
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   E4           CLR     A
   \   000003   F0           MOVX    @DPTR,A
   \   000004                ; Setup parameters for call to function memcpy
   \   000004                ; Setup parameters for call to function memcpy
   \   000004   75..01       MOV     ?V0 + 0,#0x1
   \   000007   F5..         MOV     ?V0 + 1,A
   \   000009   78..         MOV     R0,#?V0 + 0
   \   00000B   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??humit:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??temper:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??SoundVb:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Light:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??lightmp:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??integer:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??decimals:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent_1:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??kind:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??tmp1:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??tmp2:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data1:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data2:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent_2:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??GasF:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Infrared:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent_3:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   75F007       MOV     B,#0x7
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007   74..         MOV     A,#(DeviceList + 1) & 0xff
   \   000009   28           ADD     A,R0
   \   00000A   F582         MOV     DPL,A
   \   00000C   74..         MOV     A,#((DeviceList + 1) >> 8) & 0xff
   \   00000E   39           ADDC    A,R1
   \   00000F   F583         MOV     DPH,A
   \   000011   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessMSGCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessMSGCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Relay_Ctl?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Relay_Ctl

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Display?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Display

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Smart_home">`:
   \   000000   536D6172     DB "Smart_home"
   \            745F686F
   \            6D6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor max Speed">`:
   \   000000   4D6F746F     DB "Motor max Speed"
   \            72206D61
   \            78205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor min Speed">`:
   \   000000   4D6F746F     DB "Motor min Speed"
   \            72206D69
   \            6E205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Allow networking">`:
   \   000000   416C6C6F     DB "Allow networking"
   \            77206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Ban   networking">`:
   \   000000   42616E20     DB "Ban   networking"
   \            20206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "      Menu      ">`:
   \   000000   20202020     DB "      Menu      "
   \            20204D65
   \            6E752020
   \            20202020
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " ">`:
   \   000000   2000         DB " "

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hum:">`:
   \   000000   48756D3A     DB "Hum:"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "% Tem_1:">`:
   \   000000   25205465     DB "% Tem_1:"
   \            6D5F313A
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound">`:
   \   000000   536F756E     DB "Sound"
   \            6400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "">`:
   \   000000   00           DB ""

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temper_2:">`:
   \   000000   54656D70     DB "Temper_2:"
   \            65725F32
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ".">`:
   \   000000   2E00         DB "."

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Light:">`:
   \   000000   4C696768     DB "Light:"
   \            743A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S50">`:
   \   000000   4D464F6E     DB "MFOne-S50"
   \            652D5335
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S70">`:
   \   000000   4D464F6E     DB "MFOne-S70"
   \            652D5337
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-UltraLight">`:
   \   000000   4D462D55     DB "MF-UltraLight"
   \            6C747261
   \            4C696768
   \            7400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-Pro">`:
   \   000000   4D462D50     DB "MF-Pro"
   \            726F00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-DesFire">`:
   \   000000   4D462D44     DB "MF-DesFire"
   \            65734669
   \            726500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "No Card">`:
   \   000000   4E6F2043     DB "No Card"
   \            61726400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: ">`:
   \   000000   47617346     DB "GasFlame: "
   \            6C616D65
   \            3A2000  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: ">`:
   \   000000   496E6672     DB "Infrared: "
   \            61726564
   \            3A2000  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Contrling">`:
   \   000000   52656C61     DB "Relay Contrling"
   \            7920436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Offline">`:
   \   000000   52656C61     DB "Relay Offline"
   \            79204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Online">`:
   \   000000   52656C61     DB "Relay Online"
   \            79204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:ON">`:
   \   000000   4B313A4F     DB "K1:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:OFF">`:
   \   000000   4B313A4F     DB "K1:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:ON">`:
   \   000000   4B323A4F     DB "K2:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:OFF">`:
   \   000000   4B323A4F     DB "K2:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Contrling">`:
   \   000000   4D6F746F     DB "Motor Contrling"
   \            7220436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Offline">`:
   \   000000   4D6F746F     DB "Motor Offline"
   \            72204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Online">`:
   \   000000   4D6F746F     DB "Motor Online"
   \            72204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status:">`:
   \   000000   53746174     DB "Status:"
   \            75733A00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Speed:">`:
   \   000000   53706565     DB "Speed:"
   \            643A00  
   1097          
   1098          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_Display                 2      0     45
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteStringValueValue
                                        0      0     62
       -> HalLcdWriteStringValue        0      0     52
       -> HalLcdDisplayPercentBar       0      0     50
       -> memcpy                        0      0     54
       -> HalLcdWriteStringValueValue
                                        0      0     62
       -> HalLcdWriteStringValue        0      0     52
       -> HalLcdDisplayPercentBar       0      0     50
       -> memcpy                        0      0     54
       -> memcpy                        0      0     54
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteStringValueValue
                                        0      0     62
       -> HalLcdDisplayPercentBar       0      0     50
       -> HalLcdWriteStringValue        0      0     52
       -> HalLcdWriteStringValue        0      0     52
       -> HalLcdDisplayPercentBar       0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteString             0      0     50
       -> HalLcdWriteStringValue        0      0     52
       -> HalLcdWriteStringValue        0      0     52
     Smart_home_HandleKeys              0      0     23
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_Init                    1      0     38
       -> afRegister                    0      0     76
       -> RegisterForKeys               0      0     76
       -> HalUARTOpen                   0      0     76
       -> HalLcdWriteString             0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> osal_start_timerEx            0      0     76
       -> osal_start_timerEx            0      0     76
       -> NLME_PermitJoiningRequest     0      0     76
       -> HalLedSet                     0      0     76
     Smart_home_ProcessEvent            1      0     14
       -> Smart_home_ProcessMSGCmd      0      0     28
       -> osal_msg_deallocate           0      0     28
       -> osal_msg_receive              0      0     28
       -> osal_msg_receive              0      0     28
       -> ZDO_ParseEPListRsp            0      0     28
       -> HalLedSet                     0      0     28
       -> osal_mem_free                 0      0     28
       -> HalLedSet                     0      0     28
       -> HalLedSet                     0      0     28
       -> Smart_home_HandleKeys         0      0     28
       -> HalLedSet                     0      0     28
       -> osal_start_timerEx            0      0     28
       -> Smart_home_Display            0      0     28
       -> osal_start_timerEx            0      0     28
     Smart_home_ProcessMSGCmd           0      0     24
     Smart_home_Relay_Ctl               0      0     28
       -> AF_DataRequest                0      0     38


   Segment part sizes:

     Function/Label                   Bytes
     --------------                   -----
     Smart_home_ClusterList_IN          18
     Smart_home_ClusterList_OUT         18
     Smart_home_SimpleDesc              12
     Smart_home_epDesc                   6
     Smart_home_TaskID                   1
     DeviceCnt                           9
     Ctrlcase                            1
     LCD_Page                            1
     DeviceList                         63
     Relay_addr                         12
     Motor_addr                         12
     Coordinator_Msg                   102
     RelayTransID                        1
     MotorTransID                        1
     Smart_home_Init                   226
     ?Subroutine0                        5
     ?Subroutine17                       2
     ??Subroutine33_0                   11
     ?Subroutine23                      11
     ?Subroutine12                       5
     ?Subroutine10                       7
     Smart_home_ProcessEvent           418
     ?Subroutine18                       5
     ?Subroutine30                       3
     ??Subroutine32_0                    6
     Smart_home_HandleKeys             292
     ?Subroutine22                      10
     ?Subroutine21                      10
     ?Subroutine20                      10
     ?Subroutine19                      10
     ?Subroutine15                      10
     MotorSpeed                          1
     NetWorkAllow                        1
     Relay1_on                           1
     Relay2_on                           1
     Smart_home_ProcessMSGCmd          234
     ?Subroutine1                        5
     ?Subroutine8                       18
     ?Subroutine7                        7
     ?Subroutine6                        5
     ?Subroutine5                        5
     ?Subroutine27                       7
     ?Subroutine4                        6
     ?Subroutine28                      19
     ?Subroutine3                       22
     ?Subroutine2                       16
     ?Subroutine29                       4
     ?Subroutine31                      17
     DeviceID                            1
     Device_status                       1
     counttmp                            2
     Smart_home_Relay_Ctl              137
     Smart_home_Display                967
     ?Subroutine25                       6
     ?Subroutine16                       6
     ?Subroutine14                       9
     ?Subroutine13                      12
     ?Subroutine26                      22
     ?Subroutine11                      10
     ?Subroutine9                       12
     humit                               2
     temper                              2
     SoundVb                             2
     percent                             1
     Light                               2
     lightmp                             1
     integer                             2
     decimals                            2
     percent                             1
     kind                                1
     tmp1                                1
     tmp2                                1
     Data1                               2
     Data2                               2
     percent                             1
     GasF                                2
     Infrared                            2
     percent                             1
     ?Subroutine24                      18
     ??Smart_home_Init?relay             6
     ??Smart_home_ProcessEvent?relay     6
     ??Smart_home_HandleKeys?relay       6
     ??Smart_home_ProcessMSGCmd?relay    6
     ??Smart_home_Relay_Ctl?relay        6
     ??Smart_home_Display?relay          6
     ?<Constant "Smart_home">           11
     ?<Constant "Motor max Speed">      16
     ?<Constant "Motor min Speed">      16
     ?<Constant "Allow networking">     17
     ?<Constant "Ban   networking">     17
     ?<Constant "      Menu      ">     17
     ?<Constant " ">                     2
     ?<Constant "Hum:">                  5
     ?<Constant "% Tem_1:">              9
     ?<Constant "Sound">                 6
     ?<Constant "">                      1
     ?<Constant "Temper_2:">            10
     ?<Constant ".">                     2
     ?<Constant "Light:">                7
     ?<Constant "MFOne-S50">            10
     ?<Constant "MFOne-S70">            10
     ?<Constant "MF-UltraLight">        14
     ?<Constant "MF-Pro">                7
     ?<Constant "MF-DesFire">           11
     ?<Constant "No Card">               8
     ?<Constant "GasFlame: ">           11
     ?<Constant "Infrared: ">           11
     ?<Constant "Relay Contrling">      16
     ?<Constant "Relay Offline">        14
     ?<Constant "Relay Online">         13
     ?<Constant "K1:ON">                 6
     ?<Constant "K1:OFF">                7
     ?<Constant "K2:ON">                 6
     ?<Constant "K2:OFF">                7
     ?<Constant "Motor Contrling">      16
     ?<Constant "Motor Offline">        14
     ?<Constant "Motor Online">         13
     ?<Constant "Status:">               8
     ?<Constant "Speed:">                7

 
 2 605 bytes in segment BANKED_CODE
    36 bytes in segment BANK_RELAYS
   399 bytes in segment XDATA_ROM_C
   239 bytes in segment XDATA_Z
 
 2 641 bytes of CODE  memory
   399 bytes of CONST memory
   239 bytes of XDATA memory

Errors: none
Warnings: 2
