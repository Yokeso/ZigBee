###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         29/Apr/2021  21:42:55 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_home.c                   #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wConfig.cfg (-DZIGBEEPRO -DSECURE=0               #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          ome.c -D LCD_SUPPORTED -D ZDO_COORDINATOR -D       #
#                          NV_RESTORE -D HAL_UART=TRUE -D xNV_INIT -D         #
#                          xREFLECTOR -D xHAL_UART_TEST -lC                   #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\ -lA      #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\          #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\ -e        #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530MB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\List\Smart_hom #
#                          e.lst                                              #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\CoordinatorMB\Obj\Smart_home #
#                          .r51                                               #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c
      1          /**************************************************************************************************
      2            文件名：Smart_home.c
      3            作 者： 柳成林
      4            功 能： 作为网关节点，实现传感器信息的采集，并可以通过其控制一些节点
      5                    终端设备主要分为8个，分别为
      6               1、温度与光照度传感器；2、烟雾与火焰传感器；3、继电器；4、温湿度传感器；
      7               5、声音与震动传感器；  6、人体红外检测传感器；7、电机；8、RFID检测器。
      8            更新日志(2021)
      9            3.13
     10            + 新增 8种传感器的Project并设置好编译情况
     11            + 修改 Smart_home_ProcessEvent() （增加各种处理器的事件）
     12                   Smart_home_Init()         （初始化内容修改，添加设备默认离线）
     13            3.14
     14            + 修改 Smart_home_ProcessMSGCmd()（添加终端节点类型判断，具体处理留空）
     15            + 新增 Hal层各种传感器驱动(头文件)
     16                   ClusterList (添加8个终端，分开出与入)
     17            3.17
     18            + 修改 Smart_home_ProcessMSGCmd() （完成接收后对于各终端处理）
     19            + 添加 Smart_home_HandleKeys()     (修改原来函数增添概念，未补全)
     20            + 删除 static void Smart_home_Send(void);
     21                   static void Smart_home_Resp(void);
     22                   两个函数
     23            3.19
     24            + 检查 出现的warning并做标识
     25            + 修改 Smart_home_HandleKeys() （补全设计函数）
     26            + 新增 Smart_home_Device_check() (设备是否在线检查)
     27          
     28            3.21
     29            + 新增 DeviceList以方便初始化和设备在线检查（本地变量部分）
     30                   Smart_home_Display()    （屏幕显示，未补全）
     31                   Smart_home_Key_add()     (控制按键，附加项)
     32            + 修改 Smart_home_Device_check()
     33                   Smart_home_Init()
     34                   Smart_home_ProcessMSGCmd()
     35                   调整有关DeviceList（设备列表）部分的修改
     36                   直接使用数组位置号作为设备编号
     37                   按键控制方式，用按键情况控制
     38            3.22
     39            + 修改 Smart_home_Display()    （屏幕显示，补全）
     40                   Smart_home_Key_add()     (屏幕显示中的电机与继电器部分加入这里)
     41                   重写别名方式减少内存损耗
     42                   出现无法初始化的问题，需要项目重构
     43            3.23
     44            + Warn 代码初始化后会产生直接进入key的情况,需debug
     45                   OK键问题无法修复，放弃使用OK键，修改为Cencel组网 禁止组网
     46            3.23 正式完成网关节点部分，（显示函数部分除外）
     47            3.24 
     48            + 修改 Smart_home_Key_add()与display函数整合
     49            + bug:在每十秒一次调用的周期检查函数中会导致显示屏将近一秒时间不显示
     50              已解决： 在状态0的时候作为在线即可
     51            + 完成 显示功能设置
     52             
     53            经调试程序无bug，可以接收各个传感器消息。//3.22
     54            当我没说。。好像出了内存问题//3.22
     55            项目重构啦！，现在又只有一个小问题了/3.23
     56          *********************************************************************/
     57          
     58          /*********************************************************************
     59           * INCLUDES
     60           */
     61          
     62          #include "OSAL.h"
     63          #include "AF.h"
     64          #include "ZDObject.h"
     65          #include "ZDProfile.h"
     66          #include "nwk_util.h"
     67          
     68          #include "Smart_home.h"
     69          #include "OnBoard.h"
     70          
     71          #include "DebugTrace.h"
     72          #include "string.h"
     73          
     74          /* HAL */
     75          #include "hal_lcd.h"
     76          #include "hal_led.h"
     77          #include "hal_key.h"
     78          #include "hal_uart.h"
     79          
     80          /*********************************************************************
     81           * MACROS
     82           */
     83          /*设备链接相关设置*/
     84          /*判断设备是否在线的最大次数*/
     85          #define DEVICE_HEART_BEAT    5
     86          #define DEVICE_CHECK_DELAY   5000
     87          #define DEVICE_CHECK_TIMER   2000
     88          
     89          /*LCD相关设置*/
     90          /*单屏显示时常   MS*/
     91          #define LCD_DISPLAY_LENGTH   10000
     92          #define LCD_DISPLAY_TIMER    2000  //多久更新一次 
     93          
     94          /*关于显示部分相关的宏*/
     95          #define LCD_PAGE_MAX         4     //目前目录页最多4页
     96          
     97          /* 直流电机状态(status)定义*/
     98          #define  HAL_MOTOR_STOP            0x01
     99          #define  HAL_MOTOR_FORWARD         0x02
    100          #define  HAL_MOTOR_BACKWARD        0x03
    101          #define  MOTOR_MAX_SPEED           2400
    102          
    103          /*********************************************************************
    104           * CONSTANTS
    105           */
    106          
    107          #define SMART_HOME_PORT  0x00
    108          
    109          //#define SMART_HOME_BAUD  HAL_UART_BR_38400
    110          #define SMART_HOME_BAUD  HAL_UART_BR_115200
    111          
    112          // When the Rx buf space is less than this threshold, invoke the Rx callback.
    113          #define SMART_HOME_THRESH  64
    114          #define SMART_HOME_RX_SZ  128
    115          #define SMART_HOME_TX_SZ  128
    116          
    117          // Millisecs of idle time after a byte is received before invoking Rx callback.
    118          #define SMART_HOME_IDLE  8
    119          
    120          // Loopback Rx bytes to Tx for throughput testing.
    121          #if !defined( SMART_HOME_LOOPBACK )
    122          #define SMART_HOME_LOOPBACK  FALSE
    123          #endif
    124          
    125          // This is the max byte count per OTA message.
    126          #if !defined( SMART_HOME_TX_MAX )
    127          #define SMART_HOME_TX_MAX  80
    128          #endif
    129          
    130          //3.14 This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    131          const cId_t Smart_home_ClusterList_IN[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
   \   000008   0500         DW 5
   \   00000A   0600         DW 6
   \   00000C   0700         DW 7
   \   00000E   0800         DW 8
   \   000010   0000         DW 0
    132          {
    133            Smart_home_CLUSTERID_HUMITMSG,              // 温湿度
    134            Smart_home_CLUSTERID_TEMPLIGHTMSG,          // 温度光照
    135            Smart_home_CLUSTERID_RFIDMSG,               // 射频卡
    136            Smart_home_CLUSTERID_GASFLAMEMSG,           // 烟雾火焰
    137            Smart_home_CLUSTERID_INFRAREDMSG,           // 人体红外
    138            Smart_home_CLUSTERID_SOUNDVBMSG,            // 声音振动
    139            Smart_home_CLUSTERID_MOTORSTATUSMSG,        // 直流电机状态信息
    140            Smart_home_CLUSTERID_RELAYSTATUSMSG         // 继电器
    141          };
    142          

   \                                 In  segment XDATA_ROM_C, align 1
    143          const cId_t Smart_home_ClusterList_OUT[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0C00         DW 12
   \   000002   0B00         DW 11
   \   000004   0A00         DW 10
   \   000006   0000         DW 0
   \   000008   0000         DW 0
   \   00000A   0000         DW 0
   \   00000C   0000         DW 0
   \   00000E   0000         DW 0
   \   000010   0000         DW 0
    144          {
    145            Smart_home_CLUSTERID_TEXT,
    146            Smart_home_CLUSTERID_MOTORCTRL,             //直流电机控制
    147            Smart_home_CLUSTERID_RELAYCTRL              //继电器控制
    148          };
    149          

   \                                 In  segment XDATA_ROM_C, align 1
    150          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    151          {
    152            Smart_home_ENDPOINT,              //  int   Endpoint;
    153            Smart_home_PROFID,                //  uint16 AppProfId[2];
    154            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    155            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    156            Smart_home_FLAGS,                 //  int   AppFlags:4;
    157            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    158            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    159            Smart_home_MAX_OUTCLUSTERS,          //  byte  AppNumOutClusters;
    160            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    161          };
    162          

   \                                 In  segment XDATA_ROM_C, align 1
    163          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    164          {
    165            Smart_home_ENDPOINT,
    166            &Smart_home_TaskID,
    167            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    168            noLatencyReqs
    169          };
    170          
    171          /*********************************************************************
    172           * TYPEDEFS
    173           */
    174          
    175          /*********************************************************************
    176           * GLOBAL VARIABLES
    177           */
    178          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    179          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    180          
    181          /*********************************************************************
    182           * EXTERNAL VARIABLES
    183           */
    184          
    185          /*********************************************************************
    186           * EXTERNAL FUNCTIONS
    187           */
    188          
    189          /*********************************************************************
    190           * LOCAL VARIABLES
    191           */
    192          
    193          /*3.18 终端节点的设备详细信息缓存*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    194          static uint8 DeviceCnt[Smart_home_MAX_INCLUSTERS];
   \                     DeviceCnt:
   \   000000                DS 9
   \   000009                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    195          static int8 Ctrlcase = 0;    //0用来控制屏幕显示，1控制继电器，2控制电机
   \                     Ctrlcase:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    196          static int8 LCD_Page  =  0;  //终端状态显示
   \                     LCD_Page:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    197          DeviceInfo DeviceList[Smart_home_MAX_INCLUSTERS];                      //设备列表  
   \                     DeviceList:
   \   000000                DS 63
   \   00003F                REQUIRE __INIT_XDATA_Z
    198          /*********************************************************************************
    199          //这些似乎会引起内存问题  3.22
    200          DeviceInfo *Humit = DeviceList+Smart_home_CLUSTERID_HUMITMSG;          //温湿度缓存
    201          DeviceInfo *TempLight = DeviceList+Smart_home_CLUSTERID_TEMPLIGHTMSG;  // 温度光照缓存
    202          DeviceInfo *RfID = DeviceList+Smart_home_CLUSTERID_RFIDMSG;            // RFID 信息缓存
    203          DeviceInfo *gasFlame = DeviceList+Smart_home_CLUSTERID_GASFLAMEMSG;    //气体火焰缓存
    204          DeviceInfo *infrared = DeviceList+Smart_home_CLUSTERID_INFRAREDMSG;    //人体红外
    205          DeviceInfo *motor = DeviceList+Smart_home_CLUSTERID_MOTORSTATUSMSG;     //电机状态
    206          DeviceInfo *relay = DeviceList+Smart_home_CLUSTERID_RELAYSTATUSMSG;    //继电器状态
    207          DeviceInfo *soundVb = DeviceList+Smart_home_CLUSTERID_SOUNDVBMSG;      //声音震动
    208          修改如下
    209          ***********************************************************************************/
    210          #define Humit     1     //温湿度缓存
    211          #define TempLight 2     // 温度光照缓存
    212          #define RfID      3     // RFID 信息缓存
    213          #define gasFlame  4     //气体火焰缓存
    214          #define infrared  5     //人体红外
    215          #define motor     6     //电机状态
    216          #define relay     7     //继电器状态
    217          #define soundVb   8     //声音震动
    218          
    219          /*3.14 消息发送部分*/
    220          /*3.17短地址存储*/
    221          static afAddrType_t Humit_addr;
    222          static afAddrType_t Light_addr;
    223          static afAddrType_t GasF_addr;
    224          static afAddrType_t Sound_addr;
    225          static afAddrType_t Card_addr;
    226          static afAddrType_t Infrared_addr;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    227          static afAddrType_t Relay_addr;
   \                     Relay_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    228          static afAddrType_t Motor_addr;
   \                     Motor_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    229          
    230          /*消息发送数组*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    231          byte Coordinator_Msg[MSG_MAX_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    232          uint16 Smart_home_MaxDataLength;
   \                     Smart_home_MaxDataLength:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    233          
    234          /*3.19 协议栈中有但暂时不知道要他们干嘛的东西*/
    235          /*3.21 现在我会了！！！*/
    236          /*3.22 那些没用！删掉了！*/
    237          //static uint8 Smart_home_MsgID;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    238          static uint8 RelayTransID;  // This is the unique message ID (counter)
   \                     RelayTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    239          static uint8 MotorTransID;  // This is the unique message ID (counter)
   \                     MotorTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    240          
    241          /*********************************************************************
    242           * LOCAL FUNCTIONS
    243           */
    244          
    245          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    246          //static void Smart_home_Key_add(uint8 Ctrlcase);
    247          static void Smart_home_HandleKeys( byte shift, byte keys );
    248          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    249          static void Smart_home_Device_check(void);
    250          static void Smart_home_Relay_Ctl(uint8 cmd);
    251          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed);
    252          static void Smart_home_Display(void);
    253          static void Smart_home_Motor_cmd(int8 speed);
    254          void Smart_home_CallBack(uint8 port, uint8 event);
    255          
    256          /*********************************************************************
    257           * @fn      Smart_home_Init
    258           *
    259           * @brief   This is called during OSAL tasks' initialization.
    260           *
    261           * @param   task_id - the Task ID assigned by OSAL.
    262           *
    263           * @return  none
    264           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    265          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    266          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 31
   \   000005   74E1         MOV     A,#-0x1f
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    267            halUARTCfg_t uartConfig;
    268            uint8 DeviceNum;                                    //DeviceList初始化用变量
    269            uint8 i;
    270            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   00000C                ; Setup parameters for call to function afRegister
   \   00000C   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   00000E   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   000010   12....       LCALL   ??afRegister?relay
    271            Smart_home_TaskID = task_id;
   \   000013   EE           MOV     A,R6
   \   000014   90....       MOV     DPTR,#Smart_home_TaskID
   \   000017   F0           MOVX    @DPTR,A
    272            MotorTransID = 0;
   \   000018   90....       MOV     DPTR,#MotorTransID
   \   00001B   E4           CLR     A
   \   00001C   F0           MOVX    @DPTR,A
    273            RelayTransID = 0;
   \   00001D   90....       MOV     DPTR,#RelayTransID
   \   000020   F0           MOVX    @DPTR,A
    274          
    275            RegisterForKeys( task_id );
   \   000021                ; Setup parameters for call to function RegisterForKeys
   \   000021   EE           MOV     A,R6
   \   000022   F9           MOV     R1,A
   \   000023   12....       LCALL   ??RegisterForKeys?relay
    276          
    277            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000026   7402         MOV     A,#0x2
   \   000028   12....       LCALL   ?XSTACK_DISP0_8
   \   00002B   7401         MOV     A,#0x1
   \   00002D   F0           MOVX    @DPTR,A
    278            uartConfig.baudRate             = SMART_HOME_BAUD;
   \   00002E   7403         MOV     A,#0x3
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7404         MOV     A,#0x4
   \   000035   F0           MOVX    @DPTR,A
    279            uartConfig.flowControl          = FALSE;
   \   000036   12....       LCALL   ?XSTACK_DISP0_8
   \   000039   E4           CLR     A
   \   00003A   F0           MOVX    @DPTR,A
    280            uartConfig.flowControlThreshold = SMART_HOME_THRESH; // 2x30 don't care - see uart driver.
   \   00003B   7405         MOV     A,#0x5
   \   00003D   12....       LCALL   ?XSTACK_DISP0_8
   \   000040   7440         MOV     A,#0x40
   \   000042   12....       LCALL   ??Subroutine34_0 & 0xFFFF
    281            uartConfig.rx.maxBufSize        = SMART_HOME_RX_SZ;  // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_74:
   \   000045   740C         MOV     A,#0xc
   \   000047   12....       LCALL   ?XSTACK_DISP0_8
   \   00004A   12....       LCALL   ?Subroutine9 & 0xFFFF
    282            uartConfig.tx.maxBufSize        = SMART_HOME_TX_SZ;  // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_84:
   \   00004D   7414         MOV     A,#0x14
   \   00004F   12....       LCALL   ?XSTACK_DISP0_8
   \   000052   12....       LCALL   ?Subroutine9 & 0xFFFF
    283            uartConfig.idleTimeout          = SMART_HOME_IDLE;   // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_85:
   \   000055   7407         MOV     A,#0x7
   \   000057   12....       LCALL   ?XSTACK_DISP0_8
   \   00005A   7408         MOV     A,#0x8
   \   00005C   F0           MOVX    @DPTR,A
    284            uartConfig.intEnable            = FALSE;              // 2x30 don't care - see uart driver.
   \   00005D   7418         MOV     A,#0x18
   \   00005F   12....       LCALL   ?XSTACK_DISP0_8
   \   000062   E4           CLR     A
   \   000063   F0           MOVX    @DPTR,A
    285            uartConfig.callBackFunc         = Smart_home_CallBack;
   \   000064   741D         MOV     A,#0x1d
   \   000066   12....       LCALL   ?XSTACK_DISP0_8
   \   000069   74..         MOV     A,#??Smart_home_CallBack?relay & 0xff
   \   00006B   F0           MOVX    @DPTR,A
   \   00006C   A3           INC     DPTR
   \   00006D   74..         MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
   \   00006F   F0           MOVX    @DPTR,A
    286            HalUARTOpen (SMART_HOME_PORT, &uartConfig);
   \   000070                ; Setup parameters for call to function HalUARTOpen
   \   000070   7402         MOV     A,#0x2
   \   000072   12....       LCALL   ?XSTACK_DISP0_8
   \   000075   AA82         MOV     R2,DPL
   \   000077   AB83         MOV     R3,DPH
   \   000079   7900         MOV     R1,#0x0
   \   00007B   12....       LCALL   ??HalUARTOpen?relay
    287          
    288          #if !defined ( TRANSMITAPP_FRAGMENTED )
    289            afDataReqMTU_t mtu;
    290          #endif  
    291            
    292          #if defined ( LCD_SUPPORTED )
    293            HalLcdWriteString( "Smart_home", HAL_LCD_LINE_2 );
   \   00007E                ; Setup parameters for call to function HalLcdWriteString
   \   00007E   7902         MOV     R1,#0x2
   \   000080   7A..         MOV     R2,#`?<Constant "Smart_home">` & 0xff
   \   000082   7B..         MOV     R3,#(`?<Constant "Smart_home">` >> 8) & 0xff
   \   000084   12....       LCALL   ??HalLcdWriteString?relay
    294          #endif
    295            
    296          #if (HAL_UART == TRUE)
    297            HalUARTWrite(HAL_UART_PORT_0, "Init Success!\n",   strlen("Init Success!\n"));
   \   000087                ; Setup parameters for call to function HalUARTWrite
   \   000087   7C0E         MOV     R4,#0xe
   \   000089   7D00         MOV     R5,#0x0
   \   00008B   7A..         MOV     R2,#`?<Constant "Init Success!\\n">` & 0xff
   \   00008D   7B..         MOV     R3,#(`?<Constant "Init Success!\\n">` >> 8) & 0xff
   \   00008F   7900         MOV     R1,#0x0
   \   000091   12....       LCALL   ??HalUARTWrite?relay
    298          #endif
    299            
    300            // Set the data length
    301          #if defined ( Smart_Home_FRAGMENTED )
    302            Smart_home_MaxDataLength = MSG_MAX_LEN;
    303          #else
    304            mtu.kvp        = FALSE;
   \   000094   85..82       MOV     DPL,?XSP + 0
   \   000097   85..83       MOV     DPH,?XSP + 1
   \   00009A   E4           CLR     A
   \   00009B   F0           MOVX    @DPTR,A
    305            mtu.aps.secure = FALSE;
   \   00009C   04           INC     A
   \   00009D   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A0   E4           CLR     A
   \   0000A1   12....       LCALL   ?Subroutine10 & 0xFFFF
    306            Smart_home_MaxDataLength = afDataReqMTU( &mtu );
   \                     ??CrossCallReturnLabel_18:
   \   0000A4   12....       LCALL   ??afDataReqMTU?relay
   \   0000A7   E9           MOV     A,R1
   \   0000A8   90....       MOV     DPTR,#Smart_home_MaxDataLength
   \   0000AB   12....       LCALL   ??Subroutine34_0 & 0xFFFF
    307          #endif
    308            
    309            for(i=0;i<Smart_home_MaxDataLength;i++)
   \                     ??CrossCallReturnLabel_75:
   \   0000AE   90....       MOV     DPTR,#Smart_home_MaxDataLength
   \   0000B1   E0           MOVX    A,@DPTR
   \   0000B2   6014         JZ      ??Smart_home_Init_0
    310            {
    311              Coordinator_Msg[i] = 0;
   \   0000B4   F8           MOV     R0,A
   \   0000B5   7900         MOV     R1,#0x0
   \   0000B7   90....       MOV     DPTR,#Coordinator_Msg
   \                     ??Smart_home_Init_1:
   \   0000BA   E4           CLR     A
   \   0000BB   F0           MOVX    @DPTR,A
   \   0000BC   A3           INC     DPTR
   \   0000BD   E8           MOV     A,R0
   \   0000BE   24FF         ADD     A,#-0x1
   \   0000C0   18           DEC     R0
   \   0000C1   E9           MOV     A,R1
   \   0000C2   34FF         ADDC    A,#-0x1
   \   0000C4   F9           MOV     R1,A
   \   0000C5   48           ORL     A,R0
   \   0000C6   70F2         JNZ     ??Smart_home_Init_1
    312            }
    313            
    314            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \                     ??Smart_home_Init_0:
   \   0000C8                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000C8   7A20         MOV     R2,#0x20
   \   0000CA   7B80         MOV     R3,#-0x80
   \   0000CC   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000CF   E0           MOVX    A,@DPTR
   \   0000D0   F9           MOV     R1,A
   \   0000D1   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    315            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   0000D4                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000D4   7A06         MOV     R2,#0x6
   \   0000D6   7B80         MOV     R3,#-0x80
   \   0000D8   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000DB   E0           MOVX    A,@DPTR
   \   0000DC   F9           MOV     R1,A
   \   0000DD   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    316            
    317            //3.22 显示延时
    318            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DISPLAY_EVT, 
    319                                SMART_HOME_DEVICE_DISPLAY_DELAY);
   \   0000E0                ; Setup parameters for call to function osal_start_timerEx
   \   0000E0   7C10         MOV     R4,#0x10
   \   0000E2   7D27         MOV     R5,#0x27
   \   0000E4   7A10         MOV     R2,#0x10
   \   0000E6   12....       LCALL   ??Subroutine31_0 & 0xFFFF
    320            
    321            
    322            //3.14 打开设备在线检测，第一次开启检测延时较长时间
    323            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DEVICE_CHECK_EVT, 
    324                                SMART_HOME_DEVICE_CHECK_DELAY);
   \                     ??CrossCallReturnLabel_66:
   \   0000E9                ; Setup parameters for call to function osal_start_timerEx
   \   0000E9   7C88         MOV     R4,#-0x78
   \   0000EB   7D13         MOV     R5,#0x13
   \   0000ED   12....       LCALL   ?Subroutine14 & 0xFFFF
    325           
    326            //3.13 关闭LED灯(D4)，表示协调器默认不允许组网
    327            NLME_PermitJoiningRequest(0x00);
   \                     ??CrossCallReturnLabel_64:
   \   0000F0                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   0000F0   7900         MOV     R1,#0x0
   \   0000F2   12....       LCALL   ?Subroutine21 & 0xFFFF
    328            HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);
    329            
    330            //3.21 初始化页面为0 第一页
    331            //LCD_Page=0;
    332            
    333            //3.13 设备离线状态检测初始化，初始化为离线
    334            //3.21 修改为DeviceList方式，初始化DeviceCnt
    335            for(DeviceNum=1;DeviceNum<Smart_home_MAX_INCLUSTERS;DeviceNum++) //只初始化终端
   \                     ??CrossCallReturnLabel_45:
   \   0000F5   7D01         MOV     R5,#0x1
    336            {
    337              DeviceList[DeviceNum].deviceid = DeviceNum;
   \                     ??Smart_home_Init_2:
   \   0000F7   8D82         MOV     DPL,R5
   \   0000F9   A882         MOV     R0,DPL
   \   0000FB   E8           MOV     A,R0
   \   0000FC   75F007       MOV     B,#0x7
   \   0000FF   A4           MUL     AB
   \   000100   FA           MOV     R2,A
   \   000101   ABF0         MOV     R3,B
   \   000103   74..         MOV     A,#DeviceList & 0xff
   \   000105   2A           ADD     A,R2
   \   000106   F582         MOV     DPL,A
   \   000108   74..         MOV     A,#(DeviceList >> 8) & 0xff
   \   00010A   3B           ADDC    A,R3
   \   00010B   F583         MOV     DPH,A
   \   00010D   ED           MOV     A,R5
   \   00010E   F0           MOVX    @DPTR,A
    338              DeviceList[DeviceNum].deviceStatus = DEVICE_OFFLINE;
   \   00010F   A3           INC     DPTR
   \   000110   7402         MOV     A,#0x2
   \   000112   F0           MOVX    @DPTR,A
    339              DeviceCnt[DeviceNum]=0;
   \   000113   74..         MOV     A,#DeviceCnt & 0xff
   \   000115   28           ADD     A,R0
   \   000116   F582         MOV     DPL,A
   \   000118   74..         MOV     A,#(DeviceCnt >> 8) & 0xff
   \   00011A   3400         ADDC    A,#0x0
   \   00011C   F583         MOV     DPH,A
   \   00011E   E4           CLR     A
   \   00011F   F0           MOVX    @DPTR,A
    340            }
   \   000120   0D           INC     R5
   \   000121   ED           MOV     A,R5
   \   000122   C3           CLR     C
   \   000123   9409         SUBB    A,#0x9
   \   000125   40D0         JC      ??Smart_home_Init_2
    341          }
   \   000127   741F         MOV     A,#0x1f
   \   000129   12....       LCALL   ?DEALLOC_XSTACK8
   \   00012C                REQUIRE ?Subroutine0
   \   00012C                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   7A80         MOV     R2,#-0x80
   \   000002                REQUIRE ??Subroutine31_0
   \   000002                ; // Fall through to label ??Subroutine31_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine31_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   12....       LCALL   ??NLME_PermitJoiningRequest?relay
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003   7A00         MOV     R2,#0x0
   \   000005   7901         MOV     R1,#0x1
   \   000007   12....       LCALL   ??HalLedSet?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function afDataReqMTU
   \   000001                ; Setup parameters for call to function HalUARTWrite
   \   000001                ; Setup parameters for call to function strlen
   \   000001   85..82       MOV     DPL,?XSP + 0
   \   000004   85..83       MOV     DPH,?XSP + 1
   \   000007   AA82         MOV     R2,DPL
   \   000009   AB83         MOV     R3,DPH
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   7480         MOV     A,#-0x80
   \   000002                REQUIRE ??Subroutine34_0
   \   000002                ; // Fall through to label ??Subroutine34_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine34_0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   E4           CLR     A
   \   000003   F0           MOVX    @DPTR,A
   \   000004   22           RET
    342          
    343          /*********************************************************************
    344           * @fn      Smart_home_ProcessEvent
    345           *
    346           * @brief   Generic Application Task event processor.
    347           *
    348           * @param   task_id  - The OSAL assigned task ID.
    349           * @param   events   - Bit map of events to process.
    350           *
    351           * @return  Event flags of all unprocessed events.
    352           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    353          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    354          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    355            afIncomingMSGPacket_t *MSGpkt;
    356            (void)task_id;  // Intentionally unreferenced parameter
    357            afDataConfirm_t *afDataConfirm;
    358            
    359            //3.13 数据确认消息字段
    360            ZStatus_t sentStatus;
    361            byte sentEP;
    362            
    363            if ( events & SYS_EVENT_MSG )   //3.13 系统消息事件
   \   000009   5480         ANL     A,#0x80
   \   00000B   701D         JNZ     ??Smart_home_ProcessEvent_0
    364            {
    365          
    366              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    367              {
    368                switch ( MSGpkt->hdr.event )
    369                {
    370                  case ZDO_CB_MSG:           //3.13 ZDO传入消息回调
    371                    Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    372                    break;
    373                    
    374                  case KEY_CHANGE:           //3.13 按键事件
    375                    Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    376                    break;
    377                   
    378                  case AF_DATA_CONFIRM_CMD:
    379                  //3.13 接收到此消息，作为对发送的数据包的确认。
    380                  //状态为ZStatus_t类型[在ZComDef.h中定义]
    381                  //消息字段在AF.h中定义
    382                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    383                    sentEP = afDataConfirm->endpoint;
    384                    sentStatus = afDataConfirm->hdr.status;
    385           
    386                    if ( (ZSuccess == sentStatus) &&
    387                         (Smart_home_epDesc.endPoint == sentEP) )
    388                    {  
    389                      //3.13 在消息发送确认成功后绿灯闪烁一下
    390                      //HalLedSet(HAL_LED_1, HAL_LED_MODE_BLINK);
    391                    }
    392                    else
    393                    {
    394                      //3.13 红灯闪烁一下  硬件还没实现
    395                      //HalLedSet(HAL_LED_2, HAL_LED_MODE_BLINK);
    396                    }
    397                    break;
    398                    
    399                  case AF_INCOMING_MSG_CMD:   //3.13 消息传入处理
    400                    //3.13 在消息接收确认成功后绿灯闪烁一下
    401                    Smart_home_ProcessMSGCmd( MSGpkt );
    402                    break;
    403                  default:
    404                    break;
    405                }
    406          
    407                osal_msg_deallocate( (uint8 *)MSGpkt );
    408                
    409                // Next
    410                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID );
    411              }
    412              
    413              // Squash compiler warnings until values are used.
    414              (void)sentStatus;
    415              (void)sentEP;
    416              
    417              return ( events ^ SYS_EVENT_MSG );
    418            }
    419          
    420            if ( events & SMART_HOME_SEND_MSG_EVT )
   \   00000D   EE           MOV     A,R6
   \   00000E   A2E0         MOV     C,0xE0 /* A   */.0
   \   000010   5052         JNC     ??Smart_home_ProcessEvent_1
    421            {
    422              //Smart_home_Send();
    423              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   000012   6401         XRL     A,#0x1
   \   000014   FA           MOV     R2,A
   \   000015   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    424            }
   \                     ??Smart_home_ProcessEvent_3:
   \   000018                ; Setup parameters for call to function Smart_home_ProcessMSGCmd
   \   000018   12....       LCALL   ??Smart_home_ProcessMSGCmd?relay
   \                     ??Smart_home_ProcessEvent_4:
   \   00001B                ; Setup parameters for call to function osal_msg_deallocate
   \   00001B   AA..         MOV     R2,?V0 + 0
   \   00001D   AB..         MOV     R3,?V0 + 1
   \   00001F   12....       LCALL   ??osal_msg_deallocate?relay
   \   000022                ; Setup parameters for call to function osal_msg_receive
   \   000022   90....       MOV     DPTR,#Smart_home_TaskID
   \   000025   E0           MOVX    A,@DPTR
   \   000026   F9           MOV     R1,A
   \   000027   12....       LCALL   ??osal_msg_receive?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   00002A                ; Setup parameters for call to function osal_msg_receive
   \   00002A   90....       MOV     DPTR,#Smart_home_TaskID
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F9           MOV     R1,A
   \   00002F   12....       LCALL   ??osal_msg_receive?relay
   \   000032   8A..         MOV     ?V0 + 0,R2
   \   000034   8B..         MOV     ?V0 + 1,R3
   \   000036   EA           MOV     A,R2
   \   000037   45..         ORL     A,?V0 + 1
   \   000039   6020         JZ      ??Smart_home_ProcessEvent_5
   \   00003B   8A82         MOV     DPL,R2
   \   00003D   8B83         MOV     DPH,R3
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   24E6         ADD     A,#-0x1a
   \   000042   60D4         JZ      ??Smart_home_ProcessEvent_3
   \   000044   245A         ADD     A,#0x5a
   \   000046   70D3         JNZ     ??Smart_home_ProcessEvent_4
   \   000048                ; Setup parameters for call to function Smart_home_HandleKeys
   \   000048   A3           INC     DPTR
   \   000049   A3           INC     DPTR
   \   00004A   A3           INC     DPTR
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   FA           MOV     R2,A
   \   00004D   85..82       MOV     DPL,?V0 + 0
   \   000050   8B83         MOV     DPH,R3
   \   000052   A3           INC     DPTR
   \   000053   A3           INC     DPTR
   \   000054   E0           MOVX    A,@DPTR
   \   000055   F9           MOV     R1,A
   \   000056   12....       LCALL   ??Smart_home_HandleKeys?relay
   \   000059   80C0         SJMP    ??Smart_home_ProcessEvent_4
   \                     ??Smart_home_ProcessEvent_5:
   \   00005B   EE           MOV     A,R6
   \   00005C   FA           MOV     R2,A
   \   00005D   EF           MOV     A,R7
   \   00005E   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_6:
   \   000060   FB           MOV     R3,A
   \   000061   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    425            
    426            if ( events & SMART_HOME_DEVICE_CHECK_EVT )  //终端设备检查事件
   \                     ??Smart_home_ProcessEvent_1:
   \   000064   5480         ANL     A,#0x80
   \   000066   7003         JNZ     $+5
   \   000068   02....       LJMP    ??Smart_home_ProcessEvent_7 & 0xFFFF
    427            {
    428              Smart_home_Device_check();  //调用终端设备检查函数
   \   00006B   90....       MOV     DPTR,#??DeviceID
   \   00006E   7401         MOV     A,#0x1
   \   000070   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_8:
   \   000071   E0           MOVX    A,@DPTR
   \   000072   FA           MOV     R2,A
   \   000073   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_47:
   \   000076   E0           MOVX    A,@DPTR
   \   000077   90....       MOV     DPTR,#??Device_status
   \   00007A   F0           MOVX    @DPTR,A
   \   00007B   74..         MOV     A,#DeviceCnt & 0xff
   \   00007D   2A           ADD     A,R2
   \   00007E   F8           MOV     R0,A
   \   00007F   74..         MOV     A,#(DeviceCnt >> 8) & 0xff
   \   000081   3400         ADDC    A,#0x0
   \   000083   F9           MOV     R1,A
   \   000084   90....       MOV     DPTR,#??counttmp
   \   000087   E8           MOV     A,R0
   \   000088   F0           MOVX    @DPTR,A
   \   000089   A3           INC     DPTR
   \   00008A   E9           MOV     A,R1
   \   00008B   F0           MOVX    @DPTR,A
   \   00008C   90....       MOV     DPTR,#??Device_status
   \   00008F   E0           MOVX    A,@DPTR
   \   000090   6401         XRL     A,#0x1
   \   000092   90....       MOV     DPTR,#??counttmp + 1
   \   000095   6007         JZ      ??Smart_home_ProcessEvent_9
   \   000097   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   00009A   E0           MOVX    A,@DPTR
   \   00009B   04           INC     A
   \   00009C   8008         SJMP    ??Smart_home_ProcessEvent_10
   \                     ??Smart_home_ProcessEvent_9:
   \   00009E   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   0000A1   E4           CLR     A
   \   0000A2   F0           MOVX    @DPTR,A
   \   0000A3   90....       MOV     DPTR,#??Device_status
   \                     ??Smart_home_ProcessEvent_10:
   \   0000A6   F0           MOVX    @DPTR,A
   \   0000A7   90....       MOV     DPTR,#??counttmp
   \   0000AA   E0           MOVX    A,@DPTR
   \   0000AB   F8           MOV     R0,A
   \   0000AC   A3           INC     DPTR
   \   0000AD   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   0000B0   E0           MOVX    A,@DPTR
   \   0000B1   C3           CLR     C
   \   0000B2   9406         SUBB    A,#0x6
   \   0000B4   400F         JC      ??Smart_home_ProcessEvent_11
   \   0000B6   90....       MOV     DPTR,#??counttmp + 1
   \   0000B9   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   0000BC   7405         MOV     A,#0x5
   \   0000BE   F0           MOVX    @DPTR,A
   \   0000BF   90....       MOV     DPTR,#??Device_status
   \   0000C2   7402         MOV     A,#0x2
   \   0000C4   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_11:
   \   0000C5   90....       MOV     DPTR,#??Device_status
   \   0000C8   E0           MOVX    A,@DPTR
   \   0000C9   C0E0         PUSH    A
   \   0000CB   90....       MOV     DPTR,#??DeviceID
   \   0000CE   E0           MOVX    A,@DPTR
   \   0000CF   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_48:
   \   0000D2   D0E0         POP     A
   \   0000D4   F0           MOVX    @DPTR,A
   \   0000D5   90....       MOV     DPTR,#??DeviceID
   \   0000D8   E0           MOVX    A,@DPTR
   \   0000D9   04           INC     A
   \   0000DA   F0           MOVX    @DPTR,A
   \   0000DB   C3           CLR     C
   \   0000DC   9409         SUBB    A,#0x9
   \   0000DE   4091         JC      ??Smart_home_ProcessEvent_8
    429              
    430              osal_start_timerEx(Smart_home_TaskID,SMART_HOME_DEVICE_CHECK_EVT,
    431                                 DEVICE_CHECK_TIMER);
   \   0000E0                ; Setup parameters for call to function osal_start_timerEx
   \   0000E0   7CD0         MOV     R4,#-0x30
   \   0000E2   7D07         MOV     R5,#0x7
   \   0000E4   12....       LCALL   ?Subroutine14 & 0xFFFF
    432              return (events ^ SMART_HOME_DEVICE_CHECK_EVT);
   \                     ??CrossCallReturnLabel_65:
   \   0000E7   EE           MOV     A,R6
   \   0000E8   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_12:
   \   0000EA   FA           MOV     R2,A
   \   0000EB   EF           MOV     A,R7
   \   0000EC   02....       LJMP    ??Smart_home_ProcessEvent_6 & 0xFFFF
    433            }
    434            
    435            
    436            if( events & SMART_HOME_DISPLAY_EVT )
   \                     ??Smart_home_ProcessEvent_7:
   \   0000EF   EE           MOV     A,R6
   \   0000F0   5410         ANL     A,#0x10
   \   0000F2   6013         JZ      ??Smart_home_ProcessEvent_13
    437            {
    438              Smart_home_Display();
   \   0000F4                ; Setup parameters for call to function Smart_home_Display
   \   0000F4   12....       LCALL   ??Smart_home_Display?relay
    439              //周期性刷新
    440              osal_start_timerEx( Smart_home_TaskID,events & SMART_HOME_DISPLAY_EVT,LCD_DISPLAY_TIMER);
   \   0000F7                ; Setup parameters for call to function osal_start_timerEx
   \   0000F7   7CD0         MOV     R4,#-0x30
   \   0000F9   7D07         MOV     R5,#0x7
   \   0000FB   EE           MOV     A,R6
   \   0000FC   5410         ANL     A,#0x10
   \   0000FE   FA           MOV     R2,A
   \   0000FF   12....       LCALL   ??Subroutine31_0 & 0xFFFF
    441              return (events ^ SMART_HOME_DISPLAY_EVT);
   \                     ??CrossCallReturnLabel_67:
   \   000102   EE           MOV     A,R6
   \   000103   6410         XRL     A,#0x10
   \   000105   80E3         SJMP    ??Smart_home_ProcessEvent_12
    442            }
    443          
    444            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_13:
   \   000107   7A00         MOV     R2,#0x0
   \   000109   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_2:
   \   00010B   7F04         MOV     R7,#0x4
   \   00010D   02....       LJMP    ?BANKED_LEAVE_XDATA
    445          }
    446          
    447          /*********************************************************************
    448           * @fn      Smart_home_ProcessZDOMsgs()
    449           *
    450           * @brief   Process response messages
    451           *
    452           * @param   none
    453           *
    454           * @return  none
    455           */
    456          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
    457          {
    458            /*
    459            switch ( inMsg->clusterID )
    460            {
    461              case End_Device_Bind_rsp:
    462                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    463                {
    464                  // Light LED
    465                  HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    466                }
    467          #if defined(BLINK_LEDS)
    468                else
    469                {
    470                  // Flash LED to show failure
    471                  HalLedSet ( HAL_LED_4, HAL_LED_MODE_FLASH );
    472                }
    473          #endif
    474                break;
    475                
    476              case Match_Desc_rsp:
    477                {
    478                  ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
    479                  if ( pRsp )
    480                  {
    481                    if ( pRsp->status == ZSuccess && pRsp->cnt )
    482                    {
    483                      
    484                      Smart_home_TxAddr.addrMode = (afAddrMode_t)Addr16Bit;
    485                      Smart_home_TxAddr.addr.shortAddr = pRsp->nwkAddr;
    486                      // Take the first endpoint, Can be changed to search through endpoints
    487                      Smart_home_TxAddr.endPoint = pRsp->epList[0];
    488                      
    489                      
    490                      // Light LED
    491                      HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    492                    }
    493                    osal_mem_free( pRsp );
    494                  }
    495                }
    496                break;
    497            }
    498            */
    499          }
    500          
    501          /*********************************************************************
    502           * @fn      Smart_home_Key_add
    503           *
    504           * @brief   3.21新增，用来标识目前处于的控制状态，是附加项
    505           *          0 控制屏幕 1 控制继电器 2 控制电机
    506           *            
    507           *
    508           * @param   Ctrlcase 目前的控制号
    509           *
    510           * @return  屏幕回显
    511           *
    512          static void Smart_home_Key_add(uint8 Ctrlcase)
    513          {
    514          #if defined ( LCD_SUPPORTED )
    515            switch(Ctrlcase)
    516            {
    517              default:    
    518              case 0:
    519                HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
    520                //清除屏幕显示
    521                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    522                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    523                break;
    524              
    525              case 1:
    526                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
    527                //清除屏幕显示
    528                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    529                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    530                if(DeviceList[relay].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    531                {
    532                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
    533                }
    534                if(DeviceList[relay].deviceStatus != DEVICE_ONLINE)
    535                {
    536                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
    537                }
    538                break;
    539              
    540              case 2:
    541                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
    542                //清除屏幕显示
    543                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    544                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    545                if(DeviceList[motor].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    546                {
    547                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 );
    548                }
    549                if(DeviceList[motor].deviceStatus != DEVICE_ONLINE)
    550                {
    551                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
    552                }      
    553                break;
    554          #endif     
    555            }
    556          }
    557          */
    558          /*********************************************************************
    559           * @fn      Smart_home_Motor_cmd
    560           * 
    561           * @brief   通过电机速度判断电机转向
    562           * 
    563           * 
    564           * @param   uint8 电机转速
    565           * 
    566           * @return  
    567           *          #define  HAL_MOTOR_STOP            0x01
    568           *          #define  HAL_MOTOR_FORWARD         0x02
    569           *          #define  HAL_MOTOR_BACKWARD        0x03
    570           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    571          void Smart_home_Motor_cmd(int8 speed)
   \                     Smart_home_Motor_cmd:
    572          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    573            uint8 outspeed;
    574            uint8 cmd;
    575            if(speed == 0)
   \   000007   7006         JNZ     ??Smart_home_Motor_cmd_0
    576            {
    577              outspeed = 0;
   \                     ??Smart_home_Motor_cmd_1:
   \   000009   7F00         MOV     R7,#0x0
    578              cmd = HAL_MOTOR_STOP;
   \   00000B   7A01         MOV     R2,#0x1
   \   00000D   8021         SJMP    ??Smart_home_Motor_cmd_2
    579            }   
    580            else if(speed > 0)
   \                     ??Smart_home_Motor_cmd_0:
   \   00000F   C3           CLR     C
   \   000010   9401         SUBB    A,#0x1
   \   000012   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000014   65D0         XRL     A,PSW
   \   000016   33           RLC     A
   \   000017   EE           MOV     A,R6
   \   000018   4005         JC      ??Smart_home_Motor_cmd_3
    581            {
    582              outspeed = speed;
   \   00001A   FF           MOV     R7,A
    583              cmd = HAL_MOTOR_FORWARD;
   \   00001B   7A02         MOV     R2,#0x2
   \   00001D   8011         SJMP    ??Smart_home_Motor_cmd_2
    584            }
    585            
    586            else if(speed < 0)
   \                     ??Smart_home_Motor_cmd_3:
   \   00001F   C3           CLR     C
   \   000020   9400         SUBB    A,#0x0
   \   000022   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000024   65D0         XRL     A,PSW
   \   000026   33           RLC     A
   \   000027   50E0         JNC     ??Smart_home_Motor_cmd_1
    587            {
    588              outspeed = 0xff - speed;
   \   000029   74FF         MOV     A,#-0x1
   \   00002B   C3           CLR     C
   \   00002C   9E           SUBB    A,R6
   \   00002D   FF           MOV     R7,A
    589              cmd = HAL_MOTOR_BACKWARD;
   \   00002E   7A03         MOV     R2,#0x3
    590            }
    591            
    592            else
    593            {
    594              outspeed = 0;
    595              cmd = HAL_MOTOR_STOP;    
    596            }
    597            Smart_home_Motor_Ctl(cmd,outspeed); 
   \                     ??Smart_home_Motor_cmd_2:
   \   000030   90....       MOV     DPTR,#DeviceList + 43
   \   000033   E0           MOVX    A,@DPTR
   \   000034   6402         XRL     A,#0x2
   \   000036   607A         JZ      ??Smart_home_Motor_cmd_4
   \   000038   90....       MOV     DPTR,#MotorTransID
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   C4           SWAP    A
   \   00003D   540F         ANL     A,#0xf
   \   00003F   FB           MOV     R3,A
   \   000040   C3           CLR     C
   \   000041   940A         SUBB    A,#0xa
   \   000043   5004         JNC     ??Smart_home_Motor_cmd_5
   \   000045   7830         MOV     R0,#0x30
   \   000047   8002         SJMP    ??Smart_home_Motor_cmd_6
   \                     ??Smart_home_Motor_cmd_5:
   \   000049   7837         MOV     R0,#0x37
   \                     ??Smart_home_Motor_cmd_6:
   \   00004B   E8           MOV     A,R0
   \   00004C   2B           ADD     A,R3
   \   00004D   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000050   F0           MOVX    @DPTR,A
   \   000051   90....       MOV     DPTR,#MotorTransID
   \   000054   E0           MOVX    A,@DPTR
   \   000055   540F         ANL     A,#0xf
   \   000057   FB           MOV     R3,A
   \   000058   C3           CLR     C
   \   000059   940A         SUBB    A,#0xa
   \   00005B   5004         JNC     ??Smart_home_Motor_cmd_7
   \   00005D   7830         MOV     R0,#0x30
   \   00005F   8002         SJMP    ??Smart_home_Motor_cmd_8
   \                     ??Smart_home_Motor_cmd_7:
   \   000061   7837         MOV     R0,#0x37
   \                     ??Smart_home_Motor_cmd_8:
   \   000063   E8           MOV     A,R0
   \   000064   2B           ADD     A,R3
   \   000065   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   000068   F0           MOVX    @DPTR,A
   \   000069   EF           MOV     A,R7
   \   00006A   A3           INC     DPTR
   \   00006B   F0           MOVX    @DPTR,A
   \   00006C   EA           MOV     A,R2
   \   00006D   A3           INC     DPTR
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F                ; Setup parameters for call to function AF_DataRequest
   \   00006F   75..1E       MOV     ?V0 + 0,#0x1e
   \   000072   78..         MOV     R0,#?V0 + 0
   \   000074   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000077   75....       MOV     ?V0 + 0,#MotorTransID & 0xff
   \   00007A   75....       MOV     ?V0 + 1,#(MotorTransID >> 8) & 0xff
   \   00007D   78..         MOV     R0,#?V0 + 0
   \   00007F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000082   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000085   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   000088   78..         MOV     R0,#?V0 + 0
   \   00008A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008D   75..06       MOV     ?V0 + 0,#0x6
   \   000090   75..00       MOV     ?V0 + 1,#0x0
   \   000093   78..         MOV     R0,#?V0 + 0
   \   000095   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000098   75..0B       MOV     ?V0 + 0,#0xb
   \   00009B   78..         MOV     R0,#?V0 + 0
   \   00009D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A0   7920         MOV     R1,#0x20
   \   0000A2   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   0000A4   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   0000A6   7A..         MOV     R2,#Motor_addr & 0xff
   \   0000A8   7B..         MOV     R3,#(Motor_addr >> 8) & 0xff
   \   0000AA   12....       LCALL   ??AF_DataRequest?relay
   \   0000AD   7409         MOV     A,#0x9
   \   0000AF   12....       LCALL   ?DEALLOC_XSTACK8
    598          }
   \                     ??Smart_home_Motor_cmd_4:
   \   0000B2   80..         SJMP    ??Subroutine32_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine32_0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    599          
    600          /*********************************************************************
    601           * @fn      Smart_home_HandleKeys
    602           *
    603           * @brief   设置按键事件
    604           *          目前事件设置    3.19
    605           *
    606           *          HAL_KEY_SW_1--UP     (上翻一页)
    607           *          HAL_KEY_SW_2--RIGHT  (选项向右)
    608           *          HAL_KEY_SW_3--DOWN   (下翻一页)
    609           *          HAL_KEY_SW_4--LEFT   (选项向左)
    610           *          HAL_KEY_SW_5--OK     (组网开)
    611           *          HAL_KEY_SW_7--CANCEL (组网关) 
    612           * + 3.21 新增  选项总共有3种，控制屏幕显示，控制继电器和控制电机
    613           *              控制继电器时 UP控制1，DOWN控制2
    614           *              控制电机时   UP加速， DOWN减速
    615           *
    616           * @param   shift - true if in shift/alt.
    617           * @param   keys  - bit field for key events.
    618           *
    619           * @return  none
    620           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    621          void Smart_home_HandleKeys( byte shift, byte keys )
   \                     Smart_home_HandleKeys:
    622          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    623            //zAddrType_t txAddr;
    624            static int8 MotorSpeed = 0;
    625            static uint8 NetWorkAllow = 0;
    626            /*这里这么设置似乎会出现内存问题
    627            static uint8 Relay1_on = 0x02;  //两个默认都是关闭
    628            static uint8 Relay2_on = 0x10;
    629            */
    630            /*3.21 LCD 显示*/
    631            static uint8 Relay1_on = 0;  //两个默认都是关闭
    632            static uint8 Relay2_on = 0;
    633            
    634            
    635            if ( keys & HAL_KEY_SW_1 )  //UP
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5059         JNC     ??Smart_home_HandleKeys_0
    636            {
    637              switch(Ctrlcase)
   \   00000B   90....       MOV     DPTR,#Ctrlcase
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   14           DEC     A
   \   000010   6017         JZ      ??Smart_home_HandleKeys_1
   \   000012   14           DEC     A
   \   000013   602A         JZ      ??Smart_home_HandleKeys_2
    638              {
    639                default:    
    640                case 0:
    641                {
    642                  if(LCD_Page < LCD_PAGE_MAX)       {LCD_Page++;}
   \   000015   90....       MOV     DPTR,#LCD_Page
   \   000018   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   00001B   5003         JNC     ??Smart_home_HandleKeys_3
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   04           INC     A
   \   00001F   F0           MOVX    @DPTR,A
    643                  if(LCD_Page > LCD_PAGE_MAX - 1)       {LCD_Page = 0;}
   \                     ??Smart_home_HandleKeys_3:
   \   000020   12....       LCALL   ?Subroutine16 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   000023   403F         JC      ??Smart_home_HandleKeys_0
   \   000025   E4           CLR     A
   \   000026   F0           MOVX    @DPTR,A
   \   000027   803B         SJMP    ??Smart_home_HandleKeys_0
    644                  break;
    645                }
    646                case 1:
    647                {  
    648                  uint8 switch1;
    649                  if(Relay1_on == 0)  {Relay1_on = 1 ; switch1 = 0x02;}
   \                     ??Smart_home_HandleKeys_1:
   \   000029   90....       MOV     DPTR,#??Relay1_on
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   7007         JNZ     ??Smart_home_HandleKeys_4
   \   00002F   7401         MOV     A,#0x1
   \   000031   F0           MOVX    @DPTR,A
   \   000032   7902         MOV     R1,#0x2
   \   000034   8004         SJMP    ??Smart_home_HandleKeys_5
    650                  else if(Relay1_on == 1)  {Relay1_on = 0; switch1 = 0x01;}
   \                     ??Smart_home_HandleKeys_4:
   \   000036   E4           CLR     A
   \   000037   F0           MOVX    @DPTR,A
   \   000038   7901         MOV     R1,#0x1
    651                  else  {Relay1_on = 0; switch1 = 0x01;}       
    652                  Smart_home_Relay_Ctl(switch1);  
   \                     ??Smart_home_HandleKeys_5:
   \   00003A                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   00003A   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    653                  break;
   \   00003D   8025         SJMP    ??Smart_home_HandleKeys_0
    654                } 
    655                case 2:
    656                {
    657                  if(MotorSpeed < 50)     {MotorSpeed += 10;}
   \                     ??Smart_home_HandleKeys_2:
   \   00003F   90....       MOV     DPTR,#??MotorSpeed
   \   000042   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   000045   5004         JNC     ??Smart_home_HandleKeys_6
   \   000047   E0           MOVX    A,@DPTR
   \   000048   240A         ADD     A,#0xa
   \   00004A   F0           MOVX    @DPTR,A
    658                  if(MotorSpeed >= 50)     
   \                     ??Smart_home_HandleKeys_6:
   \   00004B   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   00004E   400F         JC      ??Smart_home_HandleKeys_7
    659                  {
    660          #if defined ( LCD_SUPPORTED )
    661                     HalLcdWriteString( "Motor max Speed", HAL_LCD_LINE_4 );
   \   000050                ; Setup parameters for call to function HalLcdWriteString
   \   000050   7904         MOV     R1,#0x4
   \   000052   7A..         MOV     R2,#`?<Constant "Motor max Speed">` & 0xff
   \   000054   7B..         MOV     R3,#(`?<Constant "Motor max Speed">` >> 8) & 0xff
   \   000056   12....       LCALL   ??HalLcdWriteString?relay
    662          #endif 
    663                     MotorSpeed = 50;
   \   000059   90....       MOV     DPTR,#??MotorSpeed
   \   00005C   7432         MOV     A,#0x32
   \   00005E   F0           MOVX    @DPTR,A
    664                  }
    665                  Smart_home_Motor_cmd(MotorSpeed);
   \                     ??Smart_home_HandleKeys_7:
   \   00005F                ; Setup parameters for call to function Smart_home_Motor_cmd
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   F9           MOV     R1,A
   \   000061   12....       LCALL   ??Smart_home_Motor_cmd?relay
    666                  
    667                  break;
    668                }
    669                   
    670              }    
    671            }
    672            
    673            if ( keys & HAL_KEY_SW_3 )  //DOWN
   \                     ??Smart_home_HandleKeys_0:
   \   000064   EE           MOV     A,R6
   \   000065   A2E4         MOV     C,0xE0 /* A   */.4
   \   000067   5064         JNC     ??Smart_home_HandleKeys_8
    674            {
    675              switch(Ctrlcase)
   \   000069   90....       MOV     DPTR,#Ctrlcase
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   14           DEC     A
   \   00006E   6018         JZ      ??Smart_home_HandleKeys_9
   \   000070   14           DEC     A
   \   000071   6035         JZ      ??Smart_home_HandleKeys_10
    676              {
    677                default:    
    678                case 0:
    679                {
    680                  if(LCD_Page >= 0)       {LCD_Page--;}
   \   000073   90....       MOV     DPTR,#LCD_Page
   \   000076   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   000079   4003         JC      ??Smart_home_HandleKeys_11
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   14           DEC     A
   \   00007D   F0           MOVX    @DPTR,A
    681                  if(LCD_Page < 0)        {LCD_Page = LCD_PAGE_MAX;}
   \                     ??Smart_home_HandleKeys_11:
   \   00007E   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   000081   504A         JNC     ??Smart_home_HandleKeys_8
   \   000083   7404         MOV     A,#0x4
   \   000085   F0           MOVX    @DPTR,A
   \   000086   8045         SJMP    ??Smart_home_HandleKeys_8
    682                  break;
    683                }
    684                case 1:  
    685                {
    686                  uint8 switch2;
    687                  if(Relay2_on == 0)  {Relay2_on = 1 ; switch2 = 0x20;}
   \                     ??Smart_home_HandleKeys_9:
   \   000088   90....       MOV     DPTR,#??Relay2_on
   \   00008B   E0           MOVX    A,@DPTR
   \   00008C   7007         JNZ     ??Smart_home_HandleKeys_12
   \   00008E   7401         MOV     A,#0x1
   \   000090   F0           MOVX    @DPTR,A
   \   000091   7920         MOV     R1,#0x20
   \   000093   800E         SJMP    ??Smart_home_HandleKeys_13
    688                  else if(Relay2_on == 1)  {Relay2_on = 0; switch2 = 0x10;}
   \                     ??Smart_home_HandleKeys_12:
   \   000095   6401         XRL     A,#0x1
   \   000097   7006         JNZ     ??Smart_home_HandleKeys_14
   \   000099   E4           CLR     A
   \   00009A   F0           MOVX    @DPTR,A
   \   00009B   7910         MOV     R1,#0x10
   \   00009D   8004         SJMP    ??Smart_home_HandleKeys_13
    689                  else  {Relay2_on = 0; switch2 = 0x01;}       
   \                     ??Smart_home_HandleKeys_14:
   \   00009F   E4           CLR     A
   \   0000A0   F0           MOVX    @DPTR,A
   \   0000A1   7901         MOV     R1,#0x1
    690                  Smart_home_Relay_Ctl(switch2);       
   \                     ??Smart_home_HandleKeys_13:
   \   0000A3                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   0000A3   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    691                  break;
   \   0000A6   8025         SJMP    ??Smart_home_HandleKeys_8
    692                } 
    693                case 2:
    694                {
    695                  /*
    696                  #define  HAL_MOTOR_STOP            0x01
    697                  #define  HAL_MOTOR_FORWORD         0x02
    698                  #define  HAL_MOTOR_BACKWORD        0x03*/
    699                  if(MotorSpeed > -50)     {MotorSpeed -= 10;}
   \                     ??Smart_home_HandleKeys_10:
   \   0000A8   90....       MOV     DPTR,#??MotorSpeed
   \   0000AB   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   0000AE   4004         JC      ??Smart_home_HandleKeys_15
   \   0000B0   E0           MOVX    A,@DPTR
   \   0000B1   24F6         ADD     A,#-0xa
   \   0000B3   F0           MOVX    @DPTR,A
    700                  if(MotorSpeed <= -50)     
   \                     ??Smart_home_HandleKeys_15:
   \   0000B4   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   0000B7   500F         JNC     ??Smart_home_HandleKeys_16
    701                  {
    702          #if defined ( LCD_SUPPORTED )
    703                     HalLcdWriteString( "Motor min Speed", HAL_LCD_LINE_4 );
   \   0000B9                ; Setup parameters for call to function HalLcdWriteString
   \   0000B9   7904         MOV     R1,#0x4
   \   0000BB   7A..         MOV     R2,#`?<Constant "Motor min Speed">` & 0xff
   \   0000BD   7B..         MOV     R3,#(`?<Constant "Motor min Speed">` >> 8) & 0xff
   \   0000BF   12....       LCALL   ??HalLcdWriteString?relay
    704          #endif 
    705                     MotorSpeed = -80;
   \   0000C2   90....       MOV     DPTR,#??MotorSpeed
   \   0000C5   74B0         MOV     A,#-0x50
   \   0000C7   F0           MOVX    @DPTR,A
    706                  }
    707                  Smart_home_Motor_cmd(MotorSpeed);
   \                     ??Smart_home_HandleKeys_16:
   \   0000C8                ; Setup parameters for call to function Smart_home_Motor_cmd
   \   0000C8   E0           MOVX    A,@DPTR
   \   0000C9   F9           MOV     R1,A
   \   0000CA   12....       LCALL   ??Smart_home_Motor_cmd?relay
    708                  break; 
    709                }
    710              }
    711            }
    712            
    713            if ( keys & HAL_KEY_SW_2 )  //RIGHT  
   \                     ??Smart_home_HandleKeys_8:
   \   0000CD   EE           MOV     A,R6
   \   0000CE   A2E1         MOV     C,0xE0 /* A   */.1
   \   0000D0   5012         JNC     ??Smart_home_HandleKeys_17
    714            /*3.22 这里在调试时出现问题，具体问题为 点击up时会出现屏幕变为禁止组网
    715              控制方面变为控制电机，问题在于汇编中的key值会出现  keys & HAL_KEY_SW_2 = 2
    716              的情况，暂时禁止，需要等待研究  还有key_7*/
    717            {
    718               if(Ctrlcase < 3)   { Ctrlcase++;}
   \   0000D2   90....       MOV     DPTR,#Ctrlcase
   \   0000D5   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   0000D8   5003         JNC     ??Smart_home_HandleKeys_18
   \   0000DA   E0           MOVX    A,@DPTR
   \   0000DB   04           INC     A
   \   0000DC   F0           MOVX    @DPTR,A
    719               if(Ctrlcase > 2)   { Ctrlcase=0;}
   \                     ??Smart_home_HandleKeys_18:
   \   0000DD   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   0000E0   4002         JC      ??Smart_home_HandleKeys_17
   \   0000E2   E4           CLR     A
   \   0000E3   F0           MOVX    @DPTR,A
    720               //Smart_home_Key_add(Ctrlcase);
    721            }
    722            
    723            if ( keys & HAL_KEY_SW_4 )  //LEFT
   \                     ??Smart_home_HandleKeys_17:
   \   0000E4   EE           MOV     A,R6
   \   0000E5   A2E3         MOV     C,0xE0 /* A   */.3
   \   0000E7   5013         JNC     ??Smart_home_HandleKeys_19
    724            {
    725               if(Ctrlcase > -1)   { Ctrlcase--;}
   \   0000E9   90....       MOV     DPTR,#Ctrlcase
   \   0000EC   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   0000EF   4003         JC      ??Smart_home_HandleKeys_20
   \   0000F1   E0           MOVX    A,@DPTR
   \   0000F2   14           DEC     A
   \   0000F3   F0           MOVX    @DPTR,A
    726               if(Ctrlcase < 0)    { Ctrlcase=2;}
   \                     ??Smart_home_HandleKeys_20:
   \   0000F4   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   0000F7   5003         JNC     ??Smart_home_HandleKeys_19
   \   0000F9   7402         MOV     A,#0x2
   \   0000FB   F0           MOVX    @DPTR,A
    727               //Smart_home_Key_add(Ctrlcase);    
    728            }
    729            
    730            if ( keys & HAL_KEY_SW_5 )  //OK
    731            {
    732          
    733            }
    734            
    735            if ( keys & HAL_KEY_SW_7 )  //CENCEL
   \                     ??Smart_home_HandleKeys_19:
   \   0000FC   EE           MOV     A,R6
   \   0000FD   A2E6         MOV     C,0xE0 /* A   */.6
   \   0000FF   502C         JNC     ??Smart_home_HandleKeys_21
    736            {
    737               if(NetWorkAllow == 0)
   \   000101   90....       MOV     DPTR,#??NetWorkAllow
   \   000104   E0           MOVX    A,@DPTR
   \   000105   7017         JNZ     ??Smart_home_HandleKeys_22
    738               {
    739                 NetWorkAllow = 1;
   \   000107   7401         MOV     A,#0x1
   \   000109   F0           MOVX    @DPTR,A
    740                 NLME_PermitJoiningRequest(0xFF); // 组网，允许随时加入
   \   00010A                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   00010A   79FF         MOV     R1,#-0x1
   \   00010C   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    741                 HalLedSet(HAL_LED_1, HAL_LED_MODE_ON);
   \   00010F                ; Setup parameters for call to function HalLedSet
   \   00010F   7A01         MOV     R2,#0x1
   \   000111   7901         MOV     R1,#0x1
   \   000113   12....       LCALL   ??HalLedSet?relay
    742          #if defined ( LCD_SUPPORTED )
    743                 HalLcdWriteString( "Allow networking", HAL_LCD_LINE_4 );
   \   000116                ; Setup parameters for call to function HalLcdWriteString
   \   000116   7904         MOV     R1,#0x4
   \   000118   7A..         MOV     R2,#`?<Constant "Allow networking">` & 0xff
   \   00011A   7B..         MOV     R3,#(`?<Constant "Allow networking">` >> 8) & 0xff
   \   00011C   800C         SJMP    ??Smart_home_HandleKeys_23
    744          #endif
    745               }
    746               else
    747               {
    748                 NetWorkAllow = 0;
   \                     ??Smart_home_HandleKeys_22:
   \   00011E   E4           CLR     A
   \   00011F   F0           MOVX    @DPTR,A
    749                 NLME_PermitJoiningRequest(0x00); // 不允许组网
   \   000120                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   000120   F9           MOV     R1,A
   \   000121   12....       LCALL   ?Subroutine21 & 0xFFFF
    750                 HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);  
    751          #if defined ( LCD_SUPPORTED )
    752                 HalLcdWriteString( "Ban   networking", HAL_LCD_LINE_4 );
   \                     ??CrossCallReturnLabel_46:
   \   000124                ; Setup parameters for call to function HalLcdWriteString
   \   000124   7904         MOV     R1,#0x4
   \   000126   7A..         MOV     R2,#`?<Constant "Ban   networking">` & 0xff
   \   000128   7B..         MOV     R3,#(`?<Constant "Ban   networking">` >> 8) & 0xff
   \                     ??Smart_home_HandleKeys_23:
   \   00012A   12....       LCALL   ??HalLcdWriteString?relay
    753          #endif        
    754               }
    755            }
    756          }
   \                     ??Smart_home_HandleKeys_21:
   \   00012D   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9403         SUBB    A,#0x3
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   94CF         SUBB    A,#-0x31
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9432         SUBB    A,#0x32
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9404         SUBB    A,#0x4
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9400         SUBB    A,#0x0
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??MotorSpeed:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??NetWorkAllow:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay1_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay2_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    757          
    758          /*********************************************************************
    759           * @fn      Smart_home_ProcessMSGCmd
    760           *
    761           * @brief   Data message processor callback. This function processes
    762           *          any incoming data - probably from other devices. Based
    763           *          on the cluster ID, perform the intended action.
    764           *
    765           * @param   pkt - pointer to the incoming message packet
    766           *
    767           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    768           *          FALSE otherwise.
    769           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003                REQUIRE ??Subroutine32_0
   \   000003                ; // Fall through to label ??Subroutine32_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    770          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
   \                     Smart_home_ProcessMSGCmd:
    771          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 35
   \   000005   74DD         MOV     A,#-0x23
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    772            //HalUARTWrite(HAL_UART_PORT_0, "9",   1);
    773            switch ( pkt->clusterId )
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   8B83         MOV     DPH,R3
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 1,A
   \   000019   78..         MOV     R0,#?V0 + 0
   \   00001B   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for Smart_home_ProcessMSGCmd>_0`:
   \   00001E   0100         DW        1
   \   000020   07           DB        7
   \   000021   ....         DW        ??Smart_home_ProcessMSGCmd_0
   \   000023   ....         DW        ??Smart_home_ProcessMSGCmd_1
   \   000025   ....         DW        ??Smart_home_ProcessMSGCmd_2
   \   000027   ....         DW        ??Smart_home_ProcessMSGCmd_3
   \   000029   ....         DW        ??Smart_home_ProcessMSGCmd_4
   \   00002B   ....         DW        ??Smart_home_ProcessMSGCmd_5
   \   00002D   ....         DW        ??Smart_home_ProcessMSGCmd_6
   \   00002F   ....         DW        ??Smart_home_ProcessMSGCmd_7
   \   000031   ....         DW        ??Smart_home_ProcessMSGCmd_8
    774            {
    775            /***********************************************************************
    776              目前总共8种case
    777             #define Smart_home_CLUSTERID_HUMITMSG            1  // 温湿度
    778             #define Smart_home_CLUSTERID_TEMPLIGHTMSG        2  // 温度光照
    779             #define Smart_home_CLUSTERID_RFIDMSG             3  // 射频卡
    780             #define Smart_home_CLUSTERID_GASFLAMEMSG         4  // 烟雾火焰
    781             #define Smart_home_CLUSTERID_INFRAREDMSG         5  // 人体红外
    782             #define Smart_home_CLUSTERID_SOUNDVBMSG          6  // 声音振动
    783             #define Smart_home_CLUSTERID_MOTORSTATUSMSG      7  // 直流电机状态信息
    784             #define Smart_home_CLUSTERID_RELAYSTATUSMSG      8  // 继电器状态信息
    785              
    786             设备描述
    787             typedef struct DeviceInfo
    788             {
    789               uint8 deviceID;
    790               uint8 deviceStatus;
    791               uint8 data[5];
    792             } DeviceInfo; 
    793             ************************************************************************/ 
    794              //3.14 消息处理模块，共8个，行为类似 
    795              //3.21 修改为指针方法（DeviceList相关）
    796              case Smart_home_CLUSTERID_HUMITMSG:         // 温湿度
    797                uint8 sendbufHumit[4] = {0};
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessMSGCmd_1:
   \   000033   7407         MOV     A,#0x7
   \   000035   12....       LCALL   ?XSTACK_DISP0_8
   \   000038   AC82         MOV     R4,DPL
   \   00003A   AD83         MOV     R5,DPH
   \   00003C   7583..       MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
   \   00003F   7582..       MOV     DPL,#`?<Constant {0}>` & 0xff
   \   000042   7404         MOV     A,#0x4
   \   000044   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    798                sendbufHumit[0] = '1';
   \   000047   7407         MOV     A,#0x7
   \   000049   12....       LCALL   ?XSTACK_DISP0_8
   \   00004C   7431         MOV     A,#0x31
   \   00004E   F0           MOVX    @DPTR,A
    799                
    800                DeviceList[Humit].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \   00004F   90....       MOV     DPTR,#DeviceList + 8
   \   000052   12....       LCALL   ?Subroutine2 & 0xFFFF
    801                sendbufHumit[1] = DeviceList[Humit].data[0] = pkt->cmd.Data[4]; // 湿度 
   \                     ??CrossCallReturnLabel_0:
   \   000055   90....       MOV     DPTR,#DeviceList + 9
   \   000058   F0           MOVX    @DPTR,A
   \   000059   C0E0         PUSH    A
   \   00005B   7408         MOV     A,#0x8
   \   00005D   12....       LCALL   ?XSTACK_DISP0_8
   \   000060   D0E0         POP     A
   \   000062   12....       LCALL   ?Subroutine6 & 0xFFFF
    802                sendbufHumit[2] = DeviceList[Humit].data[1] = pkt->cmd.Data[5]; // 温度
   \                     ??CrossCallReturnLabel_12:
   \   000065   90....       MOV     DPTR,#DeviceList + 10
   \   000068   F0           MOVX    @DPTR,A
   \   000069   C0E0         PUSH    A
   \   00006B   7409         MOV     A,#0x9
   \   00006D   12....       LCALL   ?XSTACK_DISP0_8
   \   000070   D0E0         POP     A
   \   000072   F0           MOVX    @DPTR,A
    803          
    804                sendbufHumit[3] = '\n';
   \   000073   740A         MOV     A,#0xa
   \   000075   12....       LCALL   ?XSTACK_DISP0_8
   \   000078   740A         MOV     A,#0xa
   \   00007A   F0           MOVX    @DPTR,A
    805                
    806          #if (HAL_UART == TRUE)
    807                HalUARTWrite(HAL_UART_PORT_0, sendbufHumit,   strlen(sendbufHumit));
                                                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
   \   00007B                ; Setup parameters for call to function HalUARTWrite
   \   00007B                ; Setup parameters for call to function strlen
   \   00007B   7407         MOV     A,#0x7
   \   00007D   12....       LCALL   ?XSTACK_DISP0_8
   \   000080   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_68:
   \   000083   7407         MOV     A,#0x7
   \   000085   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    808          #endif
    809                break;
    810                
    811              case Smart_home_CLUSTERID_TEMPLIGHTMSG:     // 温度光照
    812                uint8 sendbufTempLight[6] = {0};
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessMSGCmd_2:
   \   000088   741D         MOV     A,#0x1d
   \   00008A   12....       LCALL   ?XSTACK_DISP0_8
   \   00008D   AC82         MOV     R4,DPL
   \   00008F   AD83         MOV     R5,DPH
   \   000091   7583..       MOV     DPH,#(`?<Constant {0}>_1` >> 8) & 0xff
   \   000094   7582..       MOV     DPL,#`?<Constant {0}>_1` & 0xff
   \   000097   7406         MOV     A,#0x6
   \   000099   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    813                sendbufTempLight[0] = '2';
   \   00009C   741D         MOV     A,#0x1d
   \   00009E   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A1   7432         MOV     A,#0x32
   \   0000A3   F0           MOVX    @DPTR,A
    814                
    815                DeviceList[TempLight].deviceStatus = DEVICE_ONLINE;   //收到消息设置为在线
   \   0000A4   90....       MOV     DPTR,#DeviceList + 15
   \   0000A7   12....       LCALL   ?Subroutine2 & 0xFFFF
    816                
    817                sendbufTempLight[1] = DeviceList[TempLight].data[0] = pkt->cmd.Data[4]; // 温度整数
   \                     ??CrossCallReturnLabel_1:
   \   0000AA   90....       MOV     DPTR,#DeviceList + 16
   \   0000AD   F0           MOVX    @DPTR,A
   \   0000AE   C0E0         PUSH    A
   \   0000B0   741E         MOV     A,#0x1e
   \   0000B2   12....       LCALL   ?XSTACK_DISP0_8
   \   0000B5   D0E0         POP     A
   \   0000B7   12....       LCALL   ?Subroutine7 & 0xFFFF
    818                sendbufTempLight[2] = DeviceList[TempLight].data[1] = pkt->cmd.Data[5]; // 温度小数
   \                     ??CrossCallReturnLabel_14:
   \   0000BA   90....       MOV     DPTR,#DeviceList + 17
   \   0000BD   F0           MOVX    @DPTR,A
   \   0000BE   C0E0         PUSH    A
   \   0000C0   741F         MOV     A,#0x1f
   \   0000C2   12....       LCALL   ?XSTACK_DISP0_8
   \   0000C5   D0E0         POP     A
   \   0000C7   12....       LCALL   ?Subroutine5 & 0xFFFF
    819                sendbufTempLight[3] = DeviceList[TempLight].data[2] = pkt->cmd.Data[6]; // 光照
   \                     ??CrossCallReturnLabel_10:
   \   0000CA   90....       MOV     DPTR,#DeviceList + 18
   \   0000CD   F0           MOVX    @DPTR,A
   \   0000CE   C0E0         PUSH    A
   \   0000D0   7420         MOV     A,#0x20
   \   0000D2   12....       LCALL   ?XSTACK_DISP0_8
   \   0000D5   D0E0         POP     A
   \   0000D7   12....       LCALL   ?Subroutine4 & 0xFFFF
    820                sendbufTempLight[4] = DeviceList[TempLight].data[3] = pkt->cmd.Data[7]; // 光照
   \                     ??CrossCallReturnLabel_8:
   \   0000DA   E0           MOVX    A,@DPTR
   \   0000DB   90....       MOV     DPTR,#DeviceList + 19
   \   0000DE   F0           MOVX    @DPTR,A
   \   0000DF   C0E0         PUSH    A
   \   0000E1   7421         MOV     A,#0x21
   \   0000E3   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E6   D0E0         POP     A
   \   0000E8   F0           MOVX    @DPTR,A
    821                /*
    822                sendbufTempLight[1] = '1'; // 温度整数
    823                sendbufTempLight[2] = '2'; // 温度小数
    824                sendbufTempLight[3] = '3'; // 光照
    825                sendbufTempLight[4] = '4'; // 光照
    826                */
    827                sendbufTempLight[5] = '\n';
   \   0000E9   7422         MOV     A,#0x22
   \   0000EB   12....       LCALL   ?XSTACK_DISP0_8
   \   0000EE   740A         MOV     A,#0xa
   \   0000F0   F0           MOVX    @DPTR,A
    828                
    829          #if (HAL_UART == TRUE)
    830                HalUARTWrite(HAL_UART_PORT_0, sendbufTempLight,   6);
   \   0000F1                ; Setup parameters for call to function HalUARTWrite
   \   0000F1   7C06         MOV     R4,#0x6
   \   0000F3   7D00         MOV     R5,#0x0
   \   0000F5   741D         MOV     A,#0x1d
   \   0000F7   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    831          #endif
    832                break;
    833                
    834              case Smart_home_CLUSTERID_RFIDMSG:          // 射频卡
    835                uint8 sendbufRfID[7] = {0};
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessMSGCmd_3:
   \   0000FA   7416         MOV     A,#0x16
   \   0000FC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000FF   AC82         MOV     R4,DPL
   \   000101   AD83         MOV     R5,DPH
   \   000103   7583..       MOV     DPH,#(`?<Constant {0}>_2` >> 8) & 0xff
   \   000106   7582..       MOV     DPL,#`?<Constant {0}>_2` & 0xff
   \   000109   7407         MOV     A,#0x7
   \   00010B   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    836                sendbufRfID[0] = '3';
   \   00010E   7416         MOV     A,#0x16
   \   000110   12....       LCALL   ?XSTACK_DISP0_8
   \   000113   7433         MOV     A,#0x33
   \   000115   F0           MOVX    @DPTR,A
    837                
    838                DeviceList[RfID].deviceStatus = DEVICE_ONLINE;        //收到消息设置为在线
   \   000116   90....       MOV     DPTR,#DeviceList + 22
   \   000119   12....       LCALL   ?Subroutine2 & 0xFFFF
    839                sendbufRfID[1] = DeviceList[RfID].data[0] = pkt->cmd.Data[4]; // 射频卡类型
   \                     ??CrossCallReturnLabel_2:
   \   00011C   90....       MOV     DPTR,#DeviceList + 23
   \   00011F   F0           MOVX    @DPTR,A
   \   000120   C0E0         PUSH    A
   \   000122   7417         MOV     A,#0x17
   \   000124   12....       LCALL   ?XSTACK_DISP0_8
   \   000127   D0E0         POP     A
   \   000129   12....       LCALL   ?Subroutine7 & 0xFFFF
    840                sendbufRfID[2] = DeviceList[RfID].data[1] = pkt->cmd.Data[5]; // 4个字节的ID号
   \                     ??CrossCallReturnLabel_15:
   \   00012C   90....       MOV     DPTR,#DeviceList + 24
   \   00012F   F0           MOVX    @DPTR,A
   \   000130   C0E0         PUSH    A
   \   000132   7418         MOV     A,#0x18
   \   000134   12....       LCALL   ?XSTACK_DISP0_8
   \   000137   D0E0         POP     A
   \   000139   12....       LCALL   ?Subroutine5 & 0xFFFF
    841                sendbufRfID[3] = DeviceList[RfID].data[2] = pkt->cmd.Data[6]; //
   \                     ??CrossCallReturnLabel_11:
   \   00013C   90....       MOV     DPTR,#DeviceList + 25
   \   00013F   F0           MOVX    @DPTR,A
   \   000140   C0E0         PUSH    A
   \   000142   7419         MOV     A,#0x19
   \   000144   12....       LCALL   ?XSTACK_DISP0_8
   \   000147   D0E0         POP     A
   \   000149   12....       LCALL   ?Subroutine24 & 0xFFFF
    842                sendbufRfID[4] = DeviceList[RfID].data[3] = pkt->cmd.Data[7]; //
   \                     ??CrossCallReturnLabel_49:
   \   00014C   A3           INC     DPTR
   \   00014D   E0           MOVX    A,@DPTR
   \   00014E   90....       MOV     DPTR,#DeviceList + 26
   \   000151   F0           MOVX    @DPTR,A
   \   000152   C0E0         PUSH    A
   \   000154   741A         MOV     A,#0x1a
   \   000156   12....       LCALL   ?XSTACK_DISP0_8
   \   000159   D0E0         POP     A
   \   00015B   12....       LCALL   ?Subroutine4 & 0xFFFF
    843                sendbufRfID[5] = DeviceList[RfID].data[4] = pkt->cmd.Data[8]; //  
   \                     ??CrossCallReturnLabel_9:
   \   00015E   A3           INC     DPTR
   \   00015F   E0           MOVX    A,@DPTR
   \   000160   90....       MOV     DPTR,#DeviceList + 27
   \   000163   F0           MOVX    @DPTR,A
   \   000164   C0E0         PUSH    A
   \   000166   741B         MOV     A,#0x1b
   \   000168   12....       LCALL   ?XSTACK_DISP0_8
   \   00016B   D0E0         POP     A
   \   00016D   F0           MOVX    @DPTR,A
    844                
    845                sendbufRfID[6] = '\n';
   \   00016E   741C         MOV     A,#0x1c
   \   000170   12....       LCALL   ?XSTACK_DISP0_8
   \   000173   740A         MOV     A,#0xa
   \   000175   F0           MOVX    @DPTR,A
    846                
    847          #if (HAL_UART == TRUE)
    848                HalUARTWrite(HAL_UART_PORT_0, sendbufRfID,   strlen(sendbufRfID));
                                                                           ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
   \   000176                ; Setup parameters for call to function HalUARTWrite
   \   000176                ; Setup parameters for call to function strlen
   \   000176   7416         MOV     A,#0x16
   \   000178   12....       LCALL   ?XSTACK_DISP0_8
   \   00017B   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_69:
   \   00017E   7416         MOV     A,#0x16
   \   000180   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    849          #endif
    850                break;
    851                
    852              case Smart_home_CLUSTERID_GASFLAMEMSG:      // 烟雾火焰
    853                uint8 sendbufgasFlame[3] = {0};
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessMSGCmd_4:
   \   000183   740B         MOV     A,#0xb
   \   000185   12....       LCALL   ?XSTACK_DISP0_8
   \   000188   AC82         MOV     R4,DPL
   \   00018A   AD83         MOV     R5,DPH
   \   00018C   7583..       MOV     DPH,#(`?<Constant {0}>_3` >> 8) & 0xff
   \   00018F   7582..       MOV     DPL,#`?<Constant {0}>_3` & 0xff
   \   000192   7403         MOV     A,#0x3
   \   000194   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    854                sendbufgasFlame[0] = '4';
   \   000197   740B         MOV     A,#0xb
   \   000199   12....       LCALL   ?XSTACK_DISP0_8
   \   00019C   7434         MOV     A,#0x34
   \   00019E   F0           MOVX    @DPTR,A
    855                
    856                DeviceList[gasFlame].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \   00019F   90....       MOV     DPTR,#DeviceList + 29
   \   0001A2   12....       LCALL   ?Subroutine3 & 0xFFFF
    857                sendbufgasFlame[1] = DeviceList[gasFlame].data[0] = pkt->cmd.Data[4]; // 烟雾与火焰报警信息
   \                     ??CrossCallReturnLabel_4:
   \   0001A5   90....       MOV     DPTR,#DeviceList + 30
   \   0001A8   F0           MOVX    @DPTR,A
   \   0001A9   C0E0         PUSH    A
   \   0001AB   740C         MOV     A,#0xc
   \   0001AD   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B0   D0E0         POP     A
   \   0001B2   F0           MOVX    @DPTR,A
    858          
    859                sendbufgasFlame[2] = '\n';
   \   0001B3   740D         MOV     A,#0xd
   \   0001B5   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B8   740A         MOV     A,#0xa
   \   0001BA   F0           MOVX    @DPTR,A
    860                
    861          #if (HAL_UART == TRUE)
    862                HalUARTWrite(HAL_UART_PORT_0, sendbufgasFlame,   3);
   \   0001BB                ; Setup parameters for call to function HalUARTWrite
   \   0001BB   7C03         MOV     R4,#0x3
   \   0001BD   7D00         MOV     R5,#0x0
   \   0001BF   04           INC     A
   \   0001C0   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    863          #endif
    864                break;
    865                
    866              case Smart_home_CLUSTERID_INFRAREDMSG:      // 人体红外
    867                uint8 sendbufinfrared[3] = {0};
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessMSGCmd_5:
   \   0001C3   85..82       MOV     DPL,?XSP + 0
   \   0001C6   85..83       MOV     DPH,?XSP + 1
   \   0001C9   AC82         MOV     R4,DPL
   \   0001CB   AD83         MOV     R5,DPH
   \   0001CD   7583..       MOV     DPH,#(`?<Constant {0}>_4` >> 8) & 0xff
   \   0001D0   7582..       MOV     DPL,#`?<Constant {0}>_4` & 0xff
   \   0001D3   7403         MOV     A,#0x3
   \   0001D5   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    868                sendbufinfrared[0] = '5';
   \   0001D8   85..82       MOV     DPL,?XSP + 0
   \   0001DB   85..83       MOV     DPH,?XSP + 1
   \   0001DE   7435         MOV     A,#0x35
   \   0001E0   F0           MOVX    @DPTR,A
    869                
    870                DeviceList[infrared].deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \   0001E1   90....       MOV     DPTR,#DeviceList + 36
   \   0001E4   12....       LCALL   ?Subroutine3 & 0xFFFF
    871                sendbufinfrared[1] = DeviceList[infrared].data[0] = pkt->cmd.Data[4]; // 人体红外
   \                     ??CrossCallReturnLabel_5:
   \   0001E7   90....       MOV     DPTR,#DeviceList + 37
   \   0001EA   F0           MOVX    @DPTR,A
   \   0001EB   C0E0         PUSH    A
   \   0001ED   7401         MOV     A,#0x1
   \   0001EF   12....       LCALL   ?XSTACK_DISP0_8
   \   0001F2   D0E0         POP     A
   \   0001F4   F0           MOVX    @DPTR,A
    872          
    873                sendbufinfrared[2] = '\n';
   \   0001F5   7402         MOV     A,#0x2
   \   0001F7   12....       LCALL   ?XSTACK_DISP0_8
   \   0001FA   740A         MOV     A,#0xa
   \   0001FC   12....       LCALL   ?Subroutine10 & 0xFFFF
    874                
    875          #if (HAL_UART == TRUE)
    876                HalUARTWrite(HAL_UART_PORT_0, sendbufinfrared,   strlen(sendbufinfrared));
                                                                               ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
   \                     ??CrossCallReturnLabel_19:
   \   0001FF   12....       LCALL   ??Subroutine33_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_73:
   \   000202   85..82       MOV     DPL,?XSP + 0
   \   000205   85..83       MOV     DPH,?XSP + 1
   \   000208   02....       LJMP    ??Smart_home_ProcessMSGCmd_10 & 0xFFFF
    877          #endif
    878                break;
    879          
    880              case Smart_home_CLUSTERID_SOUNDVBMSG:       // 声音振动
    881                uint8 sendbufsoundVb[4] = {0};
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessMSGCmd_6:
   \   00020B   7412         MOV     A,#0x12
   \   00020D   12....       LCALL   ?XSTACK_DISP0_8
   \   000210   AC82         MOV     R4,DPL
   \   000212   AD83         MOV     R5,DPH
   \   000214   7583..       MOV     DPH,#(`?<Constant {0}>_5` >> 8) & 0xff
   \   000217   7582..       MOV     DPL,#`?<Constant {0}>_5` & 0xff
   \   00021A   7404         MOV     A,#0x4
   \   00021C   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    882                sendbufsoundVb[0] = '6';
   \   00021F   7412         MOV     A,#0x12
   \   000221   12....       LCALL   ?XSTACK_DISP0_8
   \   000224   7436         MOV     A,#0x36
   \   000226   F0           MOVX    @DPTR,A
    883                
    884                DeviceList[soundVb].deviceStatus = DEVICE_ONLINE;     //收到消息设置为在线
   \   000227   90....       MOV     DPTR,#DeviceList + 57
   \   00022A   12....       LCALL   ?Subroutine3 & 0xFFFF
    885                sendbufsoundVb[1] = DeviceList[soundVb].data[0] = pkt->cmd.Data[4]; // 声音震动信息
   \                     ??CrossCallReturnLabel_6:
   \   00022D   90....       MOV     DPTR,#DeviceList + 58
   \   000230   F0           MOVX    @DPTR,A
   \   000231   C0E0         PUSH    A
   \   000233   7413         MOV     A,#0x13
   \   000235   12....       LCALL   ?XSTACK_DISP0_8
   \   000238   D0E0         POP     A
   \   00023A   F0           MOVX    @DPTR,A
    886                
    887                
    888                sendbufsoundVb[2] = '\n';
   \   00023B   7414         MOV     A,#0x14
   \   00023D   12....       LCALL   ?XSTACK_DISP0_8
   \   000240   740A         MOV     A,#0xa
   \   000242   F0           MOVX    @DPTR,A
    889                
    890          #if (HAL_UART == TRUE)
    891                HalUARTWrite(HAL_UART_PORT_0, sendbufsoundVb,   strlen(sendbufsoundVb));
                                                                              ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
   \   000243                ; Setup parameters for call to function HalUARTWrite
   \   000243                ; Setup parameters for call to function strlen
   \   000243   7412         MOV     A,#0x12
   \   000245   12....       LCALL   ?XSTACK_DISP0_8
   \   000248   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_70:
   \   00024B   7412         MOV     A,#0x12
   \   00024D   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    892          #endif
    893                break;
    894                
    895              case Smart_home_CLUSTERID_MOTORSTATUSMSG:   // 直流电机状态信息
    896                uint8 sendbufmotor[4] = {0};
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessMSGCmd_7:
   \   000250   7403         MOV     A,#0x3
   \   000252   12....       LCALL   ?XSTACK_DISP0_8
   \   000255   AC82         MOV     R4,DPL
   \   000257   AD83         MOV     R5,DPH
   \   000259   7583..       MOV     DPH,#(`?<Constant {0}>_6` >> 8) & 0xff
   \   00025C   7582..       MOV     DPL,#`?<Constant {0}>_6` & 0xff
   \   00025F   7404         MOV     A,#0x4
   \   000261   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    897                sendbufmotor[0] = '7';
   \   000264   7403         MOV     A,#0x3
   \   000266   12....       LCALL   ?XSTACK_DISP0_8
   \   000269   7437         MOV     A,#0x37
   \   00026B   F0           MOVX    @DPTR,A
    898                
    899                DeviceList[motor].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \   00026C   90....       MOV     DPTR,#DeviceList + 43
   \   00026F   7401         MOV     A,#0x1
   \   000271   F0           MOVX    @DPTR,A
    900                // 储存电机设备的网络地址，用于发送控制命令
    901                Motor_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   000272   90....       MOV     DPTR,#Motor_addr + 8
   \   000275   12....       LCALL   ?Subroutine8 & 0xFFFF
    902                Motor_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_16:
   \   000278   90....       MOV     DPTR,#Motor_addr
   \   00027B   E8           MOV     A,R0
   \   00027C   F0           MOVX    @DPTR,A
   \   00027D   A3           INC     DPTR
   \   00027E   E9           MOV     A,R1
   \   00027F   F0           MOVX    @DPTR,A
    903                
    904                Motor_addr.endPoint = 1;  // 目的节点的端口号
   \   000280   90....       MOV     DPTR,#Motor_addr + 9
   \   000283   12....       LCALL   ?Subroutine2 & 0xFFFF
    905                //TransmitApp_DstMotorAddr->endPoint = TRANSMITAPP_ENDPOINT;
    906               
    907                sendbufmotor[1] = DeviceList[motor].data[0] = pkt->cmd.Data[4]; // 电机转速
   \                     ??CrossCallReturnLabel_3:
   \   000286   90....       MOV     DPTR,#DeviceList + 44
   \   000289   F0           MOVX    @DPTR,A
   \   00028A   C0E0         PUSH    A
   \   00028C   7404         MOV     A,#0x4
   \   00028E   12....       LCALL   ?XSTACK_DISP0_8
   \   000291   D0E0         POP     A
   \   000293   12....       LCALL   ?Subroutine6 & 0xFFFF
    908                sendbufmotor[2] = DeviceList[motor].data[1] = pkt->cmd.Data[5]; // 电机状态
   \                     ??CrossCallReturnLabel_13:
   \   000296   90....       MOV     DPTR,#DeviceList + 45
   \   000299   F0           MOVX    @DPTR,A
   \   00029A   C0E0         PUSH    A
   \   00029C   7405         MOV     A,#0x5
   \   00029E   12....       LCALL   ?XSTACK_DISP0_8
   \   0002A1   D0E0         POP     A
   \   0002A3   F0           MOVX    @DPTR,A
    909          
    910                sendbufmotor[3] = '\n';
   \   0002A4   7406         MOV     A,#0x6
   \   0002A6   12....       LCALL   ?XSTACK_DISP0_8
   \   0002A9   740A         MOV     A,#0xa
   \   0002AB   F0           MOVX    @DPTR,A
    911                
    912          #if (HAL_UART == TRUE)
    913                HalUARTWrite(HAL_UART_PORT_0, sendbufmotor,   strlen(sendbufmotor));
                                                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"
   \   0002AC                ; Setup parameters for call to function HalUARTWrite
   \   0002AC                ; Setup parameters for call to function strlen
   \   0002AC   7403         MOV     A,#0x3
   \   0002AE   12....       LCALL   ?XSTACK_DISP0_8
   \   0002B1   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_71:
   \   0002B4   7403         MOV     A,#0x3
   \   0002B6   8056         SJMP    ??Smart_home_ProcessMSGCmd_9
    914          #endif
    915                break;
    916                
    917              case Smart_home_CLUSTERID_RELAYSTATUSMSG:   // 继电器状态信息
    918                uint8 sendbufrelay[4] = {0};
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessMSGCmd_8:
   \   0002B8   740E         MOV     A,#0xe
   \   0002BA   12....       LCALL   ?XSTACK_DISP0_8
   \   0002BD   AC82         MOV     R4,DPL
   \   0002BF   AD83         MOV     R5,DPH
   \   0002C1   7583..       MOV     DPH,#(`?<Constant {0}>_7` >> 8) & 0xff
   \   0002C4   7582..       MOV     DPL,#`?<Constant {0}>_7` & 0xff
   \   0002C7   7404         MOV     A,#0x4
   \   0002C9   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    919                sendbufrelay[0] = '8';
   \   0002CC   740E         MOV     A,#0xe
   \   0002CE   12....       LCALL   ?XSTACK_DISP0_8
   \   0002D1   7438         MOV     A,#0x38
   \   0002D3   F0           MOVX    @DPTR,A
    920                
    921                DeviceList[relay].deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线    
   \   0002D4   90....       MOV     DPTR,#DeviceList + 50
   \   0002D7   7401         MOV     A,#0x1
   \   0002D9   F0           MOVX    @DPTR,A
    922                
    923                // 储存继电器设备的网络地址，用于发送控制命令
    924                Relay_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0002DA   90....       MOV     DPTR,#Relay_addr + 8
   \   0002DD   12....       LCALL   ?Subroutine8 & 0xFFFF
    925                Relay_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;    
   \                     ??CrossCallReturnLabel_17:
   \   0002E0   90....       MOV     DPTR,#Relay_addr
   \   0002E3   E8           MOV     A,R0
   \   0002E4   F0           MOVX    @DPTR,A
   \   0002E5   A3           INC     DPTR
   \   0002E6   E9           MOV     A,R1
   \   0002E7   F0           MOVX    @DPTR,A
    926                Relay_addr.endPoint = 1; // 目的节点的端口号
   \   0002E8   90....       MOV     DPTR,#Relay_addr + 9
   \   0002EB   12....       LCALL   ?Subroutine3 & 0xFFFF
    927                sendbufrelay[1] = DeviceList[relay].data[0] = pkt->cmd.Data[4]; 
   \                     ??CrossCallReturnLabel_7:
   \   0002EE   90....       MOV     DPTR,#DeviceList + 51
   \   0002F1   F0           MOVX    @DPTR,A
   \   0002F2   C0E0         PUSH    A
   \   0002F4   740F         MOV     A,#0xf
   \   0002F6   12....       LCALL   ?XSTACK_DISP0_8
   \   0002F9   D0E0         POP     A
   \   0002FB   F0           MOVX    @DPTR,A
    928          
    929                sendbufrelay[3] = '\n';
   \   0002FC   7411         MOV     A,#0x11
   \   0002FE   12....       LCALL   ?XSTACK_DISP0_8
   \   000301   740A         MOV     A,#0xa
   \   000303   F0           MOVX    @DPTR,A
    930                
    931          #if (HAL_UART == TRUE)
    932                HalUARTWrite(HAL_UART_PORT_0, sendbufrelay,   strlen(sendbufrelay));
                                                                            ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char const *"

    switch ( pkt->clusterId )
    ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c",773  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "sendbufHumit" (declared at line 797 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_home.c")
            variable "sendbufTempLight" (declared at line 812 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_home.c")
            variable "sendbufRfID" (declared at line 835 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_home.c")
            variable "sendbufgasFlame" (declared at line 853 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_home.c")
            variable "sendbufinfrared" (declared at line 867 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_home.c")
            variable "sendbufsoundVb" (declared at line 881 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_home.c")
            variable "sendbufmotor" (declared at line 896 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_home.c")
            variable "sendbufrelay" (declared at line 918 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_home.c")

  static afAddrType_t Humit_addr;
                      ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c",221  Warning[Pe177]: 
          variable "Humit_addr" was declared but never referenced

  static afAddrType_t Light_addr;
                      ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c",222  Warning[Pe177]: 
          variable "Light_addr" was declared but never referenced

  static afAddrType_t GasF_addr;
                      ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c",223  Warning[Pe177]: 
          variable "GasF_addr" was declared but never referenced

  static afAddrType_t Sound_addr;
                      ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c",224  Warning[Pe177]: 
          variable "Sound_addr" was declared but never referenced

  static afAddrType_t Card_addr;
                      ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c",225  Warning[Pe177]: 
          variable "Card_addr" was declared but never referenced

  static afAddrType_t Infrared_addr;
                      ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home.c",226  Warning[Pe177]: 
          variable "Infrared_addr" was declared but never referenced
   \   000304                ; Setup parameters for call to function HalUARTWrite
   \   000304                ; Setup parameters for call to function strlen
   \   000304   740E         MOV     A,#0xe
   \   000306   12....       LCALL   ?XSTACK_DISP0_8
   \   000309   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_72:
   \   00030C   740E         MOV     A,#0xe
   \                     ??Smart_home_ProcessMSGCmd_9:
   \   00030E   12....       LCALL   ?XSTACK_DISP0_8
   \                     ??Smart_home_ProcessMSGCmd_10:
   \   000311   AA82         MOV     R2,DPL
   \   000313   AB83         MOV     R3,DPH
   \   000315   7900         MOV     R1,#0x0
   \   000317   12....       LCALL   ??HalUARTWrite?relay
    933          #endif
    934                break;
    935                
    936              default:
    937                break;
    938            }
    939          }
   \                     ??Smart_home_ProcessMSGCmd_0:
   \   00031A   7423         MOV     A,#0x23
   \   00031C   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004                REQUIRE ??Subroutine33_0
   \   000004                ; // Fall through to label ??Subroutine33_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine33_0:
   \   000000   12....       LCALL   ??strlen?relay
   \   000003   EA           MOV     A,R2
   \   000004   FC           MOV     R4,A
   \   000005   EB           MOV     A,R3
   \   000006   FD           MOV     R5,A
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   04           INC     A
   \   000001   F0           MOVX    @DPTR,A
   \   000002   8A82         MOV     DPL,R2
   \   000004   8B83         MOV     DPH,R3
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F9           MOV     R1,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_57:
   \   000003   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_56:
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_51:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_50:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_58:
   \   000003   12....       LCALL   ?Subroutine30 & 0xFFFF
   \                     ??CrossCallReturnLabel_62:
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine28:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   E0           MOVX    A,@DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_52:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_59:
   \   000003   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_61:
   \   000006   A3           INC     DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_53:
   \   000003   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_60:
   \   000006   E0           MOVX    A,@DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine29:
   \   000000   F8           MOV     R0,A
   \   000001   A3           INC     DPTR
   \   000002   E0           MOVX    A,@DPTR
   \   000003   F583         MOV     DPH,A
   \   000005   8882         MOV     DPL,R0
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_54:
   \   000003   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_55:
   \   000006   E0           MOVX    A,@DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine27:
   \   000000   12....       LCALL   ?Subroutine30 & 0xFFFF
   \                     ??CrossCallReturnLabel_63:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine30:
   \   000000   FA           MOV     R2,A
   \   000001   A3           INC     DPTR
   \   000002   E0           MOVX    A,@DPTR
   \   000003   F583         MOV     DPH,A
   \   000005   8A82         MOV     DPL,R2
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine26:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F9           MOV     R1,A
   \   00000B   8882         MOV     DPL,R0
   \   00000D   8983         MOV     DPH,R1
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   22           RET
    940          
    941          /*********************************************************************
    942           * @fn     Smart_home_Device_check
    943           *
    944           * @brief   设备计数器，用来检查设备在开始组网后多久在线.
    945           *          目前搜索为4次HeartBeat  (DEVICE_HEART_BEAT 3)
    946           *          3.21
    947           * @param   none
    948           *
    949           * @return  none
    950           */
    951          /*3.24 这里的检测时常有点长 改为变量外提的方式加快处理速度*/
    952          static void Smart_home_Device_check(void)
    953          {

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    954            static uint8 DeviceID;
   \                     ??DeviceID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    955            static uint8 Device_status =  0;
   \                     ??Device_status:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    956            static uint8* counttmp;
   \                     ??counttmp:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    957            for(DeviceID=1;DeviceID<Smart_home_MAX_INCLUSTERS;DeviceID++)
    958            {  
    959              Device_status = DeviceList[DeviceID].deviceStatus;
    960              counttmp = & DeviceCnt[DeviceID];
    961              if(Device_status != DEVICE_ONLINE)    //设备离线
    962              {
    963                (*counttmp)++;
    964              }
    965              if(Device_status == DEVICE_ONLINE)    //设备在线
    966              {
    967                *counttmp = 0;
    968                Device_status = 0;
    969              }
    970              if((*counttmp) > DEVICE_HEART_BEAT)
    971              {
    972                *counttmp = DEVICE_HEART_BEAT;
    973                Device_status = DEVICE_OFFLINE;
    974              }
    975              DeviceList[DeviceID].deviceStatus = Device_status;
    976            }
    977            /*温湿度缓存 温度光照缓存 RFID 信息缓存 气体火焰缓存 
    978            人体红外 电机状态 继电器状态 声音震动*/
    979          }
    980          
    981          
    982          /*********************************************************************
    983           * @fn      Smart_home_Relay_Ctl
    984           *
    985           * @brief   发送继电器控制消息
    986           *
    987           * @param   none
    988           *
    989           * @return  none
    990           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    991          static void Smart_home_Relay_Ctl(uint8 cmd)
   \                     Smart_home_Relay_Ctl:
    992          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    993            uint8 tmp;
    994            
    995            // 只有设备在线时, 方发送控制命令
    996            if (DeviceList[relay].deviceStatus != DEVICE_OFFLINE)
   \   000007   90....       MOV     DPTR,#DeviceList + 50
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6402         XRL     A,#0x2
   \   00000D   6077         JZ      ??Smart_home_Relay_Ctl_0
    997            {
    998              // put the sequence number in the message
    999              tmp = HI_UINT8( RelayTransID );
   \   00000F   90....       MOV     DPTR,#RelayTransID
   \   000012   E0           MOVX    A,@DPTR
   \   000013   C4           SWAP    A
   \   000014   540F         ANL     A,#0xf
   \   000016   FA           MOV     R2,A
   1000              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000017   C3           CLR     C
   \   000018   940A         SUBB    A,#0xa
   \   00001A   5004         JNC     ??Smart_home_Relay_Ctl_1
   \   00001C   7830         MOV     R0,#0x30
   \   00001E   8002         SJMP    ??Smart_home_Relay_Ctl_2
   \                     ??Smart_home_Relay_Ctl_1:
   \   000020   7837         MOV     R0,#0x37
   1001              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_Relay_Ctl_2:
   \   000022   E8           MOV     A,R0
   \   000023   2A           ADD     A,R2
   \   000024   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000027   F0           MOVX    @DPTR,A
   1002              tmp = LO_UINT8( RelayTransID );
   \   000028   90....       MOV     DPTR,#RelayTransID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   540F         ANL     A,#0xf
   \   00002E   FA           MOV     R2,A
   1003              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   00002F   C3           CLR     C
   \   000030   940A         SUBB    A,#0xa
   \   000032   5004         JNC     ??Smart_home_Relay_Ctl_3
   \   000034   7830         MOV     R0,#0x30
   \   000036   8002         SJMP    ??Smart_home_Relay_Ctl_4
   \                     ??Smart_home_Relay_Ctl_3:
   \   000038   7837         MOV     R0,#0x37
   1004              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_Relay_Ctl_4:
   \   00003A   E8           MOV     A,R0
   \   00003B   2A           ADD     A,R2
   \   00003C   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   00003F   F0           MOVX    @DPTR,A
   1005              
   1006              // 发送给继电器的控制命令 
   1007              Coordinator_Msg[4] = cmd;
   \   000040   EE           MOV     A,R6
   \   000041   A3           INC     DPTR
   \   000042   F0           MOVX    @DPTR,A
   1008              /********************************************
   1009              *   屏幕显示部分*
   1010          #if defined ( LCD_SUPPORTED )
   1011              if(cmd == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   1012              if(cmd == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   1013              if(cmd == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   1014              if(cmd == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}
   1015          #endif     
   1016              ********************************************/
   1017              tmp = AF_DataRequest( &Relay_addr,                         
   1018                                    (endPointDesc_t *)&Smart_home_epDesc,                  
   1019                                     Smart_home_CLUSTERID_RELAYCTRL,
   1020                                     RELAYSTATUSMSG_LEN,                 
   1021                                     Coordinator_Msg,                    
   1022                                    &RelayTransID,                       
   1023                                     AF_DISCV_ROUTE,                     
   1024                                     AF_DEFAULT_RADIUS );
   \   000043                ; Setup parameters for call to function AF_DataRequest
   \   000043   75..1E       MOV     ?V0 + 0,#0x1e
   \   000046   78..         MOV     R0,#?V0 + 0
   \   000048   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004B   75....       MOV     ?V0 + 0,#RelayTransID & 0xff
   \   00004E   75....       MOV     ?V0 + 1,#(RelayTransID >> 8) & 0xff
   \   000051   78..         MOV     R0,#?V0 + 0
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000056   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000059   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   00005C   78..         MOV     R0,#?V0 + 0
   \   00005E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000061   75..05       MOV     ?V0 + 0,#0x5
   \   000064   75..00       MOV     ?V0 + 1,#0x0
   \   000067   78..         MOV     R0,#?V0 + 0
   \   000069   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006C   75..0A       MOV     ?V0 + 0,#0xa
   \   00006F   78..         MOV     R0,#?V0 + 0
   \   000071   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000074   7920         MOV     R1,#0x20
   \   000076   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   000078   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   00007A   7A..         MOV     R2,#Relay_addr & 0xff
   \   00007C   7B..         MOV     R3,#(Relay_addr >> 8) & 0xff
   \   00007E   12....       LCALL   ??AF_DataRequest?relay
   \   000081   7409         MOV     A,#0x9
   \   000083   12....       LCALL   ?DEALLOC_XSTACK8
   1025            } 
   1026          }
   \                     ??Smart_home_Relay_Ctl_0:
   \   000086   02....       LJMP    ??Subroutine32_0 & 0xFFFF
   1027          
   1028          /*********************************************************************
   1029           * @fn      Smart_home_Motor_Ctl
   1030           *
   1031           * @brief   发送电机控制消息
   1032           *
   1033           * @param   none
   1034           *
   1035           * @return  none
   1036           */
   1037          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed)
   1038          {
   1039            uint8 tmp;
   1040            
   1041            // 只有设备在线时, 方发送控制命令
   1042            if (DeviceList[motor].deviceStatus != DEVICE_OFFLINE)
   1043            {
   1044              // put the sequence number in the message
   1045              tmp = HI_UINT8( MotorTransID );
   1046              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   1047              Coordinator_Msg[2] = tmp;
   1048              tmp = LO_UINT8( MotorTransID );
   1049              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   1050              Coordinator_Msg[3] = tmp;
   1051              
   1052              // 发送给电机的控制命令 
   1053              Coordinator_Msg[4] = speed;
   1054              Coordinator_Msg[5] = cmd;
   1055              
   1056              tmp = AF_DataRequest( &Motor_addr,                         
   1057                                    (endPointDesc_t *)&Smart_home_epDesc,                  
   1058                                     Smart_home_CLUSTERID_MOTORCTRL,
   1059                                     MOTORSTATUSMSG_LEN,                 
   1060                                     Coordinator_Msg,                    
   1061                                    &MotorTransID,                       
   1062                                     AF_DISCV_ROUTE,                     
   1063                                     AF_DEFAULT_RADIUS );
   1064            }   
   1065          }
   1066          
   1067          
   1068          /*********************************************************************
   1069           * @fn      Smart_home_Display
   1070           *
   1071           * @brief   屏幕回显函数，定义了内容如何显示.
   1072           *
   1073           * @param   port - UART port.
   1074           * @param   event - the UART port event flag.
   1075           *
   1076           * @return  none
   1077           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1078          static void Smart_home_Display(void)
   \                     Smart_home_Display:
   1079          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 14
   \   000005   74F2         MOV     A,#-0xe
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   1080          #if defined LCD_SUPPORTED
   1081            switch(Ctrlcase)
   \   00000A   90....       MOV     DPTR,#Ctrlcase
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   14           DEC     A
   \   00000F   7003         JNZ     $+5
   \   000011   02....       LJMP    ??Smart_home_Display_0 & 0xFFFF
   \   000014   14           DEC     A
   \   000015   7003         JNZ     $+5
   \   000017   02....       LJMP    ??Smart_home_Display_1 & 0xFFFF
   1082            {
   1083              default:    
   1084              case 0:
   1085                HalLcdWriteString( "      Menu      ", HAL_LCD_LINE_1 );
   \   00001A                ; Setup parameters for call to function HalLcdWriteString
   \   00001A   7901         MOV     R1,#0x1
   \   00001C   7A..         MOV     R2,#`?<Constant "      Menu      ">` & 0xff
   \   00001E   7B..         MOV     R3,#(`?<Constant "      Menu      ">` >> 8) & 0xff
   \   000020   12....       LCALL   ?Subroutine11 & 0xFFFF
   1086                //HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
   1087                //清除屏幕显示
   1088                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1089                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1090                
   1091                switch(LCD_Page)
   \                     ??CrossCallReturnLabel_20:
   \   000023   90....       MOV     DPTR,#LCD_Page
   \   000026   E0           MOVX    A,@DPTR
   \   000027   14           DEC     A
   \   000028   7003         JNZ     $+5
   \   00002A   02....       LJMP    ??Smart_home_Display_2 & 0xFFFF
   \   00002D   14           DEC     A
   \   00002E   7003         JNZ     $+5
   \   000030   02....       LJMP    ??Smart_home_Display_3 & 0xFFFF
   \   000033   14           DEC     A
   \   000034   7003         JNZ     $+5
   \   000036   02....       LJMP    ??Smart_home_Display_4 & 0xFFFF
   1092                {
   1093                  default:
   1094                  case 0:
   1095                  {
   1096                    static uint16 humit=0x14;
   1097                    static uint16 temper=0x14;
   1098                    static uint16 SoundVb; 
   1099                    
   1100                    
   1101                    DeviceInfo Devhum = DeviceList[Humit];
   \   000039   85..82       MOV     DPL,?XSP + 0
   \   00003C   85..83       MOV     DPH,?XSP + 1
   \   00003F   AC82         MOV     R4,DPL
   \   000041   AD83         MOV     R5,DPH
   \   000043   7583..       MOV     DPH,#((DeviceList + 7) >> 8) & 0xff
   \   000046   7582..       MOV     DPL,#(DeviceList + 7) & 0xff
   \   000049   7407         MOV     A,#0x7
   \   00004B   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   1102                    DeviceInfo DevSound = DeviceList[soundVb];
   \   00004E   7407         MOV     A,#0x7
   \   000050   12....       LCALL   ?XSTACK_DISP0_8
   \   000053   AC82         MOV     R4,DPL
   \   000055   AD83         MOV     R5,DPH
   \   000057   7583..       MOV     DPH,#((DeviceList + 56) >> 8) & 0xff
   \   00005A   7582..       MOV     DPL,#(DeviceList + 56) & 0xff
   \   00005D   7407         MOV     A,#0x7
   \   00005F   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   1103                    //第一页第二行显示温度
   1104                    //      第三行显示光照
   1105                    if(Devhum.deviceStatus == DEVICE_ONLINE)
   \   000062   04           INC     A
   \   000063   12....       LCALL   ?XSTACK_DISP0_8
   \   000066   E0           MOVX    A,@DPTR
   \   000067   6401         XRL     A,#0x1
   \   000069   7018         JNZ     ??CrossCallReturnLabel_77
   1106                    {
   1107                        humit = (uint16)Devhum.data[0];
   \   00006B   7402         MOV     A,#0x2
   \   00006D   12....       LCALL   ?XSTACK_DISP0_8
   \   000070   E0           MOVX    A,@DPTR
   \   000071   90....       MOV     DPTR,#??humit
   \   000074   12....       LCALL   ??Subroutine34_0 & 0xFFFF
   1108                        temper = (uint16)Devhum.data[1];          
   \                     ??CrossCallReturnLabel_76:
   \   000077   7403         MOV     A,#0x3
   \   000079   12....       LCALL   ?XSTACK_DISP0_8
   \   00007C   E0           MOVX    A,@DPTR
   \   00007D   90....       MOV     DPTR,#??temper
   \   000080   12....       LCALL   ??Subroutine34_0 & 0xFFFF
   1109                    }
   1110          
   1111                    SoundVb = (uint16)DevSound.data[0];
   \                     ??CrossCallReturnLabel_77:
   \   000083   7409         MOV     A,#0x9
   \   000085   12....       LCALL   ?XSTACK_DISP0_8
   \   000088   E0           MOVX    A,@DPTR
   \   000089   90....       MOV     DPTR,#??SoundVb
   \   00008C   12....       LCALL   ??Subroutine34_0 & 0xFFFF
   1112          
   1113                    HalLcdWriteStringValueValue( "Hum:", humit, 10, "% T_1:", temper, 10, HAL_LCD_LINE_2 );
   \                     ??CrossCallReturnLabel_78:
   \   00008F                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   00008F   75..02       MOV     ?V0 + 0,#0x2
   \   000092   78..         MOV     R0,#?V0 + 0
   \   000094   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000097   75..0A       MOV     ?V0 + 0,#0xa
   \   00009A   78..         MOV     R0,#?V0 + 0
   \   00009C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00009F   90....       MOV     DPTR,#??temper
   \   0000A2   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0000A5   75....       MOV     ?V0 + 0,#`?<Constant "% T_1:">` & 0xff
   \   0000A8   75....       MOV     ?V0 + 1,#(`?<Constant "% T_1:">` >> 8) & 0xff
   \   0000AB   78..         MOV     R0,#?V0 + 0
   \   0000AD   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000B0   790A         MOV     R1,#0xa
   \   0000B2   90....       MOV     DPTR,#??humit
   \   0000B5   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   0000B8   7A..         MOV     R2,#`?<Constant "Hum:">` & 0xff
   \   0000BA   7B..         MOV     R3,#(`?<Constant "Hum:">` >> 8) & 0xff
   \   0000BC   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   0000BF   7406         MOV     A,#0x6
   \   0000C1   12....       LCALL   ?DEALLOC_XSTACK8
   1114                    
   1115                    if(SoundVb & 0x01 == 0x01) { HalLcdWriteString( "Sound: Voice", HAL_LCD_LINE_3 ); }
   \   0000C4   90....       MOV     DPTR,#??SoundVb
   \   0000C7   E0           MOVX    A,@DPTR
   \   0000C8   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000CA   7903         MOV     R1,#0x3
   \   0000CC   5006         JNC     ??Smart_home_Display_5
   \   0000CE                ; Setup parameters for call to function HalLcdWriteString
   \   0000CE   7A..         MOV     R2,#`?<Constant "Sound: Voice">` & 0xff
   \   0000D0   7B..         MOV     R3,#(`?<Constant "Sound: Voice">` >> 8) & 0xff
   \   0000D2   8004         SJMP    ??Smart_home_Display_6
   1116                    else if(SoundVb & 0x02 == 0x02) { HalLcdWriteString( "Sound: Vibration", HAL_LCD_LINE_3 ); }
   1117                    else if(SoundVb & 0x03 == 0x03) { HalLcdWriteString( "Sound: All", HAL_LCD_LINE_3 ); }
   1118                    else {HalLcdWriteString( "Sound: None", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_5:
   \   0000D4                ; Setup parameters for call to function HalLcdWriteString
   \   0000D4   7A..         MOV     R2,#`?<Constant "Sound: None">` & 0xff
   \   0000D6   7B..         MOV     R3,#(`?<Constant "Sound: None">` >> 8) & 0xff
   \                     ??Smart_home_Display_6:
   \   0000D8   12....       LCALL   ??HalLcdWriteString?relay
   1119                    
   1120                    //HalLcdWriteStringValue( "Sound:", SoundVb, 16, HAL_LCD_LINE_3 );
   1121                    
   1122                    
   1123                    //显示最下面的百分比条
   1124                    static uint8 percent;
   1125                    percent = (1 * 100) / LCD_PAGE_MAX;
   \   0000DB   90....       MOV     DPTR,#??percent
   \   0000DE   7419         MOV     A,#0x19
   \                     ??Smart_home_Display_7:
   \   0000E0   F0           MOVX    @DPTR,A
   1126                    HalLcdDisplayPercentBar("",percent);
   \   0000E1                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   0000E1   F9           MOV     R1,A
   \   0000E2   7A..         MOV     R2,#`?<Constant "">` & 0xff
   \   0000E4   7B..         MOV     R3,#(`?<Constant "">` >> 8) & 0xff
   \   0000E6   12....       LCALL   ??HalLcdDisplayPercentBar?relay
   1127                    break;
   \   0000E9   02....       LJMP    ??Smart_home_Display_8 & 0xFFFF
   1128                  }
   1129                  case 1:
   1130                  {
   1131                    static uint16 Light;
   1132                    static uint8 lightmp;
   1133                    static uint16 integer;
   1134                    static uint16 decimals;
   1135                    DeviceInfo Devtmp = DeviceList[TempLight];
   \                     ??Smart_home_Display_2:
   \   0000EC   85..82       MOV     DPL,?XSP + 0
   \   0000EF   85..83       MOV     DPH,?XSP + 1
   \   0000F2   AC82         MOV     R4,DPL
   \   0000F4   AD83         MOV     R5,DPH
   \   0000F6   7583..       MOV     DPH,#((DeviceList + 14) >> 8) & 0xff
   \   0000F9   7582..       MOV     DPL,#(DeviceList + 14) & 0xff
   \   0000FC   7407         MOV     A,#0x7
   \   0000FE   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   1136                    //第一页第二行显示温度
   1137                    //      第三行显示光照
   1138                    integer = (uint16)Devtmp.data[0];
   \   000101   7402         MOV     A,#0x2
   \   000103   12....       LCALL   ?XSTACK_DISP0_8
   \   000106   E0           MOVX    A,@DPTR
   \   000107   90....       MOV     DPTR,#??integer
   \   00010A   12....       LCALL   ??Subroutine34_0 & 0xFFFF
   1139                    decimals = (uint16)Devtmp.data[1];
   \                     ??CrossCallReturnLabel_79:
   \   00010D   7403         MOV     A,#0x3
   \   00010F   12....       LCALL   ?XSTACK_DISP0_8
   \   000112   E0           MOVX    A,@DPTR
   \   000113   90....       MOV     DPTR,#??decimals
   \   000116   12....       LCALL   ??Subroutine34_0 & 0xFFFF
   1140                    lightmp = Devtmp.data[3];
   \                     ??CrossCallReturnLabel_80:
   \   000119   7405         MOV     A,#0x5
   \   00011B   12....       LCALL   ?XSTACK_DISP0_8
   \   00011E   E0           MOVX    A,@DPTR
   \   00011F   90....       MOV     DPTR,#??lightmp
   \   000122   F0           MOVX    @DPTR,A
   1141                    Light = (uint16)Devtmp.data[4];
   \   000123   7406         MOV     A,#0x6
   \   000125   12....       LCALL   ?XSTACK_DISP0_8
   \   000128   E0           MOVX    A,@DPTR
   \   000129   90....       MOV     DPTR,#??Light
   \   00012C   12....       LCALL   ??Subroutine34_0 & 0xFFFF
   1142                    memcpy(&Light,&lightmp,sizeof(lightmp));
   \                     ??CrossCallReturnLabel_81:
   \   00012F                ; Setup parameters for call to function memcpy
   \   00012F   75..01       MOV     ?V0 + 0,#0x1
   \   000132   F5..         MOV     ?V0 + 1,A
   \   000134   78..         MOV     R0,#?V0 + 0
   \   000136   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000139   7C..         MOV     R4,#??lightmp & 0xff
   \   00013B   7D..         MOV     R5,#(??lightmp >> 8) & 0xff
   \   00013D   7A..         MOV     R2,#??Light & 0xff
   \   00013F   7B..         MOV     R3,#(??Light >> 8) & 0xff
   \   000141   12....       LCALL   ??memcpy?relay
   \   000144   7402         MOV     A,#0x2
   \   000146   12....       LCALL   ?DEALLOC_XSTACK8
   1143                    
   1144                    HalLcdWriteStringValueValue( "Temper_2:", integer, 10, ".", decimals, 10, HAL_LCD_LINE_2 );
   \   000149                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   000149   75..02       MOV     ?V0 + 0,#0x2
   \   00014C   78..         MOV     R0,#?V0 + 0
   \   00014E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000151   75..0A       MOV     ?V0 + 0,#0xa
   \   000154   78..         MOV     R0,#?V0 + 0
   \   000156   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000159   90....       MOV     DPTR,#??decimals
   \   00015C   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   00015F   75....       MOV     ?V0 + 0,#`?<Constant ".">` & 0xff
   \   000162   75....       MOV     ?V0 + 1,#(`?<Constant ".">` >> 8) & 0xff
   \   000165   78..         MOV     R0,#?V0 + 0
   \   000167   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00016A   790A         MOV     R1,#0xa
   \   00016C   90....       MOV     DPTR,#??integer
   \   00016F   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   000172   7A..         MOV     R2,#`?<Constant "Temper_2:">` & 0xff
   \   000174   7B..         MOV     R3,#(`?<Constant "Temper_2:">` >> 8) & 0xff
   \   000176   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000179   7406         MOV     A,#0x6
   \   00017B   12....       LCALL   ?DEALLOC_XSTACK8
   1145                    HalLcdWriteStringValue( "Light:", Light, 10, HAL_LCD_LINE_3 );
   \   00017E                ; Setup parameters for call to function HalLcdWriteStringValue
   \   00017E   75..03       MOV     ?V0 + 0,#0x3
   \   000181   78..         MOV     R0,#?V0 + 0
   \   000183   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000186   790A         MOV     R1,#0xa
   \   000188   90....       MOV     DPTR,#??Light
   \   00018B   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   00018E   7A..         MOV     R2,#`?<Constant "Light:">` & 0xff
   \   000190   7B..         MOV     R3,#(`?<Constant "Light:">` >> 8) & 0xff
   \   000192   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   000195   7401         MOV     A,#0x1
   \   000197   12....       LCALL   ?DEALLOC_XSTACK8
   1146                    
   1147                    //显示最下面的百分比条
   1148                    static uint8 percent;
   1149                    percent = (2 * 100) / LCD_PAGE_MAX;
   \   00019A   90....       MOV     DPTR,#??percent_1
   \   00019D   7432         MOV     A,#0x32
   \   00019F   02....       LJMP    ??Smart_home_Display_7 & 0xFFFF
   1150                    HalLcdDisplayPercentBar("",percent);
   1151                    break;
   1152                  }
   1153                  
   1154                case 2:
   1155                {
   1156                    static uint8 kind;
   1157                    static uint8 tmp1,tmp2;
   1158                    static uint8 tmp3,tmp4;
   1159                    static uint16 Data1;
   1160                    static uint16 Data2;
   1161                    //显示最下面的百分比条
   1162                    DeviceInfo rfid = DeviceList[RfID];
   \                     ??Smart_home_Display_3:
   \   0001A2   85..82       MOV     DPL,?XSP + 0
   \   0001A5   85..83       MOV     DPH,?XSP + 1
   \   0001A8   AC82         MOV     R4,DPL
   \   0001AA   AD83         MOV     R5,DPH
   \   0001AC   7583..       MOV     DPH,#((DeviceList + 21) >> 8) & 0xff
   \   0001AF   7582..       MOV     DPL,#(DeviceList + 21) & 0xff
   \   0001B2   7407         MOV     A,#0x7
   \   0001B4   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   1163                    
   1164                    kind = rfid.data[0];
   \   0001B7   7402         MOV     A,#0x2
   \   0001B9   12....       LCALL   ?XSTACK_DISP0_8
   \   0001BC   E0           MOVX    A,@DPTR
   \   0001BD   90....       MOV     DPTR,#??kind
   \   0001C0   F0           MOVX    @DPTR,A
   1165                    tmp1 = rfid.data[1];
   \   0001C1   7403         MOV     A,#0x3
   \   0001C3   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C6   E0           MOVX    A,@DPTR
   \   0001C7   90....       MOV     DPTR,#??tmp1
   \   0001CA   F0           MOVX    @DPTR,A
   1166                    tmp2 = rfid.data[2];
   \   0001CB   7404         MOV     A,#0x4
   \   0001CD   12....       LCALL   ?XSTACK_DISP0_8
   \   0001D0   E0           MOVX    A,@DPTR
   \   0001D1   90....       MOV     DPTR,#??tmp2
   \   0001D4   F0           MOVX    @DPTR,A
   1167                    tmp3 = rfid.data[3];
   \   0001D5   7405         MOV     A,#0x5
   \   0001D7   12....       LCALL   ?XSTACK_DISP0_8
   \   0001DA   E0           MOVX    A,@DPTR
   \   0001DB   90....       MOV     DPTR,#??tmp3
   \   0001DE   F0           MOVX    @DPTR,A
   1168                    tmp4 = rfid.data[4];
   \   0001DF   7406         MOV     A,#0x6
   \   0001E1   12....       LCALL   ?XSTACK_DISP0_8
   \   0001E4   E0           MOVX    A,@DPTR
   \   0001E5   90....       MOV     DPTR,#??tmp4
   \   0001E8   F0           MOVX    @DPTR,A
   1169                    
   1170                    Data1 = (tmp1 << 8) | tmp2;
   \   0001E9   90....       MOV     DPTR,#??tmp1
   \   0001EC   E0           MOVX    A,@DPTR
   \   0001ED   F9           MOV     R1,A
   \   0001EE   90....       MOV     DPTR,#??tmp2
   \   0001F1   E0           MOVX    A,@DPTR
   \   0001F2   90....       MOV     DPTR,#??Data1
   \   0001F5   F0           MOVX    @DPTR,A
   \   0001F6   A3           INC     DPTR
   \   0001F7   E9           MOV     A,R1
   \   0001F8   F0           MOVX    @DPTR,A
   1171                    Data2 = (tmp3 << 8) | tmp4;
   \   0001F9   90....       MOV     DPTR,#??tmp3
   \   0001FC   E0           MOVX    A,@DPTR
   \   0001FD   F9           MOV     R1,A
   \   0001FE   90....       MOV     DPTR,#??tmp4
   \   000201   E0           MOVX    A,@DPTR
   \   000202   90....       MOV     DPTR,#??Data2
   \   000205   F0           MOVX    @DPTR,A
   \   000206   A3           INC     DPTR
   \   000207   E9           MOV     A,R1
   \   000208   F0           MOVX    @DPTR,A
   1172                    
   1173                    if(kind == 0x01) {HalLcdWriteString( "MFOne-S50", HAL_LCD_LINE_2 );}
   \   000209   90....       MOV     DPTR,#??kind
   \   00020C   E0           MOVX    A,@DPTR
   \   00020D   6401         XRL     A,#0x1
   \   00020F   7008         JNZ     ??Smart_home_Display_9
   \   000211                ; Setup parameters for call to function HalLcdWriteString
   \   000211   7902         MOV     R1,#0x2
   \   000213   7A..         MOV     R2,#`?<Constant "MFOne-S50">` & 0xff
   \   000215   7B..         MOV     R3,#(`?<Constant "MFOne-S50">` >> 8) & 0xff
   \   000217   8038         SJMP    ??Smart_home_Display_10
   1174                    else if(kind == 0x02) {HalLcdWriteString( "MFOne-S70", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_9:
   \   000219   E0           MOVX    A,@DPTR
   \   00021A   6402         XRL     A,#0x2
   \   00021C   7008         JNZ     ??Smart_home_Display_11
   \   00021E                ; Setup parameters for call to function HalLcdWriteString
   \   00021E   7902         MOV     R1,#0x2
   \   000220   7A..         MOV     R2,#`?<Constant "MFOne-S70">` & 0xff
   \   000222   7B..         MOV     R3,#(`?<Constant "MFOne-S70">` >> 8) & 0xff
   \   000224   802B         SJMP    ??Smart_home_Display_10
   1175                    else if(kind == 0x03) {HalLcdWriteString( "MF-UltraLight", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_11:
   \   000226   E0           MOVX    A,@DPTR
   \   000227   6403         XRL     A,#0x3
   \   000229   7008         JNZ     ??Smart_home_Display_12
   \   00022B                ; Setup parameters for call to function HalLcdWriteString
   \   00022B   7902         MOV     R1,#0x2
   \   00022D   7A..         MOV     R2,#`?<Constant "MF-UltraLight">` & 0xff
   \   00022F   7B..         MOV     R3,#(`?<Constant "MF-UltraLight">` >> 8) & 0xff
   \   000231   801E         SJMP    ??Smart_home_Display_10
   1176                    else if(kind == 0x04) {HalLcdWriteString( "MF-Pro", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_12:
   \   000233   E0           MOVX    A,@DPTR
   \   000234   6404         XRL     A,#0x4
   \   000236   7008         JNZ     ??Smart_home_Display_13
   \   000238                ; Setup parameters for call to function HalLcdWriteString
   \   000238   7902         MOV     R1,#0x2
   \   00023A   7A..         MOV     R2,#`?<Constant "MF-Pro">` & 0xff
   \   00023C   7B..         MOV     R3,#(`?<Constant "MF-Pro">` >> 8) & 0xff
   \   00023E   8011         SJMP    ??Smart_home_Display_10
   1177                    else if(kind == 0x05) {HalLcdWriteString( "MF-DesFire", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_13:
   \   000240   E0           MOVX    A,@DPTR
   \   000241   6405         XRL     A,#0x5
   \   000243   7902         MOV     R1,#0x2
   \   000245   7006         JNZ     ??Smart_home_Display_14
   \   000247                ; Setup parameters for call to function HalLcdWriteString
   \   000247   7A..         MOV     R2,#`?<Constant "MF-DesFire">` & 0xff
   \   000249   7B..         MOV     R3,#(`?<Constant "MF-DesFire">` >> 8) & 0xff
   \   00024B   8004         SJMP    ??Smart_home_Display_10
   1178                    else {HalLcdWriteString( "No Card", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_14:
   \   00024D                ; Setup parameters for call to function HalLcdWriteString
   \   00024D   7A..         MOV     R2,#`?<Constant "No Card">` & 0xff
   \   00024F   7B..         MOV     R3,#(`?<Constant "No Card">` >> 8) & 0xff
   \                     ??Smart_home_Display_10:
   \   000251   12....       LCALL   ?Subroutine12 & 0xFFFF
   1179                    
   1180          
   1181                    HalLcdWriteStringValueValue( "ID: ", Data1, 16, "-", Data2, 16, HAL_LCD_LINE_3 );
   \                     ??CrossCallReturnLabel_23:
   \   000254   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000257   75..10       MOV     ?V0 + 0,#0x10
   \   00025A   78..         MOV     R0,#?V0 + 0
   \   00025C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00025F   90....       MOV     DPTR,#??Data2
   \   000262   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   000265   75....       MOV     ?V0 + 0,#`?<Constant "-">` & 0xff
   \   000268   75....       MOV     ?V0 + 1,#(`?<Constant "-">` >> 8) & 0xff
   \   00026B   78..         MOV     R0,#?V0 + 0
   \   00026D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000270   7910         MOV     R1,#0x10
   \   000272   90....       MOV     DPTR,#??Data1
   \   000275   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   000278   7A..         MOV     R2,#`?<Constant "ID: ">` & 0xff
   \   00027A   7B..         MOV     R3,#(`?<Constant "ID: ">` >> 8) & 0xff
   \   00027C   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   00027F   7406         MOV     A,#0x6
   \   000281   12....       LCALL   ?DEALLOC_XSTACK8
   1182                    
   1183                    static uint8 percent;
   1184                    percent = (3 * 100) / LCD_PAGE_MAX;
   \   000284   90....       MOV     DPTR,#??percent_2
   \   000287   744B         MOV     A,#0x4b
   \   000289   02....       LJMP    ??Smart_home_Display_7 & 0xFFFF
   1185                    HalLcdDisplayPercentBar("",percent);
   1186                    break;
   1187                }
   1188                
   1189                case 3:
   1190                {
   1191                    static uint16 GasF;
   1192                    static uint16 Infrared;         
   1193          
   1194                    DeviceInfo DevGas = DeviceList[GasF];
   \                     ??Smart_home_Display_4:
   \   00028C   90....       MOV     DPTR,#??GasF
   \   00028F   E0           MOVX    A,@DPTR
   \   000290   F8           MOV     R0,A
   \   000291   A3           INC     DPTR
   \   000292   E0           MOVX    A,@DPTR
   \   000293   F9           MOV     R1,A
   \   000294   E8           MOV     A,R0
   \   000295   75F007       MOV     B,#0x7
   \   000298   A4           MUL     AB
   \   000299   F8           MOV     R0,A
   \   00029A   AAF0         MOV     R2,B
   \   00029C   75F007       MOV     B,#0x7
   \   00029F   E9           MOV     A,R1
   \   0002A0   A4           MUL     AB
   \   0002A1   2A           ADD     A,R2
   \   0002A2   F9           MOV     R1,A
   \   0002A3   74..         MOV     A,#DeviceList & 0xff
   \   0002A5   28           ADD     A,R0
   \   0002A6   F582         MOV     DPL,A
   \   0002A8   74..         MOV     A,#(DeviceList >> 8) & 0xff
   \   0002AA   39           ADDC    A,R1
   \   0002AB   C082         PUSH    DPL
   \   0002AD   85..82       MOV     DPL,?XSP + 0
   \   0002B0   85..83       MOV     DPH,?XSP + 1
   \   0002B3   AC82         MOV     R4,DPL
   \   0002B5   AD83         MOV     R5,DPH
   \   0002B7   F583         MOV     DPH,A
   \   0002B9   D082         POP     DPL
   \   0002BB   7407         MOV     A,#0x7
   \   0002BD   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   1195                    DeviceInfo DevInf = DeviceList[infrared]; 
   \   0002C0   7407         MOV     A,#0x7
   \   0002C2   12....       LCALL   ?XSTACK_DISP0_8
   \   0002C5   AC82         MOV     R4,DPL
   \   0002C7   AD83         MOV     R5,DPH
   \   0002C9   7583..       MOV     DPH,#((DeviceList + 35) >> 8) & 0xff
   \   0002CC   7582..       MOV     DPL,#(DeviceList + 35) & 0xff
   \   0002CF   7407         MOV     A,#0x7
   \   0002D1   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
   1196                    
   1197                    GasF = (uint16)DevGas.data[0];
   \   0002D4   7402         MOV     A,#0x2
   \   0002D6   12....       LCALL   ?XSTACK_DISP0_8
   \   0002D9   E0           MOVX    A,@DPTR
   \   0002DA   90....       MOV     DPTR,#??GasF
   \   0002DD   12....       LCALL   ??Subroutine34_0 & 0xFFFF
   1198                    Infrared = (uint16)DevInf.data[0];
   \                     ??CrossCallReturnLabel_82:
   \   0002E0   7409         MOV     A,#0x9
   \   0002E2   12....       LCALL   ?XSTACK_DISP0_8
   \   0002E5   E0           MOVX    A,@DPTR
   \   0002E6   90....       MOV     DPTR,#??Infrared
   \   0002E9   12....       LCALL   ??Subroutine34_0 & 0xFFFF
   1199                    
   1200                    if(GasF & 0x01 == 0x01) { HalLcdWriteString( "GasFlame: Flame", HAL_LCD_LINE_2 ); }         //0位是火焰
   \                     ??CrossCallReturnLabel_83:
   \   0002EC   90....       MOV     DPTR,#??GasF
   \   0002EF   E0           MOVX    A,@DPTR
   \   0002F0   A2E0         MOV     C,0xE0 /* A   */.0
   \   0002F2   7902         MOV     R1,#0x2
   \   0002F4   5006         JNC     ??Smart_home_Display_15
   \   0002F6                ; Setup parameters for call to function HalLcdWriteString
   \   0002F6   7A..         MOV     R2,#`?<Constant "GasFlame: Flame">` & 0xff
   \   0002F8   7B..         MOV     R3,#(`?<Constant "GasFlame: Flame">` >> 8) & 0xff
   \   0002FA   8004         SJMP    ??Smart_home_Display_16
   1201                    else if(GasF & 0x02 == 0x02) { HalLcdWriteString( "GasFlame: Gas", HAL_LCD_LINE_2 ); }//1位是气体
   1202                    else if(GasF & 0x03 == 0x03) { HalLcdWriteString( "GasFlame: All", HAL_LCD_LINE_2 ); }
   1203                    else {HalLcdWriteString( "GasFlame: None", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_15:
   \   0002FC                ; Setup parameters for call to function HalLcdWriteString
   \   0002FC   7A..         MOV     R2,#`?<Constant "GasFlame: None">` & 0xff
   \   0002FE   7B..         MOV     R3,#(`?<Constant "GasFlame: None">` >> 8) & 0xff
   \                     ??Smart_home_Display_16:
   \   000300   12....       LCALL   ??HalLcdWriteString?relay
   1204                    
   1205                    //HalLcdWriteStringValue("GasFlame: ", GasF, 16, HAL_LCD_LINE_2 );
   1206                    if(Infrared == 0x01)
   \   000303   90....       MOV     DPTR,#??Infrared
   \   000306   E0           MOVX    A,@DPTR
   \   000307   6401         XRL     A,#0x1
   \   000309   7002         JNZ     ??Smart_home_Display_17
   \   00030B   A3           INC     DPTR
   \   00030C   E0           MOVX    A,@DPTR
   \                     ??Smart_home_Display_17:
   \   00030D   7903         MOV     R1,#0x3
   \   00030F   7006         JNZ     ??Smart_home_Display_18
   1207                    {
   1208                      HalLcdWriteString("Infrared: Human", HAL_LCD_LINE_3 );
   \   000311                ; Setup parameters for call to function HalLcdWriteString
   \   000311   7A..         MOV     R2,#`?<Constant "Infrared: Human">` & 0xff
   \   000313   7B..         MOV     R3,#(`?<Constant "Infrared: Human">` >> 8) & 0xff
   \   000315   8004         SJMP    ??Smart_home_Display_19
   1209                    }
   1210                    else{
   1211                      HalLcdWriteString("Infrared: NoHuman", HAL_LCD_LINE_3 );
   \                     ??Smart_home_Display_18:
   \   000317                ; Setup parameters for call to function HalLcdWriteString
   \   000317   7A..         MOV     R2,#`?<Constant "Infrared: NoHuman">` & 0xff
   \   000319   7B..         MOV     R3,#(`?<Constant "Infrared: NoHuman">` >> 8) & 0xff
   \                     ??Smart_home_Display_19:
   \   00031B   12....       LCALL   ??HalLcdWriteString?relay
   1212                    }
   1213                    
   1214                    
   1215                    //显示最下面的百分比条
   1216                    static uint8 percent;
   1217                    percent = (4 * 100) / LCD_PAGE_MAX;
   \   00031E   90....       MOV     DPTR,#??percent_3
   \   000321   7464         MOV     A,#0x64
   \   000323   02....       LJMP    ??Smart_home_Display_7 & 0xFFFF
   1218                    HalLcdDisplayPercentBar("",percent);
   1219                    break;
   1220                }
   1221                    
   1222              }
   1223                
   1224                break;
   1225              
   1226              case 1:
   1227                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
   \                     ??Smart_home_Display_0:
   \   000326                ; Setup parameters for call to function HalLcdWriteString
   \   000326   7904         MOV     R1,#0x4
   \   000328   7A..         MOV     R2,#`?<Constant "Relay Contrling">` & 0xff
   \   00032A   7B..         MOV     R3,#(`?<Constant "Relay Contrling">` >> 8) & 0xff
   \   00032C   12....       LCALL   ?Subroutine11 & 0xFFFF
   1228                //清除屏幕显示
   1229                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1230                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1231                //这里的deviceStatus 可能是0x00,所以会出现bug 这个0在Device检查时被设置 2.24
   1232                if(DeviceList[relay].deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_21:
   \   00032F   90....       MOV     DPTR,#DeviceList + 50
   \   000332   E0           MOVX    A,@DPTR
   \   000333   6402         XRL     A,#0x2
   \   000335   7901         MOV     R1,#0x1
   \   000337   700A         JNZ     ??Smart_home_Display_20
   1233                {
   1234                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
   \   000339                ; Setup parameters for call to function HalLcdWriteString
   \   000339   7A..         MOV     R2,#`?<Constant "Relay Offline">` & 0xff
   \   00033B   7B..         MOV     R3,#(`?<Constant "Relay Offline">` >> 8) & 0xff
   \                     ??Smart_home_Display_21:
   \   00033D   12....       LCALL   ??HalLcdWriteString?relay
   \   000340   02....       LJMP    ??Smart_home_Display_8 & 0xFFFF
   1235                }
   1236                else  //设备在线回显  设备在线可能是 0/1
   1237                {
   1238                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_20:
   \   000343                ; Setup parameters for call to function HalLcdWriteString
   \   000343   7A..         MOV     R2,#`?<Constant "Relay Online">` & 0xff
   \   000345   7B..         MOV     R3,#(`?<Constant "Relay Online">` >> 8) & 0xff
   \   000347   12....       LCALL   ??HalLcdWriteString?relay
   1239                  //继电器控制界面
   1240                  const uint8 cmd =  DeviceList[relay].data[0];
   \   00034A   90....       MOV     DPTR,#DeviceList + 51
   \   00034D   E0           MOVX    A,@DPTR
   \   00034E   FE           MOV     R6,A
   1241          
   1242                  if((cmd & 0x02) == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   \   00034F   A2E1         MOV     C,0xE0 /* A   */.1
   \   000351   5009         JNC     ??Smart_home_Display_22
   \   000353                ; Setup parameters for call to function HalLcdWriteString
   \   000353   7902         MOV     R1,#0x2
   \   000355   7A..         MOV     R2,#`?<Constant "K1:ON">` & 0xff
   \   000357   7B..         MOV     R3,#(`?<Constant "K1:ON">` >> 8) & 0xff
   \   000359   12....       LCALL   ??HalLcdWriteString?relay
   1243                  if((cmd & 0x01) == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_22:
   \   00035C   EE           MOV     A,R6
   \   00035D   A2E0         MOV     C,0xE0 /* A   */.0
   \   00035F   5009         JNC     ??Smart_home_Display_23
   \   000361                ; Setup parameters for call to function HalLcdWriteString
   \   000361   7902         MOV     R1,#0x2
   \   000363   7A..         MOV     R2,#`?<Constant "K1:OFF">` & 0xff
   \   000365   7B..         MOV     R3,#(`?<Constant "K1:OFF">` >> 8) & 0xff
   \   000367   12....       LCALL   ??HalLcdWriteString?relay
   1244                  if((cmd & 0x20) == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_23:
   \   00036A   EE           MOV     A,R6
   \   00036B   A2E5         MOV     C,0xE0 /* A   */.5
   \   00036D   5009         JNC     ??Smart_home_Display_24
   \   00036F                ; Setup parameters for call to function HalLcdWriteString
   \   00036F   7903         MOV     R1,#0x3
   \   000371   7A..         MOV     R2,#`?<Constant "K2:ON">` & 0xff
   \   000373   7B..         MOV     R3,#(`?<Constant "K2:ON">` >> 8) & 0xff
   \   000375   12....       LCALL   ??HalLcdWriteString?relay
   1245                  if((cmd & 0x10) == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}      
   \                     ??Smart_home_Display_24:
   \   000378   EE           MOV     A,R6
   \   000379   A2E4         MOV     C,0xE0 /* A   */.4
   \   00037B   5062         JNC     ??Smart_home_Display_8
   \   00037D                ; Setup parameters for call to function HalLcdWriteString
   \   00037D   7903         MOV     R1,#0x3
   \   00037F   7A..         MOV     R2,#`?<Constant "K2:OFF">` & 0xff
   \   000381   7B..         MOV     R3,#(`?<Constant "K2:OFF">` >> 8) & 0xff
   \   000383   80B8         SJMP    ??Smart_home_Display_21
   1246                }
   1247          
   1248                break;
   1249              
   1250              case 2:
   1251                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
   \                     ??Smart_home_Display_1:
   \   000385                ; Setup parameters for call to function HalLcdWriteString
   \   000385   7904         MOV     R1,#0x4
   \   000387   7A..         MOV     R2,#`?<Constant "Motor Contrling">` & 0xff
   \   000389   7B..         MOV     R3,#(`?<Constant "Motor Contrling">` >> 8) & 0xff
   \   00038B   12....       LCALL   ?Subroutine11 & 0xFFFF
   1252                //清除屏幕显示
   1253                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1254                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1255                if(DeviceList[motor].deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_22:
   \   00038E   90....       MOV     DPTR,#DeviceList + 43
   \   000391   E0           MOVX    A,@DPTR
   \   000392   6402         XRL     A,#0x2
   \   000394   7901         MOV     R1,#0x1
   \   000396   7006         JNZ     ??Smart_home_Display_25
   1256                {
   1257                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
   \   000398                ; Setup parameters for call to function HalLcdWriteString
   \   000398   7A..         MOV     R2,#`?<Constant "Motor Offline">` & 0xff
   \   00039A   7B..         MOV     R3,#(`?<Constant "Motor Offline">` >> 8) & 0xff
   \   00039C   809F         SJMP    ??Smart_home_Display_21
   1258                }
   1259                else  //设备在线回显  设备在线可能是 0/1
   1260                {
   1261                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_25:
   \   00039E                ; Setup parameters for call to function HalLcdWriteString
   \   00039E   7A..         MOV     R2,#`?<Constant "Motor Online">` & 0xff
   \   0003A0   7B..         MOV     R3,#(`?<Constant "Motor Online">` >> 8) & 0xff
   \   0003A2   12....       LCALL   ??HalLcdWriteString?relay
   1262                  //电机控制界面
   1263                  const uint16 speed =  (uint16) DeviceList[motor].data[0];
   \   0003A5   90....       MOV     DPTR,#DeviceList + 44
   \   0003A8   E0           MOVX    A,@DPTR
   \   0003A9   FE           MOV     R6,A
   1264                  const uint16 status = (uint16) DeviceList[motor].data[1];
   1265                  switch(status)
   \   0003AA   A3           INC     DPTR
   \   0003AB   E0           MOVX    A,@DPTR
   \   0003AC   24FE         ADD     A,#-0x2
   \   0003AE   600B         JZ      ??Smart_home_Display_26
   \   0003B0   14           DEC     A
   \   0003B1   7902         MOV     R1,#0x2
   \   0003B3   600E         JZ      ??Smart_home_Display_27
   1266                  {
   1267                  default:
   1268                  case 1:
   1269                    HalLcdWriteString( "Status: STOP", HAL_LCD_LINE_2 );
   \   0003B5                ; Setup parameters for call to function HalLcdWriteString
   \   0003B5   7A..         MOV     R2,#`?<Constant "Status: STOP">` & 0xff
   \   0003B7   7B..         MOV     R3,#(`?<Constant "Status: STOP">` >> 8) & 0xff
   \   0003B9   800C         SJMP    ??Smart_home_Display_28
   1270                    break;
   1271                  case 2:
   1272                    HalLcdWriteString( "Status: FORWARD", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_26:
   \   0003BB                ; Setup parameters for call to function HalLcdWriteString
   \   0003BB   7902         MOV     R1,#0x2
   \   0003BD   7A..         MOV     R2,#`?<Constant "Status: FORWARD">` & 0xff
   \   0003BF   7B..         MOV     R3,#(`?<Constant "Status: FORWARD">` >> 8) & 0xff
   \   0003C1   8004         SJMP    ??Smart_home_Display_28
   1273                    break;
   1274                  case 3:
   1275                    HalLcdWriteString( "Status: BACKWARD", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_27:
   \   0003C3                ; Setup parameters for call to function HalLcdWriteString
   \   0003C3   7A..         MOV     R2,#`?<Constant "Status: BACKWARD">` & 0xff
   \   0003C5   7B..         MOV     R3,#(`?<Constant "Status: BACKWARD">` >> 8) & 0xff
   1276                    break;
   1277                  }
   1278                  
   1279                  HalLcdWriteStringValue( "Speed:", speed, 10, HAL_LCD_LINE_3 );
   1280                
   1281                }
   1282            }
   \                     ??Smart_home_Display_28:
   \   0003C7   12....       LCALL   ?Subroutine12 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   0003CA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0003CD   790A         MOV     R1,#0xa
   \   0003CF   EE           MOV     A,R6
   \   0003D0   FC           MOV     R4,A
   \   0003D1   7D00         MOV     R5,#0x0
   \   0003D3   7A..         MOV     R2,#`?<Constant "Speed:">` & 0xff
   \   0003D5   7B..         MOV     R3,#(`?<Constant "Speed:">` >> 8) & 0xff
   \   0003D7   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   0003DA   7401         MOV     A,#0x1
   \   0003DC   12....       LCALL   ?DEALLOC_XSTACK8
   1283            
   1284          #endif // LCD_SUPPORTED  
   1285          }
   \                     ??Smart_home_Display_8:
   \   0003DF   740E         MOV     A,#0xe
   \   0003E1   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FC           MOV     R4,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FD           MOV     R5,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   000003                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000003   75..03       MOV     ?V0 + 0,#0x3
   \   000006   78..         MOV     R0,#?V0 + 0
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003   7902         MOV     R1,#0x2
   \   000005   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000007   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000009   12....       LCALL   ??HalLcdWriteString?relay
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C   7903         MOV     R1,#0x3
   \   00000E   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000012   12....       LCALL   ??HalLcdWriteString?relay
   \   000015   22           RET

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     ??humit:
   \   000000                DS 2
   \   000002                REQUIRE `?<Initializer for humit>`
   \   000002                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_I, align 1, keep-with-next
   \                     ??temper:
   \   000000                DS 2
   \   000002                REQUIRE `?<Initializer for temper>`
   \   000002                REQUIRE __INIT_XDATA_I

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??SoundVb:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Light:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??lightmp:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??integer:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??decimals:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent_1:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??kind:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??tmp1:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??tmp2:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??tmp3:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??tmp4:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data1:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data2:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent_2:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??GasF:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Infrared:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent_3:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
   1286          
   1287          
   1288          /*******************************************************************************
   1289           * @fn      Smart_home_CallBack
   1290           *
   1291           * @brief   Send data OTA.
   1292           *
   1293           * @param   port - UART port.
   1294           * @param   event - the UART port event flag.
   1295           *
   1296           * @return  none
   1297           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1298          void Smart_home_CallBack(uint8 port, uint8 event)
   \                     Smart_home_CallBack:
   1299          { 
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   1300          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   75F007       MOV     B,#0x7
   \   000003   A4           MUL     AB
   \   000004   F8           MOV     R0,A
   \   000005   A9F0         MOV     R1,B
   \   000007   74..         MOV     A,#(DeviceList + 1) & 0xff
   \   000009   28           ADD     A,R0
   \   00000A   F582         MOV     DPL,A
   \   00000C   74..         MOV     A,#((DeviceList + 1) >> 8) & 0xff
   \   00000E   39           ADDC    A,R1
   \   00000F   F583         MOV     DPH,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F583         MOV     DPH,A
   \   000003   8882         MOV     DPL,R0
   \   000005   22           RET

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for humit>`:
   \   000000   1400         DW 20

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for temper>`:
   \   000000   1400         DW 20

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Motor_cmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Motor_cmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessMSGCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessMSGCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Relay_Ctl?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Relay_Ctl

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Display?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Display

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_CallBack

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Smart_home">`:
   \   000000   536D6172     DB "Smart_home"
   \            745F686F
   \            6D6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Init Success!\\n">`:
   \   000000   496E6974     DB "Init Success!\012"
   \            20537563
   \            63657373
   \            210A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor max Speed">`:
   \   000000   4D6F746F     DB "Motor max Speed"
   \            72206D61
   \            78205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor min Speed">`:
   \   000000   4D6F746F     DB "Motor min Speed"
   \            72206D69
   \            6E205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Allow networking">`:
   \   000000   416C6C6F     DB "Allow networking"
   \            77206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Ban   networking">`:
   \   000000   42616E20     DB "Ban   networking"
   \            20206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_1`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_2`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0
   \            0000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_3`:
   \   000000   00           DB 0
   \   000001   0000         DB 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_4`:
   \   000000   00           DB 0
   \   000001   0000         DB 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_5`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_6`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_7`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "      Menu      ">`:
   \   000000   20202020     DB "      Menu      "
   \            20204D65
   \            6E752020
   \            20202020
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " ">`:
   \   000000   2000         DB " "

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hum:">`:
   \   000000   48756D3A     DB "Hum:"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "% T_1:">`:
   \   000000   2520545F     DB "% T_1:"
   \            313A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound: Voice">`:
   \   000000   536F756E     DB "Sound: Voice"
   \            643A2056
   \            6F696365
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   536F756E     DB "Sound: Vibration"
   \            643A2056
   \            69627261
   \            74696F6E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   536F756E     DB "Sound: All"
   \            643A2041
   \            6C6C00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound: None">`:
   \   000000   536F756E     DB "Sound: None"
   \            643A204E
   \            6F6E6500

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "">`:
   \   000000   00           DB ""

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temper_2:">`:
   \   000000   54656D70     DB "Temper_2:"
   \            65725F32
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ".">`:
   \   000000   2E00         DB "."

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Light:">`:
   \   000000   4C696768     DB "Light:"
   \            743A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S50">`:
   \   000000   4D464F6E     DB "MFOne-S50"
   \            652D5335
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S70">`:
   \   000000   4D464F6E     DB "MFOne-S70"
   \            652D5337
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-UltraLight">`:
   \   000000   4D462D55     DB "MF-UltraLight"
   \            6C747261
   \            4C696768
   \            7400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-Pro">`:
   \   000000   4D462D50     DB "MF-Pro"
   \            726F00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-DesFire">`:
   \   000000   4D462D44     DB "MF-DesFire"
   \            65734669
   \            726500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "No Card">`:
   \   000000   4E6F2043     DB "No Card"
   \            61726400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "ID: ">`:
   \   000000   49443A20     DB "ID: "
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "-">`:
   \   000000   2D00         DB "-"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: Flame">`:
   \   000000   47617346     DB "GasFlame: Flame"
   \            6C616D65
   \            3A20466C
   \            616D6500

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   47617346     DB "GasFlame: Gas"
   \            6C616D65
   \            3A204761
   \            7300    

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   47617346     DB "GasFlame: All"
   \            6C616D65
   \            3A20416C
   \            6C00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: None">`:
   \   000000   47617346     DB "GasFlame: None"
   \            6C616D65
   \            3A204E6F
   \            6E6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: Human">`:
   \   000000   496E6672     DB "Infrared: Human"
   \            61726564
   \            3A204875
   \            6D616E00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: NoHuman">`:
   \   000000   496E6672     DB "Infrared: NoHuman"
   \            61726564
   \            3A204E6F
   \            48756D61
   \            6E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Contrling">`:
   \   000000   52656C61     DB "Relay Contrling"
   \            7920436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Offline">`:
   \   000000   52656C61     DB "Relay Offline"
   \            79204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Online">`:
   \   000000   52656C61     DB "Relay Online"
   \            79204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:ON">`:
   \   000000   4B313A4F     DB "K1:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:OFF">`:
   \   000000   4B313A4F     DB "K1:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:ON">`:
   \   000000   4B323A4F     DB "K2:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:OFF">`:
   \   000000   4B323A4F     DB "K2:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Contrling">`:
   \   000000   4D6F746F     DB "Motor Contrling"
   \            7220436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Offline">`:
   \   000000   4D6F746F     DB "Motor Offline"
   \            72204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Online">`:
   \   000000   4D6F746F     DB "Motor Online"
   \            72204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: STOP">`:
   \   000000   53746174     DB "Status: STOP"
   \            75733A20
   \            53544F50
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: FORWARD">`:
   \   000000   53746174     DB "Status: FORWARD"
   \            75733A20
   \            464F5257
   \            41524400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: BACKWARD">`:
   \   000000   53746174     DB "Status: BACKWARD"
   \            75733A20
   \            4241434B
   \            57415244
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Speed:">`:
   \   000000   53706565     DB "Speed:"
   \            643A00  
   1301          
   1302          /*******************************************************************************
   1303          *******************************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_CallBack                0      0      0
     Smart_home_Display                 2      0     42
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteStringValueValue
                                        0      0     60
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdDisplayPercentBar       0      0     48
       -> memcpy                        0      0     52
       -> HalLcdWriteStringValueValue
                                        0      0     60
       -> HalLcdWriteStringValue        0      0     50
       -> HalLcdDisplayPercentBar       0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteStringValueValue
                                        0      0     60
       -> HalLcdDisplayPercentBar       0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdDisplayPercentBar       0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteString             0      0     48
       -> HalLcdWriteStringValue        0      0     50
     Smart_home_HandleKeys              0      0     21
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Motor_cmd          0      0     18
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Motor_cmd          0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_Init                    1      0     40
       -> afRegister                    0      0     80
       -> RegisterForKeys               0      0     80
       -> HalUARTOpen                   0      0     80
       -> HalLcdWriteString             0      0     80
       -> HalUARTWrite                  0      0     80
       -> afDataReqMTU                  0      0     80
       -> ZDO_RegisterForZDOMsg         0      0     80
       -> ZDO_RegisterForZDOMsg         0      0     80
       -> osal_start_timerEx            0      0     80
       -> osal_start_timerEx            0      0     80
       -> NLME_PermitJoiningRequest     0      0     80
       -> HalLedSet                     0      0     80
     Smart_home_Motor_cmd               0      0     28
       -> AF_DataRequest                0      0     38
     Smart_home_ProcessEvent            1      0     12
       -> Smart_home_ProcessMSGCmd      0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> osal_msg_receive              0      0     24
       -> Smart_home_HandleKeys         0      0     24
       -> osal_start_timerEx            0      0     24
       -> Smart_home_Display            0      0     24
       -> osal_start_timerEx            0      0     24
     Smart_home_ProcessMSGCmd           2      0     57
       -> strlen                        0      0     90
       -> HalUARTWrite                  0      0     90
       -> HalUARTWrite                  0      0     90
       -> strlen                        0      0     90
       -> HalUARTWrite                  0      0     90
       -> HalUARTWrite                  0      0     90
       -> strlen                        0      0     90
       -> HalUARTWrite                  0      0     90
       -> strlen                        0      0     90
       -> HalUARTWrite                  0      0     90
       -> strlen                        0      0     90
       -> HalUARTWrite                  0      0     90
       -> strlen                        0      0     90
       -> HalUARTWrite                  0      0     90
     Smart_home_Relay_Ctl               0      0     28
       -> AF_DataRequest                0      0     38


   Segment part sizes:

     Function/Label                   Bytes
     --------------                   -----
     Smart_home_ClusterList_IN          18
     Smart_home_ClusterList_OUT         18
     Smart_home_SimpleDesc              12
     Smart_home_epDesc                   6
     Smart_home_TaskID                   1
     DeviceCnt                           9
     Ctrlcase                            1
     LCD_Page                            1
     DeviceList                         63
     Relay_addr                         12
     Motor_addr                         12
     Coordinator_Msg                   102
     Smart_home_MaxDataLength            2
     RelayTransID                        1
     MotorTransID                        1
     Smart_home_Init                   300
     ?Subroutine0                        5
     ?Subroutine14                       2
     ??Subroutine31_0                   11
     ?Subroutine21                      11
     ?Subroutine10                      12
     ?Subroutine9                        2
     ??Subroutine34_0                    5
     Smart_home_ProcessEvent           272
     Smart_home_Motor_cmd              180
     ??Subroutine32_0                    5
     Smart_home_HandleKeys             304
     ?Subroutine19                      10
     ?Subroutine18                      10
     ?Subroutine17                      10
     ?Subroutine16                      10
     ?Subroutine13                      10
     MotorSpeed                          1
     NetWorkAllow                        1
     Relay1_on                           1
     Relay2_on                           1
     ?Subroutine1                        3
     Smart_home_ProcessMSGCmd          799
     ?Subroutine23                       4
     ??Subroutine33_0                    8
     ?Subroutine8                       18
     ?Subroutine7                        9
     ?Subroutine6                        5
     ?Subroutine5                        5
     ?Subroutine24                       9
     ?Subroutine28                       7
     ?Subroutine4                        6
     ?Subroutine25                       8
     ?Subroutine3                        8
     ?Subroutine29                      12
     ?Subroutine2                        8
     ?Subroutine27                       4
     ?Subroutine30                      12
     ?Subroutine26                      17
     DeviceID                            1
     Device_status                       1
     counttmp                            2
     Smart_home_Relay_Ctl              137
     Smart_home_Display                996
     ?Subroutine20                       6
     ?Subroutine12                       9
     ?Subroutine11                      22
     humit                               2
     temper                              2
     SoundVb                             2
     percent                             1
     Light                               2
     lightmp                             1
     integer                             2
     decimals                            2
     percent                             1
     kind                                1
     tmp1                                1
     tmp2                                1
     tmp3                                1
     tmp4                                1
     Data1                               2
     Data2                               2
     percent                             1
     GasF                                2
     Infrared                            2
     percent                             1
     Smart_home_CallBack                 3
     ?Subroutine22                      18
     ?Subroutine15                       6
     ?<Initializer for humit>            2
     ?<Initializer for temper>           2
     ??Smart_home_Init?relay             6
     ??Smart_home_ProcessEvent?relay     6
     ??Smart_home_Motor_cmd?relay        6
     ??Smart_home_HandleKeys?relay       6
     ??Smart_home_ProcessMSGCmd?relay    6
     ??Smart_home_Relay_Ctl?relay        6
     ??Smart_home_Display?relay          6
     ??Smart_home_CallBack?relay         6
     ?<Constant "Smart_home">           11
     ?<Constant "Init Success!\n">      15
     ?<Constant "Motor max Speed">      16
     ?<Constant "Motor min Speed">      16
     ?<Constant "Allow networking">     17
     ?<Constant "Ban   networking">     17
     ?<Constant {0}>                     4
     ?<Constant {0}>_1                   6
     ?<Constant {0}>_2                   7
     ?<Constant {0}>_3                   3
     ?<Constant {0}>_4                   3
     ?<Constant {0}>_5                   4
     ?<Constant {0}>_6                   4
     ?<Constant {0}>_7                   4
     ?<Constant "      Menu      ">     17
     ?<Constant " ">                     2
     ?<Constant "Hum:">                  5
     ?<Constant "% T_1:">                7
     ?<Constant "Sound: Voice">         13
     ?<Constant "Sound: Vibration">     17
     ?<Constant "Sound: All">           11
     ?<Constant "Sound: None">          12
     ?<Constant "">                      1
     ?<Constant "Temper_2:">            10
     ?<Constant ".">                     2
     ?<Constant "Light:">                7
     ?<Constant "MFOne-S50">            10
     ?<Constant "MFOne-S70">            10
     ?<Constant "MF-UltraLight">        14
     ?<Constant "MF-Pro">                7
     ?<Constant "MF-DesFire">           11
     ?<Constant "No Card">               8
     ?<Constant "ID: ">                  5
     ?<Constant "-">                     2
     ?<Constant "GasFlame: Flame">      16
     ?<Constant "GasFlame: Gas">        14
     ?<Constant "GasFlame: All">        14
     ?<Constant "GasFlame: None">       15
     ?<Constant "Infrared: Human">      16
     ?<Constant "Infrared: NoHuman">    18
     ?<Constant "Relay Contrling">      16
     ?<Constant "Relay Offline">        14
     ?<Constant "Relay Online">         13
     ?<Constant "K1:ON">                 6
     ?<Constant "K1:OFF">                7
     ?<Constant "K2:ON">                 6
     ?<Constant "K2:OFF">                7
     ?<Constant "Motor Contrling">      16
     ?<Constant "Motor Offline">        14
     ?<Constant "Motor Online">         13
     ?<Constant "Status: STOP">         13
     ?<Constant "Status: FORWARD">      16
     ?<Constant "Status: BACKWARD">     17
     ?<Constant "Speed:">                7

 
 3 298 bytes in segment BANKED_CODE
    48 bytes in segment BANK_RELAYS
     4 bytes in segment XDATA_I
     4 bytes in segment XDATA_ID
   610 bytes in segment XDATA_ROM_C
   239 bytes in segment XDATA_Z
 
 3 350 bytes of CODE  memory
   610 bytes of CONST memory
   243 bytes of XDATA memory

Errors: none
Warnings: 21
