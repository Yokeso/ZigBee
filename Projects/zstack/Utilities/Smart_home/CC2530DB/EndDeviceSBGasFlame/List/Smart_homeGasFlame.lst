###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Apr/2021  22:09:26 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_homeGasFlame.c           #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          omeGasFlame.c -D HAL_UART=TRUE -D HAL_UART_TEST    #
#                          -D xREFLECTOR -D xPOWER_SAVING -lC                 #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBGasFlame\List\    #
#                          -lA D:\毕设\CC2530-smart_home\Projects\zstack\Util #
#                          ities\Smart_home\CC2530DB\EndDeviceSBGasFlame\List #
#                          \ --diag_suppress Pe001,Pa010 -o                   #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBGasFlame\Obj\ -e  #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530SB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBGasFlame\List\Sma #
#                          rt_homeGasFlame.lst                                #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBGasFlame\Obj\Smar #
#                          t_homeGasFlame.r51                                 #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeGasFlame.c
      1          /*******************************************************************
      2            文件名：Smart_homeGasFlame.c
      3            作 者： 柳成林
      4            功 能： 烟雾火焰测功能节点，实现对烟雾火焰的检测，收集温烟雾火焰信
      5                    息并发送给传感器
      6            更新日志(2021)
      7            3.24
      8            + 新增 设置输入输出簇
      9                   Smart_home_HandleKeys()      //按键控制
     10                   Smart_home_ProcessMSGCmd();  //输入控制函数 
     11                   Smart_home_CHECK_EVT();      //设备事件检测
     12            + 修改 Smart_home_ProcessEvt()      //事件处理函数
     13                   Smart_home_Init()            //初始化函数
     14                   Smart_home_Send()            //信息发送函数
     15          
     16          
     17          使用事件 
     18               SMART_HOME_SEND_MSG_EVT(发送数据)
     19               SMART_HOME_MATCHRSP_EVT(描述符匹配)
     20               SMART_HOME_HALCHECK_EVT(管脚检查)
     21             
     22          *********************************************************************/
     23          /*********************************************************************
     24           * INCLUDES
     25           */
     26          
     27          #include "AF.h"
     28          #include "OnBoard.h"
     29          #include "OSAL_Tasks.h"
     30          #include "Smart_home.h"
     31          #include "ZDApp.h"
     32          #include "ZDObject.h"
     33          #include "ZDProfile.h"
     34          
     35          #include "hal_drivers.h"
     36          #include "hal_key.h"
     37          
     38          #include "hal_led.h"
     39          #include "hal_uart.h"
     40          #include "hal_gasflame.h"
     41          
     42          /*********************************************************************
     43           * MACROS
     44           */
     45          //3.23  屏幕显示的小bug
     46          #define SMART_HOME_SEND_DELAY   500
     47          #define SMART_HOME_CHECK_DELAY  100
     48          #define SMART_HOME_MATCH_DELAY  1000
     49          
     50          #define ALARM_MAX_CNT           3    //几次检测到相同后报警，防止误报
     51          /*********************************************************************
     52           * CONSTANTS
     53           */
     54          
     55          #if !defined( SERIAL_APP_PORT )
     56          #define SERIAL_APP_PORT  0
     57          #endif
     58          
     59          #if !defined( SERIAL_APP_BAUD )
     60          #define SERIAL_APP_BAUD  HAL_UART_BR_38400
     61          //#define SERIAL_APP_BAUD  HAL_UART_BR_115200
     62          #endif
     63          
     64          // When the Rx buf space is less than this threshold, invoke the Rx callback.
     65          #if !defined( SERIAL_APP_THRESH )
     66          #define SERIAL_APP_THRESH  64
     67          #endif
     68          
     69          #if !defined( SERIAL_APP_RX_SZ )
     70          #define SERIAL_APP_RX_SZ  128
     71          #endif
     72          
     73          #if !defined( SERIAL_APP_TX_SZ )
     74          #define SERIAL_APP_TX_SZ  128
     75          #endif
     76          
     77          // Millisecs of idle time after a byte is received before invoking Rx callback.
     78          #if !defined( SERIAL_APP_IDLE )
     79          #define SERIAL_APP_IDLE  6
     80          #endif
     81          
     82          // Loopback Rx bytes to Tx for throughput testing.
     83          #if !defined( SERIAL_APP_LOOPBACK )
     84          #define SERIAL_APP_LOOPBACK  FALSE
     85          #endif
     86          
     87          // This is the max byte count per OTA message.
     88          #if !defined( SERIAL_APP_TX_MAX )
     89          #define SERIAL_APP_TX_MAX  80
     90          #endif
     91          
     92          #define SERIAL_APP_RSP_CNT  4
     93          
     94          //3.21 设置输入输出簇
     95          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     96          const cId_t Smart_home_ClusterList_IN[1] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0400         DW 4
     97          {
     98            Smart_home_CLUSTERID_GASFLAMEMSG        //继电器接收的消息控制命令
     99          };
    100          

   \                                 In  segment XDATA_ROM_C, align 1
    101          const cId_t Smart_home_ClusterList_OUT[1] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0400         DW 4
    102          {
    103            Smart_home_CLUSTERID_GASFLAMEMSG         //继电器发送的状态信息
    104          };
    105          

   \                                 In  segment XDATA_ROM_C, align 1
    106          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   02           DB 2
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    107          {
    108            Smart_home_ENDPOINT,              //  int   Endpoint;
    109            Smart_home_PROFID,                //  uint16 AppProfId[2];
    110            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    111            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    112            Smart_home_FLAGS,                 //  int   AppFlags:4;
    113            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    114            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    115            Smart_home_MAX_OUTCLUSTERS ,          //  byte  AppNumOutClusters;
    116            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    117          };
    118          

   \                                 In  segment XDATA_ROM_C, align 1
    119          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    120          {
    121            Smart_home_ENDPOINT,
    122           &Smart_home_TaskID,
    123            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    124            noLatencyReqs
    125          };
    126          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    127          afAddrType_t Coordinator_DstAddr;
   \                     Coordinator_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    128          
    129          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    130          static uint8 gasFlameBuf[2]; //信号缓存
   \                     gasFlameBuf:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    131          
    132          /*********************************************************************
    133           * TYPEDEFS
    134           */
    135          
    136          /*********************************************************************
    137           * GLOBAL VARIABLES
    138           */
    139          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    140          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    141          byte Coordinator_Msg[GASFLAMEMSG_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 5
   \   000005                REQUIRE __INIT_XDATA_Z
    142          
    143          /*********************************************************************
    144           * EXTERNAL VARIABLES
    145           */
    146          
    147          /*********************************************************************
    148           * EXTERNAL FUNCTIONS
    149           */
    150          
    151          /*********************************************************************
    152           * LOCAL VARIABLES
    153           */
    154          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    155          static byte Smart_home_MsgID;  // This is the unique message ID (counter)
   \                     Smart_home_MsgID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    156          
    157          
    158          /*********************************************************************
    159           * LOCAL FUNCTIONS
    160           */
    161          
    162          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    163          static void Smart_home_HandleKeys( uint8 shift, uint8 keys );
    164          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    165          static void Smart_home_Send(void);
    166          static void Smart_home_Resp(void);
    167          static void Smart_home_CHECK_EVT(void);
    168          static void Smart_home_CallBack(uint8 port, uint8 event);
    169          
    170          /*********************************************************************
    171           * @fn      Smart_home_Init
    172           *
    173           * @brief   This is called during OSAL tasks' initialization.
    174           *
    175           * @param   task_id - the Task ID assigned by OSAL.
    176           *
    177           * @return  none
    178           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    179          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    180          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    181            halUARTCfg_t uartConfig;
    182          
    183            Smart_home_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#Smart_home_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    184            Smart_home_MsgID = 0;
   \   000010   90....       MOV     DPTR,#Smart_home_MsgID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    185          
    186            // Register the endpoint/interface description with the AF
    187            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   000015                ; Setup parameters for call to function afRegister
   \   000015   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   000017   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   000019   12....       LCALL   ??afRegister?relay
    188          
    189            // Register for all key events - This app will handle all key events
    190            RegisterForKeys( task_id );
   \   00001C                ; Setup parameters for call to function RegisterForKeys
   \   00001C   EE           MOV     A,R6
   \   00001D   F9           MOV     R1,A
   \   00001E   12....       LCALL   ??RegisterForKeys?relay
    191            
    192            //串口配置
    193            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000021   85..82       MOV     DPL,?XSP + 0
   \   000024   85..83       MOV     DPH,?XSP + 1
   \   000027   7401         MOV     A,#0x1
   \   000029   F0           MOVX    @DPTR,A
    194            uartConfig.baudRate             = SERIAL_APP_BAUD;
   \   00002A   12....       LCALL   ?XSTACK_DISP0_8
   \   00002D   7402         MOV     A,#0x2
   \   00002F   F0           MOVX    @DPTR,A
    195            uartConfig.flowControl          = TRUE;
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7401         MOV     A,#0x1
   \   000035   F0           MOVX    @DPTR,A
    196            uartConfig.flowControlThreshold = SERIAL_APP_THRESH; // 2x30 don't care - see uart driver.
   \   000036   7403         MOV     A,#0x3
   \   000038   12....       LCALL   ?XSTACK_DISP0_8
   \   00003B   7440         MOV     A,#0x40
   \   00003D   F0           MOVX    @DPTR,A
   \   00003E   A3           INC     DPTR
   \   00003F   E4           CLR     A
   \   000040   F0           MOVX    @DPTR,A
    197            uartConfig.rx.maxBufSize        = SERIAL_APP_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000041   740A         MOV     A,#0xa
   \   000043   12....       LCALL   ?XSTACK_DISP0_8
   \   000046   7480         MOV     A,#-0x80
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   E4           CLR     A
   \   00004B   F0           MOVX    @DPTR,A
    198            uartConfig.tx.maxBufSize        = SERIAL_APP_TX_SZ;  // 2x30 don't care - see uart driver.
   \   00004C   7412         MOV     A,#0x12
   \   00004E   12....       LCALL   ?XSTACK_DISP0_8
   \   000051   7480         MOV     A,#-0x80
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   E4           CLR     A
   \   000056   F0           MOVX    @DPTR,A
    199            uartConfig.idleTimeout          = SERIAL_APP_IDLE;   // 2x30 don't care - see uart driver.
   \   000057   7405         MOV     A,#0x5
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   7406         MOV     A,#0x6
   \   00005E   F0           MOVX    @DPTR,A
    200            uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
   \   00005F   7416         MOV     A,#0x16
   \   000061   12....       LCALL   ?XSTACK_DISP0_8
   \   000064   7401         MOV     A,#0x1
   \   000066   F0           MOVX    @DPTR,A
    201            uartConfig.callBackFunc         = Smart_home_CallBack;
   \   000067   741B         MOV     A,#0x1b
   \   000069   12....       LCALL   ?XSTACK_DISP0_8
   \   00006C   74..         MOV     A,#??Smart_home_CallBack?relay & 0xff
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F   A3           INC     DPTR
   \   000070   74..         MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
   \   000072   F0           MOVX    @DPTR,A
    202            HalUARTOpen (SERIAL_APP_PORT, &uartConfig);
   \   000073                ; Setup parameters for call to function HalUARTOpen
   \   000073   85..82       MOV     DPL,?XSP + 0
   \   000076   85..83       MOV     DPH,?XSP + 1
   \   000079   AA82         MOV     R2,DPL
   \   00007B   AB83         MOV     R3,DPH
   \   00007D   7900         MOV     R1,#0x0
   \   00007F   12....       LCALL   ??HalUARTOpen?relay
    203          
    204            //初始化向协调器发送的地址
    205            Coordinator_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000082   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   000085   E4           CLR     A
   \   000086   F0           MOVX    @DPTR,A
    206            Coordinator_DstAddr.endPoint = 0;
   \   000087   A3           INC     DPTR
   \   000088   F0           MOVX    @DPTR,A
    207            Coordinator_DstAddr.addr.shortAddr = 0;
   \   000089   90....       MOV     DPTR,#Coordinator_DstAddr
   \   00008C   F0           MOVX    @DPTR,A
   \   00008D   A3           INC     DPTR
   \   00008E   F0           MOVX    @DPTR,A
    208            
    209            
    210            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \   00008F                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00008F   7A20         MOV     R2,#0x20
   \   000091   7B80         MOV     R3,#-0x80
   \   000093   90....       MOV     DPTR,#Smart_home_TaskID
   \   000096   E0           MOVX    A,@DPTR
   \   000097   F9           MOV     R1,A
   \   000098   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    211            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   00009B                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00009B   7A06         MOV     R2,#0x6
   \   00009D   7B80         MOV     R3,#-0x80
   \   00009F   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000A2   E0           MOVX    A,@DPTR
   \   0000A3   F9           MOV     R1,A
   \   0000A4   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    212            
    213            // 初始化设备的管脚
    214            HalGasFlameInit();
   \   0000A7                ; Setup parameters for call to function HalGasFlameInit
   \   0000A7   12....       LCALL   ??HalGasFlameInit?relay
    215            
    216            // 周期性查询两个传感器的管脚
    217            osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_HALCHECK_EVT, 
    218                                                         SMART_HOME_CHECK_DELAY );
   \   0000AA                ; Setup parameters for call to function osal_start_reload_timer
   \   0000AA   7C64         MOV     R4,#0x64
   \   0000AC   7D00         MOV     R5,#0x0
   \   0000AE   7A40         MOV     R2,#0x40
   \   0000B0   12....       LCALL   ?Subroutine1 & 0xFFFF
    219            
    220            // 打开定时器，描述符匹配事件
    221            osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT, 
    222                                                         SMART_HOME_SEND_DELAY );
   \                     ??CrossCallReturnLabel_0:
   \   0000B3                ; Setup parameters for call to function osal_start_reload_timer
   \   0000B3   7CF4         MOV     R4,#-0xc
   \   0000B5   7D01         MOV     R5,#0x1
   \   0000B7   7A08         MOV     R2,#0x8
   \   0000B9   12....       LCALL   ?Subroutine1 & 0xFFFF
    223          }
   \                     ??CrossCallReturnLabel_1:
   \   0000BC   741D         MOV     A,#0x1d
   \   0000BE   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000C1   7F01         MOV     R7,#0x1
   \   0000C3   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_reload_timer?relay
   \   00000A   22           RET
    224          
    225          /*********************************************************************
    226           * @fn      Smart_home_ProcessEvent
    227           *
    228           * @brief   Generic Application Task event processor.
    229           *
    230           * @param   task_id  - The OSAL assigned task ID.
    231           * @param   events   - Bit map of events to process.
    232           *
    233           * @return  Event flags of all unprocessed events.
    234           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    235          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    236          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
    237            (void)task_id;  // Intentionally unreferenced parameter
    238            
    239            if ( events & SYS_EVENT_MSG )
   \   00000E   5480         ANL     A,#0x80
   \   000010   6003         JZ      $+5
   \   000012   02....       LJMP    ??Smart_home_ProcessEvent_0 & 0xFFFF
    240            {
    241              afIncomingMSGPacket_t *MSGpkt;
    242          
    243              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    244              {
    245                switch ( MSGpkt->hdr.event )
    246                {
    247                case ZDO_CB_MSG:
    248                  Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    249                  break;
    250                    
    251                case KEY_CHANGE:
    252                  Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    253                  break;
    254          
    255                case AF_INCOMING_MSG_CMD:
    256                  Smart_home_ProcessMSGCmd( MSGpkt );
    257                  break;
    258          
    259                default:
    260                  break;
    261                }
    262          
    263                osal_msg_deallocate( (uint8 *)MSGpkt );
    264              }
    265          
    266              return ( events ^ SYS_EVENT_MSG );
    267            }
    268            
    269            // 描述匹配事件
    270            if ( events & SMART_HOME_MATCHRSP_EVT )
   \   000015   EE           MOV     A,R6
   \   000016   5408         ANL     A,#0x8
   \   000018   7003         JNZ     $+5
   \   00001A   02....       LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
    271            {
    272               zAddrType_t dstAddr;
    273               dstAddr.addrMode = AddrBroadcast;
   \   00001D   7408         MOV     A,#0x8
   \   00001F   12....       LCALL   ?XSTACK_DISP0_8
   \   000022   740F         MOV     A,#0xf
   \   000024   F0           MOVX    @DPTR,A
    274               dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
   \   000025   85..82       MOV     DPL,?XSP + 0
   \   000028   85..83       MOV     DPH,?XSP + 1
   \   00002B   74FF         MOV     A,#-0x1
   \   00002D   F0           MOVX    @DPTR,A
   \   00002E   A3           INC     DPTR
   \   00002F   F0           MOVX    @DPTR,A
    275               
    276               ZDP_MatchDescReq( &dstAddr, 
    277                                  NWK_BROADCAST_SHORTADDR,
    278                                  Smart_home_PROFID,
    279                                  Smart_home_MAX_OUTCLUSTERS, 
    280                                  (cId_t *)Smart_home_ClusterList_IN,
    281                                  Smart_home_MAX_INCLUSTERS, 
    282                                  (cId_t *)Smart_home_ClusterList_OUT,
    283                                  FALSE );
   \   000030                ; Setup parameters for call to function ZDP_MatchDescReq
   \   000030   75..00       MOV     ?V0 + 0,#0x0
   \   000033   78..         MOV     R0,#?V0 + 0
   \   000035   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000038   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_OUT & 0xff
   \   00003B   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_OUT >> 8) & 0xff
   \   00003E   78..         MOV     R0,#?V0 + 0
   \   000040   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000043   75..09       MOV     ?V0 + 0,#0x9
   \   000046   78..         MOV     R0,#?V0 + 0
   \   000048   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004B   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_IN & 0xff
   \   00004E   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_IN >> 8) & 0xff
   \   000051   78..         MOV     R0,#?V0 + 0
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000056   75..05       MOV     ?V0 + 0,#0x5
   \   000059   75..0F       MOV     ?V0 + 1,#0xf
   \   00005C   78..         MOV     R0,#?V0 + 0
   \   00005E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000061   7902         MOV     R1,#0x2
   \   000063   7CFF         MOV     R4,#-0x1
   \   000065   7DFF         MOV     R5,#-0x1
   \   000067   7408         MOV     A,#0x8
   \   000069   12....       LCALL   ?XSTACK_DISP0_8
   \   00006C   AA82         MOV     R2,DPL
   \   00006E   AB83         MOV     R3,DPH
   \   000070   12....       LCALL   ??ZDP_MatchDescReq?relay
   \   000073   7408         MOV     A,#0x8
   \   000075   12....       LCALL   ?DEALLOC_XSTACK8
    284          
    285              // Return unprocessed events
    286              return (events ^ SMART_HOME_MATCHRSP_EVT);
   \   000078   EE           MOV     A,R6
   \   000079   6408         XRL     A,#0x8
   \                     ??Smart_home_ProcessEvent_2:
   \   00007B   FA           MOV     R2,A
   \   00007C   EF           MOV     A,R7
   \                     ??Smart_home_ProcessEvent_3:
   \   00007D   FB           MOV     R3,A
   \   00007E   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
    287            }
   \                     ??Smart_home_ProcessEvent_5:
   \   000081   A3           INC     DPTR
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   E0           MOVX    A,@DPTR
   \   000085   A2E2         MOV     C,0xE0 /* A   */.2
   \   000087   5006         JNC     ??Smart_home_ProcessEvent_6
   \   000089   90....       MOV     DPTR,#gasFlameBuf
   \   00008C   7401         MOV     A,#0x1
   \   00008E   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_6:
   \   00008F                ; Setup parameters for call to function osal_msg_deallocate
   \   00008F   AA..         MOV     R2,?V0 + 0
   \   000091   AB..         MOV     R3,?V0 + 1
   \   000093   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   000096                ; Setup parameters for call to function osal_msg_receive
   \   000096   90....       MOV     DPTR,#Smart_home_TaskID
   \   000099   E0           MOVX    A,@DPTR
   \   00009A   F9           MOV     R1,A
   \   00009B   12....       LCALL   ??osal_msg_receive?relay
   \   00009E   8A..         MOV     ?V0 + 0,R2
   \   0000A0   8B..         MOV     ?V0 + 1,R3
   \   0000A2   EA           MOV     A,R2
   \   0000A3   45..         ORL     A,?V0 + 1
   \   0000A5   6012         JZ      ??Smart_home_ProcessEvent_7
   \   0000A7   8A82         MOV     DPL,R2
   \   0000A9   8B83         MOV     DPH,R3
   \   0000AB   E0           MOVX    A,@DPTR
   \   0000AC   2440         ADD     A,#0x40
   \   0000AE   60D1         JZ      ??Smart_home_ProcessEvent_5
   \   0000B0   24ED         ADD     A,#-0x13
   \   0000B2   70DB         JNZ     ??Smart_home_ProcessEvent_6
   \   0000B4                ; Setup parameters for call to function Smart_home_ProcessZDOMsgs
   \   0000B4   12....       LCALL   ??Smart_home_ProcessZDOMsgs?relay
   \   0000B7   80D6         SJMP    ??Smart_home_ProcessEvent_6
   \                     ??Smart_home_ProcessEvent_7:
   \   0000B9   EE           MOV     A,R6
   \   0000BA   FA           MOV     R2,A
   \   0000BB   EF           MOV     A,R7
   \   0000BC   6480         XRL     A,#0x80
   \   0000BE   80BD         SJMP    ??Smart_home_ProcessEvent_3
    288          
    289            if ( events & SMART_HOME_SEND_MSG_EVT )
   \                     ??Smart_home_ProcessEvent_1:
   \   0000C0   EE           MOV     A,R6
   \   0000C1   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000C3   4003         JC      $+5
   \   0000C5   02....       LJMP    ??Smart_home_ProcessEvent_8 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_9:
   \   0000C8   90....       MOV     DPTR,#Smart_home_MsgID
   \   0000CB   E0           MOVX    A,@DPTR
   \   0000CC   C4           SWAP    A
   \   0000CD   540F         ANL     A,#0xf
   \   0000CF   FA           MOV     R2,A
   \   0000D0   C3           CLR     C
   \   0000D1   940A         SUBB    A,#0xa
   \   0000D3   5004         JNC     ??Smart_home_ProcessEvent_10
   \   0000D5   7830         MOV     R0,#0x30
   \   0000D7   8002         SJMP    ??Smart_home_ProcessEvent_11
   \                     ??Smart_home_ProcessEvent_10:
   \   0000D9   7837         MOV     R0,#0x37
   \                     ??Smart_home_ProcessEvent_11:
   \   0000DB   E8           MOV     A,R0
   \   0000DC   2A           ADD     A,R2
   \   0000DD   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   0000E0   F0           MOVX    @DPTR,A
   \   0000E1   90....       MOV     DPTR,#Smart_home_MsgID
   \   0000E4   E0           MOVX    A,@DPTR
   \   0000E5   540F         ANL     A,#0xf
   \   0000E7   FA           MOV     R2,A
   \   0000E8   C3           CLR     C
   \   0000E9   940A         SUBB    A,#0xa
   \   0000EB   5004         JNC     ??Smart_home_ProcessEvent_12
   \   0000ED   7830         MOV     R0,#0x30
   \   0000EF   8002         SJMP    ??Smart_home_ProcessEvent_13
   \                     ??Smart_home_ProcessEvent_12:
   \   0000F1   7837         MOV     R0,#0x37
   \                     ??Smart_home_ProcessEvent_13:
   \   0000F3   E8           MOV     A,R0
   \   0000F4   2A           ADD     A,R2
   \   0000F5   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   0000F8   F0           MOVX    @DPTR,A
   \   0000F9   90....       MOV     DPTR,#gasFlameBuf + 1
   \   0000FC   E0           MOVX    A,@DPTR
   \   0000FD   C3           CLR     C
   \   0000FE   33           RLC     A
   \   0000FF   7583..       MOV     DPH,#(gasFlameBuf >> 8) & 0xff
   \   000102   7582..       MOV     DPL,#gasFlameBuf & 0xff
   \   000105   F8           MOV     R0,A
   \   000106   E0           MOVX    A,@DPTR
   \   000107   48           ORL     A,R0
   \   000108   90....       MOV     DPTR,#Coordinator_Msg + 4
   \   00010B   F0           MOVX    @DPTR,A
   \   00010C                ; Setup parameters for call to function AF_DataRequest
   \   00010C   75..1E       MOV     ?V0 + 0,#0x1e
   \   00010F   78..         MOV     R0,#?V0 + 0
   \   000111   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000114   75....       MOV     ?V0 + 0,#Smart_home_MsgID & 0xff
   \   000117   75....       MOV     ?V0 + 1,#(Smart_home_MsgID >> 8) & 0xff
   \   00011A   78..         MOV     R0,#?V0 + 0
   \   00011C   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00011F   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000122   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   000125   78..         MOV     R0,#?V0 + 0
   \   000127   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00012A   75..05       MOV     ?V0 + 0,#0x5
   \   00012D   75..00       MOV     ?V0 + 1,#0x0
   \   000130   78..         MOV     R0,#?V0 + 0
   \   000132   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000135   75..04       MOV     ?V0 + 0,#0x4
   \   000138   78..         MOV     R0,#?V0 + 0
   \   00013A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00013D   7920         MOV     R1,#0x20
   \   00013F   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   000141   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   000143   7A..         MOV     R2,#Coordinator_DstAddr & 0xff
   \   000145   7B..         MOV     R3,#(Coordinator_DstAddr >> 8) & 0xff
   \   000147   12....       LCALL   ??AF_DataRequest?relay
   \   00014A   7409         MOV     A,#0x9
   \   00014C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00014F   E9           MOV     A,R1
   \   000150   7003         JNZ     $+5
   \   000152   02....       LJMP    ??Smart_home_ProcessEvent_9 & 0xFFFF
   \   000155   90....       MOV     DPTR,#gasFlameBuf
   \   000158   E4           CLR     A
   \   000159   F0           MOVX    @DPTR,A
   \   00015A   A3           INC     DPTR
   \   00015B   F0           MOVX    @DPTR,A
    290            {
    291              Smart_home_Send();
    292              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   00015C   EE           MOV     A,R6
   \   00015D   6401         XRL     A,#0x1
   \   00015F   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    293            }
    294          
    295            if ( events & SMART_HOME_BINDRSP_EVT )
   \                     ??Smart_home_ProcessEvent_8:
   \   000162   5420         ANL     A,#0x20
   \   000164   6006         JZ      ??Smart_home_ProcessEvent_14
    296            {
    297              Smart_home_Resp();
    298              return ( events ^ SMART_HOME_BINDRSP_EVT );
   \   000166   EE           MOV     A,R6
   \   000167   6420         XRL     A,#0x20
   \   000169   FA           MOV     R2,A
   \   00016A   804F         SJMP    ??Smart_home_ProcessEvent_4
    299            }
    300              
    301            if ( events & SMART_HOME_HALCHECK_EVT )
   \                     ??Smart_home_ProcessEvent_14:
   \   00016C   EE           MOV     A,R6
   \   00016D   5440         ANL     A,#0x40
   \   00016F   6046         JZ      ??Smart_home_ProcessEvent_15
    302            {
    303              Smart_home_CHECK_EVT();
   \   000171                ; Setup parameters for call to function HalGasCheck
   \   000171   12....       LCALL   ??HalGasCheck?relay
   \   000174   E9           MOV     A,R1
   \   000175   6006         JZ      ??Smart_home_ProcessEvent_16
   \   000177   90....       MOV     DPTR,#??gasAlertCnt
   \   00017A   E0           MOVX    A,@DPTR
   \   00017B   04           INC     A
   \   00017C   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_16:
   \   00017D                ; Setup parameters for call to function HalFlameCheck
   \   00017D   12....       LCALL   ??HalFlameCheck?relay
   \   000180   E9           MOV     A,R1
   \   000181   6006         JZ      ??Smart_home_ProcessEvent_17
   \   000183   90....       MOV     DPTR,#??flameAlertCnt
   \   000186   E0           MOVX    A,@DPTR
   \   000187   04           INC     A
   \   000188   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_17:
   \   000189   90....       MOV     DPTR,#??gasAlertCnt
   \   00018C   E0           MOVX    A,@DPTR
   \   00018D   C3           CLR     C
   \   00018E   9404         SUBB    A,#0x4
   \   000190   400B         JC      ??Smart_home_ProcessEvent_18
   \   000192   90....       MOV     DPTR,#gasFlameBuf
   \   000195   7401         MOV     A,#0x1
   \   000197   F0           MOVX    @DPTR,A
   \   000198   90....       MOV     DPTR,#??gasAlertCnt
   \   00019B   E4           CLR     A
   \   00019C   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_18:
   \   00019D   90....       MOV     DPTR,#??flameAlertCnt
   \   0001A0   E0           MOVX    A,@DPTR
   \   0001A1   C3           CLR     C
   \   0001A2   9404         SUBB    A,#0x4
   \   0001A4   400B         JC      ??Smart_home_ProcessEvent_19
   \   0001A6   90....       MOV     DPTR,#gasFlameBuf + 1
   \   0001A9   7401         MOV     A,#0x1
   \   0001AB   F0           MOVX    @DPTR,A
   \   0001AC   90....       MOV     DPTR,#??flameAlertCnt
   \   0001AF   E4           CLR     A
   \   0001B0   F0           MOVX    @DPTR,A
    304              return ( events ^ SMART_HOME_HALCHECK_EVT );
   \                     ??Smart_home_ProcessEvent_19:
   \   0001B1   EE           MOV     A,R6
   \   0001B2   6440         XRL     A,#0x40
   \   0001B4   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    305            }
    306            
    307            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_15:
   \   0001B7   7A00         MOV     R2,#0x0
   \   0001B9   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_4:
   \   0001BB   7409         MOV     A,#0x9
   \   0001BD   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001C0                REQUIRE ?Subroutine0
   \   0001C0                ; // Fall through to label ?Subroutine0
    308          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    309          
    310          /*********************************************************************
    311           * @fn      Smart_home_ProcessZDOMsgs()
    312           *
    313           * @brief   Process response messages
    314           *
    315           * @param   none
    316           *
    317           * @return  none
    318           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    319          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
   \                     Smart_home_ProcessZDOMsgs:
    320          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    321            switch ( inMsg->clusterID )
   \   000005   EA           MOV     A,R2
   \   000006   240C         ADD     A,#0xc
   \   000008   F582         MOV     DPL,A
   \   00000A   EB           MOV     A,R3
   \   00000B   3400         ADDC    A,#0x0
   \   00000D   F583         MOV     DPH,A
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F5..         MOV     ?V0 + 0,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F5..         MOV     ?V0 + 1,A
   \   000016   78..         MOV     R0,#?V0 + 0
   \   000018   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Smart_home_ProcessZDOMsgs>_0`:
   \   00001B   0000         DW        0
   \   00001D   0200         DW        2
   \   00001F   0680         DW        32774
   \   000021   ....         DW        ??Smart_home_ProcessZDOMsgs_0
   \   000023   2080         DW        32800
   \   000025   ....         DW        ??Smart_home_ProcessZDOMsgs_1
   \   000027   ....         DW        ??Smart_home_ProcessZDOMsgs_2
    322            {
    323              case End_Device_Bind_rsp:
    324                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
   \                     ??Smart_home_ProcessZDOMsgs_1:
   \   000029   EA           MOV     A,R2
   \   00002A   2413         ADD     A,#0x13
   \   00002C   F582         MOV     DPL,A
   \   00002E   EB           MOV     A,R3
   \   00002F   3400         ADDC    A,#0x0
   \   000031   F583         MOV     DPH,A
   \   000033   E0           MOVX    A,@DPTR
   \   000034   F8           MOV     R0,A
   \   000035   A3           INC     DPTR
   \   000036   E0           MOVX    A,@DPTR
   \   000037   F583         MOV     DPH,A
   \   000039   8882         MOV     DPL,R0
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   6003         JZ      $+5
   \   00003E   02....       LJMP    ??Smart_home_ProcessZDOMsgs_2 & 0xFFFF
    325                {
    326          #if (HAL_UART == TRUE)
    327                  HalUARTWrite(HAL_UART_PORT_0, "Bind Success!\n",   strlen("Bind Success!\n"));
                                                                            ^
Warning[Pe223]: function "strlen" declared implicitly
   \   000041                ; Setup parameters for call to function HalUARTWrite
   \   000041                ; Setup parameters for call to function strlen
   \   000041   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   000043   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   000045   12....       LCALL   ??strlen?relay
   \   000048   EA           MOV     A,R2
   \   000049   FC           MOV     R4,A
   \   00004A   EB           MOV     A,R3
   \   00004B   FD           MOV     R5,A
   \   00004C   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   00004E   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   000050   7900         MOV     R1,#0x0
   \   000052   12....       LCALL   ??HalUARTWrite?relay
   \   000055   806E         SJMP    ??Smart_home_ProcessZDOMsgs_2
    328          #endif
    329                }
    330                break;
    331              
    332              case Match_Desc_rsp:
    333                ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessZDOMsgs_0:
   \   000057                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   000057   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   00005A   8A..         MOV     ?V0 + 0,R2
   \   00005C   8B..         MOV     ?V0 + 1,R3
    334                if ( pRsp )
   \   00005E   EA           MOV     A,R2
   \   00005F   45..         ORL     A,?V0 + 1
   \   000061   6062         JZ      ??Smart_home_ProcessZDOMsgs_2
    335                {
    336                  if ( pRsp->status == ZSuccess && pRsp->cnt )
   \   000063   8A82         MOV     DPL,R2
   \   000065   8B83         MOV     DPH,R3
   \   000067   E0           MOVX    A,@DPTR
   \   000068   7054         JNZ     ??CrossCallReturnLabel_2
   \   00006A   A3           INC     DPTR
   \   00006B   A3           INC     DPTR
   \   00006C   A3           INC     DPTR
   \   00006D   E0           MOVX    A,@DPTR
   \   00006E   604E         JZ      ??CrossCallReturnLabel_2
    337                  {
    338                    // 此处存储绑定对方的地址信息用于发送
    339                    Coordinator_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   000070   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   000073   7402         MOV     A,#0x2
   \   000075   F0           MOVX    @DPTR,A
    340                    Coordinator_DstAddr.addr.shortAddr = pRsp->nwkAddr;
   \   000076   8A82         MOV     DPL,R2
   \   000078   8B83         MOV     DPH,R3
   \   00007A   A3           INC     DPTR
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   F8           MOV     R0,A
   \   00007D   A3           INC     DPTR
   \   00007E   E0           MOVX    A,@DPTR
   \   00007F   F9           MOV     R1,A
   \   000080   90....       MOV     DPTR,#Coordinator_DstAddr
   \   000083   E8           MOV     A,R0
   \   000084   F0           MOVX    @DPTR,A
   \   000085   A3           INC     DPTR
   \   000086   E9           MOV     A,R1
   \   000087   F0           MOVX    @DPTR,A
    341                    // Take the first endpoint, Can be changed to search through endpoints
    342                    Coordinator_DstAddr.endPoint = pRsp->epList[0];  // ok
   \   000088   8A82         MOV     DPL,R2
   \   00008A   8B83         MOV     DPH,R3
   \   00008C   A3           INC     DPTR
   \   00008D   A3           INC     DPTR
   \   00008E   A3           INC     DPTR
   \   00008F   A3           INC     DPTR
   \   000090   E0           MOVX    A,@DPTR
   \   000091   90....       MOV     DPTR,#Coordinator_DstAddr + 9
   \   000094   F0           MOVX    @DPTR,A
    343                    // 匹配成功，关闭描述符匹配事件定时器
    344                    osal_stop_timerEx( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT );
   \   000095                ; Setup parameters for call to function osal_stop_timerEx
   \   000095   7A08         MOV     R2,#0x8
   \   000097   7B00         MOV     R3,#0x0
   \   000099   90....       MOV     DPTR,#Smart_home_TaskID
   \   00009C   E0           MOVX    A,@DPTR
   \   00009D   F9           MOV     R1,A
   \   00009E   12....       LCALL   ??osal_stop_timerEx?relay
    345            
    346          #if (HAL_UART == TRUE)
    347                    HalUARTWrite(HAL_UART_PORT_0, "Match Success!\n",   strlen("Match Success!\n"));
                                                                               ^
Warning[Pe223]: function "strlen" declared implicitly

    switch ( inMsg->clusterID )
    ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeGasFlame.c",321  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "pRsp" (declared at line 333 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_homeGasFlame.c")
   \   0000A1                ; Setup parameters for call to function HalUARTWrite
   \   0000A1                ; Setup parameters for call to function strlen
   \   0000A1   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   0000A3   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000A5   12....       LCALL   ??strlen?relay
   \   0000A8   EA           MOV     A,R2
   \   0000A9   FC           MOV     R4,A
   \   0000AA   EB           MOV     A,R3
   \   0000AB   FD           MOV     R5,A
   \   0000AC   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   0000AE   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000B0   7900         MOV     R1,#0x0
   \   0000B2   12....       LCALL   ??HalUARTWrite?relay
    348          #endif
    349                    // 开启定时发送数据给协调器的事件
    350                    osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_SEND_MSG_EVT, 
    351                                             SMART_HOME_SEND_DELAY );
   \   0000B5                ; Setup parameters for call to function osal_start_reload_timer
   \   0000B5   7CF4         MOV     R4,#-0xc
   \   0000B7   7D01         MOV     R5,#0x1
   \   0000B9   7A01         MOV     R2,#0x1
   \   0000BB   12....       LCALL   ?Subroutine1 & 0xFFFF
    352                  }
    353              
    354                  osal_mem_free( pRsp );
   \                     ??CrossCallReturnLabel_2:
   \   0000BE                ; Setup parameters for call to function osal_mem_free
   \   0000BE   AA..         MOV     R2,?V0 + 0
   \   0000C0   AB..         MOV     R3,?V0 + 1
   \   0000C2   12....       LCALL   ??osal_mem_free?relay
    355                }
    356                break;
    357                
    358              default:
    359                break;
    360            }
    361            
    362          }
   \                     ??Smart_home_ProcessZDOMsgs_2:
   \   0000C5   02....       LJMP    ?Subroutine0 & 0xFFFF
    363          
    364          /*********************************************************************
    365           * @fn      Smart_home_HandleKeys
    366           *
    367           * @brief   Handles all key events for this device.
    368           *
    369           * @param   shift - true if in shift/alt.
    370           * @param   keys  - bit field for key events.
    371           *
    372           * @return  none
    373           */
    374          void Smart_home_HandleKeys( uint8 shift, uint8 keys )
    375          {
    376            
    377            if ( keys & HAL_KEY_SW_5 )
    378            {
    379              gasFlameBuf[0] = 1;
    380            }
    381          
    382          }
    383          
    384          /*********************************************************************
    385           * @fn      Smart_home_ProcessMSGCmd
    386           *
    387           * @brief   Data message processor callback. This function processes
    388           *          any incoming data - probably from other devices. Based
    389           *          on the cluster ID, perform the intended action.
    390           *
    391           * @param   pkt - pointer to the incoming message packet
    392           *
    393           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    394           *          FALSE otherwise.
    395           */
    396          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
    397          {
    398            uint8 mode;
                         ^
Warning[Pe177]: variable "mode" was declared but never referenced
    399            
    400            switch ( pkt->clusterId )
    401            {
    402              case Smart_home_CLUSTERID_GASFLAMEMSG:
    403              {    
    404                break;
    405              } 
    406              // Could receive control messages in the future.
    407              default:
    408                break;
    409            }
    410          }
    411          
    412          /*********************************************************************
    413           * @fn      Smart_home_Send
    414           *
    415           * @brief   Send data OTA.
    416           *
    417           * @param   none
    418           *
    419           * @return  none
    420           */
    421          static void Smart_home_Send(void)
    422          {
    423            uint8 tmp; 
    424            
    425            do{
    426              // put the sequence number in the message
    427              tmp = HI_UINT8( Smart_home_MsgID );
    428              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    429              Coordinator_Msg[2] = tmp;
    430              tmp = LO_UINT8( Smart_home_MsgID );
    431              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    432              Coordinator_Msg[3] = tmp;
    433              
    434              // 发送给协调器命令 
    435              Coordinator_Msg[4] = gasFlameBuf[1]<<1 | gasFlameBuf[0];  //0位气体报警，1位火焰
    436              
    437              tmp = AF_DataRequest( &Coordinator_DstAddr,                         
    438                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    439                                     Smart_home_CLUSTERID_GASFLAMEMSG,
    440                                     GASFLAMEMSG_LEN,                 
    441                                     Coordinator_Msg,                    
    442                                    &Smart_home_MsgID,                       
    443                                     AF_DISCV_ROUTE,                     
    444                                     AF_DEFAULT_RADIUS );
    445            }while (afStatus_SUCCESS == tmp);   
    446            
    447            // 发送成功后清除报警信息
    448            gasFlameBuf[0] = 0;
    449            gasFlameBuf[1] = 0;  
    450          }
    451          
    452          /*********************************************************************
    453           * @fn      Smart_home_Resp
    454           *
    455           * @brief   Send data OTA.
    456           *
    457           * @param   none
    458           *
    459           * @return  none
    460           */
    461          static void Smart_home_Resp(void)
    462          {
    463            /*
    464            if (afStatus_SUCCESS != AF_DataRequest(&Smart_home_RxAddr,
    465                                                   (endPointDesc_t *)&Smart_home_epDesc,
    466                                                    Smart_home_CLUSTERID2,
    467                                                    SERIAL_APP_RSP_CNT, Smart_home_RspBuf,
    468                                                   &Smart_home_MsgID, 0, AF_DEFAULT_RADIUS))
    469            {
    470              osal_set_event(Smart_home_TaskID, SMART_HOME_BINDRSP_EVT);
    471            }
    472            */
    473          }
    474          
    475          
    476          /*********************************************************************
    477           * @fn      Smart_home_CHECK_EVT()
    478           *
    479           * @brief   Send data OTA.
    480           *
    481           * @param   none
    482           *
    483           * @return  none
    484           */
    485          static void Smart_home_CHECK_EVT(void)
    486          {

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    487            static uint8 gasAlertCnt, flameAlertCnt;
   \                     ??gasAlertCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??flameAlertCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    488            
    489            // MQ2烟雾气体检测
    490            if (HalGasCheck())
    491            {
    492              gasAlertCnt++;
    493            }
    494            
    495            // 火焰检测
    496            if (HalFlameCheck())
    497            {
    498              flameAlertCnt++;
    499            }
    500            
    501            if (gasAlertCnt > ALARM_MAX_CNT)
    502            {
    503              gasFlameBuf[0] = 1;
    504              gasAlertCnt = 0;
    505            }
    506            
    507            if (flameAlertCnt > ALARM_MAX_CNT)
    508            {
    509              gasFlameBuf[1] = 1;
    510              flameAlertCnt = 0;
    511            }
    512          }
    513          
    514          /*********************************************************************
    515           * @fn      Smart_home_CallBack
    516           *
    517           * @brief   Send data OTA.
    518           *
    519           * @param   port - UART port.
    520           * @param   event - the UART port event flag.
    521           *
    522           * @return  none
    523           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    524          static void Smart_home_CallBack(uint8 port, uint8 event)
   \                     Smart_home_CallBack:
    525          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    526          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessZDOMsgs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessZDOMsgs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_CallBack

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Bind Success!\\n">`:
   \   000000   42696E64     DB "Bind Success!\012"
   \            20537563
   \            63657373
   \            210A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Match Success!\\n">`:
   \   000000   4D617463     DB "Match Success!\012"
   \            68205375
   \            63636573
   \            73210A00
    527          
    528          /*********************************************************************
    529          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_CallBack                0      0      0
     Smart_home_Init                    0      0     38
       -> afRegister                    0      0     76
       -> RegisterForKeys               0      0     76
       -> HalUARTOpen                   0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> HalGasFlameInit               0      0     76
       -> osal_start_reload_timer       0      0     76
       -> osal_start_reload_timer       0      0     76
     Smart_home_ProcessEvent            2      0     30
       -> ZDP_MatchDescReq              0      0     58
       -> osal_msg_deallocate           0      0     42
       -> osal_msg_receive              0      0     42
       -> Smart_home_ProcessZDOMsgs     0      0     42
       -> AF_DataRequest                0      0     60
       -> HalGasCheck                   0      0     42
       -> HalFlameCheck                 0      0     42
     Smart_home_ProcessZDOMsgs          0      0     33
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> ZDO_ParseEPListRsp            0      0     24
       -> osal_stop_timerEx             0      0     24
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> osal_start_reload_timer       0      0     24
       -> osal_mem_free                 0      0     24


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     Smart_home_ClusterList_IN            2
     Smart_home_ClusterList_OUT           2
     Smart_home_SimpleDesc               12
     Smart_home_epDesc                    6
     Coordinator_DstAddr                 12
     gasFlameBuf                          2
     Smart_home_TaskID                    1
     Coordinator_Msg                      5
     Smart_home_MsgID                     1
     Smart_home_Init                    198
     ?Subroutine1                        11
     Smart_home_ProcessEvent            448
     ?Subroutine0                         5
     Smart_home_ProcessZDOMsgs          200
     gasAlertCnt                          1
     flameAlertCnt                        1
     Smart_home_CallBack                  3
     ??Smart_home_Init?relay              6
     ??Smart_home_ProcessEvent?relay      6
     ??Smart_home_ProcessZDOMsgs?relay    6
     ??Smart_home_CallBack?relay          6
     ?<Constant "Bind Success!\n">       15
     ?<Constant "Match Success!\n">      16

 
 865 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
  53 bytes in segment XDATA_ROM_C
  23 bytes in segment XDATA_Z
 
 889 bytes of CODE  memory
  53 bytes of CONST memory
  23 bytes of XDATA memory

Errors: none
Warnings: 5
