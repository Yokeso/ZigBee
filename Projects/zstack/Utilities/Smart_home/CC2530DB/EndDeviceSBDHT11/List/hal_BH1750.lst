###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         14/Apr/2021  19:06:30 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Components\hal\target\CC #
#                          2530SB\hal_BH1750.c                                #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x00000800                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\C #
#                          omponents\hal\target\CC2530SB\hal_BH1750.c -D      #
#                          HAL_UART=TRUE -D HAL_UART_TEST -D xPOWER_SAVING    #
#                          -lC D:\毕设\CC2530-smart_home\Projects\zstack\Util #
#                          ities\Smart_home\CC2530DB\EndDeviceSBDHT11\List\   #
#                          -lA D:\毕设\CC2530-smart_home\Projects\zstack\Util #
#                          ities\Smart_home\CC2530DB\EndDeviceSBDHT11\List\   #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBDHT11\Obj\ -e     #
#                          --no_cse --no_unroll --no_inline --no_code_motion  #
#                          --no_tbaa --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530SB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -On                                 #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBDHT11\List\hal_BH #
#                          1750.lst                                           #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBDHT11\Obj\hal_BH1 #
#                          750.r51                                            #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Components\hal\target\CC2530SB\hal_BH1750.c
      1          /*****************************************************************************
      2          *
      3          * 文 件 名：hal_BH1750.c
      4          
      5          * 作    者: 南京安宸博研电子科技有限公司
      6          
      7          * 创建时间: 2019.04.01
      8          
      9          * 修改时间: 2019.04.21
     10          
     11          * IAR 版本: IAR for 8051 V8.10.1
     12          
     13          * 测试平台: Sensor MotherBoard V2.3
     14          
     15          * 说    明: 1. 设置I2C接口涉及的相关GPIO.
     16          *           2. 利用GPIO口模拟I2C总线的读写等操作.
     17          *                               
     18          *****************************************************************************/
     19          
     20          #include "iocc2530.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
     21          #include "hal_types.h"
     22          #include "hal_mcu.h"
     23          
     24          // 功能函数的宏定义
     25          #define st(x)                             do { x } while (__LINE__ == -1)
     26          #define HAL_IO_SET(port, pin, val)        HAL_IO_SET_PREP(port, pin, val)
     27          #define HAL_IO_SET_PREP(port, pin, val)   st( P##port##_##pin## = val; )
     28          #define HAL_IO_GET(port, pin)             HAL_IO_GET_PREP( port,pin)
     29          #define HAL_IO_GET_PREP(port, pin)        (P##port##_##pin)
     30          
     31          // I2C总线相关GPIO口宏定义, 针对MCU而言
     32          #define SET_SDA_PIN_OUTPUT     (P1DIR |=0x10  )
     33          #define SET_SDA_PIN_INPUT      (P1DIR &=~0x10 )
     34          #define SET_SCL_PIN_OUTPUT     (P1DIR |=0x04  )
     35          #define SET_DVI_PIN_OUTPUT     (P1DIR |=0x08  )
     36          
     37          #define SET_SCL_LOW             HAL_IO_SET(1,2,0)
     38          #define SET_SCL_HIGH            HAL_IO_SET(1,2,1)
     39          #define SET_SDA_LOW             HAL_IO_SET(1,4,0)
     40          #define SET_SDA_HIGH            HAL_IO_SET(1,4,1)
     41          #define SET_DVI_LOW             HAL_IO_SET(1,3,0)
     42          #define SET_DVI_HIGH            HAL_IO_SET(1,3,1)
     43          
     44          #define GET_SDA_DATA            HAL_IO_GET(1,4)
     45          
     46          // ADDR引脚接地, 最低位为读写位
     47          #define BH1750_ADDR     0x46
     48          #define READ_CMD        0x01
     49          
     50          // BH1750操作命令
     51          #define POWER_DOWN      0x00    // 断电
     52          #define POWER_ON        0x01    // 上电
     53          #define RESET           0x07    // 复位
     54          #define CON_HR_MODE     0x10    // 连续H分辨率, 1lx分辨率, 测量时间一120ms
     55          #define CON_HR_MODE2    0x11    // 连续H分辨率2, 0.5lx分辨率, 测量时间为120ms
     56          #define CON_LR_MODE     0x13    // 连续低分辨, 4lx分辨率, 测量时间一16ms
     57          // 一次测量后, 自动处于断电模式
     58          #define ONCE_HR_MODE    0x20    // 一次H分辨率, 1lx分辨率, 测量时间一120ms
     59          #define ONCE_HR_MODE2   0x21    // 一次H分辨率2, 0.5lx分辨率, 测量时间为120ms
     60          #define ONCE_LR_MODE    0x23    // 一次L分辨率模式4lx分辨率, 测量时间一16ms
     61          
     62          /*****************************************************************************
     63           * @fn          I2C_DelayNus
     64           *
     65           * @brief       裸机条件下、时钟频率为32MHz时实现N个微秒的延时(不精确).
     66           *
     67           * @param       n--延时长度
     68           *
     69           * @return      none
     70           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     71          void I2C_DelayNus(uint16 cnt)
   \                     I2C_DelayNus:
     72          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     73              while (cnt--)
   \                     ??I2C_DelayNus_0:
   \   000000   EA           MOV     A,R2
   \   000001   F8           MOV     R0,A
   \   000002   EB           MOV     A,R3
   \   000003   F9           MOV     R1,A
   \   000004   E8           MOV     A,R0
   \   000005   24FF         ADD     A,#-0x1
   \   000007   FA           MOV     R2,A
   \   000008   E9           MOV     A,R1
   \   000009   34FF         ADDC    A,#-0x1
   \   00000B   FB           MOV     R3,A
   \   00000C   E8           MOV     A,R0
   \   00000D   49           ORL     A,R1
   \   00000E   6005         JZ      ??I2C_DelayNus_1
     74              {
     75                  asm("NOP");  
   \   000010   00           NOP
     76                  asm("NOP");
   \   000011   00           NOP
     77                  asm("NOP");
   \   000012   00           NOP
   \   000013   80EB         SJMP    ??I2C_DelayNus_0
     78              }
     79          }
   \                     ??I2C_DelayNus_1:
   \   000015   02....       LJMP    ?BRET
     80          
     81          /*****************************************************************************
     82           * @fn          I2C_Start
     83           *
     84           * @brief       启动I2C, 占用总线, 数据在时钟高电平的时候从高往低跃变.
     85           *
     86           * @param       none
     87           *
     88           * @return      none
     89           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     90          void I2C_Start(void)
   \                     I2C_Start:
     91          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     92              SET_SDA_PIN_OUTPUT;
   \   000004   43FE10       ORL     0xfe,#0x10
     93              SET_SDA_HIGH;
   \   000007   D294         SETB    0x90.4
     94              I2C_DelayNus(10);
   \   000009                ; Setup parameters for call to function I2C_DelayNus
   \   000009   7A0A         MOV     R2,#0xa
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   12....       LCALL   ??I2C_DelayNus?relay
     95              SET_SCL_HIGH;
   \   000010   D292         SETB    0x90.2
     96              I2C_DelayNus(10);
   \   000012                ; Setup parameters for call to function I2C_DelayNus
   \   000012   7A0A         MOV     R2,#0xa
   \   000014   7B00         MOV     R3,#0x0
   \   000016   12....       LCALL   ??I2C_DelayNus?relay
     97              SET_SDA_LOW;
   \   000019   C294         CLR     0x90.4
     98              I2C_DelayNus(10);
   \   00001B                ; Setup parameters for call to function I2C_DelayNus
   \   00001B   7A0A         MOV     R2,#0xa
   \   00001D   7B00         MOV     R3,#0x0
   \   00001F   12....       LCALL   ??I2C_DelayNus?relay
     99              SET_SCL_LOW;
   \   000022   C292         CLR     0x90.2
    100              I2C_DelayNus(10);
   \   000024                ; Setup parameters for call to function I2C_DelayNus
   \   000024   7A0A         MOV     R2,#0xa
   \   000026   7B00         MOV     R3,#0x0
   \   000028   12....       LCALL   ??I2C_DelayNus?relay
    101          }
   \   00002B   D083         POP     DPH
   \   00002D   D082         POP     DPL
   \   00002F   02....       LJMP    ?BRET
   \   000032                REQUIRE P1DIR
   \   000032                REQUIRE _A_P1
    102          
    103          /*****************************************************************************
    104           * @fn          I2C_Stop
    105           *
    106           * @brief       结束I2C, 释放总线, 数据在时钟高电平的时候从低往高跃变.
    107           *
    108           * @param       none
    109           *
    110           * @return      none
    111           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    112          void I2C_Stop(void)
   \                     I2C_Stop:
    113          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    114              SET_SDA_PIN_OUTPUT ;
   \   000004   43FE10       ORL     0xfe,#0x10
    115              SET_SCL_LOW ;
   \   000007   C292         CLR     0x90.2
    116              I2C_DelayNus(10);
   \   000009                ; Setup parameters for call to function I2C_DelayNus
   \   000009   7A0A         MOV     R2,#0xa
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   12....       LCALL   ??I2C_DelayNus?relay
    117              SET_SDA_LOW ;
   \   000010   C294         CLR     0x90.4
    118              I2C_DelayNus(10);
   \   000012                ; Setup parameters for call to function I2C_DelayNus
   \   000012   7A0A         MOV     R2,#0xa
   \   000014   7B00         MOV     R3,#0x0
   \   000016   12....       LCALL   ??I2C_DelayNus?relay
    119              SET_SCL_HIGH ;
   \   000019   D292         SETB    0x90.2
    120              I2C_DelayNus(10);
   \   00001B                ; Setup parameters for call to function I2C_DelayNus
   \   00001B   7A0A         MOV     R2,#0xa
   \   00001D   7B00         MOV     R3,#0x0
   \   00001F   12....       LCALL   ??I2C_DelayNus?relay
    121              SET_SDA_HIGH ;
   \   000022   D294         SETB    0x90.4
    122              I2C_DelayNus(10);
   \   000024                ; Setup parameters for call to function I2C_DelayNus
   \   000024   7A0A         MOV     R2,#0xa
   \   000026   7B00         MOV     R3,#0x0
   \   000028   12....       LCALL   ??I2C_DelayNus?relay
    123              SET_SCL_LOW ;
   \   00002B   C292         CLR     0x90.2
    124              I2C_DelayNus(10);
   \   00002D                ; Setup parameters for call to function I2C_DelayNus
   \   00002D   7A0A         MOV     R2,#0xa
   \   00002F   7B00         MOV     R3,#0x0
   \   000031   12....       LCALL   ??I2C_DelayNus?relay
    125          }
   \   000034   D083         POP     DPH
   \   000036   D082         POP     DPL
   \   000038   02....       LJMP    ?BRET
   \   00003B                REQUIRE P1DIR
   \   00003B                REQUIRE _A_P1
    126          
    127          /*****************************************************************************
    128           * @fn          I2C_Write
    129           *
    130           * @brief       发送字节并且判断是否收到ACK(低电平), 高位先发送.
    131           *
    132           * @param       none
    133           *
    134           * @return      0: 收到ACK; 1: 未收到ACK.
    135           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    136          uint8 I2C_Write(uint8 val)                 
   \                     I2C_Write:
    137          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
    138              uint8 tmpData, rtnData;
    139              uint8 cnt;
    140              halIntState_t intState;
    141              
    142              tmpData = 0x80;
   \   000007   75..80       MOV     ?V0 + 1,#-0x80
    143              SET_SDA_PIN_OUTPUT;
   \   00000A   43FE10       ORL     0xfe,#0x10
    144          
    145              // 循环发送8位数据   
    146              for(cnt=0; cnt<8; cnt++)
   \   00000D   7F00         MOV     R7,#0x0
   \                     ??I2C_Write_0:
   \   00000F   EF           MOV     A,R7
   \   000010   C3           CLR     C
   \   000011   9408         SUBB    A,#0x8
   \   000013   502E         JNC     ??I2C_Write_1
    147              {
    148                  if(val & tmpData)
   \   000015   E5..         MOV     A,?V0 + 0
   \   000017   55..         ANL     A,?V0 + 1
   \   000019   6004         JZ      ??I2C_Write_2
    149                  {
    150                      SET_SDA_HIGH;
   \   00001B   D294         SETB    0x90.4
   \   00001D   8002         SJMP    ??I2C_Write_3
    151                  }
    152                  else
    153                  {
    154                      SET_SDA_LOW;
   \                     ??I2C_Write_2:
   \   00001F   C294         CLR     0x90.4
    155                  }
    156                  I2C_DelayNus(10);
   \                     ??I2C_Write_3:
   \   000021                ; Setup parameters for call to function I2C_DelayNus
   \   000021   7A0A         MOV     R2,#0xa
   \   000023   7B00         MOV     R3,#0x0
   \   000025   12....       LCALL   ??I2C_DelayNus?relay
    157                  SET_SCL_HIGH ; 
   \   000028   D292         SETB    0x90.2
    158                  I2C_DelayNus(10);
   \   00002A                ; Setup parameters for call to function I2C_DelayNus
   \   00002A   7A0A         MOV     R2,#0xa
   \   00002C   7B00         MOV     R3,#0x0
   \   00002E   12....       LCALL   ??I2C_DelayNus?relay
    159                  SET_SCL_LOW ;
   \   000031   C292         CLR     0x90.2
    160                  I2C_DelayNus(10);
   \   000033                ; Setup parameters for call to function I2C_DelayNus
   \   000033   7A0A         MOV     R2,#0xa
   \   000035   7B00         MOV     R3,#0x0
   \   000037   12....       LCALL   ??I2C_DelayNus?relay
    161                  tmpData = tmpData>>1;   // 右移一位             
   \   00003A   E5..         MOV     A,?V0 + 1
   \   00003C   C3           CLR     C
   \   00003D   13           RRC     A
   \   00003E   F5..         MOV     ?V0 + 1,A
    162               }
   \   000040   0F           INC     R7
   \   000041   80CC         SJMP    ??I2C_Write_0
    163          
    164              // 接收并判别ACK信号
    165              I2C_DelayNus(10);
   \                     ??I2C_Write_1:
   \   000043                ; Setup parameters for call to function I2C_DelayNus
   \   000043   7A0A         MOV     R2,#0xa
   \   000045   7B00         MOV     R3,#0x0
   \   000047   12....       LCALL   ??I2C_DelayNus?relay
    166              HAL_ENTER_CRITICAL_SECTION(intState);
   \   00004A   A2AF         MOV     C,0xa8.7
   \   00004C   E4           CLR     A
   \   00004D   33           RLC     A
   \   00004E   F5..         MOV     ?V0 + 2,A
   \   000050   C2AF         CLR     0xa8.7
    167              SET_SDA_PIN_INPUT;
   \   000052   53FEEF       ANL     0xfe,#0xef
    168              I2C_DelayNus(10);
   \   000055                ; Setup parameters for call to function I2C_DelayNus
   \   000055   7A0A         MOV     R2,#0xa
   \   000057   7B00         MOV     R3,#0x0
   \   000059   12....       LCALL   ??I2C_DelayNus?relay
    169              SET_SCL_HIGH; 
   \   00005C   D292         SETB    0x90.2
    170              I2C_DelayNus(10);
   \   00005E                ; Setup parameters for call to function I2C_DelayNus
   \   00005E   7A0A         MOV     R2,#0xa
   \   000060   7B00         MOV     R3,#0x0
   \   000062   12....       LCALL   ??I2C_DelayNus?relay
    171              if(GET_SDA_DATA)
   \   000065   A294         MOV     C,0x90.4
   \   000067   5004         JNC     ??I2C_Write_4
    172              {
    173                  rtnData = 1; // 未收到ACK信号
   \   000069   7E01         MOV     R6,#0x1
   \   00006B   8002         SJMP    ??I2C_Write_5
    174              }
    175              else
    176              {
    177                  rtnData = 0; // 收到ACK信号
   \                     ??I2C_Write_4:
   \   00006D   7E00         MOV     R6,#0x0
    178              }
    179              HAL_EXIT_CRITICAL_SECTION(intState);
   \                     ??I2C_Write_5:
   \   00006F   E5..         MOV     A,?V0 + 2
   \   000071   A2E0         MOV     C,0xE0 /* A   */.0
   \   000073   92AF         MOV     0xa8.7,C
    180              I2C_DelayNus(10);
   \   000075                ; Setup parameters for call to function I2C_DelayNus
   \   000075   7A0A         MOV     R2,#0xa
   \   000077   7B00         MOV     R3,#0x0
   \   000079   12....       LCALL   ??I2C_DelayNus?relay
    181              SET_SCL_LOW;
   \   00007C   C292         CLR     0x90.2
    182          
    183              return(rtnData); 
   \   00007E   EE           MOV     A,R6
   \   00007F   F9           MOV     R1,A
   \   000080   7F03         MOV     R7,#0x3
   \   000082   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000085                REQUIRE P1DIR
   \   000085                REQUIRE _A_P1
   \   000085                REQUIRE _A_IEN0
    184          }
    185          
    186          /*****************************************************************************
    187           * @fn          I2C_Read
    188           *
    189           * @brief       MCU读取一个字节，根据mode参数, 发送ACK(低电平)或NACK(高电平).
    190           *
    191           * @param       mode : 1--数据读取未结束, 0--结束数据读取.
    192           *
    193           * @return      读取的数据
    194           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    195          uint8 I2C_Read(uint8 mode)
   \                     I2C_Read:
    196          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
    197              uint8 cnt;
    198              uint8 val, tmpData;
    199              halIntState_t intState;
    200              
    201              val = 0;
   \   000007   75..00       MOV     ?V0 + 0,#0x0
    202              tmpData = 0x80;
   \   00000A   75..80       MOV     ?V0 + 1,#-0x80
    203              SET_SDA_HIGH;
   \   00000D   D294         SETB    0x90.4
    204              // 循环读取8位数据
    205              for(cnt=0; cnt<8; cnt++)
   \   00000F   7E00         MOV     R6,#0x0
   \                     ??I2C_Read_0:
   \   000011   EE           MOV     A,R6
   \   000012   C3           CLR     C
   \   000013   9408         SUBB    A,#0x8
   \   000015   503B         JNC     ??I2C_Read_1
    206              {       
    207                  SET_SCL_HIGH;
   \   000017   D292         SETB    0x90.2
    208                  HAL_ENTER_CRITICAL_SECTION(intState);
   \   000019   A2AF         MOV     C,0xa8.7
   \   00001B   E4           CLR     A
   \   00001C   33           RLC     A
   \   00001D   F5..         MOV     ?V0 + 2,A
   \   00001F   C2AF         CLR     0xa8.7
    209                  SET_SDA_PIN_INPUT;
   \   000021   53FEEF       ANL     0xfe,#0xef
    210                  I2C_DelayNus(10);
   \   000024                ; Setup parameters for call to function I2C_DelayNus
   \   000024   7A0A         MOV     R2,#0xa
   \   000026   7B00         MOV     R3,#0x0
   \   000028   12....       LCALL   ??I2C_DelayNus?relay
    211                  if(GET_SDA_DATA)
   \   00002B   A294         MOV     C,0x90.4
   \   00002D   5004         JNC     ??I2C_Read_2
    212                  {
    213                      val |= tmpData;
   \   00002F   E5..         MOV     A,?V0 + 1
   \   000031   42..         ORL     ?V0 + 0,A
    214                  }
    215                  HAL_EXIT_CRITICAL_SECTION(intState);
   \                     ??I2C_Read_2:
   \   000033   E5..         MOV     A,?V0 + 2
   \   000035   A2E0         MOV     C,0xE0 /* A   */.0
   \   000037   92AF         MOV     0xa8.7,C
    216                  tmpData = tmpData>>1;
   \   000039   E5..         MOV     A,?V0 + 1
   \   00003B   C3           CLR     C
   \   00003C   13           RRC     A
   \   00003D   F5..         MOV     ?V0 + 1,A
    217                  I2C_DelayNus(10);
   \   00003F                ; Setup parameters for call to function I2C_DelayNus
   \   00003F   7A0A         MOV     R2,#0xa
   \   000041   7B00         MOV     R3,#0x0
   \   000043   12....       LCALL   ??I2C_DelayNus?relay
    218                  SET_SCL_LOW ;
   \   000046   C292         CLR     0x90.2
    219                  I2C_DelayNus(10);                    
   \   000048                ; Setup parameters for call to function I2C_DelayNus
   \   000048   7A0A         MOV     R2,#0xa
   \   00004A   7B00         MOV     R3,#0x0
   \   00004C   12....       LCALL   ??I2C_DelayNus?relay
    220              }
   \   00004F   0E           INC     R6
   \   000050   80BF         SJMP    ??I2C_Read_0
    221              // MCU发送ACK或NACK信号
    222              SET_SDA_PIN_OUTPUT;
   \                     ??I2C_Read_1:
   \   000052   43FE10       ORL     0xfe,#0x10
    223              if(mode)
   \   000055   EF           MOV     A,R7
   \   000056   6004         JZ      ??I2C_Read_3
    224              {
    225                  SET_SDA_LOW;
   \   000058   C294         CLR     0x90.4
   \   00005A   8002         SJMP    ??I2C_Read_4
    226              }
    227              else
    228              {
    229                  SET_SDA_HIGH;
   \                     ??I2C_Read_3:
   \   00005C   D294         SETB    0x90.4
    230              }
    231              I2C_DelayNus(10);
   \                     ??I2C_Read_4:
   \   00005E                ; Setup parameters for call to function I2C_DelayNus
   \   00005E   7A0A         MOV     R2,#0xa
   \   000060   7B00         MOV     R3,#0x0
   \   000062   12....       LCALL   ??I2C_DelayNus?relay
    232              SET_SCL_HIGH ;
   \   000065   D292         SETB    0x90.2
    233              I2C_DelayNus(10);
   \   000067                ; Setup parameters for call to function I2C_DelayNus
   \   000067   7A0A         MOV     R2,#0xa
   \   000069   7B00         MOV     R3,#0x0
   \   00006B   12....       LCALL   ??I2C_DelayNus?relay
    234              SET_SCL_LOW ;   // 置时钟线为空闲状态
   \   00006E   C292         CLR     0x90.2
    235              SET_SDA_HIGH;   // 置数据线为空闲状态
   \   000070   D294         SETB    0x90.4
    236              
    237              return val;
   \   000072   A9..         MOV     R1,?V0 + 0
   \   000074   7F03         MOV     R7,#0x3
   \   000076   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000079                REQUIRE _A_P1
   \   000079                REQUIRE _A_IEN0
   \   000079                REQUIRE P1DIR
    238          }
    239          
    240          /*********************************************************************
    241           * @fn      BH1750_Init
    242           *
    243           * @brief   BH1750初始化
    244           *
    245           * @param   none
    246           *
    247           * @return  none
    248           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    249          void BH1750_Init(void)
   \                     BH1750_Init:
    250          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    251              SET_SCL_PIN_OUTPUT;
   \   000004   43FE04       ORL     0xfe,#0x4
    252              SET_DVI_PIN_OUTPUT;
   \   000007   43FE08       ORL     0xfe,#0x8
    253              // 复位芯片
    254              SET_DVI_LOW;
   \   00000A   C293         CLR     0x90.3
    255              I2C_DelayNus(10);
   \   00000C                ; Setup parameters for call to function I2C_DelayNus
   \   00000C   7A0A         MOV     R2,#0xa
   \   00000E   7B00         MOV     R3,#0x0
   \   000010   12....       LCALL   ??I2C_DelayNus?relay
    256              SET_DVI_HIGH;
   \   000013   D293         SETB    0x90.3
    257              I2C_DelayNus(100);
   \   000015                ; Setup parameters for call to function I2C_DelayNus
   \   000015   7A64         MOV     R2,#0x64
   \   000017   7B00         MOV     R3,#0x0
   \   000019   12....       LCALL   ??I2C_DelayNus?relay
    258          }
   \   00001C   D083         POP     DPH
   \   00001E   D082         POP     DPL
   \   000020   02....       LJMP    ?BRET
   \   000023                REQUIRE P1DIR
   \   000023                REQUIRE _A_P1
    259          
    260          /*********************************************************************
    261           * @fn      BH1750_ConvertLight
    262           *
    263           * @brief   读取BH1750光照信息
    264           *
    265           * @param   none
    266           *
    267           * @return  光照度值(1~65535lx)
    268           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    269          uint16 BH1750_ConvertLight(void)
   \                     BH1750_ConvertLight:
    270          {        
   \   000000   74EC         MOV     A,#-0x14
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 20
   \   000005                ; Auto size: 0
    271              uint8 tmpData;
    272              uint16 lightData = 0;
   \   000005   7E00         MOV     R6,#0x0
   \   000007   7F00         MOV     R7,#0x0
    273              
    274              // 初始化BH1750及其相关引脚
    275              BH1750_Init();
   \   000009                ; Setup parameters for call to function BH1750_Init
   \   000009   12....       LCALL   ??BH1750_Init?relay
    276              
    277              // 启动总线
    278              I2C_Start();
   \   00000C                ; Setup parameters for call to function I2C_Start
   \   00000C   12....       LCALL   ??I2C_Start?relay
    279              if(I2C_Write(BH1750_ADDR))
   \   00000F                ; Setup parameters for call to function I2C_Write
   \   00000F   7946         MOV     R1,#0x46
   \   000011   12....       LCALL   ??I2C_Write?relay
   \   000014   E9           MOV     A,R1
   \   000015   6007         JZ      ??BH1750_ConvertLight_0
    280              {
    281                  return(0);  // 未收到ACK, 返回０
   \   000017   7A00         MOV     R2,#0x0
   \   000019   7B00         MOV     R3,#0x0
   \   00001B   02....       LJMP    ??BH1750_ConvertLight_1 & 0xFFFF
    282              }
    283              // 上电
    284              if(I2C_Write(POWER_ON))
   \                     ??BH1750_ConvertLight_0:
   \   00001E                ; Setup parameters for call to function I2C_Write
   \   00001E   7901         MOV     R1,#0x1
   \   000020   12....       LCALL   ??I2C_Write?relay
   \   000023   E9           MOV     A,R1
   \   000024   6007         JZ      ??BH1750_ConvertLight_2
    285              {
    286                   return(0);  // 未收到ACK, 返回０
   \   000026   7A00         MOV     R2,#0x0
   \   000028   7B00         MOV     R3,#0x0
   \   00002A   02....       LJMP    ??BH1750_ConvertLight_1 & 0xFFFF
    287              }
    288              I2C_Stop();
   \                     ??BH1750_ConvertLight_2:
   \   00002D                ; Setup parameters for call to function I2C_Stop
   \   00002D   12....       LCALL   ??I2C_Stop?relay
    289              
    290              // 开始测量
    291              I2C_Start();
   \   000030                ; Setup parameters for call to function I2C_Start
   \   000030   12....       LCALL   ??I2C_Start?relay
    292              if(I2C_Write(BH1750_ADDR))
   \   000033                ; Setup parameters for call to function I2C_Write
   \   000033   7946         MOV     R1,#0x46
   \   000035   12....       LCALL   ??I2C_Write?relay
   \   000038   E9           MOV     A,R1
   \   000039   6006         JZ      ??BH1750_ConvertLight_3
    293              {
    294                  return(0);  // 未收到ACK, 返回０
   \   00003B   7A00         MOV     R2,#0x0
   \   00003D   7B00         MOV     R3,#0x0
   \   00003F   807B         SJMP    ??BH1750_ConvertLight_1
    295              }
    296              // 设置为连续Ｈ分辨率模式
    297              if(I2C_Write(CON_HR_MODE))
   \                     ??BH1750_ConvertLight_3:
   \   000041                ; Setup parameters for call to function I2C_Write
   \   000041   7910         MOV     R1,#0x10
   \   000043   12....       LCALL   ??I2C_Write?relay
   \   000046   E9           MOV     A,R1
   \   000047   6006         JZ      ??BH1750_ConvertLight_4
    298              {
    299                   return(0);  // 未收到ACK, 返回０
   \   000049   7A00         MOV     R2,#0x0
   \   00004B   7B00         MOV     R3,#0x0
   \   00004D   806D         SJMP    ??BH1750_ConvertLight_1
    300              }
    301              I2C_Stop();
   \                     ??BH1750_ConvertLight_4:
   \   00004F                ; Setup parameters for call to function I2C_Stop
   \   00004F   12....       LCALL   ??I2C_Stop?relay
    302          
    303              // 转换时间120ms
    304              I2C_DelayNus(20000);
   \   000052                ; Setup parameters for call to function I2C_DelayNus
   \   000052   7A20         MOV     R2,#0x20
   \   000054   7B4E         MOV     R3,#0x4e
   \   000056   12....       LCALL   ??I2C_DelayNus?relay
    305              
    306              I2C_Start();
   \   000059                ; Setup parameters for call to function I2C_Start
   \   000059   12....       LCALL   ??I2C_Start?relay
    307              if(I2C_Write(BH1750_ADDR + READ_CMD))
   \   00005C                ; Setup parameters for call to function I2C_Write
   \   00005C   7947         MOV     R1,#0x47
   \   00005E   12....       LCALL   ??I2C_Write?relay
   \   000061   E9           MOV     A,R1
   \   000062   6006         JZ      ??BH1750_ConvertLight_5
    308              {
    309                  return(0);  // 未收到ACK, 返回０
   \   000064   7A00         MOV     R2,#0x0
   \   000066   7B00         MOV     R3,#0x0
   \   000068   8052         SJMP    ??BH1750_ConvertLight_1
    310              }
    311              tmpData = I2C_Read(1);      // 高字节数据
   \                     ??BH1750_ConvertLight_5:
   \   00006A                ; Setup parameters for call to function I2C_Read
   \   00006A   7901         MOV     R1,#0x1
   \   00006C   12....       LCALL   ??I2C_Read?relay
   \   00006F   E9           MOV     A,R1
   \   000070   F5..         MOV     ?V0 + 4,A
    312              lightData = I2C_Read(0);    // 低字节数据
   \   000072                ; Setup parameters for call to function I2C_Read
   \   000072   7900         MOV     R1,#0x0
   \   000074   12....       LCALL   ??I2C_Read?relay
   \   000077   E9           MOV     A,R1
   \   000078   F8           MOV     R0,A
   \   000079   7900         MOV     R1,#0x0
   \   00007B   FE           MOV     R6,A
   \   00007C   E9           MOV     A,R1
   \   00007D   FF           MOV     R7,A
    313              I2C_Stop();
   \   00007E                ; Setup parameters for call to function I2C_Stop
   \   00007E   12....       LCALL   ??I2C_Stop?relay
    314              
    315              lightData = (uint16)(((tmpData << 8) | lightData) / 1.2);
   \   000081   E5..         MOV     A,?V0 + 4
   \   000083   A8..         MOV     R0,?V0 + 4
   \   000085   7900         MOV     R1,#0x0
   \   000087   E4           CLR     A
   \   000088   C8           XCH     A,R0
   \   000089   F9           MOV     R1,A
   \   00008A   E8           MOV     A,R0
   \   00008B   4E           ORL     A,R6
   \   00008C   F5..         MOV     ?V0 + 0,A
   \   00008E   E9           MOV     A,R1
   \   00008F   4F           ORL     A,R7
   \   000090   F5..         MOV     ?V0 + 1,A
   \   000092   E4           CLR     A
   \   000093   F5..         MOV     ?V0 + 2,A
   \   000095   F5..         MOV     ?V0 + 3,A
   \   000097   78..         MOV     R0,#?V0 + 0
   \   000099   12....       LCALL   ?UL_TO_FLT
   \   00009C   90....       MOV     DPTR,#__Constant_3f99999a
   \   00009F   78..         MOV     R0,#?V0 + 8
   \   0000A1   12....       LCALL   ?L_MOV_X
   \   0000A4   78..         MOV     R0,#?V0 + 0
   \   0000A6   79..         MOV     R1,#?V0 + 8
   \   0000A8   12....       LCALL   ?FLT_DIV
   \   0000AB   78..         MOV     R0,#?V0 + 0
   \   0000AD   12....       LCALL   ?FLT_TO_L
   \   0000B0   AE..         MOV     R6,?V0 + 0
   \   0000B2   AF..         MOV     R7,?V0 + 1
    316              return lightData;
   \   0000B4   E5..         MOV     A,?V0 + 0
   \   0000B6   AA..         MOV     R2,?V0 + 0
   \   0000B8   E5..         MOV     A,?V0 + 1
   \   0000BA   AB..         MOV     R3,?V0 + 1
   \                     ??BH1750_ConvertLight_1:
   \   0000BC   7F0C         MOV     R7,#0xc
   \   0000BE   02....       LJMP    ?BANKED_LEAVE_XDATA
    317          }

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3f99999a:
   \   000000   9A99993F     DD 3F99999AH

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??I2C_DelayNus?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    I2C_DelayNus

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??I2C_Start?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    I2C_Start

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??I2C_Stop?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    I2C_Stop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??I2C_Write?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    I2C_Write

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??I2C_Read?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    I2C_Read

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BH1750_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BH1750_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??BH1750_ConvertLight?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    BH1750_ConvertLight

   Maximum stack usage in bytes:

     Function            ISTACK PSTACK XSTACK
     --------            ------ ------ ------
     BH1750_ConvertLight     0      0     20
       -> BH1750_Init        0      0     40
       -> I2C_Start          0      0     40
       -> I2C_Write          0      0     40
       -> I2C_Write          0      0     40
       -> I2C_Stop           0      0     40
       -> I2C_Start          0      0     40
       -> I2C_Write          0      0     40
       -> I2C_Write          0      0     40
       -> I2C_Stop           0      0     40
       -> I2C_DelayNus       0      0     40
       -> I2C_Start          0      0     40
       -> I2C_Write          0      0     40
       -> I2C_Read           0      0     40
       -> I2C_Read           0      0     40
       -> I2C_Stop           0      0     40
     BH1750_Init             2      0     20
       -> I2C_DelayNus       4      0      0
       -> I2C_DelayNus       4      0      0
     I2C_DelayNus            0      0     20
     I2C_Read                0      0     31
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
     I2C_Start               2      0     20
       -> I2C_DelayNus       4      0      0
       -> I2C_DelayNus       4      0      0
       -> I2C_DelayNus       4      0      0
       -> I2C_DelayNus       4      0      0
     I2C_Stop                2      0     20
       -> I2C_DelayNus       4      0      0
       -> I2C_DelayNus       4      0      0
       -> I2C_DelayNus       4      0      0
       -> I2C_DelayNus       4      0      0
       -> I2C_DelayNus       4      0      0
     I2C_Write               0      0     31
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22
       -> I2C_DelayNus       0      0     22


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     _A_P1                          1
     _A_IEN0                        1
     P1DIR                          1
     I2C_DelayNus                  24
     I2C_Start                     50
     I2C_Stop                      59
     I2C_Write                    133
     I2C_Read                     121
     BH1750_Init                   35
     BH1750_ConvertLight          193
     __Constant_3f99999a            4
     ??I2C_DelayNus?relay           6
     ??I2C_Start?relay              6
     ??I2C_Stop?relay               6
     ??I2C_Write?relay              6
     ??I2C_Read?relay               6
     ??BH1750_Init?relay            6
     ??BH1750_ConvertLight?relay    6

 
 615 bytes in segment BANKED_CODE
  42 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   4 bytes in segment XDATA_ROM_C
 
 657 bytes of CODE  memory
   0 bytes of CONST memory (+ 4 bytes shared)
   0 bytes of DATA  memory (+ 3 bytes shared)

Errors: none
Warnings: none
