###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         03/Jun/2021  00:00:34 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Components\hal\target\CC #
#                          2530SB\hal_DS18B20.c                               #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\C #
#                          omponents\hal\target\CC2530SB\hal_DS18B20.c -D     #
#                          HAL_UART=TRUE -D HAL_UART_TEST -D xPOWER_SAVING    #
#                          -lC D:\毕设\CC2530-smart_home\Projects\zstack\Util #
#                          ities\Smart_home\CC2530DB\EndDeviceSBDHT11\List\   #
#                          -lA D:\毕设\CC2530-smart_home\Projects\zstack\Util #
#                          ities\Smart_home\CC2530DB\EndDeviceSBDHT11\List\   #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBDHT11\Obj\ -e     #
#                          --no_cse --no_unroll --no_inline --no_code_motion  #
#                          --no_tbaa --debug --core=plain --dptr=16,1         #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530SB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -On                                 #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBDHT11\List\hal_DS #
#                          18B20.lst                                          #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBDHT11\Obj\hal_DS1 #
#                          8B20.r51                                           #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Components\hal\target\CC2530SB\hal_DS18B20.c
      1          /*****************************************************************************
      2          *
      3          * 文 件 名：hal_ds18b20.c
      4          * 作    者: 柳成林
      5          * 创建时间: 2021.3.15
      6          * 修改时间: 2021.5.10
      7          * 说    明: 1. DS18B20单线总线通信, CC2530与此通过P1_1管脚进行通信.
      8          *           2. DS18B20空闲状态时, 总线为高电平.
      9          *           3. 拉低总线480us可以复位DS18B20.
     10          *              需连续读取两次, 但不建议连续多次读取传感器, 每次读取传感器间隔
     11          *              大于5秒即可获得准确的数据.
     12          *           4. 测量的温度数值12位精度: 后4位是小数, 前面的5位空, 中间的7位是
     13          *              整数部分.
     14          *                               
     15          *****************************************************************************/
     16          
     17          // 头文件
     18          #include <ioCC2530.h>

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
     19          #include "hal_types.h"
     20          #include "hal_mcu.h"
     21          
     22          // 引脚宏定义, 输入/输出是针对MCU而言
     23          #define SET_DS18B20_PIN_HIGH    (P1_1 = 1)
     24          #define SET_DS18B20_PIN_LOW     (P1_1 = 0)
     25          #define SET_DS18B20_PIN_INPUT   (P1DIR &= ~0x02)
     26          #define SET_DS18B20_PIN_OUTPUT  (P1DIR |= 0x02)
     27          #define GET_DS18B20_PIN_DATA    (P1_1)
     28          
     29          
     30          // DS18B20相关命令
     31          #define CONVERT_T_CMD           0x44
     32          #define SKIP_ROM_CMD            0xCC
     33          #define READ_SCRATCHPAD_CMD     0xBE
     34          #define WRITE_SCRATCHPAD_CMD    0x4E
     35          
     36          /*****************************************************************************
     37           * @fn          HalDs18b20DelayNus
     38           *
     39           * @brief       裸机条件下、时钟频率为32MHz时实现N个微秒的延时(不精确).
     40           *
     41           * @param       n--延时长度
     42           *
     43           * @return      none
     44           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     45          void HalDs18b20DelayNus(uint16 cnt)
   \                     HalDs18b20DelayNus:
     46          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     47              while (cnt--)
   \                     ??HalDs18b20DelayNus_0:
   \   000000   EA           MOV     A,R2
   \   000001   F8           MOV     R0,A
   \   000002   EB           MOV     A,R3
   \   000003   F9           MOV     R1,A
   \   000004   E8           MOV     A,R0
   \   000005   24FF         ADD     A,#-0x1
   \   000007   FA           MOV     R2,A
   \   000008   E9           MOV     A,R1
   \   000009   34FF         ADDC    A,#-0x1
   \   00000B   FB           MOV     R3,A
   \   00000C   E8           MOV     A,R0
   \   00000D   49           ORL     A,R1
   \   00000E   6005         JZ      ??HalDs18b20DelayNus_1
     48              {
     49                  asm("NOP");  
   \   000010   00           NOP
     50                  asm("NOP");
   \   000011   00           NOP
     51                  asm("NOP");
   \   000012   00           NOP
   \   000013   80EB         SJMP    ??HalDs18b20DelayNus_0
     52              }
     53          }
   \                     ??HalDs18b20DelayNus_1:
   \   000015   02....       LJMP    ?BRET
     54          
     55          /*****************************************************************************
     56           * @fn          DS18B20_Init
     57           *
     58           * @brief       对DS18B20进行复位操作.
     59           *
     60           * @param       none
     61           *
     62           * @return      1--成功, 0--失败
     63           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     64          uint8 DS18B20_Init(void)
   \                     DS18B20_Init:
     65          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     66              uint8 opSts = 0;
   \   000005   7E00         MOV     R6,#0x0
     67              halIntState_t intState;
     68              
     69              SET_DS18B20_PIN_OUTPUT;
   \   000007   43FE02       ORL     0xfe,#0x2
     70              SET_DS18B20_PIN_LOW;
   \   00000A   C291         CLR     0x90.1
     71              HalDs18b20DelayNus(750);    // 480us以上的低电平复位脉冲
   \   00000C                ; Setup parameters for call to function HalDs18b20DelayNus
   \   00000C   7AEE         MOV     R2,#-0x12
   \   00000E   7B02         MOV     R3,#0x2
   \   000010   12....       LCALL   ??HalDs18b20DelayNus?relay
     72              
     73              SET_DS18B20_PIN_HIGH; 
   \   000013   D291         SETB    0x90.1
     74              SET_DS18B20_PIN_INPUT;      // 高电平持续存在, 等待DS18B20拉低总线
   \   000015   53FEFD       ANL     0xfe,#0xfd
     75              
     76              HAL_ENTER_CRITICAL_SECTION(intState);
   \   000018   A2AF         MOV     C,0xa8.7
   \   00001A   E4           CLR     A
   \   00001B   33           RLC     A
   \   00001C   FF           MOV     R7,A
   \   00001D   C2AF         CLR     0xa8.7
     77              HalDs18b20DelayNus(80);     // 等待80us
   \   00001F                ; Setup parameters for call to function HalDs18b20DelayNus
   \   00001F   7A50         MOV     R2,#0x50
   \   000021   7B00         MOV     R3,#0x0
   \   000023   12....       LCALL   ??HalDs18b20DelayNus?relay
     78              if(GET_DS18B20_PIN_DATA)    // DS18B20发出60~240us的低电平存在脉冲  
   \   000026   A291         MOV     C,0x90.1
   \   000028   5004         JNC     ??DS18B20_Init_0
     79              {
     80                  opSts = 0;  // 初始化失败, 总线上没有设备
   \   00002A   7E00         MOV     R6,#0x0
   \   00002C   8002         SJMP    ??DS18B20_Init_1
     81              }
     82              else
     83              {
     84                  opSts = 1;  // 初始化成功, 总线上有设备拉低总线
   \                     ??DS18B20_Init_0:
   \   00002E   7E01         MOV     R6,#0x1
     85              }
     86              HAL_EXIT_CRITICAL_SECTION(intState);
   \                     ??DS18B20_Init_1:
   \   000030   EF           MOV     A,R7
   \   000031   A2E0         MOV     C,0xE0 /* A   */.0
   \   000033   92AF         MOV     0xa8.7,C
     87              
     88              // 释放总线   
     89              SET_DS18B20_PIN_OUTPUT;
   \   000035   43FE02       ORL     0xfe,#0x2
     90              SET_DS18B20_PIN_HIGH;
   \   000038   D291         SETB    0x90.1
     91              HalDs18b20DelayNus(500);
   \   00003A                ; Setup parameters for call to function HalDs18b20DelayNus
   \   00003A   7AF4         MOV     R2,#-0xc
   \   00003C   7B01         MOV     R3,#0x1
   \   00003E   12....       LCALL   ??HalDs18b20DelayNus?relay
     92              
     93              return(opSts);
   \   000041   EE           MOV     A,R6
   \   000042   F9           MOV     R1,A
   \   000043   7F01         MOV     R7,#0x1
   \   000045   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000048                REQUIRE P1DIR
   \   000048                REQUIRE _A_P1
   \   000048                REQUIRE _A_IEN0
     94          }
     95          
     96          /*****************************************************************************
     97           * @fn          DS18B20_WriteCMD
     98           *
     99           * @brief       向DS18B20写入一个字节的数据, 低位先发送.
    100           *
    101           * @param       wdata--写入的数据
    102           *
    103           * @return      none
    104           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    105          void DS18B20_WriteCMD(uint8 wdata)
   \                     DS18B20_WriteCMD:
    106          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FF           MOV     R7,A
    107              uint8 i;
    108              halIntState_t intState;
    109              
    110              for (i = 0; i < 8; i++)
   \   000007   7E00         MOV     R6,#0x0
   \                     ??DS18B20_WriteCMD_0:
   \   000009   EE           MOV     A,R6
   \   00000A   C3           CLR     C
   \   00000B   9408         SUBB    A,#0x8
   \   00000D   5039         JNC     ??DS18B20_WriteCMD_1
    111              {
    112                  HAL_ENTER_CRITICAL_SECTION(intState);
   \   00000F   A2AF         MOV     C,0xa8.7
   \   000011   E4           CLR     A
   \   000012   33           RLC     A
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   C2AF         CLR     0xa8.7
    113                  SET_DS18B20_PIN_LOW;
   \   000017   C291         CLR     0x90.1
    114                  HalDs18b20DelayNus(15);            
   \   000019                ; Setup parameters for call to function HalDs18b20DelayNus
   \   000019   7A0F         MOV     R2,#0xf
   \   00001B   7B00         MOV     R3,#0x0
   \   00001D   12....       LCALL   ??HalDs18b20DelayNus?relay
    115                  
    116                  if(wdata & 0x01)    
   \   000020   EF           MOV     A,R7
   \   000021   A2E0         MOV     C,0xE0 /* A   */.0
   \   000023   5004         JNC     ??DS18B20_WriteCMD_2
    117                  {
    118                      SET_DS18B20_PIN_HIGH;
   \   000025   D291         SETB    0x90.1
   \   000027   8002         SJMP    ??DS18B20_WriteCMD_3
    119                  }
    120                  else
    121                  {
    122                      SET_DS18B20_PIN_LOW;
   \                     ??DS18B20_WriteCMD_2:
   \   000029   C291         CLR     0x90.1
    123                  }
    124                  
    125                  wdata >>= 1;
   \                     ??DS18B20_WriteCMD_3:
   \   00002B   EF           MOV     A,R7
   \   00002C   C3           CLR     C
   \   00002D   13           RRC     A
   \   00002E   FF           MOV     R7,A
    126                  HalDs18b20DelayNus(30); // DS18B20采样时长15~45us
   \   00002F                ; Setup parameters for call to function HalDs18b20DelayNus
   \   00002F   7A1E         MOV     R2,#0x1e
   \   000031   7B00         MOV     R3,#0x0
   \   000033   12....       LCALL   ??HalDs18b20DelayNus?relay
    127                  HAL_EXIT_CRITICAL_SECTION(intState);
   \   000036   E5..         MOV     A,?V0 + 0
   \   000038   A2E0         MOV     C,0xE0 /* A   */.0
   \   00003A   92AF         MOV     0xa8.7,C
    128                  
    129                  // 释放总线
    130                  SET_DS18B20_PIN_HIGH;
   \   00003C   D291         SETB    0x90.1
    131                  HalDs18b20DelayNus(10); // 总线恢复时间 
   \   00003E                ; Setup parameters for call to function HalDs18b20DelayNus
   \   00003E   7A0A         MOV     R2,#0xa
   \   000040   7B00         MOV     R3,#0x0
   \   000042   12....       LCALL   ??HalDs18b20DelayNus?relay
    132              }
   \   000045   0E           INC     R6
   \   000046   80C1         SJMP    ??DS18B20_WriteCMD_0
    133          }
   \                     ??DS18B20_WriteCMD_1:
   \   000048   7F01         MOV     R7,#0x1
   \   00004A   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00004D                REQUIRE _A_IEN0
   \   00004D                REQUIRE _A_P1
    134          
    135          /*****************************************************************************
    136           * @fn          DS18B20_ReadByte
    137           *
    138           * @brief       从DS18B20读取一个字节的数据.
    139           *
    140           * @param       none
    141           *
    142           * @return      读出的一个字节数据
    143           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    144          uint8 DS18B20_ReadByte(void)
   \                     DS18B20_ReadByte:
    145          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    146              uint8 bitCnt;
    147              halIntState_t intState;
    148              uint8 tmpData = 0;
   \   000005   7E00         MOV     R6,#0x0
    149              
    150              for (bitCnt = 0; bitCnt < 8; bitCnt++)
   \   000007   7F00         MOV     R7,#0x0
   \                     ??DS18B20_ReadByte_0:
   \   000009   EF           MOV     A,R7
   \   00000A   C3           CLR     C
   \   00000B   9408         SUBB    A,#0x8
   \   00000D   5049         JNC     ??DS18B20_ReadByte_1
    151              {
    152                  HAL_ENTER_CRITICAL_SECTION(intState);
   \   00000F   A2AF         MOV     C,0xa8.7
   \   000011   E4           CLR     A
   \   000012   33           RLC     A
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   C2AF         CLR     0xa8.7
    153                  tmpData >>= 1;
   \   000017   EE           MOV     A,R6
   \   000018   C3           CLR     C
   \   000019   13           RRC     A
   \   00001A   FE           MOV     R6,A
    154                  
    155                  // 准备读数据
    156                  SET_DS18B20_PIN_OUTPUT;
   \   00001B   43FE02       ORL     0xfe,#0x2
    157                  SET_DS18B20_PIN_LOW;
   \   00001E   C291         CLR     0x90.1
    158                  HalDs18b20DelayNus(2);  // 延时2us
   \   000020                ; Setup parameters for call to function HalDs18b20DelayNus
   \   000020   7A02         MOV     R2,#0x2
   \   000022   7B00         MOV     R3,#0x0
   \   000024   12....       LCALL   ??HalDs18b20DelayNus?relay
    159                  // 等待设备响应
    160                  SET_DS18B20_PIN_HIGH;
   \   000027   D291         SETB    0x90.1
    161                  SET_DS18B20_PIN_INPUT;
   \   000029   53FEFD       ANL     0xfe,#0xfd
    162                  HalDs18b20DelayNus(15); // 主机延时15us后采样数据
   \   00002C                ; Setup parameters for call to function HalDs18b20DelayNus
   \   00002C   7A0F         MOV     R2,#0xf
   \   00002E   7B00         MOV     R3,#0x0
   \   000030   12....       LCALL   ??HalDs18b20DelayNus?relay
    163                  if (GET_DS18B20_PIN_DATA)   
   \   000033   A291         MOV     C,0x90.1
   \   000035   5005         JNC     ??DS18B20_ReadByte_2
    164                  {
    165                      tmpData |= 0x80;
   \   000037   D3           SETB    C
   \   000038   EE           MOV     A,R6
   \   000039   92E7         MOV     0xE0 /* A   */.7,C
   \   00003B   FE           MOV     R6,A
    166                  }
    167                  HalDs18b20DelayNus(30); // 等待从机发送数据结束
   \                     ??DS18B20_ReadByte_2:
   \   00003C                ; Setup parameters for call to function HalDs18b20DelayNus
   \   00003C   7A1E         MOV     R2,#0x1e
   \   00003E   7B00         MOV     R3,#0x0
   \   000040   12....       LCALL   ??HalDs18b20DelayNus?relay
    168                  HAL_EXIT_CRITICAL_SECTION(intState);
   \   000043   E5..         MOV     A,?V0 + 0
   \   000045   A2E0         MOV     C,0xE0 /* A   */.0
   \   000047   92AF         MOV     0xa8.7,C
    169                  
    170                  // 设置引脚为输出, 然后释放总线
    171                  SET_DS18B20_PIN_OUTPUT;
   \   000049   43FE02       ORL     0xfe,#0x2
    172                  SET_DS18B20_PIN_HIGH;
   \   00004C   D291         SETB    0x90.1
    173                  HalDs18b20DelayNus(10); // 总线恢复时间           
   \   00004E                ; Setup parameters for call to function HalDs18b20DelayNus
   \   00004E   7A0A         MOV     R2,#0xa
   \   000050   7B00         MOV     R3,#0x0
   \   000052   12....       LCALL   ??HalDs18b20DelayNus?relay
    174              }
   \   000055   0F           INC     R7
   \   000056   80B1         SJMP    ??DS18B20_ReadByte_0
    175          
    176              return  tmpData;
   \                     ??DS18B20_ReadByte_1:
   \   000058   EE           MOV     A,R6
   \   000059   F9           MOV     R1,A
   \   00005A   7F01         MOV     R7,#0x1
   \   00005C   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00005F                REQUIRE _A_IEN0
   \   00005F                REQUIRE P1DIR
   \   00005F                REQUIRE _A_P1
    177          }
    178          
    179          /*****************************************************************************
    180           * @fn          DS18B20_ReadTemp
    181           *
    182           * @brief       从DS18B20的ScratchPad读取温度转换结果.
    183           *
    184           * @param       none
    185           *
    186           * @return      读取的温度数值
    187           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    188          uint16 DS18B20_ReadTemp(void)
   \                     DS18B20_ReadTemp:
    189          {
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
    190              uint8   tmpLowByte;
    191              uint16  tmpData;
    192              
    193              tmpLowByte  = DS18B20_ReadByte();           // 读低字节
   \   000005                ; Setup parameters for call to function DS18B20_ReadByte
   \   000005   12....       LCALL   ??DS18B20_ReadByte?relay
   \   000008   E9           MOV     A,R1
   \   000009   F5..         MOV     ?V0 + 2,A
    194              tmpData     = DS18B20_ReadByte() & 0x00FF;  // 读高字节
   \   00000B                ; Setup parameters for call to function DS18B20_ReadByte
   \   00000B   12....       LCALL   ??DS18B20_ReadByte?relay
   \   00000E   E9           MOV     A,R1
   \   00000F   F8           MOV     R0,A
   \   000010   7900         MOV     R1,#0x0
   \   000012   FE           MOV     R6,A
   \   000013   E9           MOV     A,R1
   \   000014   FF           MOV     R7,A
    195              tmpData     = ((tmpData << 8) | tmpLowByte);
   \   000015   E4           CLR     A
   \   000016   CE           XCH     A,R6
   \   000017   FF           MOV     R7,A
   \   000018   85....       MOV     ?V0 + 0,?V0 + 2
   \   00001B   75..00       MOV     ?V0 + 1,#0x0
   \   00001E   EE           MOV     A,R6
   \   00001F   45..         ORL     A,?V0 + 0
   \   000021   FE           MOV     R6,A
   \   000022   EF           MOV     A,R7
   \   000023   45..         ORL     A,?V0 + 1
   \   000025   FF           MOV     R7,A
    196              
    197              return  tmpData;
   \   000026   EE           MOV     A,R6
   \   000027   FA           MOV     R2,A
   \   000028   EF           MOV     A,R7
   \   000029   FB           MOV     R3,A
   \   00002A   7F03         MOV     R7,#0x3
   \   00002C   02....       LJMP    ?BANKED_LEAVE_XDATA
    198          }
    199          
    200          /*****************************************************************************
    201           * @fn          DS18B20_ConvertTemp
    202           *
    203           * @brief       控制DS18B20完成一次温度转换.
    204           *
    205           * @param       none
    206           *
    207           * @return      测量的温度数值, 后4位是小数, 前面的5位空, 中间的7位是整数部分.
    208           *              返回0表示出错, 这个根据实际情况可以修改合适的数值.
    209           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    210          uint16 DS18B20_ConvertTemp(void)
   \                     DS18B20_ConvertTemp:
    211          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    212              uint8 timeCnt; 
    213          
    214              // 初始化设备
    215              if (0 == DS18B20_Init())
   \   000005                ; Setup parameters for call to function DS18B20_Init
   \   000005   12....       LCALL   ??DS18B20_Init?relay
   \   000008   E9           MOV     A,R1
   \   000009   7006         JNZ     ??DS18B20_ConvertTemp_0
    216              {
    217                  return(0);  // 初始化失败
   \   00000B   7A00         MOV     R2,#0x0
   \   00000D   7B00         MOV     R3,#0x0
   \   00000F   8035         SJMP    ??DS18B20_ConvertTemp_1
    218              }
    219              
    220              DS18B20_WriteCMD(SKIP_ROM_CMD);         // 跳过ROM命令
   \                     ??DS18B20_ConvertTemp_0:
   \   000011                ; Setup parameters for call to function DS18B20_WriteCMD
   \   000011   79CC         MOV     R1,#-0x34
   \   000013   12....       LCALL   ??DS18B20_WriteCMD?relay
    221              DS18B20_WriteCMD(CONVERT_T_CMD);        // 温度转换命令
   \   000016                ; Setup parameters for call to function DS18B20_WriteCMD
   \   000016   7944         MOV     R1,#0x44
   \   000018   12....       LCALL   ??DS18B20_WriteCMD?relay
    222              // 延时800ms以上, 确保转换完成
    223              for (timeCnt=0; timeCnt<80; timeCnt++)  
   \   00001B   7E00         MOV     R6,#0x0
   \                     ??DS18B20_ConvertTemp_2:
   \   00001D   EE           MOV     A,R6
   \   00001E   C3           CLR     C
   \   00001F   9450         SUBB    A,#0x50
   \   000021   500A         JNC     ??DS18B20_ConvertTemp_3
    224              {
    225                  HalDs18b20DelayNus(10000);          //  延时10ms
   \   000023                ; Setup parameters for call to function HalDs18b20DelayNus
   \   000023   7A10         MOV     R2,#0x10
   \   000025   7B27         MOV     R3,#0x27
   \   000027   12....       LCALL   ??HalDs18b20DelayNus?relay
    226              }
   \   00002A   0E           INC     R6
   \   00002B   80F0         SJMP    ??DS18B20_ConvertTemp_2
    227              
    228              // 再次复位设备
    229              if (0 == DS18B20_Init())
   \                     ??DS18B20_ConvertTemp_3:
   \   00002D                ; Setup parameters for call to function DS18B20_Init
   \   00002D   12....       LCALL   ??DS18B20_Init?relay
   \   000030   E9           MOV     A,R1
   \   000031   7006         JNZ     ??DS18B20_ConvertTemp_4
    230              {
    231                  return(0);  // 初始化失败
   \   000033   7A00         MOV     R2,#0x0
   \   000035   7B00         MOV     R3,#0x0
   \   000037   800D         SJMP    ??DS18B20_ConvertTemp_1
    232              }
    233              
    234              DS18B20_WriteCMD(SKIP_ROM_CMD);         // 跳过ROM命令
   \                     ??DS18B20_ConvertTemp_4:
   \   000039                ; Setup parameters for call to function DS18B20_WriteCMD
   \   000039   79CC         MOV     R1,#-0x34
   \   00003B   12....       LCALL   ??DS18B20_WriteCMD?relay
    235              DS18B20_WriteCMD(READ_SCRATCHPAD_CMD);  // 读取转换结果
   \   00003E                ; Setup parameters for call to function DS18B20_WriteCMD
   \   00003E   79BE         MOV     R1,#-0x42
   \   000040   12....       LCALL   ??DS18B20_WriteCMD?relay
    236              return(DS18B20_ReadTemp());             // 返回温度值
   \   000043                ; Setup parameters for call to function DS18B20_ReadTemp
   \   000043   12....       LCALL   ??DS18B20_ReadTemp?relay
   \                     ??DS18B20_ConvertTemp_1:
   \   000046   7F01         MOV     R7,#0x1
   \   000048   02....       LJMP    ?BANKED_LEAVE_XDATA
    237          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??HalDs18b20DelayNus?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalDs18b20DelayNus

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DS18B20_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS18B20_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DS18B20_WriteCMD?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS18B20_WriteCMD

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DS18B20_ReadByte?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS18B20_ReadByte

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DS18B20_ReadTemp?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS18B20_ReadTemp

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??DS18B20_ConvertTemp?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    DS18B20_ConvertTemp

   Maximum stack usage in bytes:

     Function                ISTACK PSTACK XSTACK
     --------                ------ ------ ------
     DS18B20_ConvertTemp         0      0      9
       -> DS18B20_Init           0      0     18
       -> DS18B20_WriteCMD       0      0     18
       -> DS18B20_WriteCMD       0      0     18
       -> HalDs18b20DelayNus     0      0     18
       -> DS18B20_Init           0      0     18
       -> DS18B20_WriteCMD       0      0     18
       -> DS18B20_WriteCMD       0      0     18
       -> DS18B20_ReadTemp       0      0     18
     DS18B20_Init                0      0     18
       -> HalDs18b20DelayNus     0      0     18
       -> HalDs18b20DelayNus     0      0     18
       -> HalDs18b20DelayNus     0      0     18
     DS18B20_ReadByte            0      0     20
       -> HalDs18b20DelayNus     0      0     18
       -> HalDs18b20DelayNus     0      0     18
       -> HalDs18b20DelayNus     0      0     18
       -> HalDs18b20DelayNus     0      0     18
     DS18B20_ReadTemp            0      0     20
       -> DS18B20_ReadByte       0      0     22
       -> DS18B20_ReadByte       0      0     22
     DS18B20_WriteCMD            0      0     18
       -> HalDs18b20DelayNus     0      0     18
       -> HalDs18b20DelayNus     0      0     18
       -> HalDs18b20DelayNus     0      0     18
     HalDs18b20DelayNus          0      0      9


   Segment part sizes:

     Function/Label              Bytes
     --------------              -----
     _A_P1                          1
     _A_IEN0                        1
     P1DIR                          1
     HalDs18b20DelayNus            24
     DS18B20_Init                  72
     DS18B20_WriteCMD              77
     DS18B20_ReadByte              95
     DS18B20_ReadTemp              47
     DS18B20_ConvertTemp           75
     ??HalDs18b20DelayNus?relay     6
     ??DS18B20_Init?relay           6
     ??DS18B20_WriteCMD?relay       6
     ??DS18B20_ReadByte?relay       6
     ??DS18B20_ReadTemp?relay       6
     ??DS18B20_ConvertTemp?relay    6

 
 390 bytes in segment BANKED_CODE
  36 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
 
 426 bytes of CODE memory
   0 bytes of DATA memory (+ 3 bytes shared)

Errors: none
Warnings: none
