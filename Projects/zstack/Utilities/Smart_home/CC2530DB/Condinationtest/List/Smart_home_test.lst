###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         06/May/2021  16:41:57 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_home_test.c              #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wConfig.cfg (-DZIGBEEPRO -DSECURE=0               #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          ome_test.c -D LCD_SUPPORTED -D ZDO_COORDINATOR -D  #
#                          xNV_RESTORE -D HAL_UART=TRUE -D xNV_INIT -D        #
#                          xREFLECTOR -D xHAL_UART_TEST -lC                   #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\Condinationtest\List\ -lA    #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\Condinationtest\List\        #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\Condinationtest\Obj\ -e      #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530MB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\Condinationtest\List\Smart_h #
#                          ome_test.lst                                       #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\Condinationtest\Obj\Smart_ho #
#                          me_test.r51                                        #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home_test.c
      1          /**************************************************************************************************
      2            文件名：Smart_home.c
      3            作 者： 柳成林
      4            功 能： 作为网关节点，实现传感器信息的采集，并可以通过其控制一些节点
      5                    终端设备主要分为8个，分别为
      6               1、温度与光照度传感器；2、烟雾与火焰传感器；3、继电器；4、温湿度传感器；
      7               5、声音与震动传感器；  6、人体红外检测传感器；7、电机；8、RFID检测器。
      8            更新日志(2021)
      9            3.13
     10            + 新增 8种传感器的Project并设置好编译情况
     11            + 修改 Smart_home_ProcessEvent() （增加各种处理器的事件）
     12                   Smart_home_Init()         （初始化内容修改，添加设备默认离线）
     13            3.14
     14            + 修改 Smart_home_ProcessMSGCmd()（添加终端节点类型判断，具体处理留空）
     15            + 新增 Hal层各种传感器驱动(头文件)
     16                   ClusterList (添加8个终端，分开出与入)
     17            3.17
     18            + 修改 Smart_home_ProcessMSGCmd() （完成接收后对于各终端处理）
     19            + 添加 Smart_home_HandleKeys()     (修改原来函数增添概念，未补全)
     20            + 删除 static void Smart_home_Send(void);
     21                   static void Smart_home_Resp(void);
     22                   两个函数
     23            3.19
     24            + 检查 出现的warning并做标识
     25            + 修改 Smart_home_HandleKeys() （补全设计函数）
     26            + 新增 Smart_home_Device_check() (设备是否在线检查)
     27          
     28            3.21
     29            + 新增 DeviceList以方便初始化和设备在线检查（本地变量部分）
     30                   Smart_home_Display()    （屏幕显示，未补全）
     31                   Smart_home_Key_add()     (控制按键，附加项)
     32            + 修改 Smart_home_Device_check()
     33                   Smart_home_Init()
     34                   Smart_home_ProcessMSGCmd()
     35                   调整有关DeviceList（设备列表）部分的修改
     36                   直接使用数组位置号作为设备编号
     37                   按键控制方式，用按键情况控制
     38            3.22
     39            + 修改 Smart_home_Display()    （屏幕显示，补全）
     40                   Smart_home_Key_add()     (屏幕显示中的电机与继电器部分加入这里)
     41                   重写别名方式减少内存损耗
     42                   出现无法初始化的问题，需要项目重构
     43            3.23
     44            + Warn 代码初始化后会产生直接进入key的情况,需debug
     45                   OK键问题无法修复，放弃使用OK键，修改为Cencel组网 禁止组网
     46            3.23 正式完成网关节点部分，（显示函数部分除外）
     47            3.24 
     48            + 修改 Smart_home_Key_add()与display函数整合
     49            + bug:在每十秒一次调用的周期检查函数中会导致显示屏将近一秒时间不显示
     50              已解决： 在状态0的时候作为在线即可
     51            + 完成 显示功能设置
     52            3.28 调试时间
     53            + 解决motor显示的bug
     54            4.4
     55            + 解决温湿度数据不回显的bug
     56            4.6
     57            + 正式拿到所有节点开始调试
     58            4.9
     59            + 解决掉串口Bug
     60            4.14
     61            + 发现在多终端加入时会出现断网或假死问题，开始寻找
     62            4.26
     63            + 提出几种假设，利用其他平台做抓包器尝试
     64            5.6
     65            + 不能应用NV操作，因为NV操作仅能烧写20000次，并需要固定位置读取。
     66            + 调试了N天，感觉是内存问题，开始对程序进行负优化，以时间换空间  （内存仅128字节）
     67             
     68            经调试程序无bug，可以接收各个传感器消息。//3.22
     69            当我没说。。好像出了内存问题//3.22
     70            项目重构啦！，现在又只有一个小问题了/3.23
     71          *********************************************************************/
     72          
     73          /*********************************************************************
     74           * INCLUDES
     75           */
     76          
     77          #include "OSAL.h"
     78          #include "AF.h"
     79          #include "ZDObject.h"
     80          #include "ZDProfile.h"
     81          #include "nwk_util.h"
     82          
     83          #include "Smart_home.h"
     84          #include "OnBoard.h"
     85          
     86          #include "DebugTrace.h"
     87          #include "string.h"
     88          
     89          /* HAL */
     90          #include "hal_lcd.h"
     91          #include "hal_led.h"
     92          #include "hal_key.h"
     93          #include "hal_uart.h"
     94          
     95          /*********************************************************************
     96           * MACROS
     97           */
     98          /*设备链接相关设置*/
     99          /*判断设备是否在线的最大次数*/
    100          #define DEVICE_HEART_BEAT    3
    101          #define DEVICE_CHECK_DELAY   5000
    102          #define DEVICE_CHECK_TIMER   2000
    103          
    104          /*LCD相关设置*/
    105          /*单屏显示时常   MS*/
    106          #define LCD_DISPLAY_LENGTH   10000
    107          #define LCD_DISPLAY_TIMER    2000  //多久更新一次 
    108          
    109          /*关于显示部分相关的宏*/
    110          #define LCD_PAGE_MAX         4     //目前目录页最多4页
    111          
    112          /* 直流电机状态(status)定义*/
    113          #define  HAL_MOTOR_STOP            0x01
    114          #define  HAL_MOTOR_FORWARD         0x02
    115          #define  HAL_MOTOR_BACKWARD        0x03
    116          #define  MOTOR_MAX_SPEED           2400
    117          
    118          /*********************************************************************
    119           * CONSTANTS
    120           */
    121          
    122          #define SMART_HOME_PORT  0x00
    123          
    124          //#define SMART_HOME_BAUD  HAL_UART_BR_38400
    125          #define SMART_HOME_BAUD  HAL_UART_BR_115200
    126          
    127          // When the Rx buf space is less than this threshold, invoke the Rx callback.
    128          #define SMART_HOME_THRESH  64
    129          #define SMART_HOME_RX_SZ  128
    130          #define SMART_HOME_TX_SZ  128
    131          
    132          // Millisecs of idle time after a byte is received before invoking Rx callback.
    133          #define SMART_HOME_IDLE  6
    134          
    135          // Loopback Rx bytes to Tx for throughput testing.
    136          #define SMART_HOME_LOOPBACK  FALSE
    137          
    138          // This is the max byte count per OTA message.
    139          #if !defined( SMART_HOME_TX_MAX )
    140          #define SMART_HOME_TX_MAX  80
    141          #endif
    142          
    143          //3.14 This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    144          const cId_t Smart_home_ClusterList_IN[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
   \   000008   0500         DW 5
   \   00000A   0600         DW 6
   \   00000C   0700         DW 7
   \   00000E   0800         DW 8
   \   000010   0000         DW 0
    145          {
    146            Smart_home_CLUSTERID_HUMITMSG,              // 温湿度
    147            Smart_home_CLUSTERID_TEMPLIGHTMSG,          // 温度光照
    148            Smart_home_CLUSTERID_RFIDMSG,               // 射频卡
    149            Smart_home_CLUSTERID_GASFLAMEMSG,           // 烟雾火焰
    150            Smart_home_CLUSTERID_INFRAREDMSG,           // 人体红外
    151            Smart_home_CLUSTERID_SOUNDVBMSG,            // 声音振动
    152            Smart_home_CLUSTERID_MOTORSTATUSMSG,        // 直流电机状态信息
    153            Smart_home_CLUSTERID_RELAYSTATUSMSG         // 继电器
    154          };
    155          

   \                                 In  segment XDATA_ROM_C, align 1
    156          const cId_t Smart_home_ClusterList_OUT[Smart_home_MAX_INCLUSTERS ] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0900         DW 9
   \   000002   0B00         DW 11
   \   000004   0A00         DW 10
   \   000006   0000         DW 0
   \   000008   0000         DW 0
   \   00000A   0000         DW 0
   \   00000C   0000         DW 0
   \   00000E   0000         DW 0
   \   000010   0000         DW 0
    157          {
    158            Smart_home_CLUSTERID_TEXT,
    159            Smart_home_CLUSTERID_MOTORCTRL,             //直流电机控制
    160            Smart_home_CLUSTERID_RELAYCTRL              //继电器控制
    161          };
    162          

   \                                 In  segment XDATA_ROM_C, align 1
    163          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    164          {
    165            Smart_home_ENDPOINT,              //  int   Endpoint;
    166            Smart_home_PROFID,                //  uint16 AppProfId[2];
    167            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    168            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    169            Smart_home_FLAGS,                 //  int   AppFlags:4;
    170            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    171            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    172            Smart_home_MAX_OUTCLUSTERS,          //  byte  AppNumOutClusters;
    173            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    174          };
    175          

   \                                 In  segment XDATA_ROM_C, align 1
    176          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    177          {
    178            Smart_home_ENDPOINT,
    179            &Smart_home_TaskID,
    180            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    181            noLatencyReqs
    182          };
    183          
    184          /*********************************************************************
    185           * TYPEDEFS
    186           */
    187          
    188          /*********************************************************************
    189           * GLOBAL VARIABLES
    190           */
    191          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    192          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    193          
    194          /*********************************************************************
    195           * EXTERNAL VARIABLES
    196           */
    197          
    198          /*********************************************************************
    199           * EXTERNAL FUNCTIONS
    200           */
    201          
    202          /*********************************************************************
    203           * LOCAL VARIABLES
    204           */
    205          
    206          /*3.18 终端节点的设备详细信息缓存*/
    207          /*5.6 尝试利用离散变量的方式*/
    208          //DeviceInfo   DeviceList[Smart_home_MAX_INCLUSTERS];                      //设备列表  
    209          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    210          DeviceInfo Humit;          //温湿度缓存
   \                     Humit:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    211          DeviceInfo TempLight;      // 温度光照缓存
   \                     TempLight:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    212          DeviceInfo RfID;           // RFID 信息缓存
   \                     RfID:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    213          DeviceInfo gasFlame;       //气体火焰缓存
   \                     gasFlame:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    214          DeviceInfo infrared;       //人体红外
   \                     infrared:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    215          DeviceInfo soundVb;        //电机状态
   \                     soundVb:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    216          DeviceInfo motor;          //继电器状态
   \                     motor:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    217          DeviceInfo relay;          //声音震动
   \                     relay:
   \   000000                DS 7
   \   000007                REQUIRE __INIT_XDATA_Z
    218          
    219          
    220          static uint8 DeviceCnt[Smart_home_MAX_INCLUSTERS];
                              ^
Warning[Pe177]: variable "DeviceCnt" was declared but never referenced

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    221          static int8 Ctrlcase = 0;    //0用来控制屏幕显示，1控制继电器，2控制电机
   \                     Ctrlcase:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    222          static int8 LCD_Page  =  0;  //终端状态显示
   \                     LCD_Page:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    223          
    224          /*********************************************************************************
    225          //这些似乎会引起内存问题  3.22
    226          DeviceInfo *Humit = DeviceList+Smart_home_CLUSTERID_HUMITMSG;          //温湿度缓存
    227          DeviceInfo *TempLight = DeviceList+Smart_home_CLUSTERID_TEMPLIGHTMSG;  // 温度光照缓存
    228          DeviceInfo *RfID = DeviceList+Smart_home_CLUSTERID_RFIDMSG;            // RFID 信息缓存
    229          DeviceInfo *gasFlame = DeviceList+Smart_home_CLUSTERID_GASFLAMEMSG;    //气体火焰缓存
    230          DeviceInfo *infrared = DeviceList+Smart_home_CLUSTERID_INFRAREDMSG;    //人体红外
    231          DeviceInfo *motor = DeviceList+Smart_home_CLUSTERID_MOTORSTATUSMSG;     //电机状态
    232          DeviceInfo *relay = DeviceList+Smart_home_CLUSTERID_RELAYSTATUSMSG;    //继电器状态
    233          DeviceInfo *soundVb = DeviceList+Smart_home_CLUSTERID_SOUNDVBMSG;      //声音震动
    234          修改如下
    235          ***********************************************************************************/
    236          
    237          /*3.14 消息发送部分*/
    238          /*3.17短地址存储*/
    239          /*
    240          static afAddrType_t Humit_addr;
    241          static afAddrType_t Light_addr;
    242          static afAddrType_t GasF_addr;
    243          static afAddrType_t Sound_addr;
    244          static afAddrType_t Card_addr;
    245          static afAddrType_t Infrared_addr;
    246          */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    247          static afAddrType_t Relay_addr;
   \                     Relay_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    248          static afAddrType_t Motor_addr;
   \                     Motor_addr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    249          
    250          /*消息发送数组*/

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    251          byte Coordinator_Msg[MSG_MAX_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    252          uint16 Smart_home_MaxDataLength;
   \                     Smart_home_MaxDataLength:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    253          
    254          /*3.19 协议栈中有但暂时不知道要他们干嘛的东西*/
    255          /*3.21 现在我会了！！！*/
    256          /*3.22 那些没用！删掉了！*/
    257          //static uint8 Smart_home_MsgID;

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    258          static uint8 RelayTransID;  // This is the unique message ID (counter)
   \                     RelayTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    259          static uint8 MotorTransID;  // This is the unique message ID (counter)
   \                     MotorTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    260          
    261          /*********************************************************************
    262           * LOCAL FUNCTIONS
    263           */
    264          
    265          void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    266          //static void Smart_home_Key_add(uint8 Ctrlcase);
    267          void Smart_home_HandleKeys( byte shift, byte keys );
    268          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    269          void Smart_home_Device_check(void);
    270          void Smart_home_Relay_Ctl(uint8 cmd);
    271          void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed);
    272          void Smart_home_Display(void);
    273          void Smart_home_Motor_cmd(int8 speed);
    274          void Smart_home_CallBack(uint8 port, uint8 event);
    275          
    276          /*********************************************************************
    277           * @fn      Smart_home_Init
    278           *
    279           * @brief   This is called during OSAL tasks' initialization.
    280           *
    281           * @param   task_id - the Task ID assigned by OSAL.
    282           *
    283           * @return  none
    284           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    285          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    286          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 31
   \   000005   74E1         MOV     A,#-0x1f
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    287            halUARTCfg_t uartConfig;
    288            uint8 i;
    289            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   00000C                ; Setup parameters for call to function afRegister
   \   00000C   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   00000E   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   000010   12....       LCALL   ??afRegister?relay
    290            Smart_home_TaskID = task_id;
   \   000013   EE           MOV     A,R6
   \   000014   90....       MOV     DPTR,#Smart_home_TaskID
   \   000017   F0           MOVX    @DPTR,A
    291            MotorTransID = 0;
   \   000018   90....       MOV     DPTR,#MotorTransID
   \   00001B   E4           CLR     A
   \   00001C   F0           MOVX    @DPTR,A
    292            RelayTransID = 0;
   \   00001D   90....       MOV     DPTR,#RelayTransID
   \   000020   F0           MOVX    @DPTR,A
    293          
    294            RegisterForKeys( task_id );
   \   000021                ; Setup parameters for call to function RegisterForKeys
   \   000021   EE           MOV     A,R6
   \   000022   F9           MOV     R1,A
   \   000023   12....       LCALL   ??RegisterForKeys?relay
    295          
    296            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000026   7402         MOV     A,#0x2
   \   000028   12....       LCALL   ?XSTACK_DISP0_8
   \   00002B   7401         MOV     A,#0x1
   \   00002D   F0           MOVX    @DPTR,A
    297            uartConfig.baudRate             = SMART_HOME_BAUD;
   \   00002E   7403         MOV     A,#0x3
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7404         MOV     A,#0x4
   \   000035   F0           MOVX    @DPTR,A
    298            uartConfig.flowControl          = FALSE;
   \   000036   12....       LCALL   ?XSTACK_DISP0_8
   \   000039   E4           CLR     A
   \   00003A   F0           MOVX    @DPTR,A
    299            uartConfig.flowControlThreshold = SMART_HOME_THRESH; // 2x30 don't care - see uart driver.
   \   00003B   7405         MOV     A,#0x5
   \   00003D   12....       LCALL   ?XSTACK_DISP0_8
   \   000040   7440         MOV     A,#0x40
   \   000042   F0           MOVX    @DPTR,A
   \   000043   A3           INC     DPTR
   \   000044   E4           CLR     A
   \   000045   F0           MOVX    @DPTR,A
    300            uartConfig.rx.maxBufSize        = SMART_HOME_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000046   740C         MOV     A,#0xc
   \   000048   12....       LCALL   ?XSTACK_DISP0_8
   \   00004B   7480         MOV     A,#-0x80
   \   00004D   F0           MOVX    @DPTR,A
   \   00004E   A3           INC     DPTR
   \   00004F   E4           CLR     A
   \   000050   F0           MOVX    @DPTR,A
    301            uartConfig.tx.maxBufSize        = SMART_HOME_TX_SZ;  // 2x30 don't care - see uart driver.
   \   000051   7414         MOV     A,#0x14
   \   000053   12....       LCALL   ?XSTACK_DISP0_8
   \   000056   7480         MOV     A,#-0x80
   \   000058   F0           MOVX    @DPTR,A
   \   000059   A3           INC     DPTR
   \   00005A   E4           CLR     A
   \   00005B   F0           MOVX    @DPTR,A
    302            uartConfig.idleTimeout          = SMART_HOME_IDLE;   // 2x30 don't care - see uart driver.
   \   00005C   7407         MOV     A,#0x7
   \   00005E   12....       LCALL   ?XSTACK_DISP0_8
   \   000061   7406         MOV     A,#0x6
   \   000063   F0           MOVX    @DPTR,A
    303            uartConfig.intEnable            = FALSE;              // 2x30 don't care - see uart driver.
   \   000064   7418         MOV     A,#0x18
   \   000066   12....       LCALL   ?XSTACK_DISP0_8
   \   000069   E4           CLR     A
   \   00006A   F0           MOVX    @DPTR,A
    304            uartConfig.callBackFunc         = Smart_home_CallBack;
   \   00006B   741D         MOV     A,#0x1d
   \   00006D   12....       LCALL   ?XSTACK_DISP0_8
   \   000070   74..         MOV     A,#??Smart_home_CallBack?relay & 0xff
   \   000072   F0           MOVX    @DPTR,A
   \   000073   A3           INC     DPTR
   \   000074   74..         MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
   \   000076   F0           MOVX    @DPTR,A
    305            HalUARTOpen (SMART_HOME_PORT, &uartConfig);
   \   000077                ; Setup parameters for call to function HalUARTOpen
   \   000077   7402         MOV     A,#0x2
   \   000079   12....       LCALL   ?XSTACK_DISP0_8
   \   00007C   AA82         MOV     R2,DPL
   \   00007E   AB83         MOV     R3,DPH
   \   000080   7900         MOV     R1,#0x0
   \   000082   12....       LCALL   ??HalUARTOpen?relay
    306          
    307          #if !defined ( TRANSMITAPP_FRAGMENTED )
    308            afDataReqMTU_t mtu;
    309          #endif  
    310            
    311          #if defined ( LCD_SUPPORTED )
    312            HalLcdWriteString( "Smart_home", HAL_LCD_LINE_2 );
   \   000085                ; Setup parameters for call to function HalLcdWriteString
   \   000085   7902         MOV     R1,#0x2
   \   000087   7A..         MOV     R2,#`?<Constant "Smart_home">` & 0xff
   \   000089   7B..         MOV     R3,#(`?<Constant "Smart_home">` >> 8) & 0xff
   \   00008B   12....       LCALL   ??HalLcdWriteString?relay
    313          #endif
    314            
    315          #if (HAL_UART == TRUE)
    316            HalUARTWrite(HAL_UART_PORT_0, "Init Success!\n",   strlen("Init Success!\n"));
   \   00008E                ; Setup parameters for call to function HalUARTWrite
   \   00008E   7C0E         MOV     R4,#0xe
   \   000090   7D00         MOV     R5,#0x0
   \   000092   7A..         MOV     R2,#`?<Constant "Init Success!\\n">` & 0xff
   \   000094   7B..         MOV     R3,#(`?<Constant "Init Success!\\n">` >> 8) & 0xff
   \   000096   12....       LCALL   ?Subroutine12 & 0xFFFF
    317          #endif
    318            
    319            // Set the data length
    320          #if defined ( Smart_Home_FRAGMENTED )
    321            Smart_home_MaxDataLength = MSG_MAX_LEN;
    322          #else
    323            mtu.kvp        = FALSE;
   \                     ??CrossCallReturnLabel_23:
   \   000099   E4           CLR     A
   \   00009A   F0           MOVX    @DPTR,A
    324            mtu.aps.secure = FALSE;
   \   00009B   04           INC     A
   \   00009C   12....       LCALL   ?XSTACK_DISP0_8
   \   00009F   E4           CLR     A
   \   0000A0   F0           MOVX    @DPTR,A
    325            Smart_home_MaxDataLength = afDataReqMTU( &mtu );
   \   0000A1                ; Setup parameters for call to function afDataReqMTU
   \   0000A1   85..82       MOV     DPL,?XSP + 0
   \   0000A4   85..83       MOV     DPH,?XSP + 1
   \   0000A7   AA82         MOV     R2,DPL
   \   0000A9   AB83         MOV     R3,DPH
   \   0000AB   12....       LCALL   ??afDataReqMTU?relay
   \   0000AE   E9           MOV     A,R1
   \   0000AF   90....       MOV     DPTR,#Smart_home_MaxDataLength
   \   0000B2   F0           MOVX    @DPTR,A
   \   0000B3   A3           INC     DPTR
   \   0000B4   E4           CLR     A
   \   0000B5   F0           MOVX    @DPTR,A
    326          #endif
    327            
    328            for(i=0;i<Smart_home_MaxDataLength;i++)
   \   0000B6   90....       MOV     DPTR,#Smart_home_MaxDataLength
   \   0000B9   E0           MOVX    A,@DPTR
   \   0000BA   6014         JZ      ??Smart_home_Init_0
    329            {
    330              Coordinator_Msg[i] = 0;
   \   0000BC   F8           MOV     R0,A
   \   0000BD   7900         MOV     R1,#0x0
   \   0000BF   90....       MOV     DPTR,#Coordinator_Msg
   \                     ??Smart_home_Init_1:
   \   0000C2   E4           CLR     A
   \   0000C3   F0           MOVX    @DPTR,A
   \   0000C4   A3           INC     DPTR
   \   0000C5   E8           MOV     A,R0
   \   0000C6   24FF         ADD     A,#-0x1
   \   0000C8   18           DEC     R0
   \   0000C9   E9           MOV     A,R1
   \   0000CA   34FF         ADDC    A,#-0x1
   \   0000CC   F9           MOV     R1,A
   \   0000CD   48           ORL     A,R0
   \   0000CE   70F2         JNZ     ??Smart_home_Init_1
    331            }
    332            
    333            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \                     ??Smart_home_Init_0:
   \   0000D0                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000D0   7A20         MOV     R2,#0x20
   \   0000D2   7B80         MOV     R3,#-0x80
   \   0000D4   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000D7   E0           MOVX    A,@DPTR
   \   0000D8   F9           MOV     R1,A
   \   0000D9   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    334            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   0000DC                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000DC   7A06         MOV     R2,#0x6
   \   0000DE   7B80         MOV     R3,#-0x80
   \   0000E0   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000E3   E0           MOVX    A,@DPTR
   \   0000E4   F9           MOV     R1,A
   \   0000E5   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    335            
    336            //3.22 显示延时
    337            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DISPLAY_EVT, 
    338                                LCD_DISPLAY_LENGTH);
   \   0000E8                ; Setup parameters for call to function osal_start_timerEx
   \   0000E8   7C10         MOV     R4,#0x10
   \   0000EA   7D27         MOV     R5,#0x27
   \   0000EC   7A10         MOV     R2,#0x10
   \   0000EE   12....       LCALL   ??Subroutine29_0 & 0xFFFF
    339            
    340            
    341            //3.14 打开设备在线检测，第一次开启检测延时较长时间
    342            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DEVICE_CHECK_EVT, 
    343                                DEVICE_CHECK_DELAY);
   \                     ??CrossCallReturnLabel_67:
   \   0000F1                ; Setup parameters for call to function osal_start_timerEx
   \   0000F1   7C88         MOV     R4,#-0x78
   \   0000F3   7D13         MOV     R5,#0x13
   \   0000F5   12....       LCALL   ?Subroutine17 & 0xFFFF
    344           
    345            //3.13 关闭LED灯(D4)，表示协调器默认不允许组网
    346            NLME_PermitJoiningRequest(0x00);
   \                     ??CrossCallReturnLabel_65:
   \   0000F8                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   0000F8   7900         MOV     R1,#0x0
   \   0000FA   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    347            HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);
   \   0000FD                ; Setup parameters for call to function HalLedSet
   \   0000FD   7A00         MOV     R2,#0x0
   \   0000FF   7901         MOV     R1,#0x1
   \   000101   12....       LCALL   ??HalLedSet?relay
    348            HalLedSet(HAL_LED_2, HAL_LED_MODE_OFF);
   \   000104                ; Setup parameters for call to function HalLedSet
   \   000104   7A00         MOV     R2,#0x0
   \   000106   7902         MOV     R1,#0x2
   \   000108   12....       LCALL   ??HalLedSet?relay
    349            
    350            //3.21 初始化页面为0 第一页
    351            //LCD_Page=0;
    352            
    353            //3.13 设备离线状态检测初始化，初始化为离线
    354            //3.21 修改为DeviceList方式，初始化DeviceCnt
    355            Humit.deviceStatus = DEVICE_OFFLINE;       
   \   00010B   90....       MOV     DPTR,#Humit + 1
   \   00010E   7402         MOV     A,#0x2
   \   000110   F0           MOVX    @DPTR,A
    356            TempLight.deviceStatus = DEVICE_OFFLINE;     
   \   000111   90....       MOV     DPTR,#TempLight + 1
   \   000114   F0           MOVX    @DPTR,A
    357            RfID.deviceStatus = DEVICE_OFFLINE;         
   \   000115   90....       MOV     DPTR,#RfID + 1
   \   000118   F0           MOVX    @DPTR,A
    358            gasFlame.deviceStatus = DEVICE_OFFLINE;     
   \   000119   90....       MOV     DPTR,#gasFlame + 1
   \   00011C   F0           MOVX    @DPTR,A
    359            infrared.deviceStatus = DEVICE_OFFLINE;        
   \   00011D   90....       MOV     DPTR,#infrared + 1
   \   000120   F0           MOVX    @DPTR,A
    360            soundVb.deviceStatus = DEVICE_OFFLINE;         
   \   000121   90....       MOV     DPTR,#soundVb + 1
   \   000124   F0           MOVX    @DPTR,A
    361            motor.deviceStatus = DEVICE_OFFLINE;          
   \   000125   90....       MOV     DPTR,#motor + 1
   \   000128   F0           MOVX    @DPTR,A
    362            relay.deviceStatus = DEVICE_OFFLINE;          
   \   000129   90....       MOV     DPTR,#relay + 1
   \   00012C   F0           MOVX    @DPTR,A
    363          }
   \   00012D   741F         MOV     A,#0x1f
   \   00012F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000132                REQUIRE ?Subroutine0
   \   000132                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   7A80         MOV     R2,#-0x80
   \   000002                REQUIRE ??Subroutine29_0
   \   000002                ; // Fall through to label ??Subroutine29_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine29_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   7900         MOV     R1,#0x0
   \   000002   12....       LCALL   ??HalUARTWrite?relay
   \   000005                ; Setup parameters for call to function osal_msg_deallocate
   \   000005   85..82       MOV     DPL,?XSP + 0
   \   000008   85..83       MOV     DPH,?XSP + 1
   \   00000B   22           RET
    364          
    365          /*********************************************************************
    366           * @fn      Smart_home_ProcessEvent
    367           *
    368           * @brief   Generic Application Task event processor.
    369           *
    370           * @param   task_id  - The OSAL assigned task ID.
    371           * @param   events   - Bit map of events to process.
    372           *
    373           * @return  Event flags of all unprocessed events.
    374           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    375          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    376          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    377            afIncomingMSGPacket_t *MSGpkt;
    378            (void)task_id;  // Intentionally unreferenced parameter
    379            afDataConfirm_t *afDataConfirm;
    380            
    381            //3.13 数据确认消息字段
    382            ZStatus_t sentStatus;
    383            byte sentEP;
    384            
    385            if ( events & SYS_EVENT_MSG )   //3.13 系统消息事件
   \   000009   5480         ANL     A,#0x80
   \   00000B   6054         JZ      ??Smart_home_ProcessEvent_0
    386            {
    387              
    388              HalLedSet(HAL_LED_2, HAL_LED_MODE_BLINK);
   \   00000D                ; Setup parameters for call to function HalLedSet
   \   00000D   7A02         MOV     R2,#0x2
   \   00000F   7902         MOV     R1,#0x2
   \   000011   12....       LCALL   ??HalLedSet?relay
   \   000014   8012         SJMP    ??Smart_home_ProcessEvent_1
    389              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    390              {
    391                switch ( MSGpkt->hdr.event )
    392                {
    393                  case ZDO_CB_MSG:           //3.13 ZDO传入消息回调
    394                    Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    395                    break;
    396                    
    397                  case KEY_CHANGE:           //3.13 按键事件
    398                    Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    399                    break;
    400                   
    401                  case AF_DATA_CONFIRM_CMD:
    402                  //3.13 接收到此消息，作为对发送的数据包的确认。
    403                  //状态为ZStatus_t类型[在ZComDef.h中定义]
    404                  //消息字段在AF.h中定义
    405                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    406                    sentEP = afDataConfirm->endpoint;
    407                    sentStatus = afDataConfirm->hdr.status;
    408           
    409                    if ( (ZSuccess == sentStatus) &&
    410                         (Smart_home_epDesc.endPoint == sentEP) )
    411                    {  
    412                      //3.13 在消息发送确认成功后绿灯闪烁一下
    413                      //HalLedSet(HAL_LED_1, HAL_LED_MODE_BLINK);
    414                    }
    415                    else
    416                    {
    417                      //3.13 红灯闪烁一下  硬件还没实现
    418                      //HalLedSet(HAL_LED_2, HAL_LED_MODE_BLINK);
    419                    }
    420                    break;
    421                    
    422                  case AF_INCOMING_MSG_CMD:   //3.13 消息传入处理
    423                    //3.13 在消息接收确认成功后绿灯闪烁一下
    424                    Smart_home_ProcessMSGCmd( MSGpkt );
   \                     ??Smart_home_ProcessEvent_2:
   \   000016                ; Setup parameters for call to function Smart_home_ProcessMSGCmd
   \   000016   12....       LCALL   ??Smart_home_ProcessMSGCmd?relay
    425                    //HalLedSet(HAL_LED_2, HAL_LED_MODE_BLINK);
    426                    break;
    427                  default:
    428                    break;
    429                }
    430          
    431                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??Smart_home_ProcessEvent_3:
   \   000019                ; Setup parameters for call to function osal_msg_deallocate
   \   000019   AA..         MOV     R2,?V0 + 0
   \   00001B   AB..         MOV     R3,?V0 + 1
   \   00001D   12....       LCALL   ??osal_msg_deallocate?relay
    432                
    433                // Next
    434                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID );
   \   000020                ; Setup parameters for call to function osal_msg_receive
   \   000020   90....       MOV     DPTR,#Smart_home_TaskID
   \   000023   E0           MOVX    A,@DPTR
   \   000024   F9           MOV     R1,A
   \   000025   12....       LCALL   ??osal_msg_receive?relay
   \                     ??Smart_home_ProcessEvent_1:
   \   000028                ; Setup parameters for call to function osal_msg_receive
   \   000028   90....       MOV     DPTR,#Smart_home_TaskID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F9           MOV     R1,A
   \   00002D   12....       LCALL   ??osal_msg_receive?relay
   \   000030   8A..         MOV     ?V0 + 0,R2
   \   000032   8B..         MOV     ?V0 + 1,R3
   \   000034   EA           MOV     A,R2
   \   000035   45..         ORL     A,?V0 + 1
   \   000037   6020         JZ      ??Smart_home_ProcessEvent_4
   \   000039   8A82         MOV     DPL,R2
   \   00003B   8B83         MOV     DPH,R3
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   24E6         ADD     A,#-0x1a
   \   000040   60D4         JZ      ??Smart_home_ProcessEvent_2
   \   000042   245A         ADD     A,#0x5a
   \   000044   70D3         JNZ     ??Smart_home_ProcessEvent_3
   \   000046                ; Setup parameters for call to function Smart_home_HandleKeys
   \   000046   A3           INC     DPTR
   \   000047   A3           INC     DPTR
   \   000048   A3           INC     DPTR
   \   000049   E0           MOVX    A,@DPTR
   \   00004A   FA           MOV     R2,A
   \   00004B   85..82       MOV     DPL,?V0 + 0
   \   00004E   8B83         MOV     DPH,R3
   \   000050   A3           INC     DPTR
   \   000051   A3           INC     DPTR
   \   000052   E0           MOVX    A,@DPTR
   \   000053   F9           MOV     R1,A
   \   000054   12....       LCALL   ??Smart_home_HandleKeys?relay
   \   000057   80C0         SJMP    ??Smart_home_ProcessEvent_3
    435              }
    436              
    437              // Squash compiler warnings until values are used.
    438              (void)sentStatus;
    439              (void)sentEP;
    440              
    441              return ( events ^ SYS_EVENT_MSG );
   \                     ??Smart_home_ProcessEvent_4:
   \   000059   EE           MOV     A,R6
   \   00005A   FA           MOV     R2,A
   \   00005B   EF           MOV     A,R7
   \   00005C   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_5:
   \   00005E   FB           MOV     R3,A
   \   00005F   803E         SJMP    ??Smart_home_ProcessEvent_6
    442            }
    443          
    444            if ( events & SMART_HOME_SEND_MSG_EVT )
   \                     ??Smart_home_ProcessEvent_0:
   \   000061   EE           MOV     A,R6
   \   000062   A2E0         MOV     C,0xE0 /* A   */.0
   \   000064   5005         JNC     ??Smart_home_ProcessEvent_7
    445            {
    446              //Smart_home_Send();
    447              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   000066   6401         XRL     A,#0x1
   \   000068   FA           MOV     R2,A
   \   000069   8034         SJMP    ??Smart_home_ProcessEvent_6
    448            }
    449            
    450            if ( events & SMART_HOME_DEVICE_CHECK_EVT )  //终端设备检查事件
   \                     ??Smart_home_ProcessEvent_7:
   \   00006B   5480         ANL     A,#0x80
   \   00006D   6011         JZ      ??Smart_home_ProcessEvent_8
    451            {
    452              Smart_home_Device_check();  //调用终端设备检查函数
   \   00006F                ; Setup parameters for call to function Smart_home_Device_check
   \   00006F   12....       LCALL   ??Smart_home_Device_check?relay
    453              
    454              osal_start_timerEx(Smart_home_TaskID,SMART_HOME_DEVICE_CHECK_EVT,
    455                                 DEVICE_CHECK_TIMER);
   \   000072                ; Setup parameters for call to function osal_start_timerEx
   \   000072   7CD0         MOV     R4,#-0x30
   \   000074   7D07         MOV     R5,#0x7
   \   000076   12....       LCALL   ?Subroutine17 & 0xFFFF
    456              return (events ^ SMART_HOME_DEVICE_CHECK_EVT);
   \                     ??CrossCallReturnLabel_66:
   \   000079   EE           MOV     A,R6
   \   00007A   6480         XRL     A,#0x80
   \   00007C   FA           MOV     R2,A
   \   00007D   EF           MOV     A,R7
   \   00007E   80DE         SJMP    ??Smart_home_ProcessEvent_5
    457            }
    458            
    459            
    460            if( events & SMART_HOME_DISPLAY_EVT )
   \                     ??Smart_home_ProcessEvent_8:
   \   000080   EE           MOV     A,R6
   \   000081   5410         ANL     A,#0x10
   \   000083   6016         JZ      ??Smart_home_ProcessEvent_9
    461            {
    462              Smart_home_Display();
   \   000085                ; Setup parameters for call to function Smart_home_Display
   \   000085   12....       LCALL   ??Smart_home_Display?relay
    463              //周期性刷新
    464              osal_start_timerEx( Smart_home_TaskID,events & SMART_HOME_DISPLAY_EVT,LCD_DISPLAY_TIMER);
   \   000088                ; Setup parameters for call to function osal_start_timerEx
   \   000088   7CD0         MOV     R4,#-0x30
   \   00008A   7D07         MOV     R5,#0x7
   \   00008C   EE           MOV     A,R6
   \   00008D   5410         ANL     A,#0x10
   \   00008F   FA           MOV     R2,A
   \   000090   12....       LCALL   ??Subroutine29_0 & 0xFFFF
    465              return (events ^ SMART_HOME_DISPLAY_EVT);
   \                     ??CrossCallReturnLabel_68:
   \   000093   EE           MOV     A,R6
   \   000094   6410         XRL     A,#0x10
   \   000096   FA           MOV     R2,A
   \   000097   EF           MOV     A,R7
   \   000098   FB           MOV     R3,A
   \   000099   8004         SJMP    ??Smart_home_ProcessEvent_6
    466            }
    467          
    468            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_9:
   \   00009B   7A00         MOV     R2,#0x0
   \   00009D   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_6:
   \   00009F   7F04         MOV     R7,#0x4
   \   0000A1   02....       LJMP    ?BANKED_LEAVE_XDATA
    469          }
    470          
    471          /*********************************************************************
    472           * @fn      Smart_home_ProcessZDOMsgs()
    473           *
    474           * @brief   Process response messages
    475           *
    476           * @param   none
    477           *
    478           * @return  none
    479           */
    480          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
    481          {
    482            /*
    483            switch ( inMsg->clusterID )
    484            {
    485              case End_Device_Bind_rsp:
    486                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    487                {
    488                  // Light LED
    489                  HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    490                }
    491          #if defined(BLINK_LEDS)
    492                else
    493                {
    494                  // Flash LED to show failure
    495                  HalLedSet ( HAL_LED_4, HAL_LED_MODE_FLASH );
    496                }
    497          #endif
    498                break;
    499                
    500              case Match_Desc_rsp:
    501                {
    502                  ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
    503                  if ( pRsp )
    504                  {
    505                    if ( pRsp->status == ZSuccess && pRsp->cnt )
    506                    {
    507                      
    508                      Smart_home_TxAddr.addrMode = (afAddrMode_t)Addr16Bit;
    509                      Smart_home_TxAddr.addr.shortAddr = pRsp->nwkAddr;
    510                      // Take the first endpoint, Can be changed to search through endpoints
    511                      Smart_home_TxAddr.endPoint = pRsp->epList[0];
    512                      
    513                      
    514                      // Light LED
    515                      HalLedSet( HAL_LED_4, HAL_LED_MODE_ON );
    516                    }
    517                    osal_mem_free( pRsp );
    518                  }
    519                }
    520                break;
    521            }
    522            */
    523          }
    524          
    525          /*********************************************************************
    526           * @fn      Smart_home_Key_add
    527           *
    528           * @brief   3.21新增，用来标识目前处于的控制状态，是附加项
    529           *          0 控制屏幕 1 控制继电器 2 控制电机
    530           *            
    531           *
    532           * @param   Ctrlcase 目前的控制号
    533           *
    534           * @return  屏幕回显
    535           *
    536          static void Smart_home_Key_add(uint8 Ctrlcase)
    537          {
    538          #if defined ( LCD_SUPPORTED )
    539            switch(Ctrlcase)
    540            {
    541              default:    
    542              case 0:
    543                HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
    544                //清除屏幕显示
    545                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    546                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    547                break;
    548              
    549              case 1:
    550                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
    551                //清除屏幕显示
    552                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    553                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    554                if(DeviceList[relay].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    555                {
    556                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
    557                }
    558                if(DeviceList[relay].deviceStatus != DEVICE_ONLINE)
    559                {
    560                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
    561                }
    562                break;
    563              
    564              case 2:
    565                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
    566                //清除屏幕显示
    567                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
    568                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
    569                if(DeviceList[motor].deviceStatus == DEVICE_ONLINE)  //设备在线回显
    570                {
    571                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 );
    572                }
    573                if(DeviceList[motor].deviceStatus != DEVICE_ONLINE)
    574                {
    575                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
    576                }      
    577                break;
    578          #endif     
    579            }
    580          }
    581          */
    582          /*********************************************************************
    583           * @fn      Smart_home_Motor_cmd
    584           * 
    585           * @brief   通过电机速度判断电机转向
    586           * 
    587           * 
    588           * @param   uint8 电机转速
    589           * 
    590           * @return  
    591           *          #define  HAL_MOTOR_STOP            0x01
    592           *          #define  HAL_MOTOR_FORWARD         0x02
    593           *          #define  HAL_MOTOR_BACKWARD        0x03
    594           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    595          void Smart_home_Motor_cmd(int8 speed)
   \                     Smart_home_Motor_cmd:
    596          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    597            uint8 outspeed;
    598            uint8 cmd;
    599            if(speed == 0)
   \   000007   7006         JNZ     ??Smart_home_Motor_cmd_0
    600            {
    601              outspeed = 0;
   \                     ??Smart_home_Motor_cmd_1:
   \   000009   7F00         MOV     R7,#0x0
    602              cmd = HAL_MOTOR_STOP;
   \   00000B   7A01         MOV     R2,#0x1
   \   00000D   8021         SJMP    ??Smart_home_Motor_cmd_2
    603            }   
    604            else if(speed > 0)
   \                     ??Smart_home_Motor_cmd_0:
   \   00000F   C3           CLR     C
   \   000010   9401         SUBB    A,#0x1
   \   000012   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000014   65D0         XRL     A,PSW
   \   000016   33           RLC     A
   \   000017   EE           MOV     A,R6
   \   000018   4005         JC      ??Smart_home_Motor_cmd_3
    605            {
    606              outspeed = speed;
   \   00001A   FF           MOV     R7,A
    607              cmd = HAL_MOTOR_FORWARD;
   \   00001B   7A02         MOV     R2,#0x2
   \   00001D   8011         SJMP    ??Smart_home_Motor_cmd_2
    608            }
    609            
    610            else if(speed < 0)
   \                     ??Smart_home_Motor_cmd_3:
   \   00001F   C3           CLR     C
   \   000020   9400         SUBB    A,#0x0
   \   000022   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000024   65D0         XRL     A,PSW
   \   000026   33           RLC     A
   \   000027   50E0         JNC     ??Smart_home_Motor_cmd_1
    611            {
    612              outspeed = 0xff - speed;
   \   000029   74FF         MOV     A,#-0x1
   \   00002B   C3           CLR     C
   \   00002C   9E           SUBB    A,R6
   \   00002D   FF           MOV     R7,A
    613              cmd = HAL_MOTOR_BACKWARD;
   \   00002E   7A03         MOV     R2,#0x3
    614            }
    615            
    616            else
    617            {
    618              outspeed = 0;
    619              cmd = HAL_MOTOR_STOP;    
    620            }
    621            Smart_home_Motor_Ctl(cmd,outspeed); 
   \                     ??Smart_home_Motor_cmd_2:
   \   000030   90....       MOV     DPTR,#motor + 1
   \   000033   E0           MOVX    A,@DPTR
   \   000034   6402         XRL     A,#0x2
   \   000036   607A         JZ      ??Smart_home_Motor_cmd_4
   \   000038   90....       MOV     DPTR,#MotorTransID
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   C4           SWAP    A
   \   00003D   540F         ANL     A,#0xf
   \   00003F   FB           MOV     R3,A
   \   000040   C3           CLR     C
   \   000041   940A         SUBB    A,#0xa
   \   000043   5004         JNC     ??Smart_home_Motor_cmd_5
   \   000045   7830         MOV     R0,#0x30
   \   000047   8002         SJMP    ??Smart_home_Motor_cmd_6
   \                     ??Smart_home_Motor_cmd_5:
   \   000049   7837         MOV     R0,#0x37
   \                     ??Smart_home_Motor_cmd_6:
   \   00004B   E8           MOV     A,R0
   \   00004C   2B           ADD     A,R3
   \   00004D   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000050   F0           MOVX    @DPTR,A
   \   000051   90....       MOV     DPTR,#MotorTransID
   \   000054   E0           MOVX    A,@DPTR
   \   000055   540F         ANL     A,#0xf
   \   000057   FB           MOV     R3,A
   \   000058   C3           CLR     C
   \   000059   940A         SUBB    A,#0xa
   \   00005B   5004         JNC     ??Smart_home_Motor_cmd_7
   \   00005D   7830         MOV     R0,#0x30
   \   00005F   8002         SJMP    ??Smart_home_Motor_cmd_8
   \                     ??Smart_home_Motor_cmd_7:
   \   000061   7837         MOV     R0,#0x37
   \                     ??Smart_home_Motor_cmd_8:
   \   000063   E8           MOV     A,R0
   \   000064   2B           ADD     A,R3
   \   000065   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   000068   F0           MOVX    @DPTR,A
   \   000069   EF           MOV     A,R7
   \   00006A   A3           INC     DPTR
   \   00006B   F0           MOVX    @DPTR,A
   \   00006C   EA           MOV     A,R2
   \   00006D   A3           INC     DPTR
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F                ; Setup parameters for call to function AF_DataRequest
   \   00006F   75..1E       MOV     ?V0 + 0,#0x1e
   \   000072   78..         MOV     R0,#?V0 + 0
   \   000074   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000077   75....       MOV     ?V0 + 0,#MotorTransID & 0xff
   \   00007A   75....       MOV     ?V0 + 1,#(MotorTransID >> 8) & 0xff
   \   00007D   78..         MOV     R0,#?V0 + 0
   \   00007F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000082   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000085   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   000088   78..         MOV     R0,#?V0 + 0
   \   00008A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008D   75..06       MOV     ?V0 + 0,#0x6
   \   000090   75..00       MOV     ?V0 + 1,#0x0
   \   000093   78..         MOV     R0,#?V0 + 0
   \   000095   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000098   75..0B       MOV     ?V0 + 0,#0xb
   \   00009B   78..         MOV     R0,#?V0 + 0
   \   00009D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000A0   7920         MOV     R1,#0x20
   \   0000A2   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   0000A4   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   0000A6   7A..         MOV     R2,#Motor_addr & 0xff
   \   0000A8   7B..         MOV     R3,#(Motor_addr >> 8) & 0xff
   \   0000AA   12....       LCALL   ??AF_DataRequest?relay
   \   0000AD   7409         MOV     A,#0x9
   \   0000AF   12....       LCALL   ?DEALLOC_XSTACK8
    622          }
   \                     ??Smart_home_Motor_cmd_4:
   \   0000B2   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    623          
    624          /*********************************************************************
    625           * @fn      Smart_home_HandleKeys
    626           *
    627           * @brief   设置按键事件
    628           *          目前事件设置    3.19
    629           *
    630           *          HAL_KEY_SW_1--UP     (上翻一页)
    631           *          HAL_KEY_SW_2--RIGHT  (选项向右)
    632           *          HAL_KEY_SW_3--DOWN   (下翻一页)
    633           *          HAL_KEY_SW_4--LEFT   (选项向左)
    634           *          HAL_KEY_SW_5--OK     (组网开)
    635           *          HAL_KEY_SW_7--CANCEL (组网关) 
    636           * + 3.21 新增  选项总共有3种，控制屏幕显示，控制继电器和控制电机
    637           *              控制继电器时 UP控制1，DOWN控制2
    638           *              控制电机时   UP加速， DOWN减速
    639           *
    640           * @param   shift - true if in shift/alt.
    641           * @param   keys  - bit field for key events.
    642           *
    643           * @return  none
    644           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    645          void Smart_home_HandleKeys( byte shift, byte keys )
   \                     Smart_home_HandleKeys:
    646          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    647            //zAddrType_t txAddr;
    648            static int8 MotorSpeed = 0;
    649            static uint8 NetWorkAllow = 0;
    650            /*这里这么设置似乎会出现内存问题
    651            static uint8 Relay1_on = 0x02;  //两个默认都是关闭
    652            static uint8 Relay2_on = 0x10;
    653            */
    654            /*3.21 LCD 显示*/
    655            static uint8 Relay1_on = 0;  //两个默认都是关闭
    656            static uint8 Relay2_on = 0;
    657            
    658            
    659            if ( keys & HAL_KEY_SW_1 )  //UP
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5059         JNC     ??Smart_home_HandleKeys_0
    660            {
    661              switch(Ctrlcase)
   \   00000B   90....       MOV     DPTR,#Ctrlcase
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   14           DEC     A
   \   000010   6017         JZ      ??Smart_home_HandleKeys_1
   \   000012   14           DEC     A
   \   000013   602A         JZ      ??Smart_home_HandleKeys_2
    662              {
    663                default:    
    664                case 0:
    665                {
    666                  if(LCD_Page < LCD_PAGE_MAX)       {LCD_Page++;}
   \   000015   90....       MOV     DPTR,#LCD_Page
   \   000018   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   00001B   5003         JNC     ??Smart_home_HandleKeys_3
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   04           INC     A
   \   00001F   F0           MOVX    @DPTR,A
    667                  if(LCD_Page > LCD_PAGE_MAX - 1)       {LCD_Page = 0;}
   \                     ??Smart_home_HandleKeys_3:
   \   000020   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   000023   403F         JC      ??Smart_home_HandleKeys_0
   \   000025   E4           CLR     A
   \   000026   F0           MOVX    @DPTR,A
   \   000027   803B         SJMP    ??Smart_home_HandleKeys_0
    668                  break;
    669                }
    670                case 1:
    671                {  
    672                  uint8 switch1;
    673                  if(Relay1_on == 0)  {Relay1_on = 1 ; switch1 = 0x02;}
   \                     ??Smart_home_HandleKeys_1:
   \   000029   90....       MOV     DPTR,#??Relay1_on
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   7007         JNZ     ??Smart_home_HandleKeys_4
   \   00002F   7401         MOV     A,#0x1
   \   000031   F0           MOVX    @DPTR,A
   \   000032   7902         MOV     R1,#0x2
   \   000034   8004         SJMP    ??Smart_home_HandleKeys_5
    674                  else if(Relay1_on == 1)  {Relay1_on = 0; switch1 = 0x01;}
   \                     ??Smart_home_HandleKeys_4:
   \   000036   E4           CLR     A
   \   000037   F0           MOVX    @DPTR,A
   \   000038   7901         MOV     R1,#0x1
    675                  else  {Relay1_on = 0; switch1 = 0x01;}       
    676                  Smart_home_Relay_Ctl(switch1);  
   \                     ??Smart_home_HandleKeys_5:
   \   00003A                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   00003A   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    677                  break;
   \   00003D   8025         SJMP    ??Smart_home_HandleKeys_0
    678                } 
    679                case 2:
    680                {
    681                  if(MotorSpeed < 50)     {MotorSpeed += 10;}
   \                     ??Smart_home_HandleKeys_2:
   \   00003F   90....       MOV     DPTR,#??MotorSpeed
   \   000042   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   000045   5004         JNC     ??Smart_home_HandleKeys_6
   \   000047   E0           MOVX    A,@DPTR
   \   000048   240A         ADD     A,#0xa
   \   00004A   F0           MOVX    @DPTR,A
    682                  if(MotorSpeed >= 50)     
   \                     ??Smart_home_HandleKeys_6:
   \   00004B   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_45:
   \   00004E   400F         JC      ??Smart_home_HandleKeys_7
    683                  {
    684          #if defined ( LCD_SUPPORTED )
    685                     HalLcdWriteString( "Motor max Speed", HAL_LCD_LINE_4 );
   \   000050                ; Setup parameters for call to function HalLcdWriteString
   \   000050   7904         MOV     R1,#0x4
   \   000052   7A..         MOV     R2,#`?<Constant "Motor max Speed">` & 0xff
   \   000054   7B..         MOV     R3,#(`?<Constant "Motor max Speed">` >> 8) & 0xff
   \   000056   12....       LCALL   ??HalLcdWriteString?relay
    686          #endif 
    687                     MotorSpeed = 50;
   \   000059   90....       MOV     DPTR,#??MotorSpeed
   \   00005C   7432         MOV     A,#0x32
   \   00005E   F0           MOVX    @DPTR,A
    688                  }
    689                  Smart_home_Motor_cmd(MotorSpeed);
   \                     ??Smart_home_HandleKeys_7:
   \   00005F                ; Setup parameters for call to function Smart_home_Motor_cmd
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   F9           MOV     R1,A
   \   000061   12....       LCALL   ??Smart_home_Motor_cmd?relay
    690                  
    691                  break;
    692                }
    693                   
    694              }    
    695            }
    696            
    697            if ( keys & HAL_KEY_SW_3 )  //DOWN
   \                     ??Smart_home_HandleKeys_0:
   \   000064   EE           MOV     A,R6
   \   000065   A2E4         MOV     C,0xE0 /* A   */.4
   \   000067   5064         JNC     ??Smart_home_HandleKeys_8
    698            {
    699              switch(Ctrlcase)
   \   000069   90....       MOV     DPTR,#Ctrlcase
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   14           DEC     A
   \   00006E   6018         JZ      ??Smart_home_HandleKeys_9
   \   000070   14           DEC     A
   \   000071   6035         JZ      ??Smart_home_HandleKeys_10
    700              {
    701                default:    
    702                case 0:
    703                {
    704                  if(LCD_Page >= 0)       {LCD_Page--;}
   \   000073   90....       MOV     DPTR,#LCD_Page
   \   000076   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_35:
   \   000079   4003         JC      ??Smart_home_HandleKeys_11
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   14           DEC     A
   \   00007D   F0           MOVX    @DPTR,A
    705                  if(LCD_Page < 0)        {LCD_Page = LCD_PAGE_MAX;}
   \                     ??Smart_home_HandleKeys_11:
   \   00007E   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_36:
   \   000081   504A         JNC     ??Smart_home_HandleKeys_8
   \   000083   7404         MOV     A,#0x4
   \   000085   F0           MOVX    @DPTR,A
   \   000086   8045         SJMP    ??Smart_home_HandleKeys_8
    706                  break;
    707                }
    708                case 1:  
    709                {
    710                  uint8 switch2;
    711                  if(Relay2_on == 0)  {Relay2_on = 1 ; switch2 = 0x20;}
   \                     ??Smart_home_HandleKeys_9:
   \   000088   90....       MOV     DPTR,#??Relay2_on
   \   00008B   E0           MOVX    A,@DPTR
   \   00008C   7007         JNZ     ??Smart_home_HandleKeys_12
   \   00008E   7401         MOV     A,#0x1
   \   000090   F0           MOVX    @DPTR,A
   \   000091   7920         MOV     R1,#0x20
   \   000093   800E         SJMP    ??Smart_home_HandleKeys_13
    712                  else if(Relay2_on == 1)  {Relay2_on = 0; switch2 = 0x10;}
   \                     ??Smart_home_HandleKeys_12:
   \   000095   6401         XRL     A,#0x1
   \   000097   7006         JNZ     ??Smart_home_HandleKeys_14
   \   000099   E4           CLR     A
   \   00009A   F0           MOVX    @DPTR,A
   \   00009B   7910         MOV     R1,#0x10
   \   00009D   8004         SJMP    ??Smart_home_HandleKeys_13
    713                  else  {Relay2_on = 0; switch2 = 0x01;}       
   \                     ??Smart_home_HandleKeys_14:
   \   00009F   E4           CLR     A
   \   0000A0   F0           MOVX    @DPTR,A
   \   0000A1   7901         MOV     R1,#0x1
    714                  Smart_home_Relay_Ctl(switch2);       
   \                     ??Smart_home_HandleKeys_13:
   \   0000A3                ; Setup parameters for call to function Smart_home_Relay_Ctl
   \   0000A3   12....       LCALL   ??Smart_home_Relay_Ctl?relay
    715                  break;
   \   0000A6   8025         SJMP    ??Smart_home_HandleKeys_8
    716                } 
    717                case 2:
    718                {
    719                  /*
    720                  #define  HAL_MOTOR_STOP            0x01
    721                  #define  HAL_MOTOR_FORWORD         0x02
    722                  #define  HAL_MOTOR_BACKWORD        0x03*/
    723                  if(MotorSpeed > -50)     {MotorSpeed -= 10;}
   \                     ??Smart_home_HandleKeys_10:
   \   0000A8   90....       MOV     DPTR,#??MotorSpeed
   \   0000AB   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_46:
   \   0000AE   4004         JC      ??Smart_home_HandleKeys_15
   \   0000B0   E0           MOVX    A,@DPTR
   \   0000B1   24F6         ADD     A,#-0xa
   \   0000B3   F0           MOVX    @DPTR,A
    724                  if(MotorSpeed <= -50)     
   \                     ??Smart_home_HandleKeys_15:
   \   0000B4   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_47:
   \   0000B7   500F         JNC     ??Smart_home_HandleKeys_16
    725                  {
    726          #if defined ( LCD_SUPPORTED )
    727                     HalLcdWriteString( "Motor min Speed", HAL_LCD_LINE_4 );
   \   0000B9                ; Setup parameters for call to function HalLcdWriteString
   \   0000B9   7904         MOV     R1,#0x4
   \   0000BB   7A..         MOV     R2,#`?<Constant "Motor min Speed">` & 0xff
   \   0000BD   7B..         MOV     R3,#(`?<Constant "Motor min Speed">` >> 8) & 0xff
   \   0000BF   12....       LCALL   ??HalLcdWriteString?relay
    728          #endif 
    729                     MotorSpeed = -80;
   \   0000C2   90....       MOV     DPTR,#??MotorSpeed
   \   0000C5   74B0         MOV     A,#-0x50
   \   0000C7   F0           MOVX    @DPTR,A
    730                  }
    731                  Smart_home_Motor_cmd(MotorSpeed);
   \                     ??Smart_home_HandleKeys_16:
   \   0000C8                ; Setup parameters for call to function Smart_home_Motor_cmd
   \   0000C8   E0           MOVX    A,@DPTR
   \   0000C9   F9           MOV     R1,A
   \   0000CA   12....       LCALL   ??Smart_home_Motor_cmd?relay
    732                  break; 
    733                }
    734              }
    735            }
    736            
    737            if ( keys & HAL_KEY_SW_2 )  //RIGHT  
   \                     ??Smart_home_HandleKeys_8:
   \   0000CD   EE           MOV     A,R6
   \   0000CE   A2E1         MOV     C,0xE0 /* A   */.1
   \   0000D0   5012         JNC     ??Smart_home_HandleKeys_17
    738            /*3.22 这里在调试时出现问题，具体问题为 点击up时会出现屏幕变为禁止组网
    739              控制方面变为控制电机，问题在于汇编中的key值会出现  keys & HAL_KEY_SW_2 = 2
    740              的情况，暂时禁止，需要等待研究  还有key_7*/
    741            {
    742               if(Ctrlcase < 3)   { Ctrlcase++;}
   \   0000D2   90....       MOV     DPTR,#Ctrlcase
   \   0000D5   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_48:
   \   0000D8   5003         JNC     ??Smart_home_HandleKeys_18
   \   0000DA   E0           MOVX    A,@DPTR
   \   0000DB   04           INC     A
   \   0000DC   F0           MOVX    @DPTR,A
    743               if(Ctrlcase > 2)   { Ctrlcase=0;}
   \                     ??Smart_home_HandleKeys_18:
   \   0000DD   12....       LCALL   ?Subroutine21 & 0xFFFF
   \                     ??CrossCallReturnLabel_49:
   \   0000E0   4002         JC      ??Smart_home_HandleKeys_17
   \   0000E2   E4           CLR     A
   \   0000E3   F0           MOVX    @DPTR,A
    744               //Smart_home_Key_add(Ctrlcase);
    745            }
    746            
    747            if ( keys & HAL_KEY_SW_4 )  //LEFT
   \                     ??Smart_home_HandleKeys_17:
   \   0000E4   EE           MOV     A,R6
   \   0000E5   A2E3         MOV     C,0xE0 /* A   */.3
   \   0000E7   5013         JNC     ??Smart_home_HandleKeys_19
    748            {
    749               if(Ctrlcase > -1)   { Ctrlcase--;}
   \   0000E9   90....       MOV     DPTR,#Ctrlcase
   \   0000EC   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   0000EF   4003         JC      ??Smart_home_HandleKeys_20
   \   0000F1   E0           MOVX    A,@DPTR
   \   0000F2   14           DEC     A
   \   0000F3   F0           MOVX    @DPTR,A
    750               if(Ctrlcase < 0)    { Ctrlcase=2;}
   \                     ??Smart_home_HandleKeys_20:
   \   0000F4   12....       LCALL   ?Subroutine15 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   0000F7   5003         JNC     ??Smart_home_HandleKeys_19
   \   0000F9   7402         MOV     A,#0x2
   \   0000FB   F0           MOVX    @DPTR,A
    751               //Smart_home_Key_add(Ctrlcase);    
    752            }
    753            
    754            if ( keys & HAL_KEY_SW_5 )  //OK
    755            {
    756          
    757            }
    758            
    759            if ( keys & HAL_KEY_SW_7 )  //CENCEL
   \                     ??Smart_home_HandleKeys_19:
   \   0000FC   EE           MOV     A,R6
   \   0000FD   A2E6         MOV     C,0xE0 /* A   */.6
   \   0000FF   5025         JNC     ??Smart_home_HandleKeys_21
    760            {
    761               if(NetWorkAllow == 0)
   \   000101   90....       MOV     DPTR,#??NetWorkAllow
   \   000104   E0           MOVX    A,@DPTR
   \   000105   7010         JNZ     ??Smart_home_HandleKeys_22
    762               {
    763                 NetWorkAllow = 1;
   \   000107   7401         MOV     A,#0x1
   \   000109   F0           MOVX    @DPTR,A
    764                 NLME_PermitJoiningRequest(0xFF); // 组网，允许随时加入
   \   00010A                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   00010A   79FF         MOV     R1,#-0x1
   \   00010C   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    765                 //HalLedSet(HAL_LED_1, HAL_LED_MODE_ON);
    766                 //HalLedSet(HAL_LED_2, HAL_LED_MODE_ON);
    767          #if defined ( LCD_SUPPORTED )
    768                 HalLcdWriteString( "Allow networking", HAL_LCD_LINE_4 );
   \   00010F                ; Setup parameters for call to function HalLcdWriteString
   \   00010F   7904         MOV     R1,#0x4
   \   000111   7A..         MOV     R2,#`?<Constant "Allow networking">` & 0xff
   \   000113   7B..         MOV     R3,#(`?<Constant "Allow networking">` >> 8) & 0xff
   \   000115   800C         SJMP    ??Smart_home_HandleKeys_23
    769          #endif
    770               }
    771               else
    772               {
    773                 NetWorkAllow = 0;
   \                     ??Smart_home_HandleKeys_22:
   \   000117   E4           CLR     A
   \   000118   F0           MOVX    @DPTR,A
    774                 NLME_PermitJoiningRequest(0x00); // 不允许组网
   \   000119                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   000119   F9           MOV     R1,A
   \   00011A   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    775                 //HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);  
    776                 //HalLedSet(HAL_LED_2, HAL_LED_MODE_OFF); 
    777          #if defined ( LCD_SUPPORTED )
    778                 HalLcdWriteString( "Ban   networking", HAL_LCD_LINE_4 );
   \   00011D                ; Setup parameters for call to function HalLcdWriteString
   \   00011D   7904         MOV     R1,#0x4
   \   00011F   7A..         MOV     R2,#`?<Constant "Ban   networking">` & 0xff
   \   000121   7B..         MOV     R3,#(`?<Constant "Ban   networking">` >> 8) & 0xff
   \                     ??Smart_home_HandleKeys_23:
   \   000123   12....       LCALL   ??HalLcdWriteString?relay
    779          #endif        
    780               }
    781            }
    782          }
   \                     ??Smart_home_HandleKeys_21:
   \   000126   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9403         SUBB    A,#0x3
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   94CF         SUBB    A,#-0x31
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9432         SUBB    A,#0x32
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9404         SUBB    A,#0x4
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9400         SUBB    A,#0x0
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??MotorSpeed:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??NetWorkAllow:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay1_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay2_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    783          
    784          /*********************************************************************
    785           * @fn      Smart_home_ProcessMSGCmd
    786           *
    787           * @brief   Data message processor callback. This function processes
    788           *          any incoming data - probably from other devices. Based
    789           *          on the cluster ID, perform the intended action.
    790           *
    791           * @param   pkt - pointer to the incoming message packet
    792           *
    793           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    794           *          FALSE otherwise.
    795           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    796          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
   \                     Smart_home_ProcessMSGCmd:
    797          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 20
   \   000005   74EC         MOV     A,#-0x14
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    798            //HalUARTWrite(HAL_UART_PORT_0, "9",   1);
    799            switch ( pkt->clusterId )
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   8B83         MOV     DPH,R3
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \   000013   F5..         MOV     ?V0 + 0,A
   \   000015   A3           INC     DPTR
   \   000016   E0           MOVX    A,@DPTR
   \   000017   F5..         MOV     ?V0 + 1,A
   \   000019   78..         MOV     R0,#?V0 + 0
   \   00001B   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for Smart_home_ProcessMSGCmd>_0`:
   \   00001E   0100         DW        1
   \   000020   07           DB        7
   \   000021   ....         DW        ??Smart_home_ProcessMSGCmd_0
   \   000023   ....         DW        ??Smart_home_ProcessMSGCmd_1
   \   000025   ....         DW        ??Smart_home_ProcessMSGCmd_2
   \   000027   ....         DW        ??Smart_home_ProcessMSGCmd_3
   \   000029   ....         DW        ??Smart_home_ProcessMSGCmd_4
   \   00002B   ....         DW        ??Smart_home_ProcessMSGCmd_5
   \   00002D   ....         DW        ??Smart_home_ProcessMSGCmd_6
   \   00002F   ....         DW        ??Smart_home_ProcessMSGCmd_7
   \   000031   ....         DW        ??Smart_home_ProcessMSGCmd_8
    800            {
    801            /***********************************************************************
    802              目前总共8种case
    803             #define Smart_home_CLUSTERID_HUMITMSG            1  // 温湿度
    804             #define Smart_home_CLUSTERID_TEMPLIGHTMSG        2  // 温度光照
    805             #define Smart_home_CLUSTERID_RFIDMSG             3  // 射频卡
    806             #define Smart_home_CLUSTERID_GASFLAMEMSG         4  // 烟雾火焰
    807             #define Smart_home_CLUSTERID_INFRAREDMSG         5  // 人体红外
    808             #define Smart_home_CLUSTERID_SOUNDVBMSG          6  // 声音振动
    809             #define Smart_home_CLUSTERID_MOTORSTATUSMSG      7  // 直流电机状态信息
    810             #define Smart_home_CLUSTERID_RELAYSTATUSMSG      8  // 继电器状态信息
    811              
    812             设备描述
    813             typedef struct DeviceInfo
    814             {
    815               uint8 deviceID;
    816               uint8 deviceStatus;
    817               uint8 data[5];
    818             } DeviceInfo; 
    819             ************************************************************************/ 
    820              //3.14 消息处理模块，共8个，行为类似 
    821              //3.21 修改为指针方法（DeviceList相关）
    822              case Smart_home_CLUSTERID_HUMITMSG:         // 温湿度
    823              {
    824                uint8 sendbufHumit[4] = {0};
   \                     ??Smart_home_ProcessMSGCmd_1:
   \   000033   85..82       MOV     DPL,?XSP + 0
   \   000036   85..83       MOV     DPH,?XSP + 1
   \   000039   AC82         MOV     R4,DPL
   \   00003B   AD83         MOV     R5,DPH
   \   00003D   7583..       MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
   \   000040   7582..       MOV     DPL,#`?<Constant {0}>` & 0xff
   \   000043   7404         MOV     A,#0x4
   \   000045   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    825                sendbufHumit[0] = '1';
   \   000048   85..82       MOV     DPL,?XSP + 0
   \   00004B   85..83       MOV     DPH,?XSP + 1
   \   00004E   7431         MOV     A,#0x31
   \   000050   F0           MOVX    @DPTR,A
    826                
    827                Humit.deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \   000051   90....       MOV     DPTR,#Humit + 1
   \   000054   12....       LCALL   ?Subroutine3 & 0xFFFF
    828                sendbufHumit[1] = Humit.data[0] = pkt->cmd.Data[4]; // 湿度 
   \                     ??CrossCallReturnLabel_0:
   \   000057   90....       MOV     DPTR,#Humit + 2
   \   00005A   F0           MOVX    @DPTR,A
   \   00005B   C0E0         PUSH    A
   \   00005D   7401         MOV     A,#0x1
   \   00005F   12....       LCALL   ?XSTACK_DISP0_8
   \   000062   D0E0         POP     A
   \   000064   12....       LCALL   ?Subroutine7 & 0xFFFF
    829                sendbufHumit[2] = Humit.data[1] = pkt->cmd.Data[5]; // 温度
   \                     ??CrossCallReturnLabel_12:
   \   000067   90....       MOV     DPTR,#Humit + 3
   \                     ??Smart_home_ProcessMSGCmd_9:
   \   00006A   F0           MOVX    @DPTR,A
   \   00006B   C0E0         PUSH    A
   \   00006D   7402         MOV     A,#0x2
   \   00006F   12....       LCALL   ?XSTACK_DISP0_8
   \   000072   D0E0         POP     A
   \   000074   F0           MOVX    @DPTR,A
    830          
    831                sendbufHumit[3] = '\n';
   \   000075   7403         MOV     A,#0x3
   \   000077   12....       LCALL   ?XSTACK_DISP0_8
   \   00007A   740A         MOV     A,#0xa
   \   00007C   F0           MOVX    @DPTR,A
    832                
    833          #if (HAL_UART == TRUE)
    834                HalUARTWrite(HAL_UART_PORT_0, sendbufHumit,   4);
   \   00007D                ; Setup parameters for call to function HalUARTWrite
   \   00007D   7C04         MOV     R4,#0x4
   \   00007F   02....       LJMP    ??Smart_home_ProcessMSGCmd_10 & 0xFFFF
    835          #endif
    836                osal_msg_deallocate(sendbufHumit);
    837                break;
    838              }
    839                
    840              case Smart_home_CLUSTERID_TEMPLIGHTMSG:     // 温度光照
    841              {    
    842                uint8 sendbufTempLight[6] = {0};
   \                     ??Smart_home_ProcessMSGCmd_2:
   \   000082   7407         MOV     A,#0x7
   \   000084   12....       LCALL   ?XSTACK_DISP0_8
   \   000087   AC82         MOV     R4,DPL
   \   000089   AD83         MOV     R5,DPH
   \   00008B   7583..       MOV     DPH,#(`?<Constant {0}>_1` >> 8) & 0xff
   \   00008E   7582..       MOV     DPL,#`?<Constant {0}>_1` & 0xff
   \   000091   7406         MOV     A,#0x6
   \   000093   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    843                sendbufTempLight[0] = '2';
   \   000096   7407         MOV     A,#0x7
   \   000098   12....       LCALL   ?XSTACK_DISP0_8
   \   00009B   7432         MOV     A,#0x32
   \   00009D   F0           MOVX    @DPTR,A
    844                
    845                TempLight.deviceStatus = DEVICE_ONLINE;   //收到消息设置为在线
   \   00009E   90....       MOV     DPTR,#TempLight + 1
   \   0000A1   12....       LCALL   ?Subroutine3 & 0xFFFF
    846                
    847                sendbufTempLight[1] = TempLight.data[0] = pkt->cmd.Data[4]; // 温度整数
   \                     ??CrossCallReturnLabel_1:
   \   0000A4   90....       MOV     DPTR,#TempLight + 2
   \   0000A7   F0           MOVX    @DPTR,A
   \   0000A8   C0E0         PUSH    A
   \   0000AA   7408         MOV     A,#0x8
   \   0000AC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000AF   D0E0         POP     A
   \   0000B1   12....       LCALL   ?Subroutine8 & 0xFFFF
    848                sendbufTempLight[2] = TempLight.data[1] = pkt->cmd.Data[5]; // 温度小数
   \                     ??CrossCallReturnLabel_14:
   \   0000B4   90....       MOV     DPTR,#TempLight + 3
   \   0000B7   F0           MOVX    @DPTR,A
   \   0000B8   C0E0         PUSH    A
   \   0000BA   7409         MOV     A,#0x9
   \   0000BC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000BF   D0E0         POP     A
   \   0000C1   12....       LCALL   ?Subroutine6 & 0xFFFF
    849                sendbufTempLight[3] = TempLight.data[2] = pkt->cmd.Data[6]; // 光照
   \                     ??CrossCallReturnLabel_10:
   \   0000C4   90....       MOV     DPTR,#TempLight + 4
   \   0000C7   F0           MOVX    @DPTR,A
   \   0000C8   C0E0         PUSH    A
   \   0000CA   740A         MOV     A,#0xa
   \   0000CC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000CF   D0E0         POP     A
   \   0000D1   12....       LCALL   ?Subroutine5 & 0xFFFF
    850                sendbufTempLight[4] = TempLight.data[3] = pkt->cmd.Data[7]; // 光照
   \                     ??CrossCallReturnLabel_8:
   \   0000D4   E0           MOVX    A,@DPTR
   \   0000D5   90....       MOV     DPTR,#TempLight + 5
   \   0000D8   F0           MOVX    @DPTR,A
   \   0000D9   C0E0         PUSH    A
   \   0000DB   740B         MOV     A,#0xb
   \   0000DD   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E0   D0E0         POP     A
   \   0000E2   F0           MOVX    @DPTR,A
    851                /*
    852                sendbufTempLight[1] = '1'; // 温度整数
    853                sendbufTempLight[2] = '2'; // 温度小数
    854                sendbufTempLight[3] = '3'; // 光照
    855                sendbufTempLight[4] = '4'; // 光照
    856                */
    857                sendbufTempLight[5] = '\n';
   \   0000E3   740C         MOV     A,#0xc
   \   0000E5   12....       LCALL   ?XSTACK_DISP0_8
   \   0000E8   740A         MOV     A,#0xa
   \   0000EA   F0           MOVX    @DPTR,A
    858                
    859          #if (HAL_UART == TRUE)
    860                HalUARTWrite(HAL_UART_PORT_0, sendbufTempLight,   6);
   \   0000EB                ; Setup parameters for call to function HalUARTWrite
   \   0000EB   7C06         MOV     R4,#0x6
   \   0000ED   7D00         MOV     R5,#0x0
   \   0000EF   7407         MOV     A,#0x7
   \   0000F1   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F4   AA82         MOV     R2,DPL
   \   0000F6   AB83         MOV     R3,DPH
   \   0000F8   7900         MOV     R1,#0x0
   \   0000FA   12....       LCALL   ??HalUARTWrite?relay
    861          #endif
    862                osal_msg_deallocate(sendbufTempLight);
   \   0000FD                ; Setup parameters for call to function osal_msg_deallocate
   \   0000FD   7407         MOV     A,#0x7
   \                     ??Smart_home_ProcessMSGCmd_11:
   \   0000FF   12....       LCALL   ?XSTACK_DISP0_8
   \   000102   02....       LJMP    ??CrossCallReturnLabel_24 & 0xFFFF
    863                break;
    864              }
    865                
    866              case Smart_home_CLUSTERID_RFIDMSG:          // 射频卡
    867              {
    868                uint8 sendbufRfID[7] = {0};
   \                     ??Smart_home_ProcessMSGCmd_3:
   \   000105   740D         MOV     A,#0xd
   \   000107   12....       LCALL   ?XSTACK_DISP0_8
   \   00010A   AC82         MOV     R4,DPL
   \   00010C   AD83         MOV     R5,DPH
   \   00010E   7583..       MOV     DPH,#(`?<Constant {0}>_2` >> 8) & 0xff
   \   000111   7582..       MOV     DPL,#`?<Constant {0}>_2` & 0xff
   \   000114   7407         MOV     A,#0x7
   \   000116   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    869                sendbufRfID[0] = '3';
   \   000119   740D         MOV     A,#0xd
   \   00011B   12....       LCALL   ?XSTACK_DISP0_8
   \   00011E   7433         MOV     A,#0x33
   \   000120   F0           MOVX    @DPTR,A
    870                
    871                RfID.deviceStatus = DEVICE_ONLINE;        //收到消息设置为在线
   \   000121   90....       MOV     DPTR,#RfID + 1
   \   000124   12....       LCALL   ?Subroutine3 & 0xFFFF
    872                sendbufRfID[1] = RfID.data[0] = pkt->cmd.Data[4]; // 射频卡类型
   \                     ??CrossCallReturnLabel_2:
   \   000127   90....       MOV     DPTR,#RfID + 2
   \   00012A   F0           MOVX    @DPTR,A
   \   00012B   C0E0         PUSH    A
   \   00012D   740E         MOV     A,#0xe
   \   00012F   12....       LCALL   ?XSTACK_DISP0_8
   \   000132   D0E0         POP     A
   \   000134   12....       LCALL   ?Subroutine8 & 0xFFFF
    873                sendbufRfID[2] = RfID.data[1] = pkt->cmd.Data[5]; // 4个字节的ID号
   \                     ??CrossCallReturnLabel_15:
   \   000137   90....       MOV     DPTR,#RfID + 3
   \   00013A   F0           MOVX    @DPTR,A
   \   00013B   C0E0         PUSH    A
   \   00013D   740F         MOV     A,#0xf
   \   00013F   12....       LCALL   ?XSTACK_DISP0_8
   \   000142   D0E0         POP     A
   \   000144   12....       LCALL   ?Subroutine6 & 0xFFFF
    874                sendbufRfID[3] = RfID.data[2] = pkt->cmd.Data[6]; //
   \                     ??CrossCallReturnLabel_11:
   \   000147   90....       MOV     DPTR,#RfID + 4
   \   00014A   F0           MOVX    @DPTR,A
   \   00014B   C0E0         PUSH    A
   \   00014D   7410         MOV     A,#0x10
   \   00014F   12....       LCALL   ?XSTACK_DISP0_8
   \   000152   D0E0         POP     A
   \   000154   12....       LCALL   ?Subroutine22 & 0xFFFF
    875                sendbufRfID[4] = RfID.data[3] = pkt->cmd.Data[7]; //
   \                     ??CrossCallReturnLabel_50:
   \   000157   A3           INC     DPTR
   \   000158   E0           MOVX    A,@DPTR
   \   000159   90....       MOV     DPTR,#RfID + 5
   \   00015C   F0           MOVX    @DPTR,A
   \   00015D   C0E0         PUSH    A
   \   00015F   7411         MOV     A,#0x11
   \   000161   12....       LCALL   ?XSTACK_DISP0_8
   \   000164   D0E0         POP     A
   \   000166   12....       LCALL   ?Subroutine5 & 0xFFFF
    876                sendbufRfID[5] = RfID.data[4] = pkt->cmd.Data[8]; //  
   \                     ??CrossCallReturnLabel_9:
   \   000169   A3           INC     DPTR
   \   00016A   E0           MOVX    A,@DPTR
   \   00016B   90....       MOV     DPTR,#RfID + 6
   \   00016E   F0           MOVX    @DPTR,A
   \   00016F   C0E0         PUSH    A
   \   000171   7412         MOV     A,#0x12
   \   000173   12....       LCALL   ?XSTACK_DISP0_8
   \   000176   D0E0         POP     A
   \   000178   F0           MOVX    @DPTR,A
    877                
    878                sendbufRfID[6] = '\n';
   \   000179   7413         MOV     A,#0x13
   \   00017B   12....       LCALL   ?XSTACK_DISP0_8
   \   00017E   740A         MOV     A,#0xa
   \   000180   F0           MOVX    @DPTR,A
    879                
    880          #if (HAL_UART == TRUE)
    881                HalUARTWrite(HAL_UART_PORT_0, sendbufRfID,   7);
   \   000181                ; Setup parameters for call to function HalUARTWrite
   \   000181   7C07         MOV     R4,#0x7
   \   000183   7D00         MOV     R5,#0x0
   \   000185   740D         MOV     A,#0xd
   \   000187   12....       LCALL   ?XSTACK_DISP0_8
   \   00018A   AA82         MOV     R2,DPL
   \   00018C   AB83         MOV     R3,DPH
   \   00018E   7900         MOV     R1,#0x0
   \   000190   12....       LCALL   ??HalUARTWrite?relay
    882          #endif
    883                osal_msg_deallocate(sendbufRfID);
   \   000193                ; Setup parameters for call to function osal_msg_deallocate
   \   000193   740D         MOV     A,#0xd
   \   000195   02....       LJMP    ??Smart_home_ProcessMSGCmd_11 & 0xFFFF
    884                break;
    885              }
    886                
    887              case Smart_home_CLUSTERID_GASFLAMEMSG:      // 烟雾火焰
    888              {
    889                uint8 sendbufgasFlame[3] = {0};
   \                     ??Smart_home_ProcessMSGCmd_4:
   \   000198   7404         MOV     A,#0x4
   \   00019A   12....       LCALL   ?XSTACK_DISP0_8
   \   00019D   AC82         MOV     R4,DPL
   \   00019F   AD83         MOV     R5,DPH
   \   0001A1   7583..       MOV     DPH,#(`?<Constant {0}>_3` >> 8) & 0xff
   \   0001A4   7582..       MOV     DPL,#`?<Constant {0}>_3` & 0xff
   \   0001A7   7403         MOV     A,#0x3
   \   0001A9   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    890                sendbufgasFlame[0] = '4';
   \   0001AC   7404         MOV     A,#0x4
   \   0001AE   12....       LCALL   ?XSTACK_DISP0_8
   \   0001B1   7434         MOV     A,#0x34
   \   0001B3   F0           MOVX    @DPTR,A
    891                
    892                gasFlame.deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \   0001B4   90....       MOV     DPTR,#gasFlame + 1
   \   0001B7   12....       LCALL   ?Subroutine4 & 0xFFFF
    893                sendbufgasFlame[1] = gasFlame.data[0] = pkt->cmd.Data[4]; // 烟雾与火焰报警信息
   \                     ??CrossCallReturnLabel_4:
   \   0001BA   90....       MOV     DPTR,#gasFlame + 2
   \                     ??Smart_home_ProcessMSGCmd_12:
   \   0001BD   F0           MOVX    @DPTR,A
   \   0001BE   C0E0         PUSH    A
   \   0001C0   7405         MOV     A,#0x5
   \   0001C2   12....       LCALL   ?XSTACK_DISP0_8
   \   0001C5   D0E0         POP     A
   \   0001C7   F0           MOVX    @DPTR,A
    894          
    895                sendbufgasFlame[2] = '\n';
   \   0001C8   7406         MOV     A,#0x6
   \   0001CA   12....       LCALL   ?XSTACK_DISP0_8
   \   0001CD   740A         MOV     A,#0xa
   \   0001CF   F0           MOVX    @DPTR,A
    896                
    897          #if (HAL_UART == TRUE)
    898                HalUARTWrite(HAL_UART_PORT_0, sendbufgasFlame,   3);
   \   0001D0                ; Setup parameters for call to function HalUARTWrite
   \   0001D0   7C03         MOV     R4,#0x3
   \   0001D2   7D00         MOV     R5,#0x0
   \   0001D4   7404         MOV     A,#0x4
   \   0001D6   12....       LCALL   ?XSTACK_DISP0_8
   \   0001D9   AA82         MOV     R2,DPL
   \   0001DB   AB83         MOV     R3,DPH
   \   0001DD   7900         MOV     R1,#0x0
   \   0001DF   12....       LCALL   ??HalUARTWrite?relay
    899          #endif
    900                osal_msg_deallocate(sendbufgasFlame);
   \   0001E2                ; Setup parameters for call to function osal_msg_deallocate
   \   0001E2   7404         MOV     A,#0x4
   \   0001E4   02....       LJMP    ??Smart_home_ProcessMSGCmd_11 & 0xFFFF
    901                break;
    902              }
    903                
    904              case Smart_home_CLUSTERID_INFRAREDMSG:      // 人体红外
    905              {
    906                uint8 sendbufinfrared[3] = {0};
   \                     ??Smart_home_ProcessMSGCmd_5:
   \   0001E7   7404         MOV     A,#0x4
   \   0001E9   12....       LCALL   ?XSTACK_DISP0_8
   \   0001EC   AC82         MOV     R4,DPL
   \   0001EE   AD83         MOV     R5,DPH
   \   0001F0   7583..       MOV     DPH,#(`?<Constant {0}>_4` >> 8) & 0xff
   \   0001F3   7582..       MOV     DPL,#`?<Constant {0}>_4` & 0xff
   \   0001F6   7403         MOV     A,#0x3
   \   0001F8   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    907                sendbufinfrared[0] = '5';
   \   0001FB   7404         MOV     A,#0x4
   \   0001FD   12....       LCALL   ?XSTACK_DISP0_8
   \   000200   7435         MOV     A,#0x35
   \   000202   F0           MOVX    @DPTR,A
    908                
    909                infrared.deviceStatus = DEVICE_ONLINE;    //收到消息设置为在线
   \   000203   90....       MOV     DPTR,#infrared + 1
   \   000206   12....       LCALL   ?Subroutine4 & 0xFFFF
    910                sendbufinfrared[1] = infrared.data[0] = pkt->cmd.Data[4]; // 人体红外
    911          
    912                sendbufinfrared[2] = '\n';
    913                
    914          #if (HAL_UART == TRUE)
    915                HalUARTWrite(HAL_UART_PORT_0, sendbufinfrared,   3);
    916          #endif
    917                osal_msg_deallocate(sendbufinfrared);
    918                break;
    919              }
   \                     ??CrossCallReturnLabel_5:
   \   000209   90....       MOV     DPTR,#infrared + 2
   \   00020C   80AF         SJMP    ??Smart_home_ProcessMSGCmd_12
    920          
    921              case Smart_home_CLUSTERID_SOUNDVBMSG:       // 声音振动
    922              {
    923                uint8 sendbufsoundVb[4] = {0};
   \                     ??Smart_home_ProcessMSGCmd_6:
   \   00020E   85..82       MOV     DPL,?XSP + 0
   \   000211   85..83       MOV     DPH,?XSP + 1
   \   000214   AC82         MOV     R4,DPL
   \   000216   AD83         MOV     R5,DPH
   \   000218   7583..       MOV     DPH,#(`?<Constant {0}>_5` >> 8) & 0xff
   \   00021B   7582..       MOV     DPL,#`?<Constant {0}>_5` & 0xff
   \   00021E   7404         MOV     A,#0x4
   \   000220   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    924                sendbufsoundVb[0] = '6';
   \   000223   85..82       MOV     DPL,?XSP + 0
   \   000226   85..83       MOV     DPH,?XSP + 1
   \   000229   7436         MOV     A,#0x36
   \   00022B   F0           MOVX    @DPTR,A
    925                
    926                soundVb.deviceStatus = DEVICE_ONLINE;     //收到消息设置为在线
   \   00022C   90....       MOV     DPTR,#soundVb + 1
   \   00022F   12....       LCALL   ?Subroutine4 & 0xFFFF
    927                sendbufsoundVb[1] = soundVb.data[0] = pkt->cmd.Data[4]; // 声音震动信息
    928                
    929                
    930                sendbufsoundVb[2] = '\n';
    931                
    932          #if (HAL_UART == TRUE)
    933                HalUARTWrite(HAL_UART_PORT_0, sendbufsoundVb,   3);
    934          #endif
    935                osal_msg_deallocate(sendbufsoundVb);
    936                break;
    937              }
   \                     ??CrossCallReturnLabel_6:
   \   000232   90....       MOV     DPTR,#soundVb + 2
   \   000235   02....       LJMP    ??Smart_home_ProcessMSGCmd_13 & 0xFFFF
    938                
    939              case Smart_home_CLUSTERID_MOTORSTATUSMSG:   // 直流电机状态信息
    940              {  
    941                uint8 sendbufmotor[4] = {0};
   \                     ??Smart_home_ProcessMSGCmd_7:
   \   000238   85..82       MOV     DPL,?XSP + 0
   \   00023B   85..83       MOV     DPH,?XSP + 1
   \   00023E   AC82         MOV     R4,DPL
   \   000240   AD83         MOV     R5,DPH
   \   000242   7583..       MOV     DPH,#(`?<Constant {0}>_6` >> 8) & 0xff
   \   000245   7582..       MOV     DPL,#`?<Constant {0}>_6` & 0xff
   \   000248   7404         MOV     A,#0x4
   \   00024A   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    942                sendbufmotor[0] = '7';
   \   00024D   85..82       MOV     DPL,?XSP + 0
   \   000250   85..83       MOV     DPH,?XSP + 1
   \   000253   7437         MOV     A,#0x37
   \   000255   F0           MOVX    @DPTR,A
    943                
    944                motor.deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线
   \   000256   90....       MOV     DPTR,#motor + 1
   \   000259   7401         MOV     A,#0x1
   \   00025B   F0           MOVX    @DPTR,A
    945                // 储存电机设备的网络地址，用于发送控制命令
    946                Motor_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   00025C   90....       MOV     DPTR,#Motor_addr + 8
   \   00025F   12....       LCALL   ?Subroutine9 & 0xFFFF
    947                Motor_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_16:
   \   000262   90....       MOV     DPTR,#Motor_addr
   \   000265   E8           MOV     A,R0
   \   000266   F0           MOVX    @DPTR,A
   \   000267   A3           INC     DPTR
   \   000268   E9           MOV     A,R1
   \   000269   F0           MOVX    @DPTR,A
    948                
    949                Motor_addr.endPoint = 1;  // 目的节点的端口号
   \   00026A   90....       MOV     DPTR,#Motor_addr + 9
   \   00026D   12....       LCALL   ?Subroutine3 & 0xFFFF
    950                //TransmitApp_DstMotorAddr->endPoint = TRANSMITAPP_ENDPOINT;
    951               
    952                sendbufmotor[1] = motor.data[0] = pkt->cmd.Data[4]; // 电机转速
    953                sendbufmotor[2] = motor.data[1] = pkt->cmd.Data[5]; // 电机状态
    954          
    955                sendbufmotor[3] = '\n';
    956                
    957          #if (HAL_UART == TRUE)
    958                HalUARTWrite(HAL_UART_PORT_0, sendbufmotor,   4);
    959          #endif
    960                osal_msg_deallocate(sendbufmotor);
    961                break;
    962              }
   \                     ??CrossCallReturnLabel_3:
   \   000270   90....       MOV     DPTR,#motor + 2
   \   000273   F0           MOVX    @DPTR,A
   \   000274   C0E0         PUSH    A
   \   000276   7401         MOV     A,#0x1
   \   000278   12....       LCALL   ?XSTACK_DISP0_8
   \   00027B   D0E0         POP     A
   \   00027D   12....       LCALL   ?Subroutine7 & 0xFFFF
   \                     ??CrossCallReturnLabel_13:
   \   000280   90....       MOV     DPTR,#motor + 3
   \   000283   02....       LJMP    ??Smart_home_ProcessMSGCmd_9 & 0xFFFF
    963                
    964              case Smart_home_CLUSTERID_RELAYSTATUSMSG:   // 继电器状态信息
    965              {
    966                uint8 sendbufrelay[4] = {0};
   \                     ??Smart_home_ProcessMSGCmd_8:
   \   000286   85..82       MOV     DPL,?XSP + 0
   \   000289   85..83       MOV     DPH,?XSP + 1
   \   00028C   AC82         MOV     R4,DPL
   \   00028E   AD83         MOV     R5,DPH
   \   000290   7583..       MOV     DPH,#(`?<Constant {0}>_7` >> 8) & 0xff
   \   000293   7582..       MOV     DPL,#`?<Constant {0}>_7` & 0xff
   \   000296   7404         MOV     A,#0x4
   \   000298   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    967                sendbufrelay[0] = '8';
   \   00029B   85..82       MOV     DPL,?XSP + 0
   \   00029E   85..83       MOV     DPH,?XSP + 1
   \   0002A1   7438         MOV     A,#0x38
   \   0002A3   F0           MOVX    @DPTR,A
    968                
    969                relay.deviceStatus = DEVICE_ONLINE;       //收到消息设置为在线    
   \   0002A4   90....       MOV     DPTR,#relay + 1
   \   0002A7   7401         MOV     A,#0x1
   \   0002A9   F0           MOVX    @DPTR,A
    970                
    971                // 储存继电器设备的网络地址，用于发送控制命令
    972                Relay_addr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0002AA   90....       MOV     DPTR,#Relay_addr + 8
   \   0002AD   12....       LCALL   ?Subroutine9 & 0xFFFF
    973                Relay_addr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;    
   \                     ??CrossCallReturnLabel_17:
   \   0002B0   90....       MOV     DPTR,#Relay_addr
   \   0002B3   E8           MOV     A,R0
   \   0002B4   F0           MOVX    @DPTR,A
   \   0002B5   A3           INC     DPTR
   \   0002B6   E9           MOV     A,R1
   \   0002B7   F0           MOVX    @DPTR,A
    974                Relay_addr.endPoint = 1; // 目的节点的端口号
   \   0002B8   90....       MOV     DPTR,#Relay_addr + 9
   \   0002BB   12....       LCALL   ?Subroutine4 & 0xFFFF
    975                sendbufrelay[1] = relay.data[0] = pkt->cmd.Data[4]; 
   \                     ??CrossCallReturnLabel_7:
   \   0002BE   90....       MOV     DPTR,#relay + 2
   \                     ??Smart_home_ProcessMSGCmd_13:
   \   0002C1   F0           MOVX    @DPTR,A
   \   0002C2   C0E0         PUSH    A
   \   0002C4   7401         MOV     A,#0x1
   \   0002C6   12....       LCALL   ?XSTACK_DISP0_8
   \   0002C9   D0E0         POP     A
   \   0002CB   F0           MOVX    @DPTR,A
    976          
    977                sendbufrelay[2] = '\n';
   \   0002CC   7402         MOV     A,#0x2
   \   0002CE   12....       LCALL   ?XSTACK_DISP0_8
   \   0002D1   740A         MOV     A,#0xa
   \   0002D3   F0           MOVX    @DPTR,A
    978                
    979          #if (HAL_UART == TRUE)
    980                HalUARTWrite(HAL_UART_PORT_0, sendbufrelay,   3);
   \   0002D4                ; Setup parameters for call to function HalUARTWrite
   \   0002D4   7C03         MOV     R4,#0x3
   \                     ??Smart_home_ProcessMSGCmd_10:
   \   0002D6   7D00         MOV     R5,#0x0
   \   0002D8   85..82       MOV     DPL,?XSP + 0
   \   0002DB   85..83       MOV     DPH,?XSP + 1
   \   0002DE   AA82         MOV     R2,DPL
   \   0002E0   AB83         MOV     R3,DPH
   \   0002E2   12....       LCALL   ?Subroutine12 & 0xFFFF
    981          #endif
    982                osal_msg_deallocate(sendbufrelay);
   \                     ??CrossCallReturnLabel_24:
   \   0002E5   AA82         MOV     R2,DPL
   \   0002E7   AB83         MOV     R3,DPH
   \   0002E9   12....       LCALL   ??osal_msg_deallocate?relay
    983                break;
    984              }
    985                
    986              default:
    987                break;
    988            }
    989          }
   \                     ??Smart_home_ProcessMSGCmd_0:
   \   0002EC   7414         MOV     A,#0x14
   \   0002EE   12....       LCALL   ?DEALLOC_XSTACK8
   \   0002F1   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   04           INC     A
   \   000001   F0           MOVX    @DPTR,A
   \   000002   8A82         MOV     DPL,R2
   \   000004   8B83         MOV     DPH,R3
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F9           MOV     R1,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_58:
   \   000003   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_57:
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_52:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine22 & 0xFFFF
   \                     ??CrossCallReturnLabel_51:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_59:
   \   000003   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_61:
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine26:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   E0           MOVX    A,@DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine23 & 0xFFFF
   \                     ??CrossCallReturnLabel_53:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_60:
   \   000003   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_64:
   \   000006   A3           INC     DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_54:
   \   000003   12....       LCALL   ?Subroutine28 & 0xFFFF
   \                     ??CrossCallReturnLabel_63:
   \   000006   E0           MOVX    A,@DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine28:
   \   000000   F8           MOV     R0,A
   \   000001   A3           INC     DPTR
   \   000002   E0           MOVX    A,@DPTR
   \   000003   F583         MOV     DPH,A
   \   000005   8882         MOV     DPL,R0
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_55:
   \   000003   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_56:
   \   000006   E0           MOVX    A,@DPTR
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_62:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine27:
   \   000000   FA           MOV     R2,A
   \   000001   A3           INC     DPTR
   \   000002   E0           MOVX    A,@DPTR
   \   000003   F583         MOV     DPH,A
   \   000005   8A82         MOV     DPL,R2
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F9           MOV     R1,A
   \   00000B   8882         MOV     DPL,R0
   \   00000D   8983         MOV     DPH,R1
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   22           RET
    990          
    991          /*********************************************************************
    992           * @fn     Smart_home_Device_check
    993           *
    994           * @brief   设备计数器，用来检查设备在开始组网后多久在线.
    995           *          目前搜索为4次HeartBeat  (DEVICE_HEART_BEAT 3)
    996           *          3.21
    997           * @param   none
    998           *
    999           * @return  none
   1000           */
   1001          /*3.24 这里的检测时常有点长 改为变量外提的方式加快处理速度*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1002          uint8 Device_check(DeviceInfo dev,uint8 count)
   \                     Device_check:
   1003          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1004            if(dev.deviceStatus != DEVICE_ONLINE)    //设备离线
   \   000004   7401         MOV     A,#0x1
   \   000006   12....       LCALL   ?XSTACK_DISP0_8
   \   000009   E0           MOVX    A,@DPTR
   \   00000A   6401         XRL     A,#0x1
   \   00000C   600C         JZ      ??Device_check_0
   1005            {
   1006              count++;
   \   00000E   09           INC     R1
   1007            }
   1008            if(dev.deviceStatus == DEVICE_ONLINE)    //设备在线
   1009            {
   1010              count = 0;
   1011              dev.deviceStatus = 0;
   1012            }
   1013            if(count > DEVICE_HEART_BEAT)
   \   00000F   E9           MOV     A,R1
   \   000010   C3           CLR     C
   \   000011   9404         SUBB    A,#0x4
   \   000013   4002         JC      ??Device_check_1
   1014            {
   1015              count = DEVICE_HEART_BEAT;
   \   000015   7903         MOV     R1,#0x3
   1016              dev.deviceStatus = DEVICE_OFFLINE;
   1017            }  
   1018            return count;
   \                     ??Device_check_1:
   \   000017   02....       LJMP    ?Subroutine2 & 0xFFFF
   \                     ??Device_check_0:
   \   00001A   7900         MOV     R1,#0x0
   \   00001C   80F9         SJMP    ??Device_check_1
   1019          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
   1020          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1021          void Smart_home_Device_check(void)
   \                     Smart_home_Device_check:
   1022          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   1023            static uint8 humitCnt, tempLightCnt, rfIDCnt, gasFlameCnt, infraredCnt;
   1024            static uint8 motorCnt, relayStatusCnt, soundVbCnt;
   1025            humitCnt = Device_check(Humit,humitCnt);
   \   000004                ; Setup parameters for call to function Device_check
   \   000004   90....       MOV     DPTR,#Humit
   \   000007   7407         MOV     A,#0x7
   \   000009   12....       LCALL   ?PUSH_XSTACK8_X
   \   00000C   90....       MOV     DPTR,#??humitCnt
   \   00000F   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   000012   12....       LCALL   ?DEALLOC_XSTACK8
   \   000015   E9           MOV     A,R1
   \   000016   90....       MOV     DPTR,#??humitCnt
   \   000019   F0           MOVX    @DPTR,A
   1026            tempLightCnt = Device_check(TempLight,tempLightCnt);
   \   00001A                ; Setup parameters for call to function Device_check
   \   00001A   90....       MOV     DPTR,#TempLight
   \   00001D   7407         MOV     A,#0x7
   \   00001F   12....       LCALL   ?PUSH_XSTACK8_X
   \   000022   90....       MOV     DPTR,#??tempLightCnt
   \   000025   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   000028   12....       LCALL   ?DEALLOC_XSTACK8
   \   00002B   E9           MOV     A,R1
   \   00002C   90....       MOV     DPTR,#??tempLightCnt
   \   00002F   F0           MOVX    @DPTR,A
   1027            rfIDCnt = Device_check(RfID,rfIDCnt);
   \   000030                ; Setup parameters for call to function Device_check
   \   000030   90....       MOV     DPTR,#RfID
   \   000033   7407         MOV     A,#0x7
   \   000035   12....       LCALL   ?PUSH_XSTACK8_X
   \   000038   90....       MOV     DPTR,#??rfIDCnt
   \   00003B   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   00003E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000041   E9           MOV     A,R1
   \   000042   90....       MOV     DPTR,#??rfIDCnt
   \   000045   F0           MOVX    @DPTR,A
   1028            gasFlameCnt = Device_check(gasFlame,gasFlameCnt);
   \   000046                ; Setup parameters for call to function Device_check
   \   000046   90....       MOV     DPTR,#gasFlame
   \   000049   7407         MOV     A,#0x7
   \   00004B   12....       LCALL   ?PUSH_XSTACK8_X
   \   00004E   90....       MOV     DPTR,#??gasFlameCnt
   \   000051   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   000054   12....       LCALL   ?DEALLOC_XSTACK8
   \   000057   E9           MOV     A,R1
   \   000058   90....       MOV     DPTR,#??gasFlameCnt
   \   00005B   F0           MOVX    @DPTR,A
   1029            infraredCnt = Device_check(infrared,infraredCnt);
   \   00005C                ; Setup parameters for call to function Device_check
   \   00005C   90....       MOV     DPTR,#infrared
   \   00005F   7407         MOV     A,#0x7
   \   000061   12....       LCALL   ?PUSH_XSTACK8_X
   \   000064   90....       MOV     DPTR,#??infraredCnt
   \   000067   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   00006A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006D   E9           MOV     A,R1
   \   00006E   90....       MOV     DPTR,#??infraredCnt
   \   000071   F0           MOVX    @DPTR,A
   1030            motorCnt = Device_check(motor,motorCnt);
   \   000072                ; Setup parameters for call to function Device_check
   \   000072   90....       MOV     DPTR,#motor
   \   000075   7407         MOV     A,#0x7
   \   000077   12....       LCALL   ?PUSH_XSTACK8_X
   \   00007A   90....       MOV     DPTR,#??motorCnt
   \   00007D   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   000080   12....       LCALL   ?DEALLOC_XSTACK8
   \   000083   E9           MOV     A,R1
   \   000084   90....       MOV     DPTR,#??motorCnt
   \   000087   F0           MOVX    @DPTR,A
   1031            relayStatusCnt = Device_check(relay,relayStatusCnt);
   \   000088                ; Setup parameters for call to function Device_check
   \   000088   90....       MOV     DPTR,#relay
   \   00008B   7407         MOV     A,#0x7
   \   00008D   12....       LCALL   ?PUSH_XSTACK8_X
   \   000090   90....       MOV     DPTR,#??relayStatusCnt
   \   000093   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   000096   12....       LCALL   ?DEALLOC_XSTACK8
   \   000099   E9           MOV     A,R1
   \   00009A   90....       MOV     DPTR,#??relayStatusCnt
   \   00009D   F0           MOVX    @DPTR,A
   1032            soundVbCnt = Device_check(soundVb,soundVbCnt);
   \   00009E                ; Setup parameters for call to function Device_check
   \   00009E   90....       MOV     DPTR,#soundVb
   \   0000A1   7407         MOV     A,#0x7
   \   0000A3   12....       LCALL   ?PUSH_XSTACK8_X
   \   0000A6   90....       MOV     DPTR,#??soundVbCnt
   \   0000A9   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_34:
   \   0000AC   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000AF   E9           MOV     A,R1
   \   0000B0   90....       MOV     DPTR,#??soundVbCnt
   \   0000B3   F0           MOVX    @DPTR,A
   1033            /*温湿度缓存 温度光照缓存 RFID 信息缓存 气体火焰缓存 
   1034            人体红外 电机状态 继电器状态 声音震动*/
   1035          }
   \   0000B4                REQUIRE ?Subroutine2
   \   0000B4                ; // Fall through to label ?Subroutine2

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F9           MOV     R1,A
   \   000002   12....       LCALL   ??Device_check?relay
   \   000005   7407         MOV     A,#0x7
   \   000007   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??humitCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??tempLightCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??rfIDCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??gasFlameCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??infraredCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??motorCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??relayStatusCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??soundVbCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
   1036          
   1037          
   1038          /*********************************************************************
   1039           * @fn      Smart_home_Relay_Ctl
   1040           *
   1041           * @brief   发送继电器控制消息
   1042           *
   1043           * @param   none
   1044           *
   1045           * @return  none
   1046           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1047          static void Smart_home_Relay_Ctl(uint8 cmd)
   \                     Smart_home_Relay_Ctl:
   1048          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   1049            uint8 tmp;
   1050            
   1051            // 只有设备在线时, 方发送控制命令
   1052            if (relay.deviceStatus != DEVICE_OFFLINE)
   \   000007   90....       MOV     DPTR,#relay + 1
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6402         XRL     A,#0x2
   \   00000D   6077         JZ      ??Smart_home_Relay_Ctl_0
   1053            {
   1054              // put the sequence number in the message
   1055              tmp = HI_UINT8( RelayTransID );
   \   00000F   90....       MOV     DPTR,#RelayTransID
   \   000012   E0           MOVX    A,@DPTR
   \   000013   C4           SWAP    A
   \   000014   540F         ANL     A,#0xf
   \   000016   FA           MOV     R2,A
   1056              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   000017   C3           CLR     C
   \   000018   940A         SUBB    A,#0xa
   \   00001A   5004         JNC     ??Smart_home_Relay_Ctl_1
   \   00001C   7830         MOV     R0,#0x30
   \   00001E   8002         SJMP    ??Smart_home_Relay_Ctl_2
   \                     ??Smart_home_Relay_Ctl_1:
   \   000020   7837         MOV     R0,#0x37
   1057              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_Relay_Ctl_2:
   \   000022   E8           MOV     A,R0
   \   000023   2A           ADD     A,R2
   \   000024   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000027   F0           MOVX    @DPTR,A
   1058              tmp = LO_UINT8( RelayTransID );
   \   000028   90....       MOV     DPTR,#RelayTransID
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   540F         ANL     A,#0xf
   \   00002E   FA           MOV     R2,A
   1059              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \   00002F   C3           CLR     C
   \   000030   940A         SUBB    A,#0xa
   \   000032   5004         JNC     ??Smart_home_Relay_Ctl_3
   \   000034   7830         MOV     R0,#0x30
   \   000036   8002         SJMP    ??Smart_home_Relay_Ctl_4
   \                     ??Smart_home_Relay_Ctl_3:
   \   000038   7837         MOV     R0,#0x37
   1060              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_Relay_Ctl_4:
   \   00003A   E8           MOV     A,R0
   \   00003B   2A           ADD     A,R2
   \   00003C   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   00003F   F0           MOVX    @DPTR,A
   1061              
   1062              // 发送给继电器的控制命令 
   1063              Coordinator_Msg[4] = cmd;
   \   000040   EE           MOV     A,R6
   \   000041   A3           INC     DPTR
   \   000042   F0           MOVX    @DPTR,A
   1064              /********************************************
   1065              *   屏幕显示部分*
   1066          #if defined ( LCD_SUPPORTED )
   1067              if(cmd == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   1068              if(cmd == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   1069              if(cmd == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   1070              if(cmd == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}
   1071          #endif     
   1072              ********************************************/
   1073              tmp = AF_DataRequest( &Relay_addr,                         
   1074                                    (endPointDesc_t *)&Smart_home_epDesc,                  
   1075                                     Smart_home_CLUSTERID_RELAYCTRL,
   1076                                     RELAYSTATUSMSG_LEN,                 
   1077                                     Coordinator_Msg,                    
   1078                                    &RelayTransID,                       
   1079                                     AF_DISCV_ROUTE,                     
   1080                                     AF_DEFAULT_RADIUS );
   \   000043                ; Setup parameters for call to function AF_DataRequest
   \   000043   75..1E       MOV     ?V0 + 0,#0x1e
   \   000046   78..         MOV     R0,#?V0 + 0
   \   000048   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004B   75....       MOV     ?V0 + 0,#RelayTransID & 0xff
   \   00004E   75....       MOV     ?V0 + 1,#(RelayTransID >> 8) & 0xff
   \   000051   78..         MOV     R0,#?V0 + 0
   \   000053   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000056   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   000059   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   00005C   78..         MOV     R0,#?V0 + 0
   \   00005E   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000061   75..05       MOV     ?V0 + 0,#0x5
   \   000064   75..00       MOV     ?V0 + 1,#0x0
   \   000067   78..         MOV     R0,#?V0 + 0
   \   000069   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006C   75..0A       MOV     ?V0 + 0,#0xa
   \   00006F   78..         MOV     R0,#?V0 + 0
   \   000071   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000074   7920         MOV     R1,#0x20
   \   000076   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   000078   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   00007A   7A..         MOV     R2,#Relay_addr & 0xff
   \   00007C   7B..         MOV     R3,#(Relay_addr >> 8) & 0xff
   \   00007E   12....       LCALL   ??AF_DataRequest?relay
   \   000081   7409         MOV     A,#0x9
   \   000083   12....       LCALL   ?DEALLOC_XSTACK8
   1081            } 
   1082          }
   \                     ??Smart_home_Relay_Ctl_0:
   \   000086                REQUIRE ?Subroutine1
   \   000086                ; // Fall through to label ?Subroutine1
   1083          
   1084          /*********************************************************************
   1085           * @fn      Smart_home_Motor_Ctl
   1086           *
   1087           * @brief   发送电机控制消息
   1088           *
   1089           * @param   none
   1090           *
   1091           * @return  none
   1092           */
   1093          static void Smart_home_Motor_Ctl(uint8 cmd,uint8 speed)
   1094          {
   1095            uint8 tmp;
   1096            
   1097            // 只有设备在线时, 方发送控制命令
   1098            if (motor.deviceStatus != DEVICE_OFFLINE)
   1099            {
   1100              // put the sequence number in the message
   1101              tmp = HI_UINT8( MotorTransID );
   1102              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   1103              Coordinator_Msg[2] = tmp;
   1104              tmp = LO_UINT8( MotorTransID );
   1105              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   1106              Coordinator_Msg[3] = tmp;
   1107              
   1108              // 发送给电机的控制命令 
   1109              Coordinator_Msg[4] = speed;
   1110              Coordinator_Msg[5] = cmd;
   1111              
   1112              tmp = AF_DataRequest( &Motor_addr,                         
   1113                                    (endPointDesc_t *)&Smart_home_epDesc,                  
   1114                                     Smart_home_CLUSTERID_MOTORCTRL,
   1115                                     MOTORSTATUSMSG_LEN,                 
   1116                                     Coordinator_Msg,                    
   1117                                    &MotorTransID,                       
   1118                                     AF_DISCV_ROUTE,                     
   1119                                     AF_DEFAULT_RADIUS );
   1120            }   
   1121          }
   1122          
   1123          
   1124          /*********************************************************************
   1125           * @fn      Smart_home_Display
   1126           *
   1127           * @brief   屏幕回显函数，定义了内容如何显示.
   1128           *
   1129           * @param   port - UART port.
   1130           * @param   event - the UART port event flag.
   1131           *
   1132           * @return  none
   1133           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1134          static void Smart_home_Display(void)
   \                     Smart_home_Display:
   1135          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   1136          #if defined LCD_SUPPORTED
   1137            static uint8 percent;
   1138            switch(Ctrlcase)
   \   000005   90....       MOV     DPTR,#Ctrlcase
   \   000008   E0           MOVX    A,@DPTR
   \   000009   14           DEC     A
   \   00000A   7003         JNZ     $+5
   \   00000C   02....       LJMP    ??Smart_home_Display_0 & 0xFFFF
   \   00000F   14           DEC     A
   \   000010   7003         JNZ     $+5
   \   000012   02....       LJMP    ??Smart_home_Display_1 & 0xFFFF
   1139            {
   1140              default:    
   1141              case 0:
   1142                HalLcdWriteString( "      Menu      ", HAL_LCD_LINE_1 );
   \   000015                ; Setup parameters for call to function HalLcdWriteString
   \   000015   7901         MOV     R1,#0x1
   \   000017   7A..         MOV     R2,#`?<Constant "      Menu      ">` & 0xff
   \   000019   7B..         MOV     R3,#(`?<Constant "      Menu      ">` >> 8) & 0xff
   \   00001B   12....       LCALL   ?Subroutine11 & 0xFFFF
   1143                //HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
   1144                //清除屏幕显示
   1145                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1146                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1147                
   1148                switch(LCD_Page)
   \                     ??CrossCallReturnLabel_20:
   \   00001E   90....       MOV     DPTR,#LCD_Page
   \   000021   E0           MOVX    A,@DPTR
   \   000022   14           DEC     A
   \   000023   7003         JNZ     $+5
   \   000025   02....       LJMP    ??Smart_home_Display_2 & 0xFFFF
   \   000028   14           DEC     A
   \   000029   7003         JNZ     $+5
   \   00002B   02....       LJMP    ??Smart_home_Display_3 & 0xFFFF
   \   00002E   14           DEC     A
   \   00002F   7003         JNZ     $+5
   \   000031   02....       LJMP    ??Smart_home_Display_4 & 0xFFFF
   1149                {
   1150                  default:
   1151                  case 0:
   1152                  { 
   1153                    //DeviceInfo* Devhum = &DeviceList[Humit];
   1154                    //DeviceInfo* DevSound = &DeviceList[soundVb];
   1155                    //第一页第二行显示温度
   1156                    //      第三行显示光照
   1157                    if(Humit.deviceStatus != DEVICE_OFFLINE)
   \   000034   90....       MOV     DPTR,#Humit + 1
   \   000037   E0           MOVX    A,@DPTR
   \   000038   6402         XRL     A,#0x2
   \   00003A   6040         JZ      ??Smart_home_Display_5
   1158                    {    
   1159                        HalLcdWriteStringValueValue( "Hum:", Humit.data[0], 10, "% T_1:", Humit.data[1], 10, HAL_LCD_LINE_2 );
   \   00003C                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   00003C   75..02       MOV     ?V0 + 0,#0x2
   \   00003F   78..         MOV     R0,#?V0 + 0
   \   000041   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000044   75..0A       MOV     ?V0 + 0,#0xa
   \   000047   78..         MOV     R0,#?V0 + 0
   \   000049   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004C   90....       MOV     DPTR,#Humit + 3
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   F5..         MOV     ?V0 + 0,A
   \   000052   75..00       MOV     ?V0 + 1,#0x0
   \   000055   78..         MOV     R0,#?V0 + 0
   \   000057   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005A   75....       MOV     ?V0 + 0,#`?<Constant "% T_1:">` & 0xff
   \   00005D   75....       MOV     ?V0 + 1,#(`?<Constant "% T_1:">` >> 8) & 0xff
   \   000060   78..         MOV     R0,#?V0 + 0
   \   000062   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000065   790A         MOV     R1,#0xa
   \   000067   90....       MOV     DPTR,#Humit + 2
   \   00006A   E0           MOVX    A,@DPTR
   \   00006B   FC           MOV     R4,A
   \   00006C   7D00         MOV     R5,#0x0
   \   00006E   7A..         MOV     R2,#`?<Constant "Hum:">` & 0xff
   \   000070   7B..         MOV     R3,#(`?<Constant "Hum:">` >> 8) & 0xff
   \   000072   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000075   7406         MOV     A,#0x6
   \   000077   12....       LCALL   ?DEALLOC_XSTACK8
   \   00007A   8009         SJMP    ??Smart_home_Display_6
   1160                    }
   1161                    else
   1162                    {
   1163                        HalLcdWriteString( "Hum:OFF T_1:OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_5:
   \   00007C                ; Setup parameters for call to function HalLcdWriteString
   \   00007C   7902         MOV     R1,#0x2
   \   00007E   7A..         MOV     R2,#`?<Constant "Hum:OFF T_1:OFF">` & 0xff
   \   000080   7B..         MOV     R3,#(`?<Constant "Hum:OFF T_1:OFF">` >> 8) & 0xff
   \   000082   12....       LCALL   ??HalLcdWriteString?relay
   1164                    }
   1165                    
   1166                    
   1167                    if(soundVb.deviceStatus  != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_6:
   \   000085   90....       MOV     DPTR,#soundVb + 1
   \   000088   E0           MOVX    A,@DPTR
   \   000089   6402         XRL     A,#0x2
   \   00008B   6014         JZ      ??Smart_home_Display_7
   1168                    {    
   1169                        if(soundVb.data[0] & 0x01 == 0x01) { HalLcdWriteString( "Sound: Voice", HAL_LCD_LINE_3 ); }
   \   00008D   A3           INC     DPTR
   \   00008E   E0           MOVX    A,@DPTR
   \   00008F   A2E0         MOV     C,0xE0 /* A   */.0
   \   000091   7903         MOV     R1,#0x3
   \   000093   5006         JNC     ??Smart_home_Display_8
   \   000095                ; Setup parameters for call to function HalLcdWriteString
   \   000095   7A..         MOV     R2,#`?<Constant "Sound: Voice">` & 0xff
   \   000097   7B..         MOV     R3,#(`?<Constant "Sound: Voice">` >> 8) & 0xff
   \   000099   800C         SJMP    ??Smart_home_Display_9
   1170                        else if(soundVb.data[0] & 0x02 == 0x02) { HalLcdWriteString( "Sound: Vibration", HAL_LCD_LINE_3 ); }
   1171                        else if(soundVb.data[0] & 0x03 == 0x03) { HalLcdWriteString( "Sound: All", HAL_LCD_LINE_3 ); }
   1172                        else {HalLcdWriteString( "Sound: None", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_8:
   \   00009B                ; Setup parameters for call to function HalLcdWriteString
   \   00009B   7A..         MOV     R2,#`?<Constant "Sound: None">` & 0xff
   \   00009D   7B..         MOV     R3,#(`?<Constant "Sound: None">` >> 8) & 0xff
   \   00009F   8006         SJMP    ??Smart_home_Display_9
   1173                    }
   1174                    else
   1175                    {
   1176                        HalLcdWriteString( "Sound:OFFLINE", HAL_LCD_LINE_3 ); 
   \                     ??Smart_home_Display_7:
   \   0000A1                ; Setup parameters for call to function HalLcdWriteString
   \   0000A1   7903         MOV     R1,#0x3
   \   0000A3   7A..         MOV     R2,#`?<Constant "Sound:OFFLINE">` & 0xff
   \   0000A5   7B..         MOV     R3,#(`?<Constant "Sound:OFFLINE">` >> 8) & 0xff
   \                     ??Smart_home_Display_9:
   \   0000A7   12....       LCALL   ??HalLcdWriteString?relay
   1177                    }
   1178                 
   1179                    //HalLcdWriteStringValue( "Sound:", SoundVb, 16, HAL_LCD_LINE_3 );
   1180                    
   1181                    
   1182                    //显示最下面的百分比条
   1183                    percent = (1 * 100) / LCD_PAGE_MAX;
   \   0000AA   90....       MOV     DPTR,#??percent
   \   0000AD   7419         MOV     A,#0x19
   \                     ??Smart_home_Display_10:
   \   0000AF   12....       LCALL   ?Subroutine10 & 0xFFFF
   1184                    HalLcdDisplayPercentBar("",percent);
   1185                    break;
   \                     ??CrossCallReturnLabel_18:
   \   0000B2   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1186                  }
   1187                  case 1:
   1188                  {
   1189                    //第二页只有光照
   1190                    //第一页第二行显示温度
   1191                    //      第三行显示光照
   1192                    //DeviceInfo* Devtmp = &DeviceList[TempLight];
   1193                    if(TempLight.deviceStatus  != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_2:
   \   0000B5   90....       MOV     DPTR,#TempLight + 1
   \   0000B8   E0           MOVX    A,@DPTR
   \   0000B9   6402         XRL     A,#0x2
   \   0000BB   7003         JNZ     $+5
   \   0000BD   02....       LJMP    ??Smart_home_Display_12 & 0xFFFF
   1194                    {    
   1195                        static uint16 Light;
   1196                        static uint8 lightmp;
   1197                    
   1198          
   1199                        lightmp = TempLight.data[3];
   \   0000C0   90....       MOV     DPTR,#TempLight + 5
   \   0000C3   E0           MOVX    A,@DPTR
   \   0000C4   90....       MOV     DPTR,#??lightmp
   \   0000C7   F0           MOVX    @DPTR,A
   1200                        Light = (uint16)TempLight.data[4];
   \   0000C8   90....       MOV     DPTR,#TempLight + 6
   \   0000CB   E0           MOVX    A,@DPTR
   \   0000CC   90....       MOV     DPTR,#??Light
   \   0000CF   F0           MOVX    @DPTR,A
   \   0000D0   A3           INC     DPTR
   \   0000D1   E4           CLR     A
   \   0000D2   F0           MOVX    @DPTR,A
   1201                        memcpy(&Light,&lightmp,sizeof(lightmp));
   \   0000D3                ; Setup parameters for call to function memcpy
   \   0000D3   75..01       MOV     ?V0 + 0,#0x1
   \   0000D6   F5..         MOV     ?V0 + 1,A
   \   0000D8   78..         MOV     R0,#?V0 + 0
   \   0000DA   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000DD   7C..         MOV     R4,#??lightmp & 0xff
   \   0000DF   7D..         MOV     R5,#(??lightmp >> 8) & 0xff
   \   0000E1   7A..         MOV     R2,#??Light & 0xff
   \   0000E3   7B..         MOV     R3,#(??Light >> 8) & 0xff
   \   0000E5   12....       LCALL   ??memcpy?relay
   \   0000E8   7402         MOV     A,#0x2
   \   0000EA   12....       LCALL   ?DEALLOC_XSTACK8
   1202                    
   1203                        HalLcdWriteStringValueValue( "Temper_2:", TempLight.data[0], 10, ".", TempLight.data[1], 10, HAL_LCD_LINE_2 );
   \   0000ED                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   0000ED   75..02       MOV     ?V0 + 0,#0x2
   \   0000F0   78..         MOV     R0,#?V0 + 0
   \   0000F2   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000F5   75..0A       MOV     ?V0 + 0,#0xa
   \   0000F8   78..         MOV     R0,#?V0 + 0
   \   0000FA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000FD   90....       MOV     DPTR,#TempLight + 3
   \   000100   E0           MOVX    A,@DPTR
   \   000101   F5..         MOV     ?V0 + 0,A
   \   000103   78..         MOV     R0,#?V0 + 0
   \   000105   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000108   75....       MOV     ?V0 + 0,#`?<Constant ".">` & 0xff
   \   00010B   75....       MOV     ?V0 + 1,#(`?<Constant ".">` >> 8) & 0xff
   \   00010E   78..         MOV     R0,#?V0 + 0
   \   000110   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000113   790A         MOV     R1,#0xa
   \   000115   90....       MOV     DPTR,#TempLight + 2
   \   000118   E0           MOVX    A,@DPTR
   \   000119   FC           MOV     R4,A
   \   00011A   7D00         MOV     R5,#0x0
   \   00011C   7A..         MOV     R2,#`?<Constant "Temper_2:">` & 0xff
   \   00011E   7B..         MOV     R3,#(`?<Constant "Temper_2:">` >> 8) & 0xff
   \   000120   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000123   7406         MOV     A,#0x6
   \   000125   12....       LCALL   ?DEALLOC_XSTACK8
   1204                        HalLcdWriteStringValue( "Light:", Light, 10, HAL_LCD_LINE_3 );
   \   000128                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000128   75..03       MOV     ?V0 + 0,#0x3
   \   00012B   78..         MOV     R0,#?V0 + 0
   \   00012D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000130   790A         MOV     R1,#0xa
   \   000132   90....       MOV     DPTR,#??Light
   \   000135   E0           MOVX    A,@DPTR
   \   000136   FC           MOV     R4,A
   \   000137   A3           INC     DPTR
   \   000138   E0           MOVX    A,@DPTR
   \   000139   FD           MOV     R5,A
   \   00013A   7A..         MOV     R2,#`?<Constant "Light:">` & 0xff
   \   00013C   7B..         MOV     R3,#(`?<Constant "Light:">` >> 8) & 0xff
   \   00013E   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   000141   7401         MOV     A,#0x1
   \   000143   12....       LCALL   ?DEALLOC_XSTACK8
   1205                        
   1206                        osal_msg_deallocate((uint8*)Light);
   \   000146                ; Setup parameters for call to function osal_msg_deallocate
   \   000146   90....       MOV     DPTR,#??Light
   \   000149   12....       LCALL   ?Subroutine16 & 0xFFFF
   1207                    }
   \                     ??CrossCallReturnLabel_39:
   \   00014C   8012         SJMP    ??Smart_home_Display_13
   1208                    else
   1209                    {
   1210                        HalLcdWriteString( "Temper_2:OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_12:
   \   00014E                ; Setup parameters for call to function HalLcdWriteString
   \   00014E   7902         MOV     R1,#0x2
   \   000150   7A..         MOV     R2,#`?<Constant "Temper_2:OFF">` & 0xff
   \   000152   7B..         MOV     R3,#(`?<Constant "Temper_2:OFF">` >> 8) & 0xff
   \   000154   12....       LCALL   ??HalLcdWriteString?relay
   1211                        HalLcdWriteString( "Light:OFF", HAL_LCD_LINE_3 ); 
   \   000157                ; Setup parameters for call to function HalLcdWriteString
   \   000157   7903         MOV     R1,#0x3
   \   000159   7A..         MOV     R2,#`?<Constant "Light:OFF">` & 0xff
   \   00015B   7B..         MOV     R3,#(`?<Constant "Light:OFF">` >> 8) & 0xff
   \   00015D   12....       LCALL   ??HalLcdWriteString?relay
   1212                    }
   1213                    
   1214                    //显示最下面的百分比条
   1215                    percent = (2 * 100) / LCD_PAGE_MAX;
   \                     ??Smart_home_Display_13:
   \   000160   90....       MOV     DPTR,#??percent
   \   000163   7432         MOV     A,#0x32
   \   000165   02....       LJMP    ??Smart_home_Display_10 & 0xFFFF
   1216                    HalLcdDisplayPercentBar("",percent);
   1217                    break;
   1218                    
   1219                    
   1220                  }
   1221                  
   1222                case 2:
   1223                {
   1224                    static uint16 Data1;
   1225                    static uint16 Data2;
   1226                    //显示最下面的百分比条
   1227                    //DeviceInfo* rfid = &DeviceList[RfID];
   1228                    
   1229                    Data1 = ( RfID.data[1] << 8) | RfID.data[2];
   \                     ??Smart_home_Display_3:
   \   000168   90....       MOV     DPTR,#RfID + 3
   \   00016B   E0           MOVX    A,@DPTR
   \   00016C   F9           MOV     R1,A
   \   00016D   A3           INC     DPTR
   \   00016E   E0           MOVX    A,@DPTR
   \   00016F   90....       MOV     DPTR,#??Data1
   \   000172   F0           MOVX    @DPTR,A
   \   000173   A3           INC     DPTR
   \   000174   E9           MOV     A,R1
   \   000175   F0           MOVX    @DPTR,A
   1230                    Data2 = ( RfID.data[3] << 8) | RfID.data[4];
   \   000176   90....       MOV     DPTR,#RfID + 5
   \   000179   E0           MOVX    A,@DPTR
   \   00017A   F9           MOV     R1,A
   \   00017B   A3           INC     DPTR
   \   00017C   E0           MOVX    A,@DPTR
   \   00017D   90....       MOV     DPTR,#??Data2
   \   000180   F0           MOVX    @DPTR,A
   \   000181   A3           INC     DPTR
   \   000182   E9           MOV     A,R1
   \   000183   F0           MOVX    @DPTR,A
   1231                    
   1232                    switch(RfID.data[0])
   \   000184   90....       MOV     DPTR,#RfID + 2
   \   000187   E0           MOVX    A,@DPTR
   \   000188   14           DEC     A
   \   000189   600E         JZ      ??Smart_home_Display_14
   \   00018B   14           DEC     A
   \   00018C   6013         JZ      ??Smart_home_Display_15
   \   00018E   14           DEC     A
   \   00018F   6018         JZ      ??Smart_home_Display_16
   \   000191   14           DEC     A
   \   000192   601D         JZ      ??Smart_home_Display_17
   \   000194   14           DEC     A
   \   000195   6022         JZ      ??Smart_home_Display_18
   \   000197   8028         SJMP    ??Smart_home_Display_19
   1233                    {
   1234                    case 0x01:
   1235                      HalLcdWriteString( "MFOne-S50", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_14:
   \   000199                ; Setup parameters for call to function HalLcdWriteString
   \   000199   7902         MOV     R1,#0x2
   \   00019B   7A..         MOV     R2,#`?<Constant "MFOne-S50">` & 0xff
   \   00019D   7B..         MOV     R3,#(`?<Constant "MFOne-S50">` >> 8) & 0xff
   \   00019F   8026         SJMP    ??Smart_home_Display_20
   1236                      break;
   1237                    case 0x02:
   1238                      HalLcdWriteString( "MFOne-S70", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_15:
   \   0001A1                ; Setup parameters for call to function HalLcdWriteString
   \   0001A1   7902         MOV     R1,#0x2
   \   0001A3   7A..         MOV     R2,#`?<Constant "MFOne-S70">` & 0xff
   \   0001A5   7B..         MOV     R3,#(`?<Constant "MFOne-S70">` >> 8) & 0xff
   \   0001A7   801E         SJMP    ??Smart_home_Display_20
   1239                      break;
   1240                    case 0x03:
   1241                      HalLcdWriteString( "MF-UltraLight", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_16:
   \   0001A9                ; Setup parameters for call to function HalLcdWriteString
   \   0001A9   7902         MOV     R1,#0x2
   \   0001AB   7A..         MOV     R2,#`?<Constant "MF-UltraLight">` & 0xff
   \   0001AD   7B..         MOV     R3,#(`?<Constant "MF-UltraLight">` >> 8) & 0xff
   \   0001AF   8016         SJMP    ??Smart_home_Display_20
   1242                      break;
   1243                    case 0x04:
   1244                      HalLcdWriteString( "MF-Pro", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_17:
   \   0001B1                ; Setup parameters for call to function HalLcdWriteString
   \   0001B1   7902         MOV     R1,#0x2
   \   0001B3   7A..         MOV     R2,#`?<Constant "MF-Pro">` & 0xff
   \   0001B5   7B..         MOV     R3,#(`?<Constant "MF-Pro">` >> 8) & 0xff
   \   0001B7   800E         SJMP    ??Smart_home_Display_20
   1245                      break;
   1246                    case 0x05:
   1247                      HalLcdWriteString( "MF-DesFire", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_18:
   \   0001B9                ; Setup parameters for call to function HalLcdWriteString
   \   0001B9   7902         MOV     R1,#0x2
   \   0001BB   7A..         MOV     R2,#`?<Constant "MF-DesFire">` & 0xff
   \   0001BD   7B..         MOV     R3,#(`?<Constant "MF-DesFire">` >> 8) & 0xff
   \   0001BF   8006         SJMP    ??Smart_home_Display_20
   1248                      break;
   1249                      
   1250                    default:
   1251                      HalLcdWriteString( "No Card", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_19:
   \   0001C1                ; Setup parameters for call to function HalLcdWriteString
   \   0001C1   7902         MOV     R1,#0x2
   \   0001C3   7A..         MOV     R2,#`?<Constant "No Card">` & 0xff
   \   0001C5   7B..         MOV     R3,#(`?<Constant "No Card">` >> 8) & 0xff
   1252                      break;
   1253                    }
   \                     ??Smart_home_Display_20:
   \   0001C7   12....       LCALL   ?Subroutine13 & 0xFFFF
   1254                    
   1255                    HalLcdWriteStringValueValue( "ID: ", Data1, 16, "-", Data2, 16, HAL_LCD_LINE_3 );
   \                     ??CrossCallReturnLabel_25:
   \   0001CA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001CD   75..10       MOV     ?V0 + 0,#0x10
   \   0001D0   78..         MOV     R0,#?V0 + 0
   \   0001D2   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001D5   90....       MOV     DPTR,#??Data2
   \   0001D8   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0001DB   75....       MOV     ?V0 + 0,#`?<Constant "-">` & 0xff
   \   0001DE   75....       MOV     ?V0 + 1,#(`?<Constant "-">` >> 8) & 0xff
   \   0001E1   78..         MOV     R0,#?V0 + 0
   \   0001E3   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001E6   7910         MOV     R1,#0x10
   \   0001E8   90....       MOV     DPTR,#??Data1
   \   0001EB   E0           MOVX    A,@DPTR
   \   0001EC   FC           MOV     R4,A
   \   0001ED   A3           INC     DPTR
   \   0001EE   E0           MOVX    A,@DPTR
   \   0001EF   FD           MOV     R5,A
   \   0001F0   7A..         MOV     R2,#`?<Constant "ID: ">` & 0xff
   \   0001F2   7B..         MOV     R3,#(`?<Constant "ID: ">` >> 8) & 0xff
   \   0001F4   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   0001F7   7406         MOV     A,#0x6
   \   0001F9   12....       LCALL   ?DEALLOC_XSTACK8
   1256                    
   1257                    percent = (3 * 100) / LCD_PAGE_MAX;
   \   0001FC   90....       MOV     DPTR,#??percent
   \   0001FF   744B         MOV     A,#0x4b
   \   000201   12....       LCALL   ?Subroutine10 & 0xFFFF
   1258                    HalLcdDisplayPercentBar("",percent);
   1259                    
   1260                    osal_msg_deallocate((uint8*)Data1);
   \                     ??CrossCallReturnLabel_19:
   \   000204                ; Setup parameters for call to function osal_msg_deallocate
   \   000204   90....       MOV     DPTR,#??Data1
   \   000207   12....       LCALL   ?Subroutine16 & 0xFFFF
   1261                    osal_msg_deallocate((uint8*)Data2);
   \                     ??CrossCallReturnLabel_40:
   \   00020A                ; Setup parameters for call to function osal_msg_deallocate
   \   00020A   90....       MOV     DPTR,#??Data2
   \   00020D   12....       LCALL   ?Subroutine16 & 0xFFFF
   1262                    
   1263                    break;
   \                     ??CrossCallReturnLabel_41:
   \   000210   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1264                }
   1265                
   1266                case 3:
   1267                {        
   1268                    //DeviceInfo* DevGas = &DeviceList[gasFlame];
   1269                    //DeviceInfo* DevInf = &DeviceList[infrared];         
   1270                    
   1271                    if(gasFlame.deviceStatus  != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_4:
   \   000213   90....       MOV     DPTR,#gasFlame + 1
   \   000216   E0           MOVX    A,@DPTR
   \   000217   6402         XRL     A,#0x2
   \   000219   6014         JZ      ??Smart_home_Display_21
   1272                    {    
   1273                        if(gasFlame.data[0] & 0x01 == 0x01) { HalLcdWriteString( "GasFlame: Flame", HAL_LCD_LINE_2 ); }         //0位是火焰
   \   00021B   A3           INC     DPTR
   \   00021C   E0           MOVX    A,@DPTR
   \   00021D   A2E0         MOV     C,0xE0 /* A   */.0
   \   00021F   7902         MOV     R1,#0x2
   \   000221   5006         JNC     ??Smart_home_Display_22
   \   000223                ; Setup parameters for call to function HalLcdWriteString
   \   000223   7A..         MOV     R2,#`?<Constant "GasFlame: Flame">` & 0xff
   \   000225   7B..         MOV     R3,#(`?<Constant "GasFlame: Flame">` >> 8) & 0xff
   \   000227   800C         SJMP    ??Smart_home_Display_23
   1274                        else if(gasFlame.data[0] & 0x02 == 0x02) { HalLcdWriteString( "GasFlame: Gas", HAL_LCD_LINE_2 ); }//1位是气体
   1275                        else if(gasFlame.data[0] & 0x03 == 0x03) { HalLcdWriteString( "GasFlame: All", HAL_LCD_LINE_2 ); }
   1276                        else {HalLcdWriteString( "GasFlame: None", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_22:
   \   000229                ; Setup parameters for call to function HalLcdWriteString
   \   000229   7A..         MOV     R2,#`?<Constant "GasFlame: None">` & 0xff
   \   00022B   7B..         MOV     R3,#(`?<Constant "GasFlame: None">` >> 8) & 0xff
   \   00022D   8006         SJMP    ??Smart_home_Display_23
   1277                    }
   1278                    else
   1279                    {
   1280                        HalLcdWriteString( "GasFlame: OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_21:
   \   00022F                ; Setup parameters for call to function HalLcdWriteString
   \   00022F   7902         MOV     R1,#0x2
   \   000231   7A..         MOV     R2,#`?<Constant "GasFlame: OFF">` & 0xff
   \   000233   7B..         MOV     R3,#(`?<Constant "GasFlame: OFF">` >> 8) & 0xff
   \                     ??Smart_home_Display_23:
   \   000235   12....       LCALL   ??HalLcdWriteString?relay
   1281                    }
   1282                    
   1283                    
   1284                    if(infrared.deviceStatus  != DEVICE_OFFLINE)
   \   000238   90....       MOV     DPTR,#infrared + 1
   \   00023B   E0           MOVX    A,@DPTR
   \   00023C   6402         XRL     A,#0x2
   \   00023E   6014         JZ      ??Smart_home_Display_24
   1285                    {    
   1286                        if(infrared.data[0] == 0x01)
   \   000240   A3           INC     DPTR
   \   000241   E0           MOVX    A,@DPTR
   \   000242   6401         XRL     A,#0x1
   \   000244   7903         MOV     R1,#0x3
   \   000246   7006         JNZ     ??Smart_home_Display_25
   1287                        {
   1288                          HalLcdWriteString("Infrared: Human", HAL_LCD_LINE_3 );
   \   000248                ; Setup parameters for call to function HalLcdWriteString
   \   000248   7A..         MOV     R2,#`?<Constant "Infrared: Human">` & 0xff
   \   00024A   7B..         MOV     R3,#(`?<Constant "Infrared: Human">` >> 8) & 0xff
   \   00024C   800C         SJMP    ??Smart_home_Display_26
   1289                        }
   1290                        else{
   1291                          HalLcdWriteString("Infrared: NoHuman", HAL_LCD_LINE_3 );
   \                     ??Smart_home_Display_25:
   \   00024E                ; Setup parameters for call to function HalLcdWriteString
   \   00024E   7A..         MOV     R2,#`?<Constant "Infrared: NoHuman">` & 0xff
   \   000250   7B..         MOV     R3,#(`?<Constant "Infrared: NoHuman">` >> 8) & 0xff
   \   000252   8006         SJMP    ??Smart_home_Display_26
   1292                        }
   1293                    }
   1294                    else
   1295                    {
   1296                        HalLcdWriteString( "Infrared: OFF", HAL_LCD_LINE_3 ); 
   \                     ??Smart_home_Display_24:
   \   000254                ; Setup parameters for call to function HalLcdWriteString
   \   000254   7903         MOV     R1,#0x3
   \   000256   7A..         MOV     R2,#`?<Constant "Infrared: OFF">` & 0xff
   \   000258   7B..         MOV     R3,#(`?<Constant "Infrared: OFF">` >> 8) & 0xff
   \                     ??Smart_home_Display_26:
   \   00025A   12....       LCALL   ??HalLcdWriteString?relay
   1297                    }         
   1298          
   1299                    
   1300                    
   1301                    //显示最下面的百分比条
   1302                    percent = (4 * 100) / LCD_PAGE_MAX;
   \   00025D   90....       MOV     DPTR,#??percent
   \   000260   7464         MOV     A,#0x64
   \   000262   02....       LJMP    ??Smart_home_Display_10 & 0xFFFF
   1303                    HalLcdDisplayPercentBar("",percent);
   1304                    break;
   1305                }
   1306                    
   1307              }
   1308                
   1309                break;
   1310              
   1311              case 1:
   1312                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
   \                     ??Smart_home_Display_0:
   \   000265                ; Setup parameters for call to function HalLcdWriteString
   \   000265   7904         MOV     R1,#0x4
   \   000267   7A..         MOV     R2,#`?<Constant "Relay Contrling">` & 0xff
   \   000269   7B..         MOV     R3,#(`?<Constant "Relay Contrling">` >> 8) & 0xff
   \   00026B   12....       LCALL   ?Subroutine11 & 0xFFFF
   1313                //清除屏幕显示
   1314                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1315                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1316                //这里的deviceStatus 可能是0x00,所以会出现bug 这个0在Device检查时被设置 2.24
   1317                if(relay.deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_21:
   \   00026E   90....       MOV     DPTR,#relay + 1
   \   000271   E0           MOVX    A,@DPTR
   \   000272   6402         XRL     A,#0x2
   \   000274   7901         MOV     R1,#0x1
   \   000276   700A         JNZ     ??Smart_home_Display_27
   1318                {
   1319                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
   \   000278                ; Setup parameters for call to function HalLcdWriteString
   \   000278   7A..         MOV     R2,#`?<Constant "Relay Offline">` & 0xff
   \   00027A   7B..         MOV     R3,#(`?<Constant "Relay Offline">` >> 8) & 0xff
   \                     ??Smart_home_Display_28:
   \   00027C   12....       LCALL   ??HalLcdWriteString?relay
   \   00027F   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1320                }
   1321                else  //设备在线回显  设备在线可能是 0/1
   1322                {
   1323                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_27:
   \   000282                ; Setup parameters for call to function HalLcdWriteString
   \   000282   7A..         MOV     R2,#`?<Constant "Relay Online">` & 0xff
   \   000284   7B..         MOV     R3,#(`?<Constant "Relay Online">` >> 8) & 0xff
   \   000286   12....       LCALL   ??HalLcdWriteString?relay
   1324                  //继电器控制界面
   1325          
   1326                  if((relay.data[0]& 0x02) == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   \   000289   90....       MOV     DPTR,#relay + 2
   \   00028C   E0           MOVX    A,@DPTR
   \   00028D   A2E1         MOV     C,0xE0 /* A   */.1
   \   00028F   5009         JNC     ??Smart_home_Display_29
   \   000291                ; Setup parameters for call to function HalLcdWriteString
   \   000291   7902         MOV     R1,#0x2
   \   000293   7A..         MOV     R2,#`?<Constant "K1:ON">` & 0xff
   \   000295   7B..         MOV     R3,#(`?<Constant "K1:ON">` >> 8) & 0xff
   \   000297   12....       LCALL   ??HalLcdWriteString?relay
   1327                  if((relay.data[0] & 0x01) == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_29:
   \   00029A   90....       MOV     DPTR,#relay + 2
   \   00029D   E0           MOVX    A,@DPTR
   \   00029E   A2E0         MOV     C,0xE0 /* A   */.0
   \   0002A0   5009         JNC     ??Smart_home_Display_30
   \   0002A2                ; Setup parameters for call to function HalLcdWriteString
   \   0002A2   7902         MOV     R1,#0x2
   \   0002A4   7A..         MOV     R2,#`?<Constant "K1:OFF">` & 0xff
   \   0002A6   7B..         MOV     R3,#(`?<Constant "K1:OFF">` >> 8) & 0xff
   \   0002A8   12....       LCALL   ??HalLcdWriteString?relay
   1328                  if((relay.data[0] & 0x20) == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_30:
   \   0002AB   90....       MOV     DPTR,#relay + 2
   \   0002AE   E0           MOVX    A,@DPTR
   \   0002AF   A2E5         MOV     C,0xE0 /* A   */.5
   \   0002B1   5009         JNC     ??Smart_home_Display_31
   \   0002B3                ; Setup parameters for call to function HalLcdWriteString
   \   0002B3   7903         MOV     R1,#0x3
   \   0002B5   7A..         MOV     R2,#`?<Constant "K2:ON">` & 0xff
   \   0002B7   7B..         MOV     R3,#(`?<Constant "K2:ON">` >> 8) & 0xff
   \   0002B9   12....       LCALL   ??HalLcdWriteString?relay
   1329                  if((relay.data[0] & 0x10) == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}      
   \                     ??Smart_home_Display_31:
   \   0002BC   90....       MOV     DPTR,#relay + 2
   \   0002BF   E0           MOVX    A,@DPTR
   \   0002C0   A2E4         MOV     C,0xE0 /* A   */.4
   \   0002C2   5062         JNC     ??Smart_home_Display_11
   \   0002C4                ; Setup parameters for call to function HalLcdWriteString
   \   0002C4   7903         MOV     R1,#0x3
   \   0002C6   7A..         MOV     R2,#`?<Constant "K2:OFF">` & 0xff
   \   0002C8   7B..         MOV     R3,#(`?<Constant "K2:OFF">` >> 8) & 0xff
   \   0002CA   80B0         SJMP    ??Smart_home_Display_28
   1330                }
   1331          
   1332                break;
   1333              
   1334              case 2:
   1335                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
   \                     ??Smart_home_Display_1:
   \   0002CC                ; Setup parameters for call to function HalLcdWriteString
   \   0002CC   7904         MOV     R1,#0x4
   \   0002CE   7A..         MOV     R2,#`?<Constant "Motor Contrling">` & 0xff
   \   0002D0   7B..         MOV     R3,#(`?<Constant "Motor Contrling">` >> 8) & 0xff
   \   0002D2   12....       LCALL   ?Subroutine11 & 0xFFFF
   1336                //清除屏幕显示
   1337                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1338                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1339                if(motor.deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_22:
   \   0002D5   90....       MOV     DPTR,#motor + 1
   \   0002D8   E0           MOVX    A,@DPTR
   \   0002D9   6402         XRL     A,#0x2
   \   0002DB   7901         MOV     R1,#0x1
   \   0002DD   7006         JNZ     ??Smart_home_Display_32
   1340                {
   1341                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
   \   0002DF                ; Setup parameters for call to function HalLcdWriteString
   \   0002DF   7A..         MOV     R2,#`?<Constant "Motor Offline">` & 0xff
   \   0002E1   7B..         MOV     R3,#(`?<Constant "Motor Offline">` >> 8) & 0xff
   \   0002E3   8097         SJMP    ??Smart_home_Display_28
   1342                }
   1343                else  //设备在线回显  设备在线可能是 0/1
   1344                {
   1345                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_32:
   \   0002E5                ; Setup parameters for call to function HalLcdWriteString
   \   0002E5   7A..         MOV     R2,#`?<Constant "Motor Online">` & 0xff
   \   0002E7   7B..         MOV     R3,#(`?<Constant "Motor Online">` >> 8) & 0xff
   \   0002E9   12....       LCALL   ??HalLcdWriteString?relay
   1346                  //电机控制界面
   1347                  switch(motor.data[1])
   \   0002EC   90....       MOV     DPTR,#motor + 3
   \   0002EF   E0           MOVX    A,@DPTR
   \   0002F0   24FE         ADD     A,#-0x2
   \   0002F2   600B         JZ      ??Smart_home_Display_33
   \   0002F4   14           DEC     A
   \   0002F5   7902         MOV     R1,#0x2
   \   0002F7   600E         JZ      ??Smart_home_Display_34
   1348                  {
   1349                  default:
   1350                  case 1:
   1351                    HalLcdWriteString( "Status: STOP", HAL_LCD_LINE_2 );
   \   0002F9                ; Setup parameters for call to function HalLcdWriteString
   \   0002F9   7A..         MOV     R2,#`?<Constant "Status: STOP">` & 0xff
   \   0002FB   7B..         MOV     R3,#(`?<Constant "Status: STOP">` >> 8) & 0xff
   \   0002FD   800C         SJMP    ??Smart_home_Display_35
   1352                    break;
   1353                  case 2:
   1354                    HalLcdWriteString( "Status: FORWARD", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_33:
   \   0002FF                ; Setup parameters for call to function HalLcdWriteString
   \   0002FF   7902         MOV     R1,#0x2
   \   000301   7A..         MOV     R2,#`?<Constant "Status: FORWARD">` & 0xff
   \   000303   7B..         MOV     R3,#(`?<Constant "Status: FORWARD">` >> 8) & 0xff
   \   000305   8004         SJMP    ??Smart_home_Display_35
   1355                    break;
   1356                  case 3:
   1357                    HalLcdWriteString( "Status: BACKWARD", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_34:
   \   000307                ; Setup parameters for call to function HalLcdWriteString
   \   000307   7A..         MOV     R2,#`?<Constant "Status: BACKWARD">` & 0xff
   \   000309   7B..         MOV     R3,#(`?<Constant "Status: BACKWARD">` >> 8) & 0xff
   1358                    break;
   1359                  }
   1360                  
   1361                  HalLcdWriteStringValue( "Speed:", motor.data[0], 10, HAL_LCD_LINE_3 );
   1362                
   1363                }
   1364            }
   \                     ??Smart_home_Display_35:
   \   00030B   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   00030E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000311   790A         MOV     R1,#0xa
   \   000313   90....       MOV     DPTR,#motor + 2
   \   000316   E0           MOVX    A,@DPTR
   \   000317   FC           MOV     R4,A
   \   000318   7D00         MOV     R5,#0x0
   \   00031A   7A..         MOV     R2,#`?<Constant "Speed:">` & 0xff
   \   00031C   7B..         MOV     R3,#(`?<Constant "Speed:">` >> 8) & 0xff
   \   00031E   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   000321   7401         MOV     A,#0x1
   \   000323   12....       LCALL   ?DEALLOC_XSTACK8
   1365            
   1366          #endif // LCD_SUPPORTED  
   1367          }
   \                     ??Smart_home_Display_11:
   \   000326   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   12....       LCALL   ??osal_msg_deallocate?relay
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   000003                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000003   75..03       MOV     ?V0 + 0,#0x3
   \   000006   78..         MOV     R0,#?V0 + 0
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003   7902         MOV     R1,#0x2
   \   000005   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000007   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000009   12....       LCALL   ??HalLcdWriteString?relay
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C   7903         MOV     R1,#0x3
   \   00000E   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000012   12....       LCALL   ??HalLcdWriteString?relay
   \   000015   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   000001                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   000001   F9           MOV     R1,A
   \   000002   7A..         MOV     R2,#`?<Constant "">` & 0xff
   \   000004   7B..         MOV     R3,#(`?<Constant "">` >> 8) & 0xff
   \   000006   12....       LCALL   ??HalLcdDisplayPercentBar?relay
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Light:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??lightmp:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data1:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data2:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
   1368          
   1369          /*******************************************************************************
   1370           * @fn      Smart_home_CallBack
   1371           *
   1372           * @brief   Send data OTA.
   1373           *
   1374           * @param   port - UART port.
   1375           * @param   event - the UART port event flag.
   1376           *
   1377           * @return  none
   1378           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   1379          void Smart_home_CallBack(uint8 port, uint8 event)
   \                     Smart_home_CallBack:
   1380          { 
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   1381          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Motor_cmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Motor_cmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessMSGCmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessMSGCmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Device_check?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Device_check

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Device_check?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Device_check

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Relay_Ctl?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Relay_Ctl

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Display?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Display

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_CallBack

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Smart_home">`:
   \   000000   536D6172     DB "Smart_home"
   \            745F686F
   \            6D6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Init Success!\\n">`:
   \   000000   496E6974     DB "Init Success!\012"
   \            20537563
   \            63657373
   \            210A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor max Speed">`:
   \   000000   4D6F746F     DB "Motor max Speed"
   \            72206D61
   \            78205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor min Speed">`:
   \   000000   4D6F746F     DB "Motor min Speed"
   \            72206D69
   \            6E205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Allow networking">`:
   \   000000   416C6C6F     DB "Allow networking"
   \            77206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Ban   networking">`:
   \   000000   42616E20     DB "Ban   networking"
   \            20206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_1`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_2`:
   \   000000   00           DB 0
   \   000001   00000000     DB 0, 0, 0, 0, 0, 0
   \            0000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_3`:
   \   000000   00           DB 0
   \   000001   0000         DB 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_4`:
   \   000000   00           DB 0
   \   000001   0000         DB 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_5`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_6`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant {0}>_7`:
   \   000000   00           DB 0
   \   000001   000000       DB 0, 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "      Menu      ">`:
   \   000000   20202020     DB "      Menu      "
   \            20204D65
   \            6E752020
   \            20202020
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " ">`:
   \   000000   2000         DB " "

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hum:">`:
   \   000000   48756D3A     DB "Hum:"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "% T_1:">`:
   \   000000   2520545F     DB "% T_1:"
   \            313A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hum:OFF T_1:OFF">`:
   \   000000   48756D3A     DB "Hum:OFF T_1:OFF"
   \            4F464620
   \            545F313A
   \            4F464600

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound: Voice">`:
   \   000000   536F756E     DB "Sound: Voice"
   \            643A2056
   \            6F696365
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   536F756E     DB "Sound: Vibration"
   \            643A2056
   \            69627261
   \            74696F6E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   536F756E     DB "Sound: All"
   \            643A2041
   \            6C6C00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound: None">`:
   \   000000   536F756E     DB "Sound: None"
   \            643A204E
   \            6F6E6500

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound:OFFLINE">`:
   \   000000   536F756E     DB "Sound:OFFLINE"
   \            643A4F46
   \            464C494E
   \            4500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "">`:
   \   000000   00           DB ""

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temper_2:">`:
   \   000000   54656D70     DB "Temper_2:"
   \            65725F32
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ".">`:
   \   000000   2E00         DB "."

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Light:">`:
   \   000000   4C696768     DB "Light:"
   \            743A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temper_2:OFF">`:
   \   000000   54656D70     DB "Temper_2:OFF"
   \            65725F32
   \            3A4F4646
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Light:OFF">`:
   \   000000   4C696768     DB "Light:OFF"
   \            743A4F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S50">`:
   \   000000   4D464F6E     DB "MFOne-S50"
   \            652D5335
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S70">`:
   \   000000   4D464F6E     DB "MFOne-S70"
   \            652D5337
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-UltraLight">`:
   \   000000   4D462D55     DB "MF-UltraLight"
   \            6C747261
   \            4C696768
   \            7400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-Pro">`:
   \   000000   4D462D50     DB "MF-Pro"
   \            726F00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-DesFire">`:
   \   000000   4D462D44     DB "MF-DesFire"
   \            65734669
   \            726500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "No Card">`:
   \   000000   4E6F2043     DB "No Card"
   \            61726400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "ID: ">`:
   \   000000   49443A20     DB "ID: "
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "-">`:
   \   000000   2D00         DB "-"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: Flame">`:
   \   000000   47617346     DB "GasFlame: Flame"
   \            6C616D65
   \            3A20466C
   \            616D6500

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   47617346     DB "GasFlame: Gas"
   \            6C616D65
   \            3A204761
   \            7300    

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   47617346     DB "GasFlame: All"
   \            6C616D65
   \            3A20416C
   \            6C00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: None">`:
   \   000000   47617346     DB "GasFlame: None"
   \            6C616D65
   \            3A204E6F
   \            6E6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: OFF">`:
   \   000000   47617346     DB "GasFlame: OFF"
   \            6C616D65
   \            3A204F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: Human">`:
   \   000000   496E6672     DB "Infrared: Human"
   \            61726564
   \            3A204875
   \            6D616E00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: NoHuman">`:
   \   000000   496E6672     DB "Infrared: NoHuman"
   \            61726564
   \            3A204E6F
   \            48756D61
   \            6E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: OFF">`:
   \   000000   496E6672     DB "Infrared: OFF"
   \            61726564
   \            3A204F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Contrling">`:
   \   000000   52656C61     DB "Relay Contrling"
   \            7920436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Offline">`:
   \   000000   52656C61     DB "Relay Offline"
   \            79204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Online">`:
   \   000000   52656C61     DB "Relay Online"
   \            79204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:ON">`:
   \   000000   4B313A4F     DB "K1:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:OFF">`:
   \   000000   4B313A4F     DB "K1:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:ON">`:
   \   000000   4B323A4F     DB "K2:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:OFF">`:
   \   000000   4B323A4F     DB "K2:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Contrling">`:
   \   000000   4D6F746F     DB "Motor Contrling"
   \            7220436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Offline">`:
   \   000000   4D6F746F     DB "Motor Offline"
   \            72204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Online">`:
   \   000000   4D6F746F     DB "Motor Online"
   \            72204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: STOP">`:
   \   000000   53746174     DB "Status: STOP"
   \            75733A20
   \            53544F50
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: FORWARD">`:
   \   000000   53746174     DB "Status: FORWARD"
   \            75733A20
   \            464F5257
   \            41524400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: BACKWARD">`:
   \   000000   53746174     DB "Status: BACKWARD"
   \            75733A20
   \            4241434B
   \            57415244
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Speed:">`:
   \   000000   53706565     DB "Speed:"
   \            643A00  
   1382          
   1383          /*******************************************************************************
   1384          *******************************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Device_check                       2      0      7
     Smart_home_CallBack                0      0      0
     Smart_home_Device_check            2      0     19
       -> Device_check                  4      0     14
       -> Device_check                  4      0     14
       -> Device_check                  4      0     14
       -> Device_check                  4      0     14
       -> Device_check                  4      0     14
       -> Device_check                  4      0     14
       -> Device_check                  4      0     14
       -> Device_check                  4      0     14
     Smart_home_Display                 0      0     28
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> memcpy                        0      0     24
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdWriteStringValue        0      0     22
       -> osal_msg_deallocate           0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdDisplayPercentBar       0      0     20
       -> osal_msg_deallocate           0      0     20
       -> osal_msg_deallocate           0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValue        0      0     22
     Smart_home_HandleKeys              0      0     21
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Motor_cmd          0      0     18
       -> Smart_home_Relay_Ctl          0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Motor_cmd          0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_Init                    0      0     40
       -> afRegister                    0      0     80
       -> RegisterForKeys               0      0     80
       -> HalUARTOpen                   0      0     80
       -> HalLcdWriteString             0      0     80
       -> HalUARTWrite                  0      0     80
       -> afDataReqMTU                  0      0     80
       -> ZDO_RegisterForZDOMsg         0      0     80
       -> ZDO_RegisterForZDOMsg         0      0     80
       -> osal_start_timerEx            0      0     80
       -> osal_start_timerEx            0      0     80
       -> NLME_PermitJoiningRequest     0      0     80
       -> HalLedSet                     0      0     80
       -> HalLedSet                     0      0     80
     Smart_home_Motor_cmd               0      0     28
       -> AF_DataRequest                0      0     38
     Smart_home_ProcessEvent            0      0     12
       -> HalLedSet                     0      0     24
       -> Smart_home_ProcessMSGCmd      0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> osal_msg_receive              0      0     24
       -> Smart_home_HandleKeys         0      0     24
       -> Smart_home_Device_check       0      0     24
       -> osal_start_timerEx            0      0     24
       -> Smart_home_Display            0      0     24
       -> osal_start_timerEx            0      0     24
     Smart_home_ProcessMSGCmd           2      0     42
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
       -> HalUARTWrite                  0      0     60
       -> osal_msg_deallocate           0      0     60
     Smart_home_Relay_Ctl               0      0     28
       -> AF_DataRequest                0      0     38


   Segment part sizes:

     Function/Label                   Bytes
     --------------                   -----
     Smart_home_ClusterList_IN          18
     Smart_home_ClusterList_OUT         18
     Smart_home_SimpleDesc              12
     Smart_home_epDesc                   6
     Smart_home_TaskID                   1
     Humit                               7
     TempLight                           7
     RfID                                7
     gasFlame                            7
     infrared                            7
     soundVb                             7
     motor                               7
     relay                               7
     Ctrlcase                            1
     LCD_Page                            1
     Relay_addr                         12
     Motor_addr                         12
     Coordinator_Msg                   102
     Smart_home_MaxDataLength            2
     RelayTransID                        1
     MotorTransID                        1
     Smart_home_Init                   306
     ?Subroutine0                        5
     ?Subroutine17                       2
     ??Subroutine29_0                   11
     ?Subroutine12                      12
     Smart_home_ProcessEvent           164
     Smart_home_Motor_cmd              181
     ?Subroutine1                        5
     Smart_home_HandleKeys             297
     ?Subroutine21                      10
     ?Subroutine20                      10
     ?Subroutine19                      10
     ?Subroutine18                      10
     ?Subroutine15                      10
     MotorSpeed                          1
     NetWorkAllow                        1
     Relay1_on                           1
     Relay2_on                           1
     Smart_home_ProcessMSGCmd          756
     ?Subroutine9                       18
     ?Subroutine8                        9
     ?Subroutine7                        5
     ?Subroutine6                        5
     ?Subroutine22                       9
     ?Subroutine26                       7
     ?Subroutine5                        6
     ?Subroutine23                       8
     ?Subroutine4                        8
     ?Subroutine28                      12
     ?Subroutine3                        8
     ?Subroutine25                       4
     ?Subroutine27                      12
     ?Subroutine24                      17
     Device_check                       30
     ?Subroutine2                        7
     Smart_home_Device_check           180
     ?Subroutine14                       8
     humitCnt                            1
     tempLightCnt                        1
     rfIDCnt                             1
     gasFlameCnt                         1
     infraredCnt                         1
     motorCnt                            1
     relayStatusCnt                      1
     soundVbCnt                          1
     Smart_home_Relay_Ctl              134
     Smart_home_Display                809
     ?Subroutine16                       9
     ?Subroutine13                       9
     ?Subroutine11                      22
     ?Subroutine10                      10
     percent                             1
     Light                               2
     lightmp                             1
     Data1                               2
     Data2                               2
     Smart_home_CallBack                 3
     ??Smart_home_Init?relay             6
     ??Smart_home_ProcessEvent?relay     6
     ??Smart_home_Motor_cmd?relay        6
     ??Smart_home_HandleKeys?relay       6
     ??Smart_home_ProcessMSGCmd?relay    6
     ??Device_check?relay                6
     ??Smart_home_Device_check?relay     6
     ??Smart_home_Relay_Ctl?relay        6
     ??Smart_home_Display?relay          6
     ??Smart_home_CallBack?relay         6
     ?<Constant "Smart_home">           11
     ?<Constant "Init Success!\n">      15
     ?<Constant "Motor max Speed">      16
     ?<Constant "Motor min Speed">      16
     ?<Constant "Allow networking">     17
     ?<Constant "Ban   networking">     17
     ?<Constant {0}>                     4
     ?<Constant {0}>_1                   6
     ?<Constant {0}>_2                   7
     ?<Constant {0}>_3                   3
     ?<Constant {0}>_4                   3
     ?<Constant {0}>_5                   4
     ?<Constant {0}>_6                   4
     ?<Constant {0}>_7                   4
     ?<Constant "      Menu      ">     17
     ?<Constant " ">                     2
     ?<Constant "Hum:">                  5
     ?<Constant "% T_1:">                7
     ?<Constant "Hum:OFF T_1:OFF">      16
     ?<Constant "Sound: Voice">         13
     ?<Constant "Sound: Vibration">     17
     ?<Constant "Sound: All">           11
     ?<Constant "Sound: None">          12
     ?<Constant "Sound:OFFLINE">        14
     ?<Constant "">                      1
     ?<Constant "Temper_2:">            10
     ?<Constant ".">                     2
     ?<Constant "Light:">                7
     ?<Constant "Temper_2:OFF">         13
     ?<Constant "Light:OFF">            10
     ?<Constant "MFOne-S50">            10
     ?<Constant "MFOne-S70">            10
     ?<Constant "MF-UltraLight">        14
     ?<Constant "MF-Pro">                7
     ?<Constant "MF-DesFire">           11
     ?<Constant "No Card">               8
     ?<Constant "ID: ">                  5
     ?<Constant "-">                     2
     ?<Constant "GasFlame: Flame">      16
     ?<Constant "GasFlame: Gas">        14
     ?<Constant "GasFlame: All">        14
     ?<Constant "GasFlame: None">       15
     ?<Constant "GasFlame: OFF">        14
     ?<Constant "Infrared: Human">      16
     ?<Constant "Infrared: NoHuman">    18
     ?<Constant "Infrared: OFF">        14
     ?<Constant "Relay Contrling">      16
     ?<Constant "Relay Offline">        14
     ?<Constant "Relay Online">         13
     ?<Constant "K1:ON">                 6
     ?<Constant "K1:OFF">                7
     ?<Constant "K2:ON">                 6
     ?<Constant "K2:OFF">                7
     ?<Constant "Motor Contrling">      16
     ?<Constant "Motor Offline">        14
     ?<Constant "Motor Online">         13
     ?<Constant "Status: STOP">         13
     ?<Constant "Status: FORWARD">      16
     ?<Constant "Status: BACKWARD">     17
     ?<Constant "Speed:">                7

 
 3 138 bytes in segment BANKED_CODE
    60 bytes in segment BANK_RELAYS
   691 bytes in segment XDATA_ROM_C
   209 bytes in segment XDATA_Z
 
 3 198 bytes of CODE  memory
   691 bytes of CONST memory
   209 bytes of XDATA memory

Errors: none
Warnings: 1
