###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         06/May/2021  22:29:19 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_home_test.c              #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wConfig.cfg (-DZIGBEEPRO -DSECURE=0               #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          ome_test.c -D LCD_SUPPORTED -D ZDO_COORDINATOR -D  #
#                          xNV_RESTORE -D HAL_UART=TRUE -D xNV_INIT -D        #
#                          xREFLECTOR -D xHAL_UART_TEST -lC                   #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\conretest\List\ -lA          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\conretest\List\              #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\conretest\Obj\ -e            #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530MB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\conretest\List\Smart_home_te #
#                          st.lst                                             #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\conretest\Obj\Smart_home_tes #
#                          t.r51                                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_home_test.c
      1          /**************************************************************************************************
      2            文件名：Smart_home.c
      3            作 者： 柳成林
      4            功 能： 作为网关节点，实现传感器信息的采集，并可以通过其控制一些节点
      5                    终端设备主要分为8个，分别为
      6               1、温度与光照度传感器；2、烟雾与火焰传感器；3、继电器；4、温湿度传感器；
      7               5、声音与震动传感器；  6、人体红外检测传感器；7、电机；8、RFID检测器。
      8            更新日志(2021)
      9            3.13
     10            + 新增 8种传感器的Project并设置好编译情况
     11            + 修改 Smart_home_ProcessEvent() （增加各种处理器的事件）
     12                   Smart_home_Init()         （初始化内容修改，添加设备默认离线）
     13            3.14
     14            + 修改 Smart_home_ProcessMSGCmd()（添加终端节点类型判断，具体处理留空）
     15            + 新增 Hal层各种传感器驱动(头文件)
     16                   ClusterList (添加8个终端，分开出与入)
     17            3.17
     18            + 修改 Smart_home_ProcessMSGCmd() （完成接收后对于各终端处理）
     19            + 添加 Smart_home_HandleKeys()     (修改原来函数增添概念，未补全)
     20            + 删除 static void Smart_home_Send(void);
     21                   static void Smart_home_Resp(void);
     22                   两个函数
     23            3.19
     24            + 检查 出现的warning并做标识
     25            + 修改 Smart_home_HandleKeys() （补全设计函数）
     26            + 新增 Smart_home_Device_check() (设备是否在线检查)
     27          
     28            3.21
     29            + 新增 DeviceList以方便初始化和设备在线检查（本地变量部分）
     30                   Smart_home_Display()    （屏幕显示，未补全）
     31                   Smart_home_Key_add()     (控制按键，附加项)
     32            + 修改 Smart_home_Device_check()
     33                   Smart_home_Init()
     34                   Smart_home_ProcessMSGCmd()
     35                   调整有关DeviceList（设备列表）部分的修改
     36                   直接使用数组位置号作为设备编号
     37                   按键控制方式，用按键情况控制
     38            3.22
     39            + 修改 Smart_home_Display()    （屏幕显示，补全）
     40                   Smart_home_Key_add()     (屏幕显示中的电机与继电器部分加入这里)
     41                   重写别名方式减少内存损耗
     42                   出现无法初始化的问题，需要项目重构
     43            3.23
     44            + Warn 代码初始化后会产生直接进入key的情况,需debug
     45                   OK键问题无法修复，放弃使用OK键，修改为Cencel组网 禁止组网
     46            3.23 正式完成网关节点部分，（显示函数部分除外）
     47            3.24 
     48            + 修改 Smart_home_Key_add()与display函数整合
     49            + bug:在每十秒一次调用的周期检查函数中会导致显示屏将近一秒时间不显示
     50              已解决： 在状态0的时候作为在线即可
     51            + 完成 显示功能设置
     52            3.28 调试时间
     53            + 解决motor显示的bug
     54            4.4
     55            + 解决温湿度数据不回显的bug
     56            4.6
     57            + 正式拿到所有节点开始调试
     58            4.9
     59            + 解决掉串口Bug
     60            4.14
     61            + 发现在多终端加入时会出现断网或假死问题，开始寻找
     62            4.26
     63            + 提出几种假设，利用其他平台做抓包器尝试
     64            5.6
     65            + 不能应用NV操作，因为NV操作仅能烧写20000次，并需要固定位置读取。
     66            + 调试了N天，感觉是内存问题，开始对程序进行负优化，以时间换空间  （内存仅128字节）
     67             
     68            经调试程序无bug，可以接收各个传感器消息。//3.22
     69            当我没说。。好像出了内存问题//3.22
     70            项目重构啦！，现在又只有一个小问题了/3.23
     71          *********************************************************************/
     72          
     73          /*******************************************************************************
     74           * INCLUDES
     75           */
     76          #include "OSAL.h"
     77          #include "AF.h"
     78          #include "ZDObject.h"
     79          #include "ZDProfile.h"
     80          #include "nwk_util.h"
     81          
     82          #include "Smart_home.h"
     83          #include "OnBoard.h"
     84          
     85          #include "DebugTrace.h"
     86          #include "string.h"
     87          
     88          /* HAL */
     89          #include "hal_lcd.h"
     90          #include "hal_led.h"
     91          #include "hal_key.h"
     92          #include "hal_uart.h"
     93          
     94          /*******************************************************************************
     95           * MACROS
     96           */
     97          
     98          // 设备离线定时计数临界值
     99          #define  DEVICE_HEART_BEAT 3
    100          
    101          // Send with or without APS ACKs
    102          #define Smart_home_TX_OPTIONS              AF_DISCV_ROUTE
    103          
    104          // 第一次LCD显示延时
    105          #define Smart_home_DISPLAY_DELAY           10000
    106          // LCD每次显示时间间隔
    107          #define Smart_home_DISPLAY_TIMER           2000
    108          
    109          #define Smart_home_DEVICE_CHECK_DELAY      5000
    110          #define Smart_home_DEVICE_CHECK_TIMER      2000 
    111          // not used here
    112          #define Smart_home_MATCH_TIMER     
    113          // not used here
    114          #define Smart_home_BIND_TIMER      
    115          
    116          #if defined ( Smart_home_FRAGMENTED )
    117          #define Smart_home_MAX_DATA_LEN            225
    118          #else
    119          #define Smart_home_MAX_DATA_LEN            102
    120          #endif
    121          
    122          /*******************************************************************************
    123           * GLOBAL VARIABLES
    124           */
    125          
    126          // This is the buffer that is sent out as data.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    127          byte Coordinator_Msg[ Smart_home_MAX_DATA_LEN ];
   \                     Coordinator_Msg:
   \   000000                DS 102
   \   000066                REQUIRE __INIT_XDATA_Z
    128          
    129          // This is the Cluster ID List and should be filled with Application
    130          // specific cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
    131          const cId_t Smart_home_InClusterList[Smart_home_MAX_INCLUSTERS] =
   \                     Smart_home_InClusterList:
   \   000000   0100         DW 1
   \   000002   0200         DW 2
   \   000004   0300         DW 3
   \   000006   0400         DW 4
   \   000008   0500         DW 5
   \   00000A   0600         DW 6
   \   00000C   0700         DW 7
   \   00000E   0800         DW 8
   \   000010   0000         DW 0
    132          {
    133            Smart_home_CLUSTERID_HUMITMSG,      // 温湿度
    134            Smart_home_CLUSTERID_TEMPLIGHTMSG,  // 温度光照
    135            Smart_home_CLUSTERID_RFIDMSG,       // 射频卡
    136            Smart_home_CLUSTERID_GASFLAMEMSG,   // 气体火焰
    137            Smart_home_CLUSTERID_INFRAREDMSG,   // 人体红外
    138            Smart_home_CLUSTERID_SOUNDVBMSG,    // 声音震动
    139            Smart_home_CLUSTERID_MOTORSTATUSMSG,// 电机状态
    140            Smart_home_CLUSTERID_RELAYSTATUSMSG // 继电器状态
    141          };
    142          

   \                                 In  segment XDATA_ROM_C, align 1
    143          const cId_t Smart_home_OutClusterList[Smart_home_MAX_OUTCLUSTERS] =
   \                     Smart_home_OutClusterList:
   \   000000   0900         DW 9
   \   000002   0B00         DW 11
   \   000004   0A00         DW 10
    144          {
    145            Smart_home_CLUSTERID_TEXT,    
    146            Smart_home_CLUSTERID_MOTORCTRL,   // 继电器
    147            Smart_home_CLUSTERID_RELAYCTRL    // 直流电机
    148          };
    149          

   \                                 In  segment XDATA_ROM_C, align 1
    150          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_InClusterList
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_OutClusterList
    151          {
    152            Smart_home_ENDPOINT,                //  int    Endpoint;
    153            Smart_home_PROFID,                  //  uint16 AppProfId[2];
    154            Smart_home_DEVICEID,                //  uint16 AppDeviceId[2];
    155            Smart_home_DEVICE_VERSION,          //  int    AppDevVer:4;
    156            Smart_home_FLAGS,                   //  int    AppFlags:4;
    157            Smart_home_MAX_INCLUSTERS,          
    158            (cId_t *)Smart_home_InClusterList,  
    159            Smart_home_MAX_OUTCLUSTERS,         
    160            (cId_t *)Smart_home_OutClusterList  
    161          };
    162          
    163          // This is the Endpoint/Interface description.  It is defined here, but
    164          // filled-in in Smart_home_Init().  Another way to go would be to fill
    165          // in the structure here and make it a "const" (in code space).  The
    166          // way it's defined in this sample app it is define in RAM.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    167          endPointDesc_t Smart_home_epDesc;    // 定义节点
   \                     Smart_home_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    168          
    169          
    170          /*******************************************************************************
    171           *串口配置
    172           */
    173          #define TRANSMIT_APP_PORT  0
    174          // zstack default: 38400
    175          #define TRANSMIT_APP_BAUD  HAL_UART_BR_38400
    176          // When the Rx buf space is less than this threshold, invoke the Rx callback.
    177          #define TRANSMIT_APP_THRESH  64
    178          #define TRANSMIT_APP_RX_SZ  128
    179          #define TRANSMIT_APP_TX_SZ  128
    180          // Millisecs of idle time after a byte is received before invoking Rx callback.
    181          #define TRANSMIT_APP_IDLE  6
    182          // Loopback Rx bytes to Tx for throughput testing.
    183          #define TRANSMIT_APP_LOOPBACK  FALSE
    184          
    185          /*关于显示部分相关的宏*/
    186          #define LCD_PAGE_MAX         4     //目前目录页最多4页
    187          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    188          static int8 Ctrlcase = 0;    //0用来控制屏幕显示，1控制继电器，2控制电机
   \                     Ctrlcase:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    189          static int8 LCD_Page  =  0;  //终端状态显示
   \                     LCD_Page:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    190          /* 直流电机状态(status)定义*/
    191          #define  HAL_MOTOR_STOP            0x01
    192          #define  HAL_MOTOR_FORWARD         0x02
    193          #define  HAL_MOTOR_BACKWARD        0x03
    194          #define  MOTOR_MAX_SPEED           2400
    195          
    196          /*********************************************************************
    197           * LOCAL VARIABLES
    198           */
    199          
    200          /*3.18 终端节点的设备详细信息缓存*/
    201          /*5.6 尝试利用离散变量的方式*/
    202          //DeviceInfo   DeviceList[Smart_home_MAX_INCLUSTERS];                      //设备列表 
    203          // 温湿度缓存, 第一个字节是湿度，第二个字节是温度(均是整数)

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    204          DeviceInfo Humit;
   \                     Humit:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    205          // 温度光照缓存, 前两个字节是温度整数和小数, 后两个字节是光照的16位整数 

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    206          DeviceInfo TempLight;
   \                     TempLight:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    207          // RFID 信息

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    208          DeviceInfo RfID;
   \                     RfID:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    209          //气体火焰

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    210          DeviceInfo gasFlame;
   \                     gasFlame:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    211          //人体红外

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    212          DeviceInfo infrared;
   \                     infrared:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    213          //电机状态

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    214          DeviceInfo motor;
   \                     motor:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    215          //继电器状态

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    216          DeviceInfo relay;
   \                     relay:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    217          //声音震动

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    218          DeviceInfo soundVb;
   \                     soundVb:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
    219          
    220          // Task ID for event processing - received when Smart_home_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    221          byte Smart_home_TaskID;
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    222          
    223          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    224          static byte Smart_home_RelayTransID;  // This is the unique message ID (counter)
   \                     Smart_home_RelayTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    225          static byte Smart_home_MotorTransID;  // This is the unique message ID (counter)
   \                     Smart_home_MotorTransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    226          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    227          afAddrType_t Smart_home_DstAddr;
   \                     Smart_home_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    228          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    229          afAddrType_t Smart_home_DstRelayAddr;
   \                     Smart_home_DstRelayAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    230          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    231          afAddrType_t Smart_home_DstMotorAddr;
   \                     Smart_home_DstMotorAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    232          
    233          // Max Data Request Length

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    234          uint16 Smart_home_MaxDataLength;
   \                     Smart_home_MaxDataLength:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    235          
    236          
    237          /*******************************************************************************
    238           * LOCAL FUNCTIONS
    239           */
    240          void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    241          void Smart_home_HandleKeys( byte shift, byte keys );
    242          void Smart_home_MessageMSGCB( afIncomingMSGPacket_t *pckt );
    243          void Smart_home_SendToRelayMSG( uint8 cmd );
    244          void Smart_home_SendToMotorMSG( uint8 cmd,uint8 speed );
    245          void TransmitAPP_CallBack(uint8 port, uint8 event);
    246          void Smart_home_Device_check(void);
    247          void Smart_home_Display(void);
    248          
    249          /*******************************************************************************
    250           * @fn      Smart_home_Init
    251           *
    252           * @brief   Initialization function for the Generic App Task.
    253           *          This is called during initialization and should contain
    254           *          any application specific initialization (ie. hardware
    255           *          initialization/setup, table initialization, power up
    256           *          notificaiton ... ).
    257           *
    258           * @param   task_id - the ID assigned by OSAL.  This ID should be
    259           *                    used to send messages and set timers.
    260           *
    261           * @return  none
    262           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    263          void Smart_home_Init( byte task_id )
   \                     Smart_home_Init:
    264          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 31
   \   000005   74E1         MOV     A,#-0x1f
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    265          #if HAL_UART==TRUE
    266            halUARTCfg_t uartConfig;
    267          
    268            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   00000C   7402         MOV     A,#0x2
   \   00000E   12....       LCALL   ?XSTACK_DISP0_8
   \   000011   7401         MOV     A,#0x1
   \   000013   F0           MOVX    @DPTR,A
    269            uartConfig.baudRate             = TRANSMIT_APP_BAUD;
   \   000014   7403         MOV     A,#0x3
   \   000016   12....       LCALL   ?XSTACK_DISP0_8
   \   000019   7402         MOV     A,#0x2
   \   00001B   F0           MOVX    @DPTR,A
    270            uartConfig.flowControl          = FALSE;
   \   00001C   7404         MOV     A,#0x4
   \   00001E   12....       LCALL   ?XSTACK_DISP0_8
   \   000021   E4           CLR     A
   \   000022   F0           MOVX    @DPTR,A
    271            uartConfig.flowControlThreshold = TRANSMIT_APP_THRESH; // 2x30 don't care - see uart driver.
   \   000023   7405         MOV     A,#0x5
   \   000025   12....       LCALL   ?XSTACK_DISP0_8
   \   000028   7440         MOV     A,#0x40
   \   00002A   12....       LCALL   ??Subroutine33_0 & 0xFFFF
    272            uartConfig.rx.maxBufSize        = TRANSMIT_APP_RX_SZ;  // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_72:
   \   00002D   740C         MOV     A,#0xc
   \   00002F   12....       LCALL   ?XSTACK_DISP0_8
   \   000032   12....       LCALL   ?Subroutine12 & 0xFFFF
    273            uartConfig.tx.maxBufSize        = TRANSMIT_APP_TX_SZ;  // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_75:
   \   000035   7414         MOV     A,#0x14
   \   000037   12....       LCALL   ?XSTACK_DISP0_8
   \   00003A   12....       LCALL   ?Subroutine12 & 0xFFFF
    274            uartConfig.idleTimeout          = TRANSMIT_APP_IDLE;   // 2x30 don't care - see uart driver.
   \                     ??CrossCallReturnLabel_76:
   \   00003D   7407         MOV     A,#0x7
   \   00003F   12....       LCALL   ?XSTACK_DISP0_8
   \   000042   7406         MOV     A,#0x6
   \   000044   F0           MOVX    @DPTR,A
    275            uartConfig.intEnable            = FALSE;              // 2x30 don't care - see uart driver.
   \   000045   7418         MOV     A,#0x18
   \   000047   12....       LCALL   ?XSTACK_DISP0_8
   \   00004A   E4           CLR     A
   \   00004B   F0           MOVX    @DPTR,A
    276            uartConfig.callBackFunc         = TransmitAPP_CallBack;
   \   00004C   741D         MOV     A,#0x1d
   \   00004E   12....       LCALL   ?XSTACK_DISP0_8
   \   000051   74..         MOV     A,#??TransmitAPP_CallBack?relay & 0xff
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   74..         MOV     A,#(??TransmitAPP_CallBack?relay >> 8) & 0xff
   \   000057   F0           MOVX    @DPTR,A
    277            HalUARTOpen (HAL_UART_PORT_0, &uartConfig);
   \   000058                ; Setup parameters for call to function HalUARTOpen
   \   000058   7402         MOV     A,#0x2
   \   00005A   12....       LCALL   ?XSTACK_DISP0_8
   \   00005D   AA82         MOV     R2,DPL
   \   00005F   AB83         MOV     R3,DPH
   \   000061   7900         MOV     R1,#0x0
   \   000063   12....       LCALL   ??HalUARTOpen?relay
    278          #endif
    279            
    280          #if !defined ( Smart_home_FRAGMENTED )
    281            afDataReqMTU_t mtu;
    282          #endif
    283            uint16 i;
    284          
    285            Smart_home_TaskID = task_id;
   \   000066   EE           MOV     A,R6
   \   000067   90....       MOV     DPTR,#Smart_home_TaskID
   \   00006A   F0           MOVX    @DPTR,A
    286            Smart_home_RelayTransID = 0;
   \   00006B   90....       MOV     DPTR,#Smart_home_RelayTransID
   \   00006E   E4           CLR     A
   \   00006F   F0           MOVX    @DPTR,A
    287            Smart_home_MotorTransID = 0;
   \   000070   90....       MOV     DPTR,#Smart_home_MotorTransID
   \   000073   F0           MOVX    @DPTR,A
    288          
    289            // Device hardware initialization can be added here or in main() (Zmain.c).
    290            // If the hardware is application specific - add it here.
    291            // If the hardware is other parts of the device add it in main().
    292          
    293            //Smart_home_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
    294            //Smart_home_DstAddr.endPoint = 0;
    295            //Smart_home_DstAddr.addr.shortAddr = 0;
    296          
    297            // Fill out the endpoint description.
    298            // 初始化节点
    299            Smart_home_epDesc.endPoint = Smart_home_ENDPOINT;   // 端口号
   \   000074   90....       MOV     DPTR,#Smart_home_epDesc
   \   000077   04           INC     A
   \   000078   F0           MOVX    @DPTR,A
    300            Smart_home_epDesc.task_id = &Smart_home_TaskID;     // 任务ID
   \   000079   A3           INC     DPTR
   \   00007A   74..         MOV     A,#Smart_home_TaskID & 0xff
   \   00007C   F0           MOVX    @DPTR,A
   \   00007D   A3           INC     DPTR
   \   00007E   74..         MOV     A,#(Smart_home_TaskID >> 8) & 0xff
   \   000080   F0           MOVX    @DPTR,A
    301            Smart_home_epDesc.simpleDesc                         // 简单描述符来描述端口
    302                      = (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc;
   \   000081   A3           INC     DPTR
   \   000082   74..         MOV     A,#Smart_home_SimpleDesc & 0xff
   \   000084   F0           MOVX    @DPTR,A
   \   000085   A3           INC     DPTR
   \   000086   74..         MOV     A,#(Smart_home_SimpleDesc >> 8) & 0xff
   \   000088   12....       LCALL   ??Subroutine33_0 & 0xFFFF
    303            Smart_home_epDesc.latencyReq = noLatencyReqs;
    304          
    305            // Register the endpoint/interface description with the AF
    306            afRegister( &Smart_home_epDesc );
   \                     ??CrossCallReturnLabel_71:
   \   00008B                ; Setup parameters for call to function afRegister
   \   00008B   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   00008D   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   00008F   12....       LCALL   ??afRegister?relay
    307          
    308            // Register for all key events - This app will handle all key events
    309            RegisterForKeys( Smart_home_TaskID );
   \   000092                ; Setup parameters for call to function RegisterForKeys
   \   000092   90....       MOV     DPTR,#Smart_home_TaskID
   \   000095   E0           MOVX    A,@DPTR
   \   000096   F9           MOV     R1,A
   \   000097   12....       LCALL   ??RegisterForKeys?relay
    310          
    311            // Update the display
    312          #if defined ( LCD_SUPPORTED )
    313            HalLcdWriteString( "Smart_home", HAL_LCD_LINE_2 );
   \   00009A                ; Setup parameters for call to function HalLcdWriteString
   \   00009A   7902         MOV     R1,#0x2
   \   00009C   7A..         MOV     R2,#`?<Constant "Smart_home">` & 0xff
   \   00009E   7B..         MOV     R3,#(`?<Constant "Smart_home">` >> 8) & 0xff
   \   0000A0   12....       LCALL   ??HalLcdWriteString?relay
    314          #endif
    315          
    316            // Set the data length
    317          #if defined ( Smart_home_FRAGMENTED )
    318            Smart_home_MaxDataLength = Smart_home_MAX_DATA_LEN;
    319          #else
    320            mtu.kvp        = FALSE;
   \   0000A3   85..82       MOV     DPL,?XSP + 0
   \   0000A6   85..83       MOV     DPH,?XSP + 1
   \   0000A9   E4           CLR     A
   \   0000AA   F0           MOVX    @DPTR,A
    321            mtu.aps.secure = FALSE;
   \   0000AB   04           INC     A
   \   0000AC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000AF   E4           CLR     A
   \   0000B0   F0           MOVX    @DPTR,A
    322            Smart_home_MaxDataLength = afDataReqMTU( &mtu );
   \   0000B1                ; Setup parameters for call to function afDataReqMTU
   \   0000B1   85..82       MOV     DPL,?XSP + 0
   \   0000B4   85..83       MOV     DPH,?XSP + 1
   \   0000B7   AA82         MOV     R2,DPL
   \   0000B9   AB83         MOV     R3,DPH
   \   0000BB   12....       LCALL   ??afDataReqMTU?relay
   \   0000BE   E9           MOV     A,R1
   \   0000BF   90....       MOV     DPTR,#Smart_home_MaxDataLength
   \   0000C2   12....       LCALL   ??Subroutine33_0 & 0xFFFF
    323          #endif
    324          
    325            // 发送数据清零
    326            for (i = 0; i < Smart_home_MaxDataLength; i++)
   \                     ??CrossCallReturnLabel_73:
   \   0000C5   90....       MOV     DPTR,#Smart_home_MaxDataLength
   \   0000C8   E0           MOVX    A,@DPTR
   \   0000C9   6014         JZ      ??Smart_home_Init_0
    327            {
    328              Coordinator_Msg[i] = 0;
   \   0000CB   F8           MOV     R0,A
   \   0000CC   7900         MOV     R1,#0x0
   \   0000CE   90....       MOV     DPTR,#Coordinator_Msg
   \                     ??Smart_home_Init_1:
   \   0000D1   E4           CLR     A
   \   0000D2   F0           MOVX    @DPTR,A
   \   0000D3   A3           INC     DPTR
   \   0000D4   E8           MOV     A,R0
   \   0000D5   24FF         ADD     A,#-0x1
   \   0000D7   18           DEC     R0
   \   0000D8   E9           MOV     A,R1
   \   0000D9   34FF         ADDC    A,#-0x1
   \   0000DB   F9           MOV     R1,A
   \   0000DC   48           ORL     A,R0
   \   0000DD   70F2         JNZ     ??Smart_home_Init_1
    329            }
    330          
    331            // 注册两个MSG
    332            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \                     ??Smart_home_Init_0:
   \   0000DF                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000DF   7A20         MOV     R2,#0x20
   \   0000E1   7B80         MOV     R3,#-0x80
   \   0000E3   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000E6   E0           MOVX    A,@DPTR
   \   0000E7   F9           MOV     R1,A
   \   0000E8   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    333            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   0000EB                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000EB   7A06         MOV     R2,#0x6
   \   0000ED   7B80         MOV     R3,#-0x80
   \   0000EF   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000F2   E0           MOVX    A,@DPTR
   \   0000F3   F9           MOV     R1,A
   \   0000F4   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    334            
    335            // 打开显示，第一次延时周期较长
    336            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DISPLAY_EVT, 
    337                                Smart_home_DISPLAY_DELAY);
   \   0000F7                ; Setup parameters for call to function osal_start_timerEx
   \   0000F7   7C10         MOV     R4,#0x10
   \   0000F9   7D27         MOV     R5,#0x27
   \   0000FB   12....       LCALL   ?Subroutine16 & 0xFFFF
    338            
    339            // 打开设备在线检测，第一次开启检测延时较长时间
    340            osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DEVICE_CHECK_EVT, 
    341                                Smart_home_DEVICE_CHECK_DELAY);
   \                     ??CrossCallReturnLabel_64:
   \   0000FE                ; Setup parameters for call to function osal_start_timerEx
   \   0000FE   7C88         MOV     R4,#-0x78
   \   000100   7D13         MOV     R5,#0x13
   \   000102   7A80         MOV     R2,#-0x80
   \   000104   12....       LCALL   ??Subroutine31_0 & 0xFFFF
    342            
    343            // 关闭LED灯(D4)，表示协调器默认不允许组网
    344            NLME_PermitJoiningRequest(0x00);
   \                     ??CrossCallReturnLabel_66:
   \   000107                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   000107   7900         MOV     R1,#0x0
   \   000109   12....       LCALL   ?Subroutine23 & 0xFFFF
    345            HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);
    346            
    347            // 设备离线状态检测初始化，初始化为离线
    348            Humit.deviceStatus     = DEVICE_OFFLINE;
   \                     ??CrossCallReturnLabel_50:
   \   00010C   90....       MOV     DPTR,#Humit
   \   00010F   7402         MOV     A,#0x2
   \   000111   F0           MOVX    @DPTR,A
    349            TempLight.deviceStatus = DEVICE_OFFLINE;
   \   000112   90....       MOV     DPTR,#TempLight
   \   000115   F0           MOVX    @DPTR,A
    350            RfID.deviceStatus      = DEVICE_OFFLINE;
   \   000116   90....       MOV     DPTR,#RfID
   \   000119   F0           MOVX    @DPTR,A
    351            gasFlame.deviceStatus  = DEVICE_OFFLINE;
   \   00011A   90....       MOV     DPTR,#gasFlame
   \   00011D   F0           MOVX    @DPTR,A
    352            infrared.deviceStatus  = DEVICE_OFFLINE;
   \   00011E   90....       MOV     DPTR,#infrared
   \   000121   F0           MOVX    @DPTR,A
    353            soundVb.deviceStatus   = DEVICE_OFFLINE;
   \   000122   90....       MOV     DPTR,#soundVb
   \   000125   F0           MOVX    @DPTR,A
    354            motor.deviceStatus     = DEVICE_OFFLINE;
   \   000126   90....       MOV     DPTR,#motor
   \   000129   F0           MOVX    @DPTR,A
    355            relay.deviceStatus     = DEVICE_OFFLINE;
   \   00012A   90....       MOV     DPTR,#relay
   \   00012D   F0           MOVX    @DPTR,A
    356          }
   \   00012E   741F         MOV     A,#0x1f
   \   000130   12....       LCALL   ?DEALLOC_XSTACK8
   \   000133                REQUIRE ?Subroutine0
   \   000133                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV     R7,#0x1
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine16:
   \   000000   7A10         MOV     R2,#0x10
   \   000002                REQUIRE ??Subroutine31_0
   \   000002                ; // Fall through to label ??Subroutine31_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine31_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine23:
   \   000000   12....       LCALL   ??NLME_PermitJoiningRequest?relay
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003                ; Setup parameters for call to function HalLedSet
   \   000003   7A00         MOV     R2,#0x0
   \   000005   7901         MOV     R1,#0x1
   \   000007   12....       LCALL   ??HalLedSet?relay
   \   00000A   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine12:
   \   000000   7480         MOV     A,#-0x80
   \   000002                REQUIRE ??Subroutine33_0
   \   000002                ; // Fall through to label ??Subroutine33_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine33_0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   A3           INC     DPTR
   \   000002   E4           CLR     A
   \   000003   F0           MOVX    @DPTR,A
   \   000004   22           RET
    357          
    358          /*******************************************************************************
    359           * @fn      Smart_home_ProcessEvent
    360           *
    361           * @brief   Generic Application Task event processor.  This function
    362           *          is called to process all events for the task.  Events
    363           *          include timers, messages and any other user defined events.
    364           *
    365           * @param   task_id  - The OSAL assigned task ID.
    366           * @param   events - events to process.  This is a bit map and can
    367           *                   contain more than one event.
    368           *
    369           * @return  none
    370           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    371          UINT16 Smart_home_ProcessEvent( byte task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    372          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    373            afIncomingMSGPacket_t *MSGpkt;
    374            afDataConfirm_t *afDataConfirm;
    375            (void)task_id;  // Intentionally unreferenced parameter
    376          
    377            // Data Confirmation message fields
    378            ZStatus_t sentStatus;
    379            byte sentEP;
    380          
    381            if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   604D         JZ      ??Smart_home_ProcessEvent_0
    382            {
    383              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID );
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   800E         SJMP    ??Smart_home_ProcessEvent_1
    384              while ( MSGpkt )
    385              {
    386                switch ( MSGpkt->hdr.event )
    387                {
    388                  case ZDO_CB_MSG:
    389                    Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    390                    break;
    391          
    392                  case KEY_CHANGE:
    393                    Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    394                    break;
    395          
    396                  case AF_DATA_CONFIRM_CMD:
    397                    // This message is received as a confirmation of a data packet sent.
    398                    // The status is of ZStatus_t type [defined in ZComDef.h]
    399                    // The message fields are defined in AF.h
    400                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    401                    sentEP = afDataConfirm->endpoint;
    402                    sentStatus = afDataConfirm->hdr.status;
    403           
    404                    if ( (ZSuccess == sentStatus) &&
    405                         (Smart_home_epDesc.endPoint == sentEP) )
    406                    {  
    407                    }
    408                    break;
    409          
    410                  case AF_INCOMING_MSG_CMD:
    411                    Smart_home_MessageMSGCB( MSGpkt );
   \                     ??Smart_home_ProcessEvent_2:
   \   00000F                ; Setup parameters for call to function Smart_home_MessageMSGCB
   \   00000F   AA..         MOV     R2,?V0 + 0
   \   000011   AB..         MOV     R3,?V0 + 1
   \   000013   12....       LCALL   ??Smart_home_MessageMSGCB?relay
    412                    break;
    413          
    414                  case ZDO_STATE_CHANGE:
    415                    break;
    416          
    417                  default:
    418                    break;
    419                }
    420          
    421                // Release the memory
    422                osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??Smart_home_ProcessEvent_3:
   \   000016                ; Setup parameters for call to function osal_msg_deallocate
   \   000016   AA..         MOV     R2,?V0 + 0
   \   000018   AB..         MOV     R3,?V0 + 1
   \   00001A   12....       LCALL   ??osal_msg_deallocate?relay
    423          
    424                // Next
    425                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID );
   \   00001D                ; Setup parameters for call to function osal_msg_receive
   \                     ??Smart_home_ProcessEvent_1:
   \   00001D   90....       MOV     DPTR,#Smart_home_TaskID
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??osal_msg_receive?relay
   \   000025   8A..         MOV     ?V0 + 0,R2
   \   000027   8B..         MOV     ?V0 + 1,R3
   \   000029   E5..         MOV     A,?V0 + 0
   \   00002B   45..         ORL     A,?V0 + 1
   \   00002D   6023         JZ      ??Smart_home_ProcessEvent_4
   \   00002F   85..82       MOV     DPL,?V0 + 0
   \   000032   85..83       MOV     DPH,?V0 + 1
   \   000035   E0           MOVX    A,@DPTR
   \   000036   24E6         ADD     A,#-0x1a
   \   000038   60D5         JZ      ??Smart_home_ProcessEvent_2
   \   00003A   245A         ADD     A,#0x5a
   \   00003C   70D8         JNZ     ??Smart_home_ProcessEvent_3
   \   00003E                ; Setup parameters for call to function Smart_home_HandleKeys
   \   00003E   A3           INC     DPTR
   \   00003F   A3           INC     DPTR
   \   000040   A3           INC     DPTR
   \   000041   E0           MOVX    A,@DPTR
   \   000042   FA           MOV     R2,A
   \   000043   85..82       MOV     DPL,?V0 + 0
   \   000046   85..83       MOV     DPH,?V0 + 1
   \   000049   A3           INC     DPTR
   \   00004A   A3           INC     DPTR
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   F9           MOV     R1,A
   \   00004D   12....       LCALL   ??Smart_home_HandleKeys?relay
   \   000050   80C4         SJMP    ??Smart_home_ProcessEvent_3
    426              }
    427          
    428              // Squash compiler warnings until values are used.
    429              (void)sentStatus;
    430              (void)sentEP;
    431          
    432              // Return unprocessed events
    433              return (events ^ SYS_EVENT_MSG);
   \                     ??Smart_home_ProcessEvent_4:
   \   000052   EE           MOV     A,R6
   \   000053   FA           MOV     R2,A
   \   000054   EF           MOV     A,R7
   \   000055   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_5:
   \   000057   FB           MOV     R3,A
   \   000058   804D         SJMP    ??Smart_home_ProcessEvent_6
    434            }
    435          
    436            // Send a message out, 本实验协调器没有周期发送数任务
    437            if ( events & SMART_HOME_SEND_MSG_EVT )
   \                     ??Smart_home_ProcessEvent_0:
   \   00005A   EE           MOV     A,R6
   \   00005B   A2E0         MOV     C,0xE0 /* A   */.0
   \   00005D   5005         JNC     ??Smart_home_ProcessEvent_7
    438            {      
    439              // Return unprocessed events
    440              return (events ^ SMART_HOME_SEND_MSG_EVT);
   \   00005F   6401         XRL     A,#0x1
   \                     ??Smart_home_ProcessEvent_8:
   \   000061   FA           MOV     R2,A
   \   000062   8043         SJMP    ??Smart_home_ProcessEvent_6
    441            }
    442            
    443            // 设备状态检查事件
    444            if ( events & SMART_HOME_DEVICE_CHECK_EVT )
   \                     ??Smart_home_ProcessEvent_7:
   \   000064   5480         ANL     A,#0x80
   \   000066   6013         JZ      ??Smart_home_ProcessEvent_9
    445            {
    446              // 调用设备网络状态监测函数 
    447              Smart_home_Device_check();
   \   000068                ; Setup parameters for call to function Smart_home_Device_check
   \   000068   12....       LCALL   ??Smart_home_Device_check?relay
    448              
    449              // 任务需要周期性运行
    450              osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DEVICE_CHECK_EVT, 
    451                                  Smart_home_DEVICE_CHECK_TIMER);
   \   00006B                ; Setup parameters for call to function osal_start_timerEx
   \   00006B   7CD0         MOV     R4,#-0x30
   \   00006D   7D07         MOV     R5,#0x7
   \   00006F   7A80         MOV     R2,#-0x80
   \   000071   12....       LCALL   ??Subroutine31_0 & 0xFFFF
    452              
    453              // Return unprocessed events
    454              return (events ^ SMART_HOME_DEVICE_CHECK_EVT);
   \                     ??CrossCallReturnLabel_67:
   \   000074   EE           MOV     A,R6
   \   000075   6480         XRL     A,#0x80
   \                     ??Smart_home_ProcessEvent_10:
   \   000077   FA           MOV     R2,A
   \   000078   EF           MOV     A,R7
   \   000079   80DC         SJMP    ??Smart_home_ProcessEvent_5
    455            }
    456           
    457          
    458            // LCD显示事件
    459            if ( events & SMART_HOME_DISPLAY_EVT )
   \                     ??Smart_home_ProcessEvent_9:
   \   00007B   EE           MOV     A,R6
   \   00007C   5410         ANL     A,#0x10
   \   00007E   600F         JZ      ??Smart_home_ProcessEvent_11
    460            {
    461              // 刷新显示数据
    462              //Smart_home_DisplayResults( dispPage, &scrollLine);
    463              Smart_home_Display();
   \   000080                ; Setup parameters for call to function Smart_home_Display
   \   000080   12....       LCALL   ??Smart_home_Display?relay
    464              
    465              // 周期性的调用该事件来刷新显示数据
    466              osal_start_timerEx( Smart_home_TaskID, SMART_HOME_DISPLAY_EVT, 
    467                                  Smart_home_DISPLAY_TIMER );   
   \   000083                ; Setup parameters for call to function osal_start_timerEx
   \   000083   7CD0         MOV     R4,#-0x30
   \   000085   7D07         MOV     R5,#0x7
   \   000087   12....       LCALL   ?Subroutine16 & 0xFFFF
    468              // Return unprocessed events
    469              return (events ^ SMART_HOME_DISPLAY_EVT);
   \                     ??CrossCallReturnLabel_65:
   \   00008A   EE           MOV     A,R6
   \   00008B   6410         XRL     A,#0x10
   \   00008D   80E8         SJMP    ??Smart_home_ProcessEvent_10
    470            }
    471          
    472            // Smart_home_MATCHRSP_EVT事件预留
    473            if ( events & SMART_HOME_MATCHRSP_EVT )
   \                     ??Smart_home_ProcessEvent_11:
   \   00008F   EE           MOV     A,R6
   \   000090   5408         ANL     A,#0x8
   \   000092   6005         JZ      ??Smart_home_ProcessEvent_12
    474            {  
    475              return (events ^ SMART_HOME_MATCHRSP_EVT);
   \   000094   EE           MOV     A,R6
   \   000095   6408         XRL     A,#0x8
   \   000097   80C8         SJMP    ??Smart_home_ProcessEvent_8
    476            }
    477            // Smart_home_BINDRSP_EVT事件预留
    478            if ( events & SMART_HOME_BINDRSP_EVT )
   \                     ??Smart_home_ProcessEvent_12:
   \   000099   EE           MOV     A,R6
   \   00009A   5420         ANL     A,#0x20
   \   00009C   6005         JZ      ??Smart_home_ProcessEvent_13
    479            {
    480              return (events ^ SMART_HOME_BINDRSP_EVT);
   \   00009E   EE           MOV     A,R6
   \   00009F   6420         XRL     A,#0x20
   \   0000A1   80BE         SJMP    ??Smart_home_ProcessEvent_8
    481            }
    482            
    483            // Discard unknown events
    484            return 0;
   \                     ??Smart_home_ProcessEvent_13:
   \   0000A3   7A00         MOV     R2,#0x0
   \   0000A5   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_6:
   \   0000A7   7F04         MOV     R7,#0x4
   \   0000A9   02....       LJMP    ?BANKED_LEAVE_XDATA
    485          }
    486          
    487          /*******************************************************************************
    488           * Event Generation Functions
    489           */
    490          /*******************************************************************************
    491           * @fn      Smart_home_ProcessZDOMsgs()
    492           *
    493           * @brief   Process response messages
    494           *
    495           * @param   none
    496           *
    497           * @return  none
    498           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    499          void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
   \                     Smart_home_ProcessZDOMsgs:
    500          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    501            /*
    502            switch ( inMsg->clusterID )
    503            {
    504              // 绑定信息处理
    505              case End_Device_Bind_rsp:
    506                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
    507                {
    508                  osal_stop_timerEx( Smart_home_TaskID, Smart_home_BINDRSP_EVT);
    509          #if defined ( LCD_SUPPORTED )
    510                  HalLcdWriteString( "BindSuccess", HAL_LCD_LINE_3 );
    511          #endif
    512                }
    513                break;
    514          
    515              // 描述符匹配信息处理 
    516              case Match_Desc_rsp:
    517                ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
    518                if ( pRsp )
    519                {
    520                  if ( pRsp->status == ZSuccess && pRsp->cnt )
    521                  {
    522                    osal_stop_timerEx( Smart_home_TaskID, Smart_home_MATCHRSP_EVT);
    523          
    524          #if defined ( LCD_SUPPORTED )
    525                    HalLcdWriteString( "MatchSuccess", HAL_LCD_LINE_3 );
    526          #endif
    527                   }
    528                   osal_mem_free( pRsp );
    529                }
    530                break;
    531            }*/
    532          }
   \   000000   02....       LJMP    ?BRET
    533          
    534          /*********************************************************************
    535           * @fn      Smart_home_Motor_cmd
    536           * 
    537           * @brief   通过电机速度判断电机转向
    538           * 
    539           * 
    540           * @param   uint8 电机转速
    541           * 
    542           * @return  
    543           *          #define  HAL_MOTOR_STOP            0x01
    544           *          #define  HAL_MOTOR_FORWARD         0x02
    545           *          #define  HAL_MOTOR_BACKWARD        0x03
    546           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    547          void Smart_home_Motor_cmd(int8 speed)
   \                     Smart_home_Motor_cmd:
    548          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    549            uint8 outspeed;
    550            uint8 cmd;
    551            if(speed == 0)
   \   000007   7006         JNZ     ??Smart_home_Motor_cmd_0
    552            {
    553              outspeed = 0;
   \                     ??Smart_home_Motor_cmd_1:
   \   000009   7F00         MOV     R7,#0x0
    554              cmd = HAL_MOTOR_STOP;
   \   00000B   7901         MOV     R1,#0x1
   \   00000D   8021         SJMP    ??Smart_home_Motor_cmd_2
    555            }   
    556            else if(speed > 0)
   \                     ??Smart_home_Motor_cmd_0:
   \   00000F   C3           CLR     C
   \   000010   9401         SUBB    A,#0x1
   \   000012   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000014   65D0         XRL     A,PSW
   \   000016   33           RLC     A
   \   000017   EE           MOV     A,R6
   \   000018   4005         JC      ??Smart_home_Motor_cmd_3
    557            {
    558              outspeed = speed;
   \   00001A   FF           MOV     R7,A
    559              cmd = HAL_MOTOR_FORWARD;
   \   00001B   7902         MOV     R1,#0x2
   \   00001D   8011         SJMP    ??Smart_home_Motor_cmd_2
    560            }
    561            
    562            else if(speed < 0)
   \                     ??Smart_home_Motor_cmd_3:
   \   00001F   C3           CLR     C
   \   000020   9400         SUBB    A,#0x0
   \   000022   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000024   65D0         XRL     A,PSW
   \   000026   33           RLC     A
   \   000027   50E0         JNC     ??Smart_home_Motor_cmd_1
    563            {
    564              outspeed = 0xff - speed;
   \   000029   74FF         MOV     A,#-0x1
   \   00002B   C3           CLR     C
   \   00002C   9E           SUBB    A,R6
   \   00002D   FF           MOV     R7,A
    565              cmd = HAL_MOTOR_BACKWARD;
   \   00002E   7903         MOV     R1,#0x3
    566            }
    567            
    568            else
    569            {
    570              outspeed = 0;
    571              cmd = HAL_MOTOR_STOP;    
    572            }
    573            Smart_home_SendToMotorMSG(cmd,outspeed); 
   \                     ??Smart_home_Motor_cmd_2:
   \   000030                ; Setup parameters for call to function Smart_home_SendToMotorMSG
   \   000030   EF           MOV     A,R7
   \   000031   FA           MOV     R2,A
   \   000032   12....       LCALL   ??Smart_home_SendToMotorMSG?relay
    574          }
   \   000035   02....       LJMP    ?Subroutine0 & 0xFFFF
    575          
    576          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    577          void Smart_home_HandleKeys( byte shift, byte keys )
   \                     Smart_home_HandleKeys:
    578          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
    579            //zAddrType_t txAddr;
    580            static int8 MotorSpeed = 0;
    581            static uint8 NetWorkAllow = 0;
    582            /*这里这么设置似乎会出现内存问题
    583            static uint8 Relay1_on = 0x02;  //两个默认都是关闭
    584            static uint8 Relay2_on = 0x10;
    585            */
    586            /*3.21 LCD 显示*/
    587            static uint8 Relay1_on = 0;  //两个默认都是关闭
    588            static uint8 Relay2_on = 0;
    589            
    590            
    591            if ( keys & HAL_KEY_SW_1 )  //UP
   \   000007   A2E0         MOV     C,0xE0 /* A   */.0
   \   000009   5059         JNC     ??Smart_home_HandleKeys_0
    592            {
    593              switch(Ctrlcase)
   \   00000B   90....       MOV     DPTR,#Ctrlcase
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   14           DEC     A
   \   000010   6017         JZ      ??Smart_home_HandleKeys_1
   \   000012   14           DEC     A
   \   000013   602A         JZ      ??Smart_home_HandleKeys_2
    594              {
    595                default:    
    596                case 0:
    597                {
    598                  if(LCD_Page < LCD_PAGE_MAX)       {LCD_Page++;}
   \   000015   90....       MOV     DPTR,#LCD_Page
   \   000018   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_37:
   \   00001B   5003         JNC     ??Smart_home_HandleKeys_3
   \   00001D   E0           MOVX    A,@DPTR
   \   00001E   04           INC     A
   \   00001F   F0           MOVX    @DPTR,A
    599                  if(LCD_Page > LCD_PAGE_MAX - 1)       {LCD_Page = 0;}
   \                     ??Smart_home_HandleKeys_3:
   \   000020   12....       LCALL   ?Subroutine17 & 0xFFFF
   \                     ??CrossCallReturnLabel_38:
   \   000023   403F         JC      ??Smart_home_HandleKeys_0
   \   000025   E4           CLR     A
   \   000026   F0           MOVX    @DPTR,A
   \   000027   803B         SJMP    ??Smart_home_HandleKeys_0
    600                  break;
    601                }
    602                case 1:
    603                {  
    604                  uint8 switch1;
    605                  if(Relay1_on == 0)  {Relay1_on = 1 ; switch1 = 0x02;}
   \                     ??Smart_home_HandleKeys_1:
   \   000029   90....       MOV     DPTR,#??Relay1_on
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   7007         JNZ     ??Smart_home_HandleKeys_4
   \   00002F   7401         MOV     A,#0x1
   \   000031   F0           MOVX    @DPTR,A
   \   000032   7902         MOV     R1,#0x2
   \   000034   8004         SJMP    ??Smart_home_HandleKeys_5
    606                  else if(Relay1_on == 1)  {Relay1_on = 0; switch1 = 0x01;}
   \                     ??Smart_home_HandleKeys_4:
   \   000036   E4           CLR     A
   \   000037   F0           MOVX    @DPTR,A
   \   000038   7901         MOV     R1,#0x1
    607                  else  {Relay1_on = 0; switch1 = 0x01;}       
    608                  Smart_home_SendToRelayMSG(switch1);  
   \                     ??Smart_home_HandleKeys_5:
   \   00003A                ; Setup parameters for call to function Smart_home_SendToRelayMSG
   \   00003A   12....       LCALL   ??Smart_home_SendToRelayMSG?relay
    609                  break;
   \   00003D   8025         SJMP    ??Smart_home_HandleKeys_0
    610                } 
    611                case 2:
    612                {
    613                  if(MotorSpeed < 50)     {MotorSpeed += 10;}
   \                     ??Smart_home_HandleKeys_2:
   \   00003F   90....       MOV     DPTR,#??MotorSpeed
   \   000042   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_39:
   \   000045   5004         JNC     ??Smart_home_HandleKeys_6
   \   000047   E0           MOVX    A,@DPTR
   \   000048   240A         ADD     A,#0xa
   \   00004A   F0           MOVX    @DPTR,A
    614                  if(MotorSpeed >= 50)     
   \                     ??Smart_home_HandleKeys_6:
   \   00004B   12....       LCALL   ?Subroutine18 & 0xFFFF
   \                     ??CrossCallReturnLabel_40:
   \   00004E   400F         JC      ??Smart_home_HandleKeys_7
    615                  {
    616          #if defined ( LCD_SUPPORTED )
    617                     HalLcdWriteString( "Motor max Speed", HAL_LCD_LINE_4 );
   \   000050                ; Setup parameters for call to function HalLcdWriteString
   \   000050   7904         MOV     R1,#0x4
   \   000052   7A..         MOV     R2,#`?<Constant "Motor max Speed">` & 0xff
   \   000054   7B..         MOV     R3,#(`?<Constant "Motor max Speed">` >> 8) & 0xff
   \   000056   12....       LCALL   ??HalLcdWriteString?relay
    618          #endif 
    619                     MotorSpeed = 50;
   \   000059   90....       MOV     DPTR,#??MotorSpeed
   \   00005C   7432         MOV     A,#0x32
   \   00005E   F0           MOVX    @DPTR,A
    620                  }
    621                  Smart_home_Motor_cmd(MotorSpeed);
   \                     ??Smart_home_HandleKeys_7:
   \   00005F                ; Setup parameters for call to function Smart_home_Motor_cmd
   \   00005F   E0           MOVX    A,@DPTR
   \   000060   F9           MOV     R1,A
   \   000061   12....       LCALL   ??Smart_home_Motor_cmd?relay
    622                  
    623                  break;
    624                }
    625                   
    626              }    
    627            }
    628            
    629            if ( keys & HAL_KEY_SW_3 )  //DOWN
   \                     ??Smart_home_HandleKeys_0:
   \   000064   EE           MOV     A,R6
   \   000065   A2E4         MOV     C,0xE0 /* A   */.4
   \   000067   5064         JNC     ??Smart_home_HandleKeys_8
    630            {
    631              switch(Ctrlcase)
   \   000069   90....       MOV     DPTR,#Ctrlcase
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   14           DEC     A
   \   00006E   6018         JZ      ??Smart_home_HandleKeys_9
   \   000070   14           DEC     A
   \   000071   6035         JZ      ??Smart_home_HandleKeys_10
    632              {
    633                default:    
    634                case 0:
    635                {
    636                  if(LCD_Page >= 0)       {LCD_Page--;}
   \   000073   90....       MOV     DPTR,#LCD_Page
   \   000076   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_30:
   \   000079   4003         JC      ??Smart_home_HandleKeys_11
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   14           DEC     A
   \   00007D   F0           MOVX    @DPTR,A
    637                  if(LCD_Page < 0)        {LCD_Page = LCD_PAGE_MAX;}
   \                     ??Smart_home_HandleKeys_11:
   \   00007E   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_31:
   \   000081   504A         JNC     ??Smart_home_HandleKeys_8
   \   000083   7404         MOV     A,#0x4
   \   000085   F0           MOVX    @DPTR,A
   \   000086   8045         SJMP    ??Smart_home_HandleKeys_8
    638                  break;
    639                }
    640                case 1:  
    641                {
    642                  uint8 switch2;
    643                  if(Relay2_on == 0)  {Relay2_on = 1 ; switch2 = 0x20;}
   \                     ??Smart_home_HandleKeys_9:
   \   000088   90....       MOV     DPTR,#??Relay2_on
   \   00008B   E0           MOVX    A,@DPTR
   \   00008C   7007         JNZ     ??Smart_home_HandleKeys_12
   \   00008E   7401         MOV     A,#0x1
   \   000090   F0           MOVX    @DPTR,A
   \   000091   7920         MOV     R1,#0x20
   \   000093   800E         SJMP    ??Smart_home_HandleKeys_13
    644                  else if(Relay2_on == 1)  {Relay2_on = 0; switch2 = 0x10;}
   \                     ??Smart_home_HandleKeys_12:
   \   000095   6401         XRL     A,#0x1
   \   000097   7006         JNZ     ??Smart_home_HandleKeys_14
   \   000099   E4           CLR     A
   \   00009A   F0           MOVX    @DPTR,A
   \   00009B   7910         MOV     R1,#0x10
   \   00009D   8004         SJMP    ??Smart_home_HandleKeys_13
    645                  else  {Relay2_on = 0; switch2 = 0x01;}       
   \                     ??Smart_home_HandleKeys_14:
   \   00009F   E4           CLR     A
   \   0000A0   F0           MOVX    @DPTR,A
   \   0000A1   7901         MOV     R1,#0x1
    646                  Smart_home_SendToRelayMSG(switch2);       
   \                     ??Smart_home_HandleKeys_13:
   \   0000A3                ; Setup parameters for call to function Smart_home_SendToRelayMSG
   \   0000A3   12....       LCALL   ??Smart_home_SendToRelayMSG?relay
    647                  break;
   \   0000A6   8025         SJMP    ??Smart_home_HandleKeys_8
    648                } 
    649                case 2:
    650                {
    651                  /*
    652                  #define  HAL_MOTOR_STOP            0x01
    653                  #define  HAL_MOTOR_FORWORD         0x02
    654                  #define  HAL_MOTOR_BACKWORD        0x03*/
    655                  if(MotorSpeed > -50)     {MotorSpeed -= 10;}
   \                     ??Smart_home_HandleKeys_10:
   \   0000A8   90....       MOV     DPTR,#??MotorSpeed
   \   0000AB   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_41:
   \   0000AE   4004         JC      ??Smart_home_HandleKeys_15
   \   0000B0   E0           MOVX    A,@DPTR
   \   0000B1   24F6         ADD     A,#-0xa
   \   0000B3   F0           MOVX    @DPTR,A
    656                  if(MotorSpeed <= -50)     
   \                     ??Smart_home_HandleKeys_15:
   \   0000B4   12....       LCALL   ?Subroutine19 & 0xFFFF
   \                     ??CrossCallReturnLabel_42:
   \   0000B7   500F         JNC     ??Smart_home_HandleKeys_16
    657                  {
    658          #if defined ( LCD_SUPPORTED )
    659                     HalLcdWriteString( "Motor min Speed", HAL_LCD_LINE_4 );
   \   0000B9                ; Setup parameters for call to function HalLcdWriteString
   \   0000B9   7904         MOV     R1,#0x4
   \   0000BB   7A..         MOV     R2,#`?<Constant "Motor min Speed">` & 0xff
   \   0000BD   7B..         MOV     R3,#(`?<Constant "Motor min Speed">` >> 8) & 0xff
   \   0000BF   12....       LCALL   ??HalLcdWriteString?relay
    660          #endif 
    661                     MotorSpeed = -80;
   \   0000C2   90....       MOV     DPTR,#??MotorSpeed
   \   0000C5   74B0         MOV     A,#-0x50
   \   0000C7   F0           MOVX    @DPTR,A
    662                  }
    663                  Smart_home_Motor_cmd(MotorSpeed);
   \                     ??Smart_home_HandleKeys_16:
   \   0000C8                ; Setup parameters for call to function Smart_home_Motor_cmd
   \   0000C8   E0           MOVX    A,@DPTR
   \   0000C9   F9           MOV     R1,A
   \   0000CA   12....       LCALL   ??Smart_home_Motor_cmd?relay
    664                  break; 
    665                }
    666              }
    667            }
    668            
    669            if ( keys & HAL_KEY_SW_2 )  //RIGHT  
   \                     ??Smart_home_HandleKeys_8:
   \   0000CD   EE           MOV     A,R6
   \   0000CE   A2E1         MOV     C,0xE0 /* A   */.1
   \   0000D0   5012         JNC     ??Smart_home_HandleKeys_17
    670            /*3.22 这里在调试时出现问题，具体问题为 点击up时会出现屏幕变为禁止组网
    671              控制方面变为控制电机，问题在于汇编中的key值会出现  keys & HAL_KEY_SW_2 = 2
    672              的情况，暂时禁止，需要等待研究  还有key_7*/
    673            {
    674               if(Ctrlcase < 3)   { Ctrlcase++;}
   \   0000D2   90....       MOV     DPTR,#Ctrlcase
   \   0000D5   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_43:
   \   0000D8   5003         JNC     ??Smart_home_HandleKeys_18
   \   0000DA   E0           MOVX    A,@DPTR
   \   0000DB   04           INC     A
   \   0000DC   F0           MOVX    @DPTR,A
    675               if(Ctrlcase > 2)   { Ctrlcase=0;}
   \                     ??Smart_home_HandleKeys_18:
   \   0000DD   12....       LCALL   ?Subroutine20 & 0xFFFF
   \                     ??CrossCallReturnLabel_44:
   \   0000E0   4002         JC      ??Smart_home_HandleKeys_17
   \   0000E2   E4           CLR     A
   \   0000E3   F0           MOVX    @DPTR,A
    676               //Smart_home_Key_add(Ctrlcase);
    677            }
    678            
    679            if ( keys & HAL_KEY_SW_4 )  //LEFT
   \                     ??Smart_home_HandleKeys_17:
   \   0000E4   EE           MOV     A,R6
   \   0000E5   A2E3         MOV     C,0xE0 /* A   */.3
   \   0000E7   5013         JNC     ??Smart_home_HandleKeys_19
    680            {
    681               if(Ctrlcase > -1)   { Ctrlcase--;}
   \   0000E9   90....       MOV     DPTR,#Ctrlcase
   \   0000EC   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_32:
   \   0000EF   4003         JC      ??Smart_home_HandleKeys_20
   \   0000F1   E0           MOVX    A,@DPTR
   \   0000F2   14           DEC     A
   \   0000F3   F0           MOVX    @DPTR,A
    682               if(Ctrlcase < 0)    { Ctrlcase=2;}
   \                     ??Smart_home_HandleKeys_20:
   \   0000F4   12....       LCALL   ?Subroutine14 & 0xFFFF
   \                     ??CrossCallReturnLabel_33:
   \   0000F7   5003         JNC     ??Smart_home_HandleKeys_19
   \   0000F9   7402         MOV     A,#0x2
   \   0000FB   F0           MOVX    @DPTR,A
    683               //Smart_home_Key_add(Ctrlcase);    
    684            }
    685            
    686            if ( keys & HAL_KEY_SW_5 )  //OK
    687            {
    688          
    689            }
    690            
    691            if ( keys & HAL_KEY_SW_7 )  //CENCEL
   \                     ??Smart_home_HandleKeys_19:
   \   0000FC   EE           MOV     A,R6
   \   0000FD   A2E6         MOV     C,0xE0 /* A   */.6
   \   0000FF   502C         JNC     ??Smart_home_HandleKeys_21
    692            {
    693               if(NetWorkAllow == 0)
   \   000101   90....       MOV     DPTR,#??NetWorkAllow
   \   000104   E0           MOVX    A,@DPTR
   \   000105   7017         JNZ     ??Smart_home_HandleKeys_22
    694               {
    695                 NetWorkAllow = 1;
   \   000107   7401         MOV     A,#0x1
   \   000109   F0           MOVX    @DPTR,A
    696                 NLME_PermitJoiningRequest(0xFF); // 组网，允许随时加入
   \   00010A                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   00010A   79FF         MOV     R1,#-0x1
   \   00010C   12....       LCALL   ??NLME_PermitJoiningRequest?relay
    697                 HalLedSet(HAL_LED_1, HAL_LED_MODE_ON);
   \   00010F                ; Setup parameters for call to function HalLedSet
   \   00010F   7A01         MOV     R2,#0x1
   \   000111   7901         MOV     R1,#0x1
   \   000113   12....       LCALL   ??HalLedSet?relay
    698                 //HalLedSet(HAL_LED_2, HAL_LED_MODE_ON);
    699          #if defined ( LCD_SUPPORTED )
    700                 HalLcdWriteString( "Allow networking", HAL_LCD_LINE_4 );
   \   000116                ; Setup parameters for call to function HalLcdWriteString
   \   000116   7904         MOV     R1,#0x4
   \   000118   7A..         MOV     R2,#`?<Constant "Allow networking">` & 0xff
   \   00011A   7B..         MOV     R3,#(`?<Constant "Allow networking">` >> 8) & 0xff
   \   00011C   800C         SJMP    ??Smart_home_HandleKeys_23
    701          #endif
    702               }
    703               else
    704               {
    705                 NetWorkAllow = 0;
   \                     ??Smart_home_HandleKeys_22:
   \   00011E   E4           CLR     A
   \   00011F   F0           MOVX    @DPTR,A
    706                 NLME_PermitJoiningRequest(0x00); // 不允许组网
   \   000120                ; Setup parameters for call to function NLME_PermitJoiningRequest
   \   000120   F9           MOV     R1,A
   \   000121   12....       LCALL   ?Subroutine23 & 0xFFFF
    707                 HalLedSet(HAL_LED_1, HAL_LED_MODE_OFF);  
    708                 //HalLedSet(HAL_LED_2, HAL_LED_MODE_OFF); 
    709          #if defined ( LCD_SUPPORTED )
    710                 HalLcdWriteString( "Ban   networking", HAL_LCD_LINE_4 );
   \                     ??CrossCallReturnLabel_51:
   \   000124                ; Setup parameters for call to function HalLcdWriteString
   \   000124   7904         MOV     R1,#0x4
   \   000126   7A..         MOV     R2,#`?<Constant "Ban   networking">` & 0xff
   \   000128   7B..         MOV     R3,#(`?<Constant "Ban   networking">` >> 8) & 0xff
   \                     ??Smart_home_HandleKeys_23:
   \   00012A   12....       LCALL   ??HalLcdWriteString?relay
    711          #endif        
    712               }
    713            }
    714          }
   \                     ??Smart_home_HandleKeys_21:
   \   00012D   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine20:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9403         SUBB    A,#0x3
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine19:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   94CF         SUBB    A,#-0x31
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine18:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9432         SUBB    A,#0x32
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine17:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9404         SUBB    A,#0x4
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine14:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C3           CLR     C
   \   000002   9400         SUBB    A,#0x0
   \   000004   A2D2         MOV     C,0xD0 /* PSW */.2
   \   000006   65D0         XRL     A,PSW
   \   000008   33           RLC     A
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??MotorSpeed:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??NetWorkAllow:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay1_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Relay2_on:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    715          
    716          
    717          /*******************************************************************************
    718           * LOCAL FUNCTIONS
    719           */
    720          
    721          /*******************************************************************************
    722           * @fn      Smart_home_MessageMSGCB
    723           *
    724           * @brief   Data message processor callback.  This function processes
    725           *          any incoming data - probably from other devices.  So, based
    726           *          on cluster ID, perform the intended action.
    727           *
    728           * @param   none
    729           *
    730           * @return  none
    731           */
    732            
    733             /***********************************************************************
    734              目前总共8种case
    735             #define Smart_home_CLUSTERID_HUMITMSG            1  // 温湿度
    736             #define Smart_home_CLUSTERID_TEMPLIGHTMSG        2  // 温度光照
    737             #define Smart_home_CLUSTERID_RFIDMSG             3  // 射频卡
    738             #define Smart_home_CLUSTERID_GASFLAMEMSG         4  // 烟雾火焰
    739             #define Smart_home_CLUSTERID_INFRAREDMSG         5  // 人体红外
    740             #define Smart_home_CLUSTERID_SOUNDVBMSG          6  // 声音振动
    741             #define Smart_home_CLUSTERID_MOTORSTATUSMSG      7  // 直流电机状态信息
    742             #define Smart_home_CLUSTERID_RELAYSTATUSMSG      8  // 继电器状态信息
    743              
    744             设备描述
    745             typedef struct DeviceInfo
    746             {
    747               uint8 deviceID;
    748               uint8 deviceStatus;
    749               uint8 data[5];
    750             } DeviceInfo; 
    751             ************************************************************************/ 
    752              //3.14 消息处理模块，共8个，行为类似 
    753            //HalUARTWrite(HAL_UART_PORT_0, "9",   1);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    754          void Smart_home_MessageMSGCB( afIncomingMSGPacket_t *pkt )
   \                     Smart_home_MessageMSGCB:
    755          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    756          
    757            switch ( pkt->clusterId )
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F5..         MOV     ?V0 + 0,A
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   F5..         MOV     ?V0 + 1,A
   \   000014   78..         MOV     R0,#?V0 + 0
   \   000016   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for Smart_home_MessageMSGCB>_0`:
   \   000019   0100         DW        1
   \   00001B   07           DB        7
   \   00001C   ....         DW        ??Smart_home_MessageMSGCB_0
   \   00001E   ....         DW        ??Smart_home_MessageMSGCB_1
   \   000020   ....         DW        ??Smart_home_MessageMSGCB_2
   \   000022   ....         DW        ??Smart_home_MessageMSGCB_3
   \   000024   ....         DW        ??Smart_home_MessageMSGCB_4
   \   000026   ....         DW        ??Smart_home_MessageMSGCB_5
   \   000028   ....         DW        ??Smart_home_MessageMSGCB_6
   \   00002A   ....         DW        ??Smart_home_MessageMSGCB_7
   \   00002C   ....         DW        ??Smart_home_MessageMSGCB_8
    758            {
    759              // 温湿度传感器信息
    760              case Smart_home_CLUSTERID_HUMITMSG:
    761                Humit.deviceStatus = DEVICE_ONLINE;
   \                     ??Smart_home_MessageMSGCB_1:
   \   00002E   90....       MOV     DPTR,#Humit
   \   000031   12....       LCALL   ?Subroutine3 & 0xFFFF
    762                Humit.data[0] = pkt->cmd.Data[4]; // 湿度 
   \                     ??CrossCallReturnLabel_0:
   \   000034   90....       MOV     DPTR,#Humit + 1
   \   000037   12....       LCALL   ?Subroutine7 & 0xFFFF
    763                Humit.data[1] = pkt->cmd.Data[5]; // 温度
   \                     ??CrossCallReturnLabel_12:
   \   00003A   90....       MOV     DPTR,#Humit + 2
   \   00003D   02....       LJMP    ??Smart_home_MessageMSGCB_9 & 0xFFFF
    764                break;
    765              
    766              // 温度与光照度传感器信息  
    767              case Smart_home_CLUSTERID_TEMPLIGHTMSG:
    768                TempLight.deviceStatus = DEVICE_ONLINE;
   \                     ??Smart_home_MessageMSGCB_2:
   \   000040   90....       MOV     DPTR,#TempLight
   \   000043   12....       LCALL   ?Subroutine3 & 0xFFFF
    769                TempLight.data[0] = pkt->cmd.Data[4]; // 温度整数
   \                     ??CrossCallReturnLabel_1:
   \   000046   90....       MOV     DPTR,#TempLight + 1
   \   000049   12....       LCALL   ?Subroutine8 & 0xFFFF
    770                TempLight.data[1] = pkt->cmd.Data[5]; // 温度小数
   \                     ??CrossCallReturnLabel_14:
   \   00004C   90....       MOV     DPTR,#TempLight + 2
   \   00004F   12....       LCALL   ?Subroutine6 & 0xFFFF
    771                TempLight.data[2] = pkt->cmd.Data[6]; // 光照
   \                     ??CrossCallReturnLabel_10:
   \   000052   90....       MOV     DPTR,#TempLight + 3
   \   000055   12....       LCALL   ?Subroutine5 & 0xFFFF
    772                TempLight.data[3] = pkt->cmd.Data[7]; // 光照
   \                     ??CrossCallReturnLabel_8:
   \   000058   E0           MOVX    A,@DPTR
   \   000059   90....       MOV     DPTR,#TempLight + 4
   \   00005C   02....       LJMP    ??Smart_home_MessageMSGCB_9 & 0xFFFF
    773                break;
    774              
    775              // RFID射频卡信息 
    776              case Smart_home_CLUSTERID_RFIDMSG:
    777                RfID.deviceStatus = DEVICE_ONLINE;
   \                     ??Smart_home_MessageMSGCB_3:
   \   00005F   90....       MOV     DPTR,#RfID
   \   000062   12....       LCALL   ?Subroutine3 & 0xFFFF
    778                RfID.data[0] = pkt->cmd.Data[4]; // 射频卡类型
   \                     ??CrossCallReturnLabel_2:
   \   000065   90....       MOV     DPTR,#RfID + 1
   \   000068   12....       LCALL   ?Subroutine8 & 0xFFFF
    779                RfID.data[1] = pkt->cmd.Data[5]; // 4个字节的ID号
   \                     ??CrossCallReturnLabel_15:
   \   00006B   90....       MOV     DPTR,#RfID + 2
   \   00006E   12....       LCALL   ?Subroutine6 & 0xFFFF
    780                RfID.data[2] = pkt->cmd.Data[6]; //
   \                     ??CrossCallReturnLabel_11:
   \   000071   90....       MOV     DPTR,#RfID + 3
   \   000074   12....       LCALL   ?Subroutine25 & 0xFFFF
    781                RfID.data[3] = pkt->cmd.Data[7]; //
   \                     ??CrossCallReturnLabel_54:
   \   000077   A3           INC     DPTR
   \   000078   E0           MOVX    A,@DPTR
   \   000079   90....       MOV     DPTR,#RfID + 4
   \   00007C   12....       LCALL   ?Subroutine5 & 0xFFFF
    782                RfID.data[4] = pkt->cmd.Data[8]; //           
   \                     ??CrossCallReturnLabel_9:
   \   00007F   A3           INC     DPTR
   \   000080   E0           MOVX    A,@DPTR
   \   000081   90....       MOV     DPTR,#RfID + 5
   \   000084   8063         SJMP    ??Smart_home_MessageMSGCB_9
    783                break;
    784              
    785              // 烟雾与火焰报警信息  
    786              case Smart_home_CLUSTERID_GASFLAMEMSG:
    787                gasFlame.deviceStatus = DEVICE_ONLINE;
   \                     ??Smart_home_MessageMSGCB_4:
   \   000086   90....       MOV     DPTR,#gasFlame
   \   000089   12....       LCALL   ?Subroutine4 & 0xFFFF
    788                gasFlame.data[0] = pkt->cmd.Data[4]; // 烟雾与火焰报警信息
   \                     ??CrossCallReturnLabel_4:
   \   00008C   90....       MOV     DPTR,#gasFlame + 1
   \   00008F   8058         SJMP    ??Smart_home_MessageMSGCB_9
    789                break;
    790              
    791              // 人体红外检测信息  
    792              case Smart_home_CLUSTERID_INFRAREDMSG:
    793                infrared.deviceStatus = DEVICE_ONLINE;
   \                     ??Smart_home_MessageMSGCB_5:
   \   000091   90....       MOV     DPTR,#infrared
   \   000094   12....       LCALL   ?Subroutine4 & 0xFFFF
    794                infrared.data[0] = pkt->cmd.Data[4]; // 人体红外 
   \                     ??CrossCallReturnLabel_5:
   \   000097   90....       MOV     DPTR,#infrared + 1
   \   00009A   804D         SJMP    ??Smart_home_MessageMSGCB_9
    795                break;
    796              
    797              // 声音与振动传感器信息  
    798              case Smart_home_CLUSTERID_SOUNDVBMSG:
    799                soundVb.deviceStatus = DEVICE_ONLINE;
   \                     ??Smart_home_MessageMSGCB_6:
   \   00009C   90....       MOV     DPTR,#soundVb
   \   00009F   12....       LCALL   ?Subroutine4 & 0xFFFF
    800                soundVb.data[0] = pkt->cmd.Data[4]; // 声音震动信息
   \                     ??CrossCallReturnLabel_6:
   \   0000A2   90....       MOV     DPTR,#soundVb + 1
   \   0000A5   8042         SJMP    ??Smart_home_MessageMSGCB_9
    801                break;
    802              
    803              // 电机状态信息  
    804              case Smart_home_CLUSTERID_MOTORSTATUSMSG:
    805                motor.deviceStatus = DEVICE_ONLINE;
   \                     ??Smart_home_MessageMSGCB_7:
   \   0000A7   90....       MOV     DPTR,#motor
   \   0000AA   7401         MOV     A,#0x1
   \   0000AC   F0           MOVX    @DPTR,A
    806                
    807                // 储存电机设备的网络地址，用于发送控制命令
    808                Smart_home_DstMotorAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0000AD   90....       MOV     DPTR,#Smart_home_DstMotorAddr + 8
   \   0000B0   12....       LCALL   ?Subroutine9 & 0xFFFF
    809                Smart_home_DstMotorAddr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_16:
   \   0000B3   90....       MOV     DPTR,#Smart_home_DstMotorAddr
   \   0000B6   E8           MOV     A,R0
   \   0000B7   F0           MOVX    @DPTR,A
   \   0000B8   A3           INC     DPTR
   \   0000B9   E9           MOV     A,R1
   \   0000BA   F0           MOVX    @DPTR,A
    810                
    811                Smart_home_DstMotorAddr.endPoint = 1;  // 目的节点的端口号
   \   0000BB   90....       MOV     DPTR,#Smart_home_DstMotorAddr + 9
   \   0000BE   12....       LCALL   ?Subroutine3 & 0xFFFF
    812                //Smart_home_DstMotorAddr.endPoint = Smart_home_ENDPOINT;
    813               
    814                motor.data[0] = pkt->cmd.Data[4]; // 电机转速
   \                     ??CrossCallReturnLabel_3:
   \   0000C1   90....       MOV     DPTR,#motor + 1
   \   0000C4   12....       LCALL   ?Subroutine7 & 0xFFFF
    815                motor.data[1] = pkt->cmd.Data[5]; // 电机状态
   \                     ??CrossCallReturnLabel_13:
   \   0000C7   90....       MOV     DPTR,#motor + 2
   \   0000CA   801D         SJMP    ??Smart_home_MessageMSGCB_9
    816                break;
    817              
    818              // 继电器状态信息   
    819              case Smart_home_CLUSTERID_RELAYSTATUSMSG:
    820                relay.deviceStatus = DEVICE_ONLINE;
   \                     ??Smart_home_MessageMSGCB_8:
   \   0000CC   90....       MOV     DPTR,#relay
   \   0000CF   7401         MOV     A,#0x1
   \   0000D1   F0           MOVX    @DPTR,A
    821                
    822                // 储存继电器设备的网络地址，用于发送控制命令
    823                Smart_home_DstRelayAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   0000D2   90....       MOV     DPTR,#Smart_home_DstRelayAddr + 8
   \   0000D5   12....       LCALL   ?Subroutine9 & 0xFFFF
    824                Smart_home_DstRelayAddr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
   \                     ??CrossCallReturnLabel_17:
   \   0000D8   90....       MOV     DPTR,#Smart_home_DstRelayAddr
   \   0000DB   E8           MOV     A,R0
   \   0000DC   F0           MOVX    @DPTR,A
   \   0000DD   A3           INC     DPTR
   \   0000DE   E9           MOV     A,R1
   \   0000DF   F0           MOVX    @DPTR,A
    825                
    826                Smart_home_DstRelayAddr.endPoint = 1; // 目的节点的端口号
   \   0000E0   90....       MOV     DPTR,#Smart_home_DstRelayAddr + 9
   \   0000E3   12....       LCALL   ?Subroutine4 & 0xFFFF
    827                //Smart_home_DstRelayAddr.endPoint = Smart_home_ENDPOINT;  
    828                
    829                relay.data[0] = pkt->cmd.Data[4]; 
   \                     ??CrossCallReturnLabel_7:
   \   0000E6   90....       MOV     DPTR,#relay + 1
   \                     ??Smart_home_MessageMSGCB_9:
   \   0000E9   F0           MOVX    @DPTR,A
    830                break;
    831                
    832              // 同上面一样，可以在将来添加更多的控制信息
    833              default:
    834                break;
    835            }
    836          }
   \                     ??Smart_home_MessageMSGCB_0:
   \   0000EA   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine9:
   \   000000   04           INC     A
   \   000001   F0           MOVX    @DPTR,A
   \   000002   8A82         MOV     DPL,R2
   \   000004   8B83         MOV     DPH,R3
   \   000006   A3           INC     DPTR
   \   000007   A3           INC     DPTR
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   A3           INC     DPTR
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F9           MOV     R1,A
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine8:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_59:
   \   000004   A3           INC     DPTR
   \   000005   E0           MOVX    A,@DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine7:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_56:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine6:
   \   000000   12....       LCALL   ?Subroutine25 & 0xFFFF
   \                     ??CrossCallReturnLabel_55:
   \   000003   E0           MOVX    A,@DPTR
   \   000004   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine25:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_60:
   \   000004   A3           INC     DPTR
   \   000005   A3           INC     DPTR
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine5:
   \   000000   12....       LCALL   ?Subroutine26 & 0xFFFF
   \                     ??CrossCallReturnLabel_57:
   \   000003   A3           INC     DPTR
   \   000004   A3           INC     DPTR
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine26:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   8882         MOV     DPL,R0
   \   000003   8983         MOV     DPH,R1
   \   000005   12....       LCALL   ?Subroutine30 & 0xFFFF
   \                     ??CrossCallReturnLabel_63:
   \   000008   A3           INC     DPTR
   \   000009   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   F582         MOV     DPL,A
   \   000008   EB           MOV     A,R3
   \   000009   3400         ADDC    A,#0x0
   \   00000B   F583         MOV     DPH,A
   \   00000D   12....       LCALL   ?Subroutine30 & 0xFFFF
   \                     ??CrossCallReturnLabel_62:
   \   000010   E0           MOVX    A,@DPTR
   \   000011   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine30:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F583         MOV     DPH,A
   \   000006   8882         MOV     DPL,R0
   \   000008   A3           INC     DPTR
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   7401         MOV     A,#0x1
   \   000002   F0           MOVX    @DPTR,A
   \   000003   EA           MOV     A,R2
   \   000004   2422         ADD     A,#0x22
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   3400         ADDC    A,#0x0
   \   00000A   F9           MOV     R1,A
   \   00000B   12....       LCALL   ?Subroutine27 & 0xFFFF
   \                     ??CrossCallReturnLabel_58:
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine27:
   \   000000   12....       LCALL   ?Subroutine29 & 0xFFFF
   \                     ??CrossCallReturnLabel_61:
   \   000003   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine29:
   \   000000   8882         MOV     DPL,R0
   \   000002   8983         MOV     DPH,R1
   \   000004   E0           MOVX    A,@DPTR
   \   000005   FA           MOV     R2,A
   \   000006   A3           INC     DPTR
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F583         MOV     DPH,A
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   A3           INC     DPTR
   \   00000D   A3           INC     DPTR
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    837          
    838          
    839          /*******************************************************************************
    840           * @fn      Smart_home_DeviceCheck
    841           *
    842           * @brief   check the device  status: online or offline.
    843           *          由宏定义Smart_home_DEVICE_CHECK_TIMER确定周期是2秒
    844           *
    845           * @param   none
    846           *
    847           * @return  none
    848           */
    849          /*3.24 这里的检测时常有点长 改为变量外提的方式加快处理速度*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    850          uint8 Device_check(DeviceInfo dev,uint8 count)
   \                     Device_check:
    851          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    852            if(dev.deviceStatus != DEVICE_ONLINE)    //设备离线
   \   000004   85..82       MOV     DPL,?XSP + 0
   \   000007   85..83       MOV     DPH,?XSP + 1
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6401         XRL     A,#0x1
   \   00000D   600C         JZ      ??Device_check_0
    853            {
    854              count++;
   \   00000F   09           INC     R1
    855            }
    856            if(dev.deviceStatus == DEVICE_ONLINE)    //设备在线
    857            {
    858              count = 0;
    859              dev.deviceStatus = 0;
    860            }
    861            if(count > DEVICE_HEART_BEAT)
   \   000010   E9           MOV     A,R1
   \   000011   C3           CLR     C
   \   000012   9404         SUBB    A,#0x4
   \   000014   4002         JC      ??Device_check_1
    862            {
    863              count = DEVICE_HEART_BEAT;
   \   000016   7903         MOV     R1,#0x3
    864              dev.deviceStatus = DEVICE_OFFLINE;
    865            }  
    866            return count;
   \                     ??Device_check_1:
   \   000018   02....       LJMP    ?Subroutine2 & 0xFFFF
   \                     ??Device_check_0:
   \   00001B   7900         MOV     R1,#0x0
   \   00001D   80F9         SJMP    ??Device_check_1
    867          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   D083         POP     DPH
   \   000002   D082         POP     DPL
   \   000004   02....       LJMP    ?BRET
    868          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    869          void Smart_home_Device_check(void)
   \                     Smart_home_Device_check:
    870          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    871            static uint8 humitCnt, tempLightCnt, rfIDCnt, gasFlameCnt, infraredCnt;
    872            static uint8 motorCnt, relayStatusCnt, soundVbCnt;
    873            humitCnt = Device_check(Humit,humitCnt);
   \   000004                ; Setup parameters for call to function Device_check
   \   000004   90....       MOV     DPTR,#Humit
   \   000007   7406         MOV     A,#0x6
   \   000009   12....       LCALL   ?PUSH_XSTACK8_X
   \   00000C   90....       MOV     DPTR,#??humitCnt
   \   00000F   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_22:
   \   000012   12....       LCALL   ?DEALLOC_XSTACK8
   \   000015   E9           MOV     A,R1
   \   000016   90....       MOV     DPTR,#??humitCnt
   \   000019   F0           MOVX    @DPTR,A
    874            tempLightCnt = Device_check(TempLight,tempLightCnt);
   \   00001A                ; Setup parameters for call to function Device_check
   \   00001A   90....       MOV     DPTR,#TempLight
   \   00001D   7406         MOV     A,#0x6
   \   00001F   12....       LCALL   ?PUSH_XSTACK8_X
   \   000022   90....       MOV     DPTR,#??tempLightCnt
   \   000025   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_23:
   \   000028   12....       LCALL   ?DEALLOC_XSTACK8
   \   00002B   E9           MOV     A,R1
   \   00002C   90....       MOV     DPTR,#??tempLightCnt
   \   00002F   F0           MOVX    @DPTR,A
    875            rfIDCnt = Device_check(RfID,rfIDCnt);
   \   000030                ; Setup parameters for call to function Device_check
   \   000030   90....       MOV     DPTR,#RfID
   \   000033   7406         MOV     A,#0x6
   \   000035   12....       LCALL   ?PUSH_XSTACK8_X
   \   000038   90....       MOV     DPTR,#??rfIDCnt
   \   00003B   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_24:
   \   00003E   12....       LCALL   ?DEALLOC_XSTACK8
   \   000041   E9           MOV     A,R1
   \   000042   90....       MOV     DPTR,#??rfIDCnt
   \   000045   F0           MOVX    @DPTR,A
    876            gasFlameCnt = Device_check(gasFlame,gasFlameCnt);
   \   000046                ; Setup parameters for call to function Device_check
   \   000046   90....       MOV     DPTR,#gasFlame
   \   000049   7406         MOV     A,#0x6
   \   00004B   12....       LCALL   ?PUSH_XSTACK8_X
   \   00004E   90....       MOV     DPTR,#??gasFlameCnt
   \   000051   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_25:
   \   000054   12....       LCALL   ?DEALLOC_XSTACK8
   \   000057   E9           MOV     A,R1
   \   000058   90....       MOV     DPTR,#??gasFlameCnt
   \   00005B   F0           MOVX    @DPTR,A
    877            infraredCnt = Device_check(infrared,infraredCnt);
   \   00005C                ; Setup parameters for call to function Device_check
   \   00005C   90....       MOV     DPTR,#infrared
   \   00005F   7406         MOV     A,#0x6
   \   000061   12....       LCALL   ?PUSH_XSTACK8_X
   \   000064   90....       MOV     DPTR,#??infraredCnt
   \   000067   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_26:
   \   00006A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006D   E9           MOV     A,R1
   \   00006E   90....       MOV     DPTR,#??infraredCnt
   \   000071   F0           MOVX    @DPTR,A
    878            motorCnt = Device_check(motor,motorCnt);
   \   000072                ; Setup parameters for call to function Device_check
   \   000072   90....       MOV     DPTR,#motor
   \   000075   7406         MOV     A,#0x6
   \   000077   12....       LCALL   ?PUSH_XSTACK8_X
   \   00007A   90....       MOV     DPTR,#??motorCnt
   \   00007D   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_27:
   \   000080   12....       LCALL   ?DEALLOC_XSTACK8
   \   000083   E9           MOV     A,R1
   \   000084   90....       MOV     DPTR,#??motorCnt
   \   000087   F0           MOVX    @DPTR,A
    879            relayStatusCnt = Device_check(relay,relayStatusCnt);
   \   000088                ; Setup parameters for call to function Device_check
   \   000088   90....       MOV     DPTR,#relay
   \   00008B   7406         MOV     A,#0x6
   \   00008D   12....       LCALL   ?PUSH_XSTACK8_X
   \   000090   90....       MOV     DPTR,#??relayStatusCnt
   \   000093   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_28:
   \   000096   12....       LCALL   ?DEALLOC_XSTACK8
   \   000099   E9           MOV     A,R1
   \   00009A   90....       MOV     DPTR,#??relayStatusCnt
   \   00009D   F0           MOVX    @DPTR,A
    880            soundVbCnt = Device_check(soundVb,soundVbCnt);
   \   00009E                ; Setup parameters for call to function Device_check
   \   00009E   90....       MOV     DPTR,#soundVb
   \   0000A1   7406         MOV     A,#0x6
   \   0000A3   12....       LCALL   ?PUSH_XSTACK8_X
   \   0000A6   90....       MOV     DPTR,#??soundVbCnt
   \   0000A9   12....       LCALL   ?Subroutine13 & 0xFFFF
   \                     ??CrossCallReturnLabel_29:
   \   0000AC   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000AF   E9           MOV     A,R1
   \   0000B0   90....       MOV     DPTR,#??soundVbCnt
   \   0000B3   F0           MOVX    @DPTR,A
    881            /*温湿度缓存 温度光照缓存 RFID 信息缓存 气体火焰缓存 
    882            人体红外 电机状态 继电器状态 声音震动*/
    883          }
   \   0000B4                REQUIRE ?Subroutine2
   \   0000B4                ; // Fall through to label ?Subroutine2

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine13:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F9           MOV     R1,A
   \   000002   12....       LCALL   ??Device_check?relay
   \   000005   7406         MOV     A,#0x6
   \   000007   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??humitCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??tempLightCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??rfIDCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??gasFlameCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??infraredCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??motorCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??relayStatusCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??soundVbCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    884          
    885          /*******************************************************************************
    886           * @fn      Smart_home_SendToRelayMSG
    887           *
    888           * @brief   Send control message to relay, if relay is in the network.
    889           *
    890           * @param   uint8 cmd: Relay control command
    891           *
    892           * @return  none
    893           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    894          void Smart_home_SendToRelayMSG( uint8 cmd )
   \                     Smart_home_SendToRelayMSG:
    895          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    896            uint8 tmp;
    897            
    898            // 只有设备在线时, 方发送控制命令
    899            if (relay.deviceStatus != DEVICE_OFFLINE)
   \   000007   90....       MOV     DPTR,#relay
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6402         XRL     A,#0x2
   \   00000D   6068         JZ      ??Smart_home_SendToRelayMSG_0
    900            {
    901              // put the sequence number in the message
    902              tmp = HI_UINT8( Smart_home_RelayTransID );
   \   00000F   90....       MOV     DPTR,#Smart_home_RelayTransID
   \   000012   12....       LCALL   ?Subroutine21 & 0xFFFF
    903              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \                     ??CrossCallReturnLabel_45:
   \   000015   5004         JNC     ??Smart_home_SendToRelayMSG_1
   \   000017   7830         MOV     R0,#0x30
   \   000019   8002         SJMP    ??Smart_home_SendToRelayMSG_2
   \                     ??Smart_home_SendToRelayMSG_1:
   \   00001B   7837         MOV     R0,#0x37
    904              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_SendToRelayMSG_2:
   \   00001D   E8           MOV     A,R0
   \   00001E   2A           ADD     A,R2
   \   00001F   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000022   F0           MOVX    @DPTR,A
    905              tmp = LO_UINT8( Smart_home_RelayTransID );
   \   000023   90....       MOV     DPTR,#Smart_home_RelayTransID
   \   000026   12....       LCALL   ?Subroutine28 & 0xFFFF
    906              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \                     ??CrossCallReturnLabel_68:
   \   000029   5004         JNC     ??Smart_home_SendToRelayMSG_3
   \   00002B   7830         MOV     R0,#0x30
   \   00002D   8002         SJMP    ??Smart_home_SendToRelayMSG_4
   \                     ??Smart_home_SendToRelayMSG_3:
   \   00002F   7837         MOV     R0,#0x37
    907              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_SendToRelayMSG_4:
   \   000031   E8           MOV     A,R0
   \   000032   2A           ADD     A,R2
   \   000033   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   000036   12....       LCALL   ?Subroutine11 & 0xFFFF
    908              
    909              // 发送给继电器的控制命令 
    910              Coordinator_Msg[4] = cmd;
    911              
    912              // Smart_home_epDesc.endPoint = Smart_home_CLUSTERID_RELAYCTLMSG; // 20201225
    913              tmp = AF_DataRequest( &Smart_home_DstRelayAddr,           \
    914                                    &Smart_home_epDesc,                 \
    915                                     Smart_home_CLUSTERID_RELAYCTRL,    \
    916                                     RELAYSTATUSMSG_LEN,                \
    917                                     Coordinator_Msg,                   \
    918                                    &Smart_home_RelayTransID,           \
    919                                     Smart_home_TX_OPTIONS,             \
    920                                     AF_DEFAULT_RADIUS );
    921            }
   \                     ??CrossCallReturnLabel_20:
   \   000039   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00003C   75....       MOV     ?V0 + 0,#Smart_home_RelayTransID & 0xff
   \   00003F   75....       MOV     ?V0 + 1,#(Smart_home_RelayTransID >> 8) & 0xff
   \   000042   78..         MOV     R0,#?V0 + 0
   \   000044   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000047   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   00004A   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   00004D   78..         MOV     R0,#?V0 + 0
   \   00004F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000052   75..05       MOV     ?V0 + 0,#0x5
   \   000055   75..00       MOV     ?V0 + 1,#0x0
   \   000058   78..         MOV     R0,#?V0 + 0
   \   00005A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005D   75..0A       MOV     ?V0 + 0,#0xa
   \   000060   78..         MOV     R0,#?V0 + 0
   \   000062   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000065   7920         MOV     R1,#0x20
   \   000067   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   000069   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   00006B   7A..         MOV     R2,#Smart_home_DstRelayAddr & 0xff
   \   00006D   7B..         MOV     R3,#(Smart_home_DstRelayAddr >> 8) & 0xff
   \   00006F   12....       LCALL   ??AF_DataRequest?relay
   \   000072   7409         MOV     A,#0x9
   \   000074   12....       LCALL   ?DEALLOC_XSTACK8
    922          }
   \                     ??Smart_home_SendToRelayMSG_0:
   \   000077   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine28:
   \   000000   E0           MOVX    A,@DPTR
   \   000001                REQUIRE ??Subroutine32_0
   \   000001                ; // Fall through to label ??Subroutine32_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine32_0:
   \   000000   540F         ANL     A,#0xf
   \   000002   FA           MOV     R2,A
   \   000003   C3           CLR     C
   \   000004   940A         SUBB    A,#0xa
   \   000006   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine21:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   C4           SWAP    A
   \   000002   12....       LCALL   ??Subroutine32_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_70:
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine11:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   EE           MOV     A,R6
   \   000002   A3           INC     DPTR
   \   000003   F0           MOVX    @DPTR,A
   \   000004                ; Setup parameters for call to function AF_DataRequest
   \   000004                ; Setup parameters for call to function AF_DataRequest
   \   000004   75..1E       MOV     ?V0 + 0,#0x1e
   \   000007   78..         MOV     R0,#?V0 + 0
   \   000009   22           RET
    923          
    924          /*******************************************************************************
    925           * @fn      Smart_home_SendToMotorMSG
    926           *
    927           * @brief   Send  message to motor.
    928           *
    929           * @param   uint8 cmd: motor command
    930           *
    931           * @return  none
    932           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    933          void Smart_home_SendToMotorMSG( uint8 cmd, uint8 speed )
   \                     Smart_home_SendToMotorMSG:
    934          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
   \   000007   EA           MOV     A,R2
   \   000008   FF           MOV     R7,A
    935            uint8 tmp;
    936            
    937            // 只有设备在线时, 方发送控制命令
    938            if (motor.deviceStatus != DEVICE_OFFLINE)
   \   000009   90....       MOV     DPTR,#motor
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   6402         XRL     A,#0x2
   \   00000F   606B         JZ      ??Smart_home_SendToMotorMSG_0
    939            {
    940              // put the sequence number in the message
    941              tmp = HI_UINT8( Smart_home_MotorTransID );
   \   000011   90....       MOV     DPTR,#Smart_home_MotorTransID
   \   000014   12....       LCALL   ?Subroutine21 & 0xFFFF
    942              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \                     ??CrossCallReturnLabel_46:
   \   000017   5004         JNC     ??Smart_home_SendToMotorMSG_1
   \   000019   7830         MOV     R0,#0x30
   \   00001B   8002         SJMP    ??Smart_home_SendToMotorMSG_2
   \                     ??Smart_home_SendToMotorMSG_1:
   \   00001D   7837         MOV     R0,#0x37
    943              Coordinator_Msg[2] = tmp;
   \                     ??Smart_home_SendToMotorMSG_2:
   \   00001F   E8           MOV     A,R0
   \   000020   2A           ADD     A,R2
   \   000021   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   000024   F0           MOVX    @DPTR,A
    944              tmp = LO_UINT8( Smart_home_MotorTransID );
   \   000025   90....       MOV     DPTR,#Smart_home_MotorTransID
   \   000028   12....       LCALL   ?Subroutine28 & 0xFFFF
    945              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
   \                     ??CrossCallReturnLabel_69:
   \   00002B   5004         JNC     ??Smart_home_SendToMotorMSG_3
   \   00002D   7830         MOV     R0,#0x30
   \   00002F   8002         SJMP    ??Smart_home_SendToMotorMSG_4
   \                     ??Smart_home_SendToMotorMSG_3:
   \   000031   7837         MOV     R0,#0x37
    946              Coordinator_Msg[3] = tmp;
   \                     ??Smart_home_SendToMotorMSG_4:
   \   000033   E8           MOV     A,R0
   \   000034   2A           ADD     A,R2
   \   000035   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   000038   F0           MOVX    @DPTR,A
    947              
    948              Coordinator_Msg[4] = speed; // 电机速度
   \   000039   EF           MOV     A,R7
   \   00003A   A3           INC     DPTR
   \   00003B   12....       LCALL   ?Subroutine11 & 0xFFFF
    949              Coordinator_Msg[5] = cmd;   // 电机控制状态(方向)
    950            
    951              //Smart_home_epDesc.endPoint = Smart_home_CLUSTERID_MOTORCTLMSG; // 20201225
    952              tmp = AF_DataRequest( &Smart_home_DstMotorAddr,            \
    953                                    &Smart_home_epDesc,                  \
    954                                     Smart_home_CLUSTERID_MOTORCTRL,     \
    955                                     MOTORSTATUSMSG_LEN,                 \
    956                                     Coordinator_Msg,                    \
    957                                    &Smart_home_MotorTransID,            \
    958                                     Smart_home_TX_OPTIONS,              \
    959                                     AF_DEFAULT_RADIUS );
    960            }
   \                     ??CrossCallReturnLabel_21:
   \   00003E   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000041   75....       MOV     ?V0 + 0,#Smart_home_MotorTransID & 0xff
   \   000044   75....       MOV     ?V0 + 1,#(Smart_home_MotorTransID >> 8) & 0xff
   \   000047   78..         MOV     R0,#?V0 + 0
   \   000049   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00004C   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   00004F   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   000052   78..         MOV     R0,#?V0 + 0
   \   000054   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000057   75..06       MOV     ?V0 + 0,#0x6
   \   00005A   75..00       MOV     ?V0 + 1,#0x0
   \   00005D   78..         MOV     R0,#?V0 + 0
   \   00005F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000062   75..0B       MOV     ?V0 + 0,#0xb
   \   000065   78..         MOV     R0,#?V0 + 0
   \   000067   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006A   7920         MOV     R1,#0x20
   \   00006C   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   00006E   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   000070   7A..         MOV     R2,#Smart_home_DstMotorAddr & 0xff
   \   000072   7B..         MOV     R3,#(Smart_home_DstMotorAddr >> 8) & 0xff
   \   000074   12....       LCALL   ??AF_DataRequest?relay
   \   000077   7409         MOV     A,#0x9
   \   000079   12....       LCALL   ?DEALLOC_XSTACK8
    961          }
   \                     ??Smart_home_SendToMotorMSG_0:
   \   00007C                REQUIRE ?Subroutine1
   \   00007C                ; // Fall through to label ?Subroutine1
    962          
    963          /*******************************************************************************
    964           * @fn      TransmitAPP_CallBack
    965           *
    966           * @brief   Send data OTA.
    967           *
    968           * @param   port - UART port.
    969           * @param   event - the UART port event flag.
    970           *
    971           * @return  none
    972           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    973          void TransmitAPP_CallBack(uint8 port, uint8 event)
   \                     TransmitAPP_CallBack:
    974          { 
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    975          }
   \   000000   02....       LJMP    ?BRET
    976          
    977          /*******************************************************************************
    978          *******************************************************************************/
    979          /*********************************************************************
    980           * @fn      Smart_home_Display
    981           *
    982           * @brief   屏幕回显函数，定义了内容如何显示.
    983           *
    984           * @param   port - UART port.
    985           * @param   event - the UART port event flag.
    986           *
    987           * @return  none
    988           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    989          static void Smart_home_Display(void)
   \                     Smart_home_Display:
    990          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    991          #if defined LCD_SUPPORTED
    992            static uint8 percent;
    993            switch(Ctrlcase)
   \   000005   90....       MOV     DPTR,#Ctrlcase
   \   000008   E0           MOVX    A,@DPTR
   \   000009   14           DEC     A
   \   00000A   7003         JNZ     $+5
   \   00000C   02....       LJMP    ??Smart_home_Display_0 & 0xFFFF
   \   00000F   14           DEC     A
   \   000010   7003         JNZ     $+5
   \   000012   02....       LJMP    ??Smart_home_Display_1 & 0xFFFF
    994            {
    995              default:    
    996              case 0:
    997                HalLcdWriteString( "      Menu      ", HAL_LCD_LINE_1 );
   \   000015                ; Setup parameters for call to function HalLcdWriteString
   \   000015   7901         MOV     R1,#0x1
   \   000017   7A..         MOV     R2,#`?<Constant "      Menu      ">` & 0xff
   \   000019   7B..         MOV     R3,#(`?<Constant "      Menu      ">` >> 8) & 0xff
   \   00001B   12....       LCALL   ?Subroutine22 & 0xFFFF
    998                //HalLcdWriteString( "Flip use UP/DOWN", HAL_LCD_LINE_4 ); 
    999                //清除屏幕显示
   1000                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1001                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1002                
   1003                switch(LCD_Page)
   \                     ??CrossCallReturnLabel_47:
   \   00001E   90....       MOV     DPTR,#LCD_Page
   \   000021   E0           MOVX    A,@DPTR
   \   000022   14           DEC     A
   \   000023   7003         JNZ     $+5
   \   000025   02....       LJMP    ??Smart_home_Display_2 & 0xFFFF
   \   000028   14           DEC     A
   \   000029   7003         JNZ     $+5
   \   00002B   02....       LJMP    ??Smart_home_Display_3 & 0xFFFF
   \   00002E   14           DEC     A
   \   00002F   7003         JNZ     $+5
   \   000031   02....       LJMP    ??Smart_home_Display_4 & 0xFFFF
   1004                {
   1005                  default:
   1006                  case 0:
   1007                  { 
   1008                    //DeviceInfo* Devhum = &DeviceList[Humit];
   1009                    //DeviceInfo* DevSound = &DeviceList[soundVb];
   1010                    //第一页第二行显示温度
   1011                    //      第三行显示光照
   1012                    if(Humit.deviceStatus != DEVICE_OFFLINE)
   \   000034   90....       MOV     DPTR,#Humit
   \   000037   E0           MOVX    A,@DPTR
   \   000038   6402         XRL     A,#0x2
   \   00003A   6040         JZ      ??Smart_home_Display_5
   1013                    {    
   1014                        HalLcdWriteStringValueValue( "Hum:", Humit.data[0], 10, "% T_1:", Humit.data[1], 10, HAL_LCD_LINE_2 );
   \   00003C                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   00003C   75..02       MOV     ?V0 + 0,#0x2
   \   00003F   78..         MOV     R0,#?V0 + 0
   \   000041   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000044   75..0A       MOV     ?V0 + 0,#0xa
   \   000047   78..         MOV     R0,#?V0 + 0
   \   000049   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004C   90....       MOV     DPTR,#Humit + 2
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   F5..         MOV     ?V0 + 0,A
   \   000052   75..00       MOV     ?V0 + 1,#0x0
   \   000055   78..         MOV     R0,#?V0 + 0
   \   000057   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005A   75....       MOV     ?V0 + 0,#`?<Constant "% T_1:">` & 0xff
   \   00005D   75....       MOV     ?V0 + 1,#(`?<Constant "% T_1:">` >> 8) & 0xff
   \   000060   78..         MOV     R0,#?V0 + 0
   \   000062   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000065   790A         MOV     R1,#0xa
   \   000067   90....       MOV     DPTR,#Humit + 1
   \   00006A   E0           MOVX    A,@DPTR
   \   00006B   FC           MOV     R4,A
   \   00006C   7D00         MOV     R5,#0x0
   \   00006E   7A..         MOV     R2,#`?<Constant "Hum:">` & 0xff
   \   000070   7B..         MOV     R3,#(`?<Constant "Hum:">` >> 8) & 0xff
   \   000072   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000075   7406         MOV     A,#0x6
   \   000077   12....       LCALL   ?DEALLOC_XSTACK8
   \   00007A   8009         SJMP    ??Smart_home_Display_6
   1015                    }
   1016                    else
   1017                    {
   1018                        HalLcdWriteString( "Hum:OFF T_1:OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_5:
   \   00007C                ; Setup parameters for call to function HalLcdWriteString
   \   00007C   7902         MOV     R1,#0x2
   \   00007E   7A..         MOV     R2,#`?<Constant "Hum:OFF T_1:OFF">` & 0xff
   \   000080   7B..         MOV     R3,#(`?<Constant "Hum:OFF T_1:OFF">` >> 8) & 0xff
   \   000082   12....       LCALL   ??HalLcdWriteString?relay
   1019                    }
   1020                    
   1021                    
   1022                    if(soundVb.deviceStatus  != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_6:
   \   000085   90....       MOV     DPTR,#soundVb
   \   000088   E0           MOVX    A,@DPTR
   \   000089   6402         XRL     A,#0x2
   \   00008B   6014         JZ      ??Smart_home_Display_7
   1023                    {    
   1024                        if(soundVb.data[0] & 0x01 == 0x01) { HalLcdWriteString( "Sound: Voice", HAL_LCD_LINE_3 ); }
   \   00008D   A3           INC     DPTR
   \   00008E   E0           MOVX    A,@DPTR
   \   00008F   A2E0         MOV     C,0xE0 /* A   */.0
   \   000091   7903         MOV     R1,#0x3
   \   000093   5006         JNC     ??Smart_home_Display_8
   \   000095                ; Setup parameters for call to function HalLcdWriteString
   \   000095   7A..         MOV     R2,#`?<Constant "Sound: Voice">` & 0xff
   \   000097   7B..         MOV     R3,#(`?<Constant "Sound: Voice">` >> 8) & 0xff
   \   000099   800C         SJMP    ??Smart_home_Display_9
   1025                        else if(soundVb.data[0] & 0x02 == 0x02) { HalLcdWriteString( "Sound: Vibration", HAL_LCD_LINE_3 ); }
   1026                        else if(soundVb.data[0] & 0x03 == 0x03) { HalLcdWriteString( "Sound: All", HAL_LCD_LINE_3 ); }
   1027                        else {HalLcdWriteString( "Sound: None", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_8:
   \   00009B                ; Setup parameters for call to function HalLcdWriteString
   \   00009B   7A..         MOV     R2,#`?<Constant "Sound: None">` & 0xff
   \   00009D   7B..         MOV     R3,#(`?<Constant "Sound: None">` >> 8) & 0xff
   \   00009F   8006         SJMP    ??Smart_home_Display_9
   1028                    }
   1029                    else
   1030                    {
   1031                        HalLcdWriteString( "Sound:OFFLINE", HAL_LCD_LINE_3 ); 
   \                     ??Smart_home_Display_7:
   \   0000A1                ; Setup parameters for call to function HalLcdWriteString
   \   0000A1   7903         MOV     R1,#0x3
   \   0000A3   7A..         MOV     R2,#`?<Constant "Sound:OFFLINE">` & 0xff
   \   0000A5   7B..         MOV     R3,#(`?<Constant "Sound:OFFLINE">` >> 8) & 0xff
   \                     ??Smart_home_Display_9:
   \   0000A7   12....       LCALL   ??HalLcdWriteString?relay
   1032                    }
   1033                 
   1034                    //HalLcdWriteStringValue( "Sound:", SoundVb, 16, HAL_LCD_LINE_3 );
   1035                    
   1036                    
   1037                    //显示最下面的百分比条
   1038                    percent = (1 * 100) / LCD_PAGE_MAX;
   \   0000AA   90....       MOV     DPTR,#??percent
   \   0000AD   7419         MOV     A,#0x19
   \                     ??Smart_home_Display_10:
   \   0000AF   12....       LCALL   ?Subroutine10 & 0xFFFF
   1039                    HalLcdDisplayPercentBar("",percent);
   1040                    break;
   \                     ??CrossCallReturnLabel_18:
   \   0000B2   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1041                  }
   1042                  case 1:
   1043                  {
   1044                    //第二页只有光照
   1045                    //第一页第二行显示温度
   1046                    //      第三行显示光照
   1047                    //DeviceInfo* Devtmp = &DeviceList[TempLight];
   1048                    if(TempLight.deviceStatus  != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_2:
   \   0000B5   90....       MOV     DPTR,#TempLight
   \   0000B8   E0           MOVX    A,@DPTR
   \   0000B9   6402         XRL     A,#0x2
   \   0000BB   7003         JNZ     $+5
   \   0000BD   02....       LJMP    ??Smart_home_Display_12 & 0xFFFF
   1049                    {    
   1050                        static uint16 Light;
   1051                        static uint8 lightmp;
   1052                    
   1053          
   1054                        lightmp = TempLight.data[3];
   \   0000C0   90....       MOV     DPTR,#TempLight + 4
   \   0000C3   E0           MOVX    A,@DPTR
   \   0000C4   90....       MOV     DPTR,#??lightmp
   \   0000C7   F0           MOVX    @DPTR,A
   1055                        Light = (uint16)TempLight.data[4];
   \   0000C8   90....       MOV     DPTR,#TempLight + 5
   \   0000CB   E0           MOVX    A,@DPTR
   \   0000CC   90....       MOV     DPTR,#??Light
   \   0000CF   12....       LCALL   ??Subroutine33_0 & 0xFFFF
   1056                        memcpy(&Light,&lightmp,sizeof(lightmp));
   \                     ??CrossCallReturnLabel_74:
   \   0000D2                ; Setup parameters for call to function memcpy
   \   0000D2   75..01       MOV     ?V0 + 0,#0x1
   \   0000D5   F5..         MOV     ?V0 + 1,A
   \   0000D7   78..         MOV     R0,#?V0 + 0
   \   0000D9   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000DC   7C..         MOV     R4,#??lightmp & 0xff
   \   0000DE   7D..         MOV     R5,#(??lightmp >> 8) & 0xff
   \   0000E0   7A..         MOV     R2,#??Light & 0xff
   \   0000E2   7B..         MOV     R3,#(??Light >> 8) & 0xff
   \   0000E4   12....       LCALL   ??memcpy?relay
   \   0000E7   7402         MOV     A,#0x2
   \   0000E9   12....       LCALL   ?DEALLOC_XSTACK8
   1057                    
   1058                        HalLcdWriteStringValueValue( "Temper_2:", TempLight.data[0], 10, ".", TempLight.data[1], 10, HAL_LCD_LINE_2 );
   \   0000EC                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   0000EC   75..02       MOV     ?V0 + 0,#0x2
   \   0000EF   78..         MOV     R0,#?V0 + 0
   \   0000F1   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000F4   75..0A       MOV     ?V0 + 0,#0xa
   \   0000F7   78..         MOV     R0,#?V0 + 0
   \   0000F9   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000FC   90....       MOV     DPTR,#TempLight + 2
   \   0000FF   E0           MOVX    A,@DPTR
   \   000100   F5..         MOV     ?V0 + 0,A
   \   000102   78..         MOV     R0,#?V0 + 0
   \   000104   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000107   75....       MOV     ?V0 + 0,#`?<Constant ".">` & 0xff
   \   00010A   75....       MOV     ?V0 + 1,#(`?<Constant ".">` >> 8) & 0xff
   \   00010D   78..         MOV     R0,#?V0 + 0
   \   00010F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000112   790A         MOV     R1,#0xa
   \   000114   90....       MOV     DPTR,#TempLight + 1
   \   000117   E0           MOVX    A,@DPTR
   \   000118   FC           MOV     R4,A
   \   000119   7D00         MOV     R5,#0x0
   \   00011B   7A..         MOV     R2,#`?<Constant "Temper_2:">` & 0xff
   \   00011D   7B..         MOV     R3,#(`?<Constant "Temper_2:">` >> 8) & 0xff
   \   00011F   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   000122   7406         MOV     A,#0x6
   \   000124   12....       LCALL   ?DEALLOC_XSTACK8
   1059                        HalLcdWriteStringValue( "Light:", Light, 10, HAL_LCD_LINE_3 );
   \   000127                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000127   75..03       MOV     ?V0 + 0,#0x3
   \   00012A   78..         MOV     R0,#?V0 + 0
   \   00012C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00012F   790A         MOV     R1,#0xa
   \   000131   90....       MOV     DPTR,#??Light
   \   000134   E0           MOVX    A,@DPTR
   \   000135   FC           MOV     R4,A
   \   000136   A3           INC     DPTR
   \   000137   E0           MOVX    A,@DPTR
   \   000138   FD           MOV     R5,A
   \   000139   7A..         MOV     R2,#`?<Constant "Light:">` & 0xff
   \   00013B   7B..         MOV     R3,#(`?<Constant "Light:">` >> 8) & 0xff
   \   00013D   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   000140   7401         MOV     A,#0x1
   \   000142   12....       LCALL   ?DEALLOC_XSTACK8
   1060                        
   1061                        osal_msg_deallocate((uint8*)Light);
   \   000145                ; Setup parameters for call to function osal_msg_deallocate
   \   000145   90....       MOV     DPTR,#??Light
   \   000148   12....       LCALL   ?Subroutine15 & 0xFFFF
   1062                    }
   \                     ??CrossCallReturnLabel_34:
   \   00014B   8012         SJMP    ??Smart_home_Display_13
   1063                    else
   1064                    {
   1065                        HalLcdWriteString( "Temper_2:OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_12:
   \   00014D                ; Setup parameters for call to function HalLcdWriteString
   \   00014D   7902         MOV     R1,#0x2
   \   00014F   7A..         MOV     R2,#`?<Constant "Temper_2:OFF">` & 0xff
   \   000151   7B..         MOV     R3,#(`?<Constant "Temper_2:OFF">` >> 8) & 0xff
   \   000153   12....       LCALL   ??HalLcdWriteString?relay
   1066                        HalLcdWriteString( "Light:OFF", HAL_LCD_LINE_3 ); 
   \   000156                ; Setup parameters for call to function HalLcdWriteString
   \   000156   7903         MOV     R1,#0x3
   \   000158   7A..         MOV     R2,#`?<Constant "Light:OFF">` & 0xff
   \   00015A   7B..         MOV     R3,#(`?<Constant "Light:OFF">` >> 8) & 0xff
   \   00015C   12....       LCALL   ??HalLcdWriteString?relay
   1067                    }
   1068                    
   1069                    //显示最下面的百分比条
   1070                    percent = (2 * 100) / LCD_PAGE_MAX;
   \                     ??Smart_home_Display_13:
   \   00015F   90....       MOV     DPTR,#??percent
   \   000162   7432         MOV     A,#0x32
   \   000164   02....       LJMP    ??Smart_home_Display_10 & 0xFFFF
   1071                    HalLcdDisplayPercentBar("",percent);
   1072                    break;
   1073                    
   1074                    
   1075                  }
   1076                  
   1077                case 2:
   1078                {
   1079                    static uint16 Data1;
   1080                    static uint16 Data2;
   1081                    //显示最下面的百分比条
   1082                    //DeviceInfo* rfid = &DeviceList[RfID];
   1083                    
   1084                    Data1 = ( RfID.data[1] << 8) | RfID.data[2];
   \                     ??Smart_home_Display_3:
   \   000167   90....       MOV     DPTR,#RfID + 2
   \   00016A   E0           MOVX    A,@DPTR
   \   00016B   F9           MOV     R1,A
   \   00016C   A3           INC     DPTR
   \   00016D   E0           MOVX    A,@DPTR
   \   00016E   90....       MOV     DPTR,#??Data1
   \   000171   F0           MOVX    @DPTR,A
   \   000172   A3           INC     DPTR
   \   000173   E9           MOV     A,R1
   \   000174   F0           MOVX    @DPTR,A
   1085                    Data2 = ( RfID.data[3] << 8) | RfID.data[4];
   \   000175   90....       MOV     DPTR,#RfID + 4
   \   000178   E0           MOVX    A,@DPTR
   \   000179   F9           MOV     R1,A
   \   00017A   A3           INC     DPTR
   \   00017B   E0           MOVX    A,@DPTR
   \   00017C   90....       MOV     DPTR,#??Data2
   \   00017F   F0           MOVX    @DPTR,A
   \   000180   A3           INC     DPTR
   \   000181   E9           MOV     A,R1
   \   000182   F0           MOVX    @DPTR,A
   1086                    
   1087                    switch(RfID.data[0])
   \   000183   90....       MOV     DPTR,#RfID + 1
   \   000186   E0           MOVX    A,@DPTR
   \   000187   14           DEC     A
   \   000188   600E         JZ      ??Smart_home_Display_14
   \   00018A   14           DEC     A
   \   00018B   6013         JZ      ??Smart_home_Display_15
   \   00018D   14           DEC     A
   \   00018E   6018         JZ      ??Smart_home_Display_16
   \   000190   14           DEC     A
   \   000191   601D         JZ      ??Smart_home_Display_17
   \   000193   14           DEC     A
   \   000194   6022         JZ      ??Smart_home_Display_18
   \   000196   8028         SJMP    ??Smart_home_Display_19
   1088                    {
   1089                    case 0x01:
   1090                      HalLcdWriteString( "MFOne-S50", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_14:
   \   000198                ; Setup parameters for call to function HalLcdWriteString
   \   000198   7902         MOV     R1,#0x2
   \   00019A   7A..         MOV     R2,#`?<Constant "MFOne-S50">` & 0xff
   \   00019C   7B..         MOV     R3,#(`?<Constant "MFOne-S50">` >> 8) & 0xff
   \   00019E   8026         SJMP    ??Smart_home_Display_20
   1091                      break;
   1092                    case 0x02:
   1093                      HalLcdWriteString( "MFOne-S70", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_15:
   \   0001A0                ; Setup parameters for call to function HalLcdWriteString
   \   0001A0   7902         MOV     R1,#0x2
   \   0001A2   7A..         MOV     R2,#`?<Constant "MFOne-S70">` & 0xff
   \   0001A4   7B..         MOV     R3,#(`?<Constant "MFOne-S70">` >> 8) & 0xff
   \   0001A6   801E         SJMP    ??Smart_home_Display_20
   1094                      break;
   1095                    case 0x03:
   1096                      HalLcdWriteString( "MF-UltraLight", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_16:
   \   0001A8                ; Setup parameters for call to function HalLcdWriteString
   \   0001A8   7902         MOV     R1,#0x2
   \   0001AA   7A..         MOV     R2,#`?<Constant "MF-UltraLight">` & 0xff
   \   0001AC   7B..         MOV     R3,#(`?<Constant "MF-UltraLight">` >> 8) & 0xff
   \   0001AE   8016         SJMP    ??Smart_home_Display_20
   1097                      break;
   1098                    case 0x04:
   1099                      HalLcdWriteString( "MF-Pro", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_17:
   \   0001B0                ; Setup parameters for call to function HalLcdWriteString
   \   0001B0   7902         MOV     R1,#0x2
   \   0001B2   7A..         MOV     R2,#`?<Constant "MF-Pro">` & 0xff
   \   0001B4   7B..         MOV     R3,#(`?<Constant "MF-Pro">` >> 8) & 0xff
   \   0001B6   800E         SJMP    ??Smart_home_Display_20
   1100                      break;
   1101                    case 0x05:
   1102                      HalLcdWriteString( "MF-DesFire", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_18:
   \   0001B8                ; Setup parameters for call to function HalLcdWriteString
   \   0001B8   7902         MOV     R1,#0x2
   \   0001BA   7A..         MOV     R2,#`?<Constant "MF-DesFire">` & 0xff
   \   0001BC   7B..         MOV     R3,#(`?<Constant "MF-DesFire">` >> 8) & 0xff
   \   0001BE   8006         SJMP    ??Smart_home_Display_20
   1103                      break;
   1104                      
   1105                    default:
   1106                      HalLcdWriteString( "No Card", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_19:
   \   0001C0                ; Setup parameters for call to function HalLcdWriteString
   \   0001C0   7902         MOV     R1,#0x2
   \   0001C2   7A..         MOV     R2,#`?<Constant "No Card">` & 0xff
   \   0001C4   7B..         MOV     R3,#(`?<Constant "No Card">` >> 8) & 0xff
   1107                      break;
   1108                    }
   \                     ??Smart_home_Display_20:
   \   0001C6   12....       LCALL   ?Subroutine24 & 0xFFFF
   1109                    
   1110                    HalLcdWriteStringValueValue( "ID: ", Data1, 16, "-", Data2, 16, HAL_LCD_LINE_3 );
   \                     ??CrossCallReturnLabel_52:
   \   0001C9   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001CC   75..10       MOV     ?V0 + 0,#0x10
   \   0001CF   78..         MOV     R0,#?V0 + 0
   \   0001D1   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001D4   90....       MOV     DPTR,#??Data2
   \   0001D7   12....       LCALL   ?PUSH_XSTACK8_X_TWO
   \   0001DA   75....       MOV     ?V0 + 0,#`?<Constant "-">` & 0xff
   \   0001DD   75....       MOV     ?V0 + 1,#(`?<Constant "-">` >> 8) & 0xff
   \   0001E0   78..         MOV     R0,#?V0 + 0
   \   0001E2   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001E5   7910         MOV     R1,#0x10
   \   0001E7   90....       MOV     DPTR,#??Data1
   \   0001EA   E0           MOVX    A,@DPTR
   \   0001EB   FC           MOV     R4,A
   \   0001EC   A3           INC     DPTR
   \   0001ED   E0           MOVX    A,@DPTR
   \   0001EE   FD           MOV     R5,A
   \   0001EF   7A..         MOV     R2,#`?<Constant "ID: ">` & 0xff
   \   0001F1   7B..         MOV     R3,#(`?<Constant "ID: ">` >> 8) & 0xff
   \   0001F3   12....       LCALL   ??HalLcdWriteStringValueValue?relay
   \   0001F6   7406         MOV     A,#0x6
   \   0001F8   12....       LCALL   ?DEALLOC_XSTACK8
   1111                    
   1112                    percent = (3 * 100) / LCD_PAGE_MAX;
   \   0001FB   90....       MOV     DPTR,#??percent
   \   0001FE   744B         MOV     A,#0x4b
   \   000200   12....       LCALL   ?Subroutine10 & 0xFFFF
   1113                    HalLcdDisplayPercentBar("",percent);
   1114                    
   1115                    osal_msg_deallocate((uint8*)Data1);
   \                     ??CrossCallReturnLabel_19:
   \   000203                ; Setup parameters for call to function osal_msg_deallocate
   \   000203   90....       MOV     DPTR,#??Data1
   \   000206   12....       LCALL   ?Subroutine15 & 0xFFFF
   1116                    osal_msg_deallocate((uint8*)Data2);
   \                     ??CrossCallReturnLabel_35:
   \   000209                ; Setup parameters for call to function osal_msg_deallocate
   \   000209   90....       MOV     DPTR,#??Data2
   \   00020C   12....       LCALL   ?Subroutine15 & 0xFFFF
   1117                    
   1118                    break;
   \                     ??CrossCallReturnLabel_36:
   \   00020F   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1119                }
   1120                
   1121                case 3:
   1122                {        
   1123                    //DeviceInfo* DevGas = &DeviceList[gasFlame];
   1124                    //DeviceInfo* DevInf = &DeviceList[infrared];         
   1125                    
   1126                    if(gasFlame.deviceStatus  != DEVICE_OFFLINE)
   \                     ??Smart_home_Display_4:
   \   000212   90....       MOV     DPTR,#gasFlame
   \   000215   E0           MOVX    A,@DPTR
   \   000216   6402         XRL     A,#0x2
   \   000218   6014         JZ      ??Smart_home_Display_21
   1127                    {    
   1128                        if(gasFlame.data[0] & 0x01 == 0x01) { HalLcdWriteString( "GasFlame: Flame", HAL_LCD_LINE_2 ); }         //0位是火焰
   \   00021A   A3           INC     DPTR
   \   00021B   E0           MOVX    A,@DPTR
   \   00021C   A2E0         MOV     C,0xE0 /* A   */.0
   \   00021E   7902         MOV     R1,#0x2
   \   000220   5006         JNC     ??Smart_home_Display_22
   \   000222                ; Setup parameters for call to function HalLcdWriteString
   \   000222   7A..         MOV     R2,#`?<Constant "GasFlame: Flame">` & 0xff
   \   000224   7B..         MOV     R3,#(`?<Constant "GasFlame: Flame">` >> 8) & 0xff
   \   000226   800C         SJMP    ??Smart_home_Display_23
   1129                        else if(gasFlame.data[0] & 0x02 == 0x02) { HalLcdWriteString( "GasFlame: Gas", HAL_LCD_LINE_2 ); }//1位是气体
   1130                        else if(gasFlame.data[0] & 0x03 == 0x03) { HalLcdWriteString( "GasFlame: All", HAL_LCD_LINE_2 ); }
   1131                        else {HalLcdWriteString( "GasFlame: None", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_22:
   \   000228                ; Setup parameters for call to function HalLcdWriteString
   \   000228   7A..         MOV     R2,#`?<Constant "GasFlame: None">` & 0xff
   \   00022A   7B..         MOV     R3,#(`?<Constant "GasFlame: None">` >> 8) & 0xff
   \   00022C   8006         SJMP    ??Smart_home_Display_23
   1132                    }
   1133                    else
   1134                    {
   1135                        HalLcdWriteString( "GasFlame: OFF", HAL_LCD_LINE_2 ); 
   \                     ??Smart_home_Display_21:
   \   00022E                ; Setup parameters for call to function HalLcdWriteString
   \   00022E   7902         MOV     R1,#0x2
   \   000230   7A..         MOV     R2,#`?<Constant "GasFlame: OFF">` & 0xff
   \   000232   7B..         MOV     R3,#(`?<Constant "GasFlame: OFF">` >> 8) & 0xff
   \                     ??Smart_home_Display_23:
   \   000234   12....       LCALL   ??HalLcdWriteString?relay
   1136                    }
   1137                    
   1138                    
   1139                    if(infrared.deviceStatus  != DEVICE_OFFLINE)
   \   000237   90....       MOV     DPTR,#infrared
   \   00023A   E0           MOVX    A,@DPTR
   \   00023B   6402         XRL     A,#0x2
   \   00023D   6014         JZ      ??Smart_home_Display_24
   1140                    {    
   1141                        if(infrared.data[0] == 0x01)
   \   00023F   A3           INC     DPTR
   \   000240   E0           MOVX    A,@DPTR
   \   000241   6401         XRL     A,#0x1
   \   000243   7903         MOV     R1,#0x3
   \   000245   7006         JNZ     ??Smart_home_Display_25
   1142                        {
   1143                          HalLcdWriteString("Infrared: Human", HAL_LCD_LINE_3 );
   \   000247                ; Setup parameters for call to function HalLcdWriteString
   \   000247   7A..         MOV     R2,#`?<Constant "Infrared: Human">` & 0xff
   \   000249   7B..         MOV     R3,#(`?<Constant "Infrared: Human">` >> 8) & 0xff
   \   00024B   800C         SJMP    ??Smart_home_Display_26
   1144                        }
   1145                        else{
   1146                          HalLcdWriteString("Infrared: NoHuman", HAL_LCD_LINE_3 );
   \                     ??Smart_home_Display_25:
   \   00024D                ; Setup parameters for call to function HalLcdWriteString
   \   00024D   7A..         MOV     R2,#`?<Constant "Infrared: NoHuman">` & 0xff
   \   00024F   7B..         MOV     R3,#(`?<Constant "Infrared: NoHuman">` >> 8) & 0xff
   \   000251   8006         SJMP    ??Smart_home_Display_26
   1147                        }
   1148                    }
   1149                    else
   1150                    {
   1151                        HalLcdWriteString( "Infrared: OFF", HAL_LCD_LINE_3 ); 
   \                     ??Smart_home_Display_24:
   \   000253                ; Setup parameters for call to function HalLcdWriteString
   \   000253   7903         MOV     R1,#0x3
   \   000255   7A..         MOV     R2,#`?<Constant "Infrared: OFF">` & 0xff
   \   000257   7B..         MOV     R3,#(`?<Constant "Infrared: OFF">` >> 8) & 0xff
   \                     ??Smart_home_Display_26:
   \   000259   12....       LCALL   ??HalLcdWriteString?relay
   1152                    }         
   1153          
   1154                    
   1155                    
   1156                    //显示最下面的百分比条
   1157                    percent = (4 * 100) / LCD_PAGE_MAX;
   \   00025C   90....       MOV     DPTR,#??percent
   \   00025F   7464         MOV     A,#0x64
   \   000261   02....       LJMP    ??Smart_home_Display_10 & 0xFFFF
   1158                    HalLcdDisplayPercentBar("",percent);
   1159                    break;
   1160                }
   1161                    
   1162              }
   1163                
   1164                break;
   1165              
   1166              case 1:
   1167                HalLcdWriteString( "Relay Contrling", HAL_LCD_LINE_4 ); 
   \                     ??Smart_home_Display_0:
   \   000264                ; Setup parameters for call to function HalLcdWriteString
   \   000264   7904         MOV     R1,#0x4
   \   000266   7A..         MOV     R2,#`?<Constant "Relay Contrling">` & 0xff
   \   000268   7B..         MOV     R3,#(`?<Constant "Relay Contrling">` >> 8) & 0xff
   \   00026A   12....       LCALL   ?Subroutine22 & 0xFFFF
   1168                //清除屏幕显示
   1169                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1170                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1171                //这里的deviceStatus 可能是0x00,所以会出现bug 这个0在Device检查时被设置 2.24
   1172                if(relay.deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_48:
   \   00026D   90....       MOV     DPTR,#relay
   \   000270   E0           MOVX    A,@DPTR
   \   000271   6402         XRL     A,#0x2
   \   000273   7901         MOV     R1,#0x1
   \   000275   700A         JNZ     ??Smart_home_Display_27
   1173                {
   1174                  HalLcdWriteString( "Relay Offline", HAL_LCD_LINE_1 );      
   \   000277                ; Setup parameters for call to function HalLcdWriteString
   \   000277   7A..         MOV     R2,#`?<Constant "Relay Offline">` & 0xff
   \   000279   7B..         MOV     R3,#(`?<Constant "Relay Offline">` >> 8) & 0xff
   \                     ??Smart_home_Display_28:
   \   00027B   12....       LCALL   ??HalLcdWriteString?relay
   \   00027E   02....       LJMP    ??Smart_home_Display_11 & 0xFFFF
   1175                }
   1176                else  //设备在线回显  设备在线可能是 0/1
   1177                {
   1178                  HalLcdWriteString( "Relay Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_27:
   \   000281                ; Setup parameters for call to function HalLcdWriteString
   \   000281   7A..         MOV     R2,#`?<Constant "Relay Online">` & 0xff
   \   000283   7B..         MOV     R3,#(`?<Constant "Relay Online">` >> 8) & 0xff
   \   000285   12....       LCALL   ??HalLcdWriteString?relay
   1179                  //继电器控制界面
   1180          
   1181                  if((relay.data[0]& 0x02) == 0x02) {HalLcdWriteString( "K1:ON", HAL_LCD_LINE_2 );}
   \   000288   90....       MOV     DPTR,#relay + 1
   \   00028B   E0           MOVX    A,@DPTR
   \   00028C   A2E1         MOV     C,0xE0 /* A   */.1
   \   00028E   5009         JNC     ??Smart_home_Display_29
   \   000290                ; Setup parameters for call to function HalLcdWriteString
   \   000290   7902         MOV     R1,#0x2
   \   000292   7A..         MOV     R2,#`?<Constant "K1:ON">` & 0xff
   \   000294   7B..         MOV     R3,#(`?<Constant "K1:ON">` >> 8) & 0xff
   \   000296   12....       LCALL   ??HalLcdWriteString?relay
   1182                  if((relay.data[0] & 0x01) == 0x01) {HalLcdWriteString( "K1:OFF", HAL_LCD_LINE_2 );}
   \                     ??Smart_home_Display_29:
   \   000299   90....       MOV     DPTR,#relay + 1
   \   00029C   E0           MOVX    A,@DPTR
   \   00029D   A2E0         MOV     C,0xE0 /* A   */.0
   \   00029F   5009         JNC     ??Smart_home_Display_30
   \   0002A1                ; Setup parameters for call to function HalLcdWriteString
   \   0002A1   7902         MOV     R1,#0x2
   \   0002A3   7A..         MOV     R2,#`?<Constant "K1:OFF">` & 0xff
   \   0002A5   7B..         MOV     R3,#(`?<Constant "K1:OFF">` >> 8) & 0xff
   \   0002A7   12....       LCALL   ??HalLcdWriteString?relay
   1183                  if((relay.data[0] & 0x20) == 0x20) {HalLcdWriteString( "K2:ON", HAL_LCD_LINE_3 );}
   \                     ??Smart_home_Display_30:
   \   0002AA   90....       MOV     DPTR,#relay + 1
   \   0002AD   E0           MOVX    A,@DPTR
   \   0002AE   A2E5         MOV     C,0xE0 /* A   */.5
   \   0002B0   5009         JNC     ??Smart_home_Display_31
   \   0002B2                ; Setup parameters for call to function HalLcdWriteString
   \   0002B2   7903         MOV     R1,#0x3
   \   0002B4   7A..         MOV     R2,#`?<Constant "K2:ON">` & 0xff
   \   0002B6   7B..         MOV     R3,#(`?<Constant "K2:ON">` >> 8) & 0xff
   \   0002B8   12....       LCALL   ??HalLcdWriteString?relay
   1184                  if((relay.data[0] & 0x10) == 0x10) {HalLcdWriteString( "K2:OFF", HAL_LCD_LINE_3 );}      
   \                     ??Smart_home_Display_31:
   \   0002BB   90....       MOV     DPTR,#relay + 1
   \   0002BE   E0           MOVX    A,@DPTR
   \   0002BF   A2E4         MOV     C,0xE0 /* A   */.4
   \   0002C1   5062         JNC     ??Smart_home_Display_11
   \   0002C3                ; Setup parameters for call to function HalLcdWriteString
   \   0002C3   7903         MOV     R1,#0x3
   \   0002C5   7A..         MOV     R2,#`?<Constant "K2:OFF">` & 0xff
   \   0002C7   7B..         MOV     R3,#(`?<Constant "K2:OFF">` >> 8) & 0xff
   \   0002C9   80B0         SJMP    ??Smart_home_Display_28
   1185                }
   1186          
   1187                break;
   1188              
   1189              case 2:
   1190                HalLcdWriteString( "Motor Contrling", HAL_LCD_LINE_4 );
   \                     ??Smart_home_Display_1:
   \   0002CB                ; Setup parameters for call to function HalLcdWriteString
   \   0002CB   7904         MOV     R1,#0x4
   \   0002CD   7A..         MOV     R2,#`?<Constant "Motor Contrling">` & 0xff
   \   0002CF   7B..         MOV     R3,#(`?<Constant "Motor Contrling">` >> 8) & 0xff
   \   0002D1   12....       LCALL   ?Subroutine22 & 0xFFFF
   1191                //清除屏幕显示
   1192                HalLcdWriteString( " ", HAL_LCD_LINE_2 ); 
   1193                HalLcdWriteString( " ", HAL_LCD_LINE_3 );
   1194                if(motor.deviceStatus == DEVICE_OFFLINE)
   \                     ??CrossCallReturnLabel_49:
   \   0002D4   90....       MOV     DPTR,#motor
   \   0002D7   E0           MOVX    A,@DPTR
   \   0002D8   6402         XRL     A,#0x2
   \   0002DA   7901         MOV     R1,#0x1
   \   0002DC   7006         JNZ     ??Smart_home_Display_32
   1195                {
   1196                  HalLcdWriteString( "Motor Offline", HAL_LCD_LINE_1 );      
   \   0002DE                ; Setup parameters for call to function HalLcdWriteString
   \   0002DE   7A..         MOV     R2,#`?<Constant "Motor Offline">` & 0xff
   \   0002E0   7B..         MOV     R3,#(`?<Constant "Motor Offline">` >> 8) & 0xff
   \   0002E2   8097         SJMP    ??Smart_home_Display_28
   1197                }
   1198                else  //设备在线回显  设备在线可能是 0/1
   1199                {
   1200                  HalLcdWriteString( "Motor Online", HAL_LCD_LINE_1 ); 
   \                     ??Smart_home_Display_32:
   \   0002E4                ; Setup parameters for call to function HalLcdWriteString
   \   0002E4   7A..         MOV     R2,#`?<Constant "Motor Online">` & 0xff
   \   0002E6   7B..         MOV     R3,#(`?<Constant "Motor Online">` >> 8) & 0xff
   \   0002E8   12....       LCALL   ??HalLcdWriteString?relay
   1201                  //电机控制界面
   1202                  switch(motor.data[1])
   \   0002EB   90....       MOV     DPTR,#motor + 2
   \   0002EE   E0           MOVX    A,@DPTR
   \   0002EF   24FE         ADD     A,#-0x2
   \   0002F1   600B         JZ      ??Smart_home_Display_33
   \   0002F3   14           DEC     A
   \   0002F4   7902         MOV     R1,#0x2
   \   0002F6   600E         JZ      ??Smart_home_Display_34
   1203                  {
   1204                  default:
   1205                  case 1:
   1206                    HalLcdWriteString( "Status: STOP", HAL_LCD_LINE_2 );
   \   0002F8                ; Setup parameters for call to function HalLcdWriteString
   \   0002F8   7A..         MOV     R2,#`?<Constant "Status: STOP">` & 0xff
   \   0002FA   7B..         MOV     R3,#(`?<Constant "Status: STOP">` >> 8) & 0xff
   \   0002FC   800C         SJMP    ??Smart_home_Display_35
   1207                    break;
   1208                  case 2:
   1209                    HalLcdWriteString( "Status: FORWARD", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_33:
   \   0002FE                ; Setup parameters for call to function HalLcdWriteString
   \   0002FE   7902         MOV     R1,#0x2
   \   000300   7A..         MOV     R2,#`?<Constant "Status: FORWARD">` & 0xff
   \   000302   7B..         MOV     R3,#(`?<Constant "Status: FORWARD">` >> 8) & 0xff
   \   000304   8004         SJMP    ??Smart_home_Display_35
   1210                    break;
   1211                  case 3:
   1212                    HalLcdWriteString( "Status: BACKWARD", HAL_LCD_LINE_2 );
   \                     ??Smart_home_Display_34:
   \   000306                ; Setup parameters for call to function HalLcdWriteString
   \   000306   7A..         MOV     R2,#`?<Constant "Status: BACKWARD">` & 0xff
   \   000308   7B..         MOV     R3,#(`?<Constant "Status: BACKWARD">` >> 8) & 0xff
   1213                    break;
   1214                  }
   1215                  
   1216                  HalLcdWriteStringValue( "Speed:", motor.data[0], 10, HAL_LCD_LINE_3 );
   1217                
   1218                }
   1219            }
   \                     ??Smart_home_Display_35:
   \   00030A   12....       LCALL   ?Subroutine24 & 0xFFFF
   \                     ??CrossCallReturnLabel_53:
   \   00030D   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000310   790A         MOV     R1,#0xa
   \   000312   90....       MOV     DPTR,#motor + 1
   \   000315   E0           MOVX    A,@DPTR
   \   000316   FC           MOV     R4,A
   \   000317   7D00         MOV     R5,#0x0
   \   000319   7A..         MOV     R2,#`?<Constant "Speed:">` & 0xff
   \   00031B   7B..         MOV     R3,#(`?<Constant "Speed:">` >> 8) & 0xff
   \   00031D   12....       LCALL   ??HalLcdWriteStringValue?relay
   \   000320   7401         MOV     A,#0x1
   \   000322   12....       LCALL   ?DEALLOC_XSTACK8
   1220            
   1221          #endif // LCD_SUPPORTED  
   1222          }
   \                     ??Smart_home_Display_11:
   \   000325   02....       LJMP    ?Subroutine1 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine24:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteStringValueValue
   \   000003                ; Setup parameters for call to function HalLcdWriteStringValue
   \   000003   75..03       MOV     ?V0 + 0,#0x3
   \   000006   78..         MOV     R0,#?V0 + 0
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine22:
   \   000000   12....       LCALL   ??HalLcdWriteString?relay
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003                ; Setup parameters for call to function HalLcdWriteString
   \   000003   7902         MOV     R1,#0x2
   \   000005   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000007   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000009   12....       LCALL   ??HalLcdWriteString?relay
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C                ; Setup parameters for call to function HalLcdWriteString
   \   00000C   7903         MOV     R1,#0x3
   \   00000E   7A..         MOV     R2,#`?<Constant " ">` & 0xff
   \   000010   7B..         MOV     R3,#(`?<Constant " ">` >> 8) & 0xff
   \   000012   12....       LCALL   ??HalLcdWriteString?relay
   \   000015   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine15:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FA           MOV     R2,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FB           MOV     R3,A
   \   000005   12....       LCALL   ??osal_msg_deallocate?relay
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine10:
   \   000000   F0           MOVX    @DPTR,A
   \   000001                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   000001                ; Setup parameters for call to function HalLcdDisplayPercentBar
   \   000001   F9           MOV     R1,A
   \   000002   7A..         MOV     R2,#`?<Constant "">` & 0xff
   \   000004   7B..         MOV     R3,#(`?<Constant "">` >> 8) & 0xff
   \   000006   12....       LCALL   ??HalLcdDisplayPercentBar?relay
   \   000009   22           RET

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??percent:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Light:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??lightmp:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data1:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??Data2:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessZDOMsgs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessZDOMsgs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Motor_cmd?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Motor_cmd

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_MessageMSGCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Device_check?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Device_check

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Device_check?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Device_check

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_SendToRelayMSG?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_SendToRelayMSG

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_SendToMotorMSG?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_SendToMotorMSG

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??TransmitAPP_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    TransmitAPP_CallBack

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Display?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Display

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Smart_home">`:
   \   000000   536D6172     DB "Smart_home"
   \            745F686F
   \            6D6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor max Speed">`:
   \   000000   4D6F746F     DB "Motor max Speed"
   \            72206D61
   \            78205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor min Speed">`:
   \   000000   4D6F746F     DB "Motor min Speed"
   \            72206D69
   \            6E205370
   \            65656400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Allow networking">`:
   \   000000   416C6C6F     DB "Allow networking"
   \            77206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Ban   networking">`:
   \   000000   42616E20     DB "Ban   networking"
   \            20206E65
   \            74776F72
   \            6B696E67
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "      Menu      ">`:
   \   000000   20202020     DB "      Menu      "
   \            20204D65
   \            6E752020
   \            20202020
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant " ">`:
   \   000000   2000         DB " "

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hum:">`:
   \   000000   48756D3A     DB "Hum:"
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "% T_1:">`:
   \   000000   2520545F     DB "% T_1:"
   \            313A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Hum:OFF T_1:OFF">`:
   \   000000   48756D3A     DB "Hum:OFF T_1:OFF"
   \            4F464620
   \            545F313A
   \            4F464600

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound: Voice">`:
   \   000000   536F756E     DB "Sound: Voice"
   \            643A2056
   \            6F696365
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   536F756E     DB "Sound: Vibration"
   \            643A2056
   \            69627261
   \            74696F6E
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   536F756E     DB "Sound: All"
   \            643A2041
   \            6C6C00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound: None">`:
   \   000000   536F756E     DB "Sound: None"
   \            643A204E
   \            6F6E6500

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Sound:OFFLINE">`:
   \   000000   536F756E     DB "Sound:OFFLINE"
   \            643A4F46
   \            464C494E
   \            4500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "">`:
   \   000000   00           DB ""

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temper_2:">`:
   \   000000   54656D70     DB "Temper_2:"
   \            65725F32
   \            3A00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant ".">`:
   \   000000   2E00         DB "."

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Light:">`:
   \   000000   4C696768     DB "Light:"
   \            743A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Temper_2:OFF">`:
   \   000000   54656D70     DB "Temper_2:OFF"
   \            65725F32
   \            3A4F4646
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Light:OFF">`:
   \   000000   4C696768     DB "Light:OFF"
   \            743A4F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S50">`:
   \   000000   4D464F6E     DB "MFOne-S50"
   \            652D5335
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MFOne-S70">`:
   \   000000   4D464F6E     DB "MFOne-S70"
   \            652D5337
   \            3000    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-UltraLight">`:
   \   000000   4D462D55     DB "MF-UltraLight"
   \            6C747261
   \            4C696768
   \            7400    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-Pro">`:
   \   000000   4D462D50     DB "MF-Pro"
   \            726F00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "MF-DesFire">`:
   \   000000   4D462D44     DB "MF-DesFire"
   \            65734669
   \            726500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "No Card">`:
   \   000000   4E6F2043     DB "No Card"
   \            61726400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "ID: ">`:
   \   000000   49443A20     DB "ID: "
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "-">`:
   \   000000   2D00         DB "-"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: Flame">`:
   \   000000   47617346     DB "GasFlame: Flame"
   \            6C616D65
   \            3A20466C
   \            616D6500

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   47617346     DB "GasFlame: Gas"
   \            6C616D65
   \            3A204761
   \            7300    

   \                                 In  segment XDATA_ROM_C, align 1
   \   000000   47617346     DB "GasFlame: All"
   \            6C616D65
   \            3A20416C
   \            6C00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: None">`:
   \   000000   47617346     DB "GasFlame: None"
   \            6C616D65
   \            3A204E6F
   \            6E6500  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "GasFlame: OFF">`:
   \   000000   47617346     DB "GasFlame: OFF"
   \            6C616D65
   \            3A204F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: Human">`:
   \   000000   496E6672     DB "Infrared: Human"
   \            61726564
   \            3A204875
   \            6D616E00

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: NoHuman">`:
   \   000000   496E6672     DB "Infrared: NoHuman"
   \            61726564
   \            3A204E6F
   \            48756D61
   \            6E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Infrared: OFF">`:
   \   000000   496E6672     DB "Infrared: OFF"
   \            61726564
   \            3A204F46
   \            4600    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Contrling">`:
   \   000000   52656C61     DB "Relay Contrling"
   \            7920436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Offline">`:
   \   000000   52656C61     DB "Relay Offline"
   \            79204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Relay Online">`:
   \   000000   52656C61     DB "Relay Online"
   \            79204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:ON">`:
   \   000000   4B313A4F     DB "K1:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K1:OFF">`:
   \   000000   4B313A4F     DB "K1:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:ON">`:
   \   000000   4B323A4F     DB "K2:ON"
   \            4E00    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "K2:OFF">`:
   \   000000   4B323A4F     DB "K2:OFF"
   \            464600  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Contrling">`:
   \   000000   4D6F746F     DB "Motor Contrling"
   \            7220436F
   \            6E74726C
   \            696E6700

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Offline">`:
   \   000000   4D6F746F     DB "Motor Offline"
   \            72204F66
   \            666C696E
   \            6500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Motor Online">`:
   \   000000   4D6F746F     DB "Motor Online"
   \            72204F6E
   \            6C696E65
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: STOP">`:
   \   000000   53746174     DB "Status: STOP"
   \            75733A20
   \            53544F50
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: FORWARD">`:
   \   000000   53746174     DB "Status: FORWARD"
   \            75733A20
   \            464F5257
   \            41524400

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Status: BACKWARD">`:
   \   000000   53746174     DB "Status: BACKWARD"
   \            75733A20
   \            4241434B
   \            57415244
   \            00      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Speed:">`:
   \   000000   53706565     DB "Speed:"
   \            643A00  
   1223          

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Device_check                       2      0      6
     Smart_home_Device_check            2      0     18
       -> Device_check                  4      0     12
       -> Device_check                  4      0     12
       -> Device_check                  4      0     12
       -> Device_check                  4      0     12
       -> Device_check                  4      0     12
       -> Device_check                  4      0     12
       -> Device_check                  4      0     12
       -> Device_check                  4      0     12
     Smart_home_Display                 0      0     28
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> memcpy                        0      0     24
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdWriteStringValue        0      0     22
       -> osal_msg_deallocate           0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValueValue
                                        0      0     32
       -> HalLcdDisplayPercentBar       0      0     20
       -> osal_msg_deallocate           0      0     20
       -> osal_msg_deallocate           0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdDisplayPercentBar       0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteString             0      0     20
       -> HalLcdWriteStringValue        0      0     22
     Smart_home_HandleKeys              0      0     21
       -> Smart_home_SendToRelayMSG     0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Motor_cmd          0      0     18
       -> Smart_home_SendToRelayMSG     0      0     18
       -> HalLcdWriteString             0      0     18
       -> Smart_home_Motor_cmd          0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
       -> NLME_PermitJoiningRequest     0      0     18
       -> HalLedSet                     0      0     18
       -> HalLcdWriteString             0      0     18
     Smart_home_Init                    0      0     40
       -> HalUARTOpen                   0      0     80
       -> afRegister                    0      0     80
       -> RegisterForKeys               0      0     80
       -> HalLcdWriteString             0      0     80
       -> afDataReqMTU                  0      0     80
       -> ZDO_RegisterForZDOMsg         0      0     80
       -> ZDO_RegisterForZDOMsg         0      0     80
       -> osal_start_timerEx            0      0     80
       -> osal_start_timerEx            0      0     80
       -> NLME_PermitJoiningRequest     0      0     80
       -> HalLedSet                     0      0     80
     Smart_home_MessageMSGCB            0      0     22
     Smart_home_Motor_cmd               0      0     18
       -> Smart_home_SendToMotorMSG     0      0     18
     Smart_home_ProcessEvent            0      0     12
       -> osal_msg_receive              0      0     24
       -> Smart_home_MessageMSGCB       0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> Smart_home_HandleKeys         0      0     24
       -> Smart_home_Device_check       0      0     24
       -> osal_start_timerEx            0      0     24
       -> Smart_home_Display            0      0     24
       -> osal_start_timerEx            0      0     24
     Smart_home_ProcessZDOMsgs          0      0      0
     Smart_home_SendToMotorMSG          0      0     28
       -> AF_DataRequest                0      0     38
     Smart_home_SendToRelayMSG          0      0     28
       -> AF_DataRequest                0      0     38
     TransmitAPP_CallBack               0      0      0


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     Coordinator_Msg                    102
     Smart_home_InClusterList            18
     Smart_home_OutClusterList            6
     Smart_home_SimpleDesc               12
     Smart_home_epDesc                    6
     Ctrlcase                             1
     LCD_Page                             1
     Humit                                6
     TempLight                            6
     RfID                                 6
     gasFlame                             6
     infrared                             6
     motor                                6
     relay                                6
     soundVb                              6
     Smart_home_TaskID                    1
     Smart_home_RelayTransID              1
     Smart_home_MotorTransID              1
     Smart_home_DstAddr                  12
     Smart_home_DstRelayAddr             12
     Smart_home_DstMotorAddr             12
     Smart_home_MaxDataLength             2
     Smart_home_Init                    307
     ?Subroutine0                         5
     ?Subroutine16                        2
     ??Subroutine31_0                    11
     ?Subroutine23                       11
     ?Subroutine12                        2
     ??Subroutine33_0                     5
     Smart_home_ProcessEvent            172
     Smart_home_ProcessZDOMsgs            3
     Smart_home_Motor_cmd                56
     Smart_home_HandleKeys              304
     ?Subroutine20                       10
     ?Subroutine19                       10
     ?Subroutine18                       10
     ?Subroutine17                       10
     ?Subroutine14                       10
     MotorSpeed                           1
     NetWorkAllow                         1
     Relay1_on                            1
     Relay2_on                            1
     Smart_home_MessageMSGCB            237
     ?Subroutine9                        18
     ?Subroutine8                         7
     ?Subroutine7                         5
     ?Subroutine6                         5
     ?Subroutine25                        7
     ?Subroutine5                         6
     ?Subroutine26                       10
     ?Subroutine4                        18
     ?Subroutine30                       13
     ?Subroutine3                        16
     ?Subroutine27                        4
     ?Subroutine29                       17
     ?Subroutine1                         5
     Device_check                        31
     ?Subroutine2                         7
     Smart_home_Device_check            180
     ?Subroutine13                        8
     humitCnt                             1
     tempLightCnt                         1
     rfIDCnt                              1
     gasFlameCnt                          1
     infraredCnt                          1
     motorCnt                             1
     relayStatusCnt                       1
     soundVbCnt                           1
     Smart_home_SendToRelayMSG          122
     ?Subroutine28                        1
     ??Subroutine32_0                     7
     ?Subroutine21                        6
     ?Subroutine11                       10
     Smart_home_SendToMotorMSG          124
     TransmitAPP_CallBack                 3
     Smart_home_Display                 808
     ?Subroutine24                        9
     ?Subroutine22                       22
     ?Subroutine15                        9
     ?Subroutine10                       10
     percent                              1
     Light                                2
     lightmp                              1
     Data1                                2
     Data2                                2
     ??Smart_home_Init?relay              6
     ??Smart_home_ProcessEvent?relay      6
     ??Smart_home_ProcessZDOMsgs?relay    6
     ??Smart_home_Motor_cmd?relay         6
     ??Smart_home_HandleKeys?relay        6
     ??Smart_home_MessageMSGCB?relay      6
     ??Device_check?relay                 6
     ??Smart_home_Device_check?relay      6
     ??Smart_home_SendToRelayMSG?relay    6
     ??Smart_home_SendToMotorMSG?relay    6
     ??TransmitAPP_CallBack?relay         6
     ??Smart_home_Display?relay           6
     ?<Constant "Smart_home">            11
     ?<Constant "Motor max Speed">       16
     ?<Constant "Motor min Speed">       16
     ?<Constant "Allow networking">      17
     ?<Constant "Ban   networking">      17
     ?<Constant "      Menu      ">      17
     ?<Constant " ">                      2
     ?<Constant "Hum:">                   5
     ?<Constant "% T_1:">                 7
     ?<Constant "Hum:OFF T_1:OFF">       16
     ?<Constant "Sound: Voice">          13
     ?<Constant "Sound: Vibration">      17
     ?<Constant "Sound: All">            11
     ?<Constant "Sound: None">           12
     ?<Constant "Sound:OFFLINE">         14
     ?<Constant "">                       1
     ?<Constant "Temper_2:">             10
     ?<Constant ".">                      2
     ?<Constant "Light:">                 7
     ?<Constant "Temper_2:OFF">          13
     ?<Constant "Light:OFF">             10
     ?<Constant "MFOne-S50">             10
     ?<Constant "MFOne-S70">             10
     ?<Constant "MF-UltraLight">         14
     ?<Constant "MF-Pro">                 7
     ?<Constant "MF-DesFire">            11
     ?<Constant "No Card">                8
     ?<Constant "ID: ">                   5
     ?<Constant "-">                      2
     ?<Constant "GasFlame: Flame">       16
     ?<Constant "GasFlame: Gas">         14
     ?<Constant "GasFlame: All">         14
     ?<Constant "GasFlame: None">        15
     ?<Constant "GasFlame: OFF">         14
     ?<Constant "Infrared: Human">       16
     ?<Constant "Infrared: NoHuman">     18
     ?<Constant "Infrared: OFF">         14
     ?<Constant "Relay Contrling">       16
     ?<Constant "Relay Offline">         14
     ?<Constant "Relay Online">          13
     ?<Constant "K1:ON">                  6
     ?<Constant "K1:OFF">                 7
     ?<Constant "K2:ON">                  6
     ?<Constant "K2:OFF">                 7
     ?<Constant "Motor Contrling">       16
     ?<Constant "Motor Offline">         14
     ?<Constant "Motor Online">          13
     ?<Constant "Status: STOP">          13
     ?<Constant "Status: FORWARD">       16
     ?<Constant "Status: BACKWARD">      17
     ?<Constant "Speed:">                 7

 
 2 653 bytes in segment BANKED_CODE
    72 bytes in segment BANK_RELAYS
   623 bytes in segment XDATA_ROM_C
   219 bytes in segment XDATA_Z
 
 2 725 bytes of CODE  memory
   623 bytes of CONST memory
   219 bytes of XDATA memory

Errors: none
Warnings: none
