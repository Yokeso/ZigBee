###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         26/Mar/2021  11:26:36 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_homeSound.c              #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1001                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          omeSound.c -D HAL_UART=TRUE -D HAL_UART_TEST -D    #
#                          xPOWER_SAVING -lC D:\毕设\CC2530-smart_home\Projec #
#                          ts\zstack\Utilities\Smart_home\CC2530DB\EndDeviceS #
#                          BSoundVb\List\ -lA D:\毕设\CC2530-smart_home\Proje #
#                          cts\zstack\Utilities\Smart_home\CC2530DB\EndDevice #
#                          SBSoundVb\List\ --diag_suppress Pe001,Pa010 -o     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBSoundVb\Obj\ -e   #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530SB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBSoundVb\List\Smar #
#                          t_homeSound.lst                                    #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBSoundVb\Obj\Smart #
#                          _homeSound.r51                                     #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeSound.c
      1          /*******************************************************************
      2            文件名：Smart_homeTempLight.c
      3            作 者： 柳成林
      4            功 能： 声音检测功能节点，实现对声音响度的检测，收集声音震动信
      5                    息并发送给传感器
      6            更新日志(2021)
      7            3.22
      8            + 新增 设置输入输出簇
      9                   Smart_home_HandleKeys()      //按键控制
     10                   Smart_home_ProcessMSGCmd();  //输入控制函数 
     11            + 修改 Smart_home_ProcessEvt()      //事件处理函数
     12                   Smart_home_Init()            //初始化函数
     13                   Smart_home_Send()            //信息发送函数
     14          
     15          
     16          使用事件 
     17               SMART_HOME_SEND_MSG_EVT(发送数据)
     18               SMART_HOME_MATCHRSP_EVT(描述符匹配)
     19             
     20          *********************************************************************/
     21          /*********************************************************************
     22           * INCLUDES
     23           */
     24          
     25          #include "AF.h"
     26          #include "OnBoard.h"
     27          #include "OSAL_Tasks.h"
     28          #include "Smart_home.h"
     29          #include "ZDApp.h"
     30          #include "ZDObject.h"
     31          #include "ZDProfile.h"
     32          
     33          #include "hal_drivers.h"
     34          #include "hal_key.h"
     35          
     36          #include "hal_led.h"
     37          #include "hal_uart.h"
     38          #include "hal_soundvibration.h"
     39          
     40          /*********************************************************************
     41           * MACROS
     42           */
     43          //3.23  屏幕显示的小bug
     44          #define SMART_HOME_SEND_DELAY   500
     45          #define SMART_HOME_MATCH_DELAY  1000
     46          
     47          #define SMART_HOME_CHECK_DELAY     100
     48          /*********************************************************************
     49           * CONSTANTS
     50           */
     51          
     52          #if !defined( SERIAL_APP_PORT )
     53          #define SERIAL_APP_PORT  0
     54          #endif
     55          
     56          #if !defined( SERIAL_APP_BAUD )
     57          #define SERIAL_APP_BAUD  HAL_UART_BR_38400
     58          //#define SERIAL_APP_BAUD  HAL_UART_BR_115200
     59          #endif
     60          
     61          // When the Rx buf space is less than this threshold, invoke the Rx callback.
     62          #if !defined( SERIAL_APP_THRESH )
     63          #define SERIAL_APP_THRESH  64
     64          #endif
     65          
     66          #if !defined( SERIAL_APP_RX_SZ )
     67          #define SERIAL_APP_RX_SZ  128
     68          #endif
     69          
     70          #if !defined( SERIAL_APP_TX_SZ )
     71          #define SERIAL_APP_TX_SZ  128
     72          #endif
     73          
     74          // Millisecs of idle time after a byte is received before invoking Rx callback.
     75          #if !defined( SERIAL_APP_IDLE )
     76          #define SERIAL_APP_IDLE  6
     77          #endif
     78          
     79          // Loopback Rx bytes to Tx for throughput testing.
     80          #if !defined( SERIAL_APP_LOOPBACK )
     81          #define SERIAL_APP_LOOPBACK  FALSE
     82          #endif
     83          
     84          // This is the max byte count per OTA message.
     85          #if !defined( SERIAL_APP_TX_MAX )
     86          #define SERIAL_APP_TX_MAX  80
     87          #endif
     88          
     89          #define SERIAL_APP_RSP_CNT  4
     90          
     91          //3.21 设置输入输出簇
     92          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     93          const cId_t Smart_home_ClusterList_IN[1] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0600         DW 6
     94          {
     95            Smart_home_CLUSTERID_SOUNDVBMSG         //继电器接收的消息控制命令
     96          };
     97          

   \                                 In  segment XDATA_ROM_C, align 1
     98          const cId_t Smart_home_ClusterList_OUT[1] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0600         DW 6
     99          {
    100            Smart_home_CLUSTERID_SOUNDVBMSG         //继电器发送的状态信息
    101          };
    102          

   \                                 In  segment XDATA_ROM_C, align 1
    103          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    104          {
    105            Smart_home_ENDPOINT,              //  int   Endpoint;
    106            Smart_home_PROFID,                //  uint16 AppProfId[2];
    107            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    108            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    109            Smart_home_FLAGS,                 //  int   AppFlags:4;
    110            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    111            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    112            Smart_home_MAX_OUTCLUSTERS ,          //  byte  AppNumOutClusters;
    113            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    114          };
    115          

   \                                 In  segment XDATA_ROM_C, align 1
    116          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    117          {
    118            Smart_home_ENDPOINT,
    119           &Smart_home_TaskID,
    120            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    121            noLatencyReqs
    122          };
    123          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    124          afAddrType_t Coordinator_DstAddr;
   \                     Coordinator_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    125          
    126          /*********************************************************************
    127           * TYPEDEFS
    128           */
    129          
    130          /*********************************************************************
    131           * GLOBAL VARIABLES
    132           */
    133          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    134          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    135          byte Coordinator_Msg[SOUNDVBMSG_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 5
   \   000005                REQUIRE __INIT_XDATA_Z
    136          
    137          /*********************************************************************
    138           * EXTERNAL VARIABLES
    139           */
    140          
    141          /*********************************************************************
    142           * EXTERNAL FUNCTIONS
    143           */
    144          
    145          /*********************************************************************
    146           * LOCAL VARIABLES
    147           */
    148          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    149          static byte Smart_home_MsgID;  // This is the unique message ID (counter)
   \                     Smart_home_MsgID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    150          
    151          // 声音振动报警标志, soundVbBuf[0]:声音报警；soundVbBuf[1]:振动报警；

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    152          static uint8 soundVbBuf[2];
   \                     soundVbBuf:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z
    153          
    154          
    155          /*********************************************************************
    156           * LOCAL FUNCTIONS
    157           */
    158          
    159          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    160          static void Smart_home_HandleKeys( uint8 shift, uint8 keys );
    161          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    162          static void Smart_home_Send(void);
    163          static void Smart_home_Resp(void);
    164          static void Smart_home_CHECK_EVT(void);
    165          static void Smart_home_CallBack(uint8 port, uint8 event);
    166          
    167          /*********************************************************************
    168           * @fn      Smart_home_Init
    169           *
    170           * @brief   This is called during OSAL tasks' initialization.
    171           *
    172           * @param   task_id - the Task ID assigned by OSAL.
    173           *
    174           * @return  none
    175           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    176          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    177          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    178            halUARTCfg_t uartConfig;
    179          
    180            Smart_home_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#Smart_home_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    181            Smart_home_MsgID = 0;
   \   000010   90....       MOV     DPTR,#Smart_home_MsgID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    182          
    183            // Register the endpoint/interface description with the AF
    184            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   000015                ; Setup parameters for call to function afRegister
   \   000015   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   000017   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   000019   12....       LCALL   ??afRegister?relay
    185          
    186            // Register for all key events - This app will handle all key events
    187            RegisterForKeys( task_id );
   \   00001C                ; Setup parameters for call to function RegisterForKeys
   \   00001C   EE           MOV     A,R6
   \   00001D   F9           MOV     R1,A
   \   00001E   12....       LCALL   ??RegisterForKeys?relay
    188            
    189            //串口配置
    190            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000021   85..82       MOV     DPL,?XSP + 0
   \   000024   85..83       MOV     DPH,?XSP + 1
   \   000027   7401         MOV     A,#0x1
   \   000029   F0           MOVX    @DPTR,A
    191            uartConfig.baudRate             = SERIAL_APP_BAUD;
   \   00002A   12....       LCALL   ?XSTACK_DISP0_8
   \   00002D   7402         MOV     A,#0x2
   \   00002F   F0           MOVX    @DPTR,A
    192            uartConfig.flowControl          = TRUE;
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7401         MOV     A,#0x1
   \   000035   F0           MOVX    @DPTR,A
    193            uartConfig.flowControlThreshold = SERIAL_APP_THRESH; // 2x30 don't care - see uart driver.
   \   000036   7403         MOV     A,#0x3
   \   000038   12....       LCALL   ?XSTACK_DISP0_8
   \   00003B   7440         MOV     A,#0x40
   \   00003D   F0           MOVX    @DPTR,A
   \   00003E   A3           INC     DPTR
   \   00003F   E4           CLR     A
   \   000040   F0           MOVX    @DPTR,A
    194            uartConfig.rx.maxBufSize        = SERIAL_APP_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000041   740A         MOV     A,#0xa
   \   000043   12....       LCALL   ?XSTACK_DISP0_8
   \   000046   7480         MOV     A,#-0x80
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   E4           CLR     A
   \   00004B   F0           MOVX    @DPTR,A
    195            uartConfig.tx.maxBufSize        = SERIAL_APP_TX_SZ;  // 2x30 don't care - see uart driver.
   \   00004C   7412         MOV     A,#0x12
   \   00004E   12....       LCALL   ?XSTACK_DISP0_8
   \   000051   7480         MOV     A,#-0x80
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   E4           CLR     A
   \   000056   F0           MOVX    @DPTR,A
    196            uartConfig.idleTimeout          = SERIAL_APP_IDLE;   // 2x30 don't care - see uart driver.
   \   000057   7405         MOV     A,#0x5
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   7406         MOV     A,#0x6
   \   00005E   F0           MOVX    @DPTR,A
    197            uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
   \   00005F   7416         MOV     A,#0x16
   \   000061   12....       LCALL   ?XSTACK_DISP0_8
   \   000064   7401         MOV     A,#0x1
   \   000066   F0           MOVX    @DPTR,A
    198            uartConfig.callBackFunc         = Smart_home_CallBack;
   \   000067   741B         MOV     A,#0x1b
   \   000069   12....       LCALL   ?XSTACK_DISP0_8
   \   00006C   74..         MOV     A,#??Smart_home_CallBack?relay & 0xff
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F   A3           INC     DPTR
   \   000070   74..         MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
   \   000072   F0           MOVX    @DPTR,A
    199            HalUARTOpen (SERIAL_APP_PORT, &uartConfig);
   \   000073                ; Setup parameters for call to function HalUARTOpen
   \   000073   85..82       MOV     DPL,?XSP + 0
   \   000076   85..83       MOV     DPH,?XSP + 1
   \   000079   AA82         MOV     R2,DPL
   \   00007B   AB83         MOV     R3,DPH
   \   00007D   7900         MOV     R1,#0x0
   \   00007F   12....       LCALL   ??HalUARTOpen?relay
    200          
    201            //初始化向协调器发送的地址
    202            Coordinator_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000082   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   000085   E4           CLR     A
   \   000086   F0           MOVX    @DPTR,A
    203            Coordinator_DstAddr.endPoint = 0;
   \   000087   A3           INC     DPTR
   \   000088   F0           MOVX    @DPTR,A
    204            Coordinator_DstAddr.addr.shortAddr = 0;
   \   000089   90....       MOV     DPTR,#Coordinator_DstAddr
   \   00008C   F0           MOVX    @DPTR,A
   \   00008D   A3           INC     DPTR
   \   00008E   F0           MOVX    @DPTR,A
    205            
    206            
    207            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \   00008F                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00008F   7A20         MOV     R2,#0x20
   \   000091   7B80         MOV     R3,#-0x80
   \   000093   90....       MOV     DPTR,#Smart_home_TaskID
   \   000096   E0           MOVX    A,@DPTR
   \   000097   F9           MOV     R1,A
   \   000098   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    208            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   00009B                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00009B   7A06         MOV     R2,#0x6
   \   00009D   7B80         MOV     R3,#-0x80
   \   00009F   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000A2   E0           MOVX    A,@DPTR
   \   0000A3   F9           MOV     R1,A
   \   0000A4   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    209          
    210            //传感器初始化
    211            HalSoundVbInit();
   \   0000A7                ; Setup parameters for call to function HalSoundVbInit
   \   0000A7   12....       LCALL   ??HalSoundVbInit?relay
    212            
    213            // 打开定时器吗，进行信号检查
    214            osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_HALCHECK_EVT,
    215                                                         SMART_HOME_CHECK_DELAY );  
   \   0000AA                ; Setup parameters for call to function osal_start_reload_timer
   \   0000AA   7C64         MOV     R4,#0x64
   \   0000AC   7D00         MOV     R5,#0x0
   \   0000AE   7A40         MOV     R2,#0x40
   \   0000B0   12....       LCALL   ?Subroutine1 & 0xFFFF
    216            
    217            // 打开定时器，描述符匹配事件
    218            osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT, 
    219                                                         SMART_HOME_SEND_DELAY );
   \                     ??CrossCallReturnLabel_0:
   \   0000B3                ; Setup parameters for call to function osal_start_reload_timer
   \   0000B3   7CF4         MOV     R4,#-0xc
   \   0000B5   7D01         MOV     R5,#0x1
   \   0000B7   7A08         MOV     R2,#0x8
   \   0000B9   12....       LCALL   ?Subroutine1 & 0xFFFF
    220          }
   \                     ??CrossCallReturnLabel_1:
   \   0000BC   741D         MOV     A,#0x1d
   \   0000BE   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000C1   7F01         MOV     R7,#0x1
   \   0000C3   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#Smart_home_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_reload_timer?relay
   \   00000A   22           RET
    221          
    222          /*********************************************************************
    223           * @fn      Smart_home_ProcessEvent
    224           *
    225           * @brief   Generic Application Task event processor.
    226           *
    227           * @param   task_id  - The OSAL assigned task ID.
    228           * @param   events   - Bit map of events to process.
    229           *
    230           * @return  Event flags of all unprocessed events.
    231           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    232          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    233          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 9
   \   000005   74F7         MOV     A,#-0x9
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
    234            (void)task_id;  // Intentionally unreferenced parameter
    235            
    236            if ( events & SYS_EVENT_MSG )
   \   00000E   5480         ANL     A,#0x80
   \   000010   707F         JNZ     ??Smart_home_ProcessEvent_0
    237            {
    238              afIncomingMSGPacket_t *MSGpkt;
    239          
    240              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    241              {
    242                switch ( MSGpkt->hdr.event )
    243                {
    244                case ZDO_CB_MSG:
    245                  Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    246                  break;
    247                    
    248                case KEY_CHANGE:
    249                  Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    250                  break;
    251          
    252                case AF_INCOMING_MSG_CMD:
    253                  Smart_home_ProcessMSGCmd( MSGpkt );
    254                  break;
    255          
    256                default:
    257                  break;
    258                }
    259          
    260                osal_msg_deallocate( (uint8 *)MSGpkt );
    261              }
    262          
    263              return ( events ^ SYS_EVENT_MSG );
    264            }
    265            
    266            // 描述匹配事件
    267            if ( events & SMART_HOME_MATCHRSP_EVT )
   \   000012   EE           MOV     A,R6
   \   000013   5408         ANL     A,#0x8
   \   000015   7003         JNZ     $+5
   \   000017   02....       LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
    268            {
    269               zAddrType_t dstAddr;
    270               dstAddr.addrMode = AddrBroadcast;
   \   00001A   7408         MOV     A,#0x8
   \   00001C   12....       LCALL   ?XSTACK_DISP0_8
   \   00001F   740F         MOV     A,#0xf
   \   000021   F0           MOVX    @DPTR,A
    271               dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
   \   000022   85..82       MOV     DPL,?XSP + 0
   \   000025   85..83       MOV     DPH,?XSP + 1
   \   000028   74FF         MOV     A,#-0x1
   \   00002A   F0           MOVX    @DPTR,A
   \   00002B   A3           INC     DPTR
   \   00002C   F0           MOVX    @DPTR,A
    272               
    273               ZDP_MatchDescReq( &dstAddr, 
    274                                  NWK_BROADCAST_SHORTADDR,
    275                                  Smart_home_PROFID,
    276                                  Smart_home_MAX_OUTCLUSTERS, 
    277                                  (cId_t *)Smart_home_ClusterList_IN,
    278                                  Smart_home_MAX_INCLUSTERS, 
    279                                  (cId_t *)Smart_home_ClusterList_OUT,
    280                                  FALSE );
   \   00002D                ; Setup parameters for call to function ZDP_MatchDescReq
   \   00002D   75..00       MOV     ?V0 + 0,#0x0
   \   000030   78..         MOV     R0,#?V0 + 0
   \   000032   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000035   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_OUT & 0xff
   \   000038   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_OUT >> 8) & 0xff
   \   00003B   78..         MOV     R0,#?V0 + 0
   \   00003D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000040   75..09       MOV     ?V0 + 0,#0x9
   \   000043   78..         MOV     R0,#?V0 + 0
   \   000045   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000048   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_IN & 0xff
   \   00004B   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_IN >> 8) & 0xff
   \   00004E   78..         MOV     R0,#?V0 + 0
   \   000050   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000053   75..05       MOV     ?V0 + 0,#0x5
   \   000056   75..0F       MOV     ?V0 + 1,#0xf
   \   000059   78..         MOV     R0,#?V0 + 0
   \   00005B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005E   7903         MOV     R1,#0x3
   \   000060   7CFF         MOV     R4,#-0x1
   \   000062   7DFF         MOV     R5,#-0x1
   \   000064   7408         MOV     A,#0x8
   \   000066   12....       LCALL   ?XSTACK_DISP0_8
   \   000069   AA82         MOV     R2,DPL
   \   00006B   AB83         MOV     R3,DPH
   \   00006D   12....       LCALL   ??ZDP_MatchDescReq?relay
   \   000070   7408         MOV     A,#0x8
   \   000072   12....       LCALL   ?DEALLOC_XSTACK8
    281          
    282              // Return unprocessed events
    283              return (events ^ SMART_HOME_MATCHRSP_EVT);
   \   000075   EE           MOV     A,R6
   \   000076   6408         XRL     A,#0x8
   \                     ??Smart_home_ProcessEvent_2:
   \   000078   FA           MOV     R2,A
   \   000079   EF           MOV     A,R7
   \                     ??Smart_home_ProcessEvent_3:
   \   00007A   FB           MOV     R3,A
   \   00007B   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
    284            }
   \                     ??Smart_home_ProcessEvent_5:
   \   00007E   8A82         MOV     DPL,R2
   \   000080   8B83         MOV     DPH,R3
   \   000082   E0           MOVX    A,@DPTR
   \   000083   64D3         XRL     A,#0xd3
   \   000085   7003         JNZ     ??Smart_home_ProcessEvent_6
   \   000087                ; Setup parameters for call to function Smart_home_ProcessZDOMsgs
   \   000087   12....       LCALL   ??Smart_home_ProcessZDOMsgs?relay
   \                     ??Smart_home_ProcessEvent_6:
   \   00008A                ; Setup parameters for call to function osal_msg_deallocate
   \   00008A   AA..         MOV     R2,?V0 + 0
   \   00008C   AB..         MOV     R3,?V0 + 1
   \   00008E   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   000091                ; Setup parameters for call to function osal_msg_receive
   \   000091   90....       MOV     DPTR,#Smart_home_TaskID
   \   000094   E0           MOVX    A,@DPTR
   \   000095   F9           MOV     R1,A
   \   000096   12....       LCALL   ??osal_msg_receive?relay
   \   000099   8A..         MOV     ?V0 + 0,R2
   \   00009B   8B..         MOV     ?V0 + 1,R3
   \   00009D   EA           MOV     A,R2
   \   00009E   45..         ORL     A,?V0 + 1
   \   0000A0   70DC         JNZ     ??Smart_home_ProcessEvent_5
   \   0000A2   EE           MOV     A,R6
   \   0000A3   FA           MOV     R2,A
   \   0000A4   EF           MOV     A,R7
   \   0000A5   6480         XRL     A,#0x80
   \   0000A7   80D1         SJMP    ??Smart_home_ProcessEvent_3
    285          
    286            if ( events & SMART_HOME_SEND_MSG_EVT )
   \                     ??Smart_home_ProcessEvent_1:
   \   0000A9   EE           MOV     A,R6
   \   0000AA   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000AC   4003         JC      $+5
   \   0000AE   02....       LJMP    ??Smart_home_ProcessEvent_7 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_8:
   \   0000B1   90....       MOV     DPTR,#Smart_home_MsgID
   \   0000B4   E0           MOVX    A,@DPTR
   \   0000B5   C4           SWAP    A
   \   0000B6   540F         ANL     A,#0xf
   \   0000B8   FA           MOV     R2,A
   \   0000B9   C3           CLR     C
   \   0000BA   940A         SUBB    A,#0xa
   \   0000BC   5004         JNC     ??Smart_home_ProcessEvent_9
   \   0000BE   7830         MOV     R0,#0x30
   \   0000C0   8002         SJMP    ??Smart_home_ProcessEvent_10
   \                     ??Smart_home_ProcessEvent_9:
   \   0000C2   7837         MOV     R0,#0x37
   \                     ??Smart_home_ProcessEvent_10:
   \   0000C4   E8           MOV     A,R0
   \   0000C5   2A           ADD     A,R2
   \   0000C6   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   0000C9   F0           MOVX    @DPTR,A
   \   0000CA   90....       MOV     DPTR,#Smart_home_MsgID
   \   0000CD   E0           MOVX    A,@DPTR
   \   0000CE   540F         ANL     A,#0xf
   \   0000D0   FA           MOV     R2,A
   \   0000D1   C3           CLR     C
   \   0000D2   940A         SUBB    A,#0xa
   \   0000D4   5004         JNC     ??Smart_home_ProcessEvent_11
   \   0000D6   7830         MOV     R0,#0x30
   \   0000D8   8002         SJMP    ??Smart_home_ProcessEvent_12
   \                     ??Smart_home_ProcessEvent_11:
   \   0000DA   7837         MOV     R0,#0x37
   \                     ??Smart_home_ProcessEvent_12:
   \   0000DC   E8           MOV     A,R0
   \   0000DD   2A           ADD     A,R2
   \   0000DE   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   0000E1   F0           MOVX    @DPTR,A
   \   0000E2   90....       MOV     DPTR,#soundVbBuf + 1
   \   0000E5   E0           MOVX    A,@DPTR
   \   0000E6   C3           CLR     C
   \   0000E7   33           RLC     A
   \   0000E8   7583..       MOV     DPH,#(soundVbBuf >> 8) & 0xff
   \   0000EB   7582..       MOV     DPL,#soundVbBuf & 0xff
   \   0000EE   F8           MOV     R0,A
   \   0000EF   E0           MOVX    A,@DPTR
   \   0000F0   48           ORL     A,R0
   \   0000F1   90....       MOV     DPTR,#Coordinator_Msg + 4
   \   0000F4   F0           MOVX    @DPTR,A
   \   0000F5                ; Setup parameters for call to function AF_DataRequest
   \   0000F5   75..1E       MOV     ?V0 + 0,#0x1e
   \   0000F8   78..         MOV     R0,#?V0 + 0
   \   0000FA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0000FD   75....       MOV     ?V0 + 0,#Smart_home_MsgID & 0xff
   \   000100   75....       MOV     ?V0 + 1,#(Smart_home_MsgID >> 8) & 0xff
   \   000103   78..         MOV     R0,#?V0 + 0
   \   000105   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000108   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   00010B   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   00010E   78..         MOV     R0,#?V0 + 0
   \   000110   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000113   75..05       MOV     ?V0 + 0,#0x5
   \   000116   75..00       MOV     ?V0 + 1,#0x0
   \   000119   78..         MOV     R0,#?V0 + 0
   \   00011B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00011E   75..06       MOV     ?V0 + 0,#0x6
   \   000121   78..         MOV     R0,#?V0 + 0
   \   000123   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000126   7920         MOV     R1,#0x20
   \   000128   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   00012A   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   00012C   7A..         MOV     R2,#Coordinator_DstAddr & 0xff
   \   00012E   7B..         MOV     R3,#(Coordinator_DstAddr >> 8) & 0xff
   \   000130   12....       LCALL   ??AF_DataRequest?relay
   \   000133   7409         MOV     A,#0x9
   \   000135   12....       LCALL   ?DEALLOC_XSTACK8
   \   000138   E9           MOV     A,R1
   \   000139   7003         JNZ     $+5
   \   00013B   02....       LJMP    ??Smart_home_ProcessEvent_8 & 0xFFFF
   \   00013E   90....       MOV     DPTR,#soundVbBuf
   \   000141   E4           CLR     A
   \   000142   F0           MOVX    @DPTR,A
   \   000143   A3           INC     DPTR
   \   000144   F0           MOVX    @DPTR,A
    287            {
    288              Smart_home_Send();
    289              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   000145   EE           MOV     A,R6
   \   000146   6401         XRL     A,#0x1
   \   000148   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    290            }
    291          
    292            if ( events & SMART_HOME_HALCHECK_EVT )
   \                     ??Smart_home_ProcessEvent_7:
   \   00014B   5440         ANL     A,#0x40
   \   00014D   604C         JZ      ??Smart_home_ProcessEvent_13
    293            {
    294              Smart_home_CHECK_EVT();
   \   00014F                ; Setup parameters for call to function HalSoundCheck
   \   00014F   12....       LCALL   ??HalSoundCheck?relay
   \   000152   E9           MOV     A,R1
   \   000153   90....       MOV     DPTR,#??soundAlertCnt
   \   000156   6004         JZ      ??Smart_home_ProcessEvent_14
   \   000158   E0           MOVX    A,@DPTR
   \   000159   04           INC     A
   \   00015A   8001         SJMP    ??Smart_home_ProcessEvent_15
   \                     ??Smart_home_ProcessEvent_14:
   \   00015C   E4           CLR     A
   \                     ??Smart_home_ProcessEvent_15:
   \   00015D   F0           MOVX    @DPTR,A
   \   00015E                ; Setup parameters for call to function HalVibrationCheck
   \   00015E   12....       LCALL   ??HalVibrationCheck?relay
   \   000161   E9           MOV     A,R1
   \   000162   90....       MOV     DPTR,#??vibrationAlertCnt
   \   000165   6004         JZ      ??Smart_home_ProcessEvent_16
   \   000167   E0           MOVX    A,@DPTR
   \   000168   04           INC     A
   \   000169   8001         SJMP    ??Smart_home_ProcessEvent_17
   \                     ??Smart_home_ProcessEvent_16:
   \   00016B   E4           CLR     A
   \                     ??Smart_home_ProcessEvent_17:
   \   00016C   F0           MOVX    @DPTR,A
   \   00016D   90....       MOV     DPTR,#??soundAlertCnt
   \   000170   E0           MOVX    A,@DPTR
   \   000171   C3           CLR     C
   \   000172   9402         SUBB    A,#0x2
   \   000174   400B         JC      ??Smart_home_ProcessEvent_18
   \   000176   90....       MOV     DPTR,#soundVbBuf
   \   000179   7401         MOV     A,#0x1
   \   00017B   F0           MOVX    @DPTR,A
   \   00017C   90....       MOV     DPTR,#??soundAlertCnt
   \   00017F   E4           CLR     A
   \   000180   F0           MOVX    @DPTR,A
   \                     ??Smart_home_ProcessEvent_18:
   \   000181   90....       MOV     DPTR,#??vibrationAlertCnt
   \   000184   E0           MOVX    A,@DPTR
   \   000185   C3           CLR     C
   \   000186   9402         SUBB    A,#0x2
   \   000188   400B         JC      ??Smart_home_ProcessEvent_19
   \   00018A   90....       MOV     DPTR,#soundVbBuf + 1
   \   00018D   7401         MOV     A,#0x1
   \   00018F   F0           MOVX    @DPTR,A
   \   000190   90....       MOV     DPTR,#??vibrationAlertCnt
   \   000193   E4           CLR     A
   \   000194   F0           MOVX    @DPTR,A
    295              return ( events ^ SMART_HOME_HALCHECK_EVT );
   \                     ??Smart_home_ProcessEvent_19:
   \   000195   EE           MOV     A,R6
   \   000196   6440         XRL     A,#0x40
   \   000198   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    296            }  
    297            
    298            if ( events & SMART_HOME_BINDRSP_EVT )
   \                     ??Smart_home_ProcessEvent_13:
   \   00019B   EE           MOV     A,R6
   \   00019C   5420         ANL     A,#0x20
   \   00019E   6006         JZ      ??Smart_home_ProcessEvent_20
    299            {
    300              Smart_home_Resp();
    301              return ( events ^ SMART_HOME_BINDRSP_EVT );
   \   0001A0   EE           MOV     A,R6
   \   0001A1   6420         XRL     A,#0x20
   \   0001A3   FA           MOV     R2,A
   \   0001A4   8004         SJMP    ??Smart_home_ProcessEvent_4
    302            }
    303            
    304            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_20:
   \   0001A6   7A00         MOV     R2,#0x0
   \   0001A8   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_4:
   \   0001AA   7409         MOV     A,#0x9
   \   0001AC   12....       LCALL   ?DEALLOC_XSTACK8
   \   0001AF                REQUIRE ?Subroutine0
   \   0001AF                ; // Fall through to label ?Subroutine0
    305          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA
    306          
    307          /*********************************************************************
    308           * @fn      Smart_home_ProcessZDOMsgs()
    309           *
    310           * @brief   Process response messages
    311           *
    312           * @param   none
    313           *
    314           * @return  none
    315           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    316          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
   \                     Smart_home_ProcessZDOMsgs:
    317          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    318            switch ( inMsg->clusterID )
   \   000005   EA           MOV     A,R2
   \   000006   240C         ADD     A,#0xc
   \   000008   F582         MOV     DPL,A
   \   00000A   EB           MOV     A,R3
   \   00000B   3400         ADDC    A,#0x0
   \   00000D   F583         MOV     DPH,A
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F5..         MOV     ?V0 + 0,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F5..         MOV     ?V0 + 1,A
   \   000016   78..         MOV     R0,#?V0 + 0
   \   000018   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Smart_home_ProcessZDOMsgs>_0`:
   \   00001B   0000         DW        0
   \   00001D   0200         DW        2
   \   00001F   0680         DW        32774
   \   000021   ....         DW        ??Smart_home_ProcessZDOMsgs_0
   \   000023   2080         DW        32800
   \   000025   ....         DW        ??Smart_home_ProcessZDOMsgs_1
   \   000027   ....         DW        ??Smart_home_ProcessZDOMsgs_2
    319            {
    320              case End_Device_Bind_rsp:
    321                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
   \                     ??Smart_home_ProcessZDOMsgs_1:
   \   000029   EA           MOV     A,R2
   \   00002A   2413         ADD     A,#0x13
   \   00002C   F582         MOV     DPL,A
   \   00002E   EB           MOV     A,R3
   \   00002F   3400         ADDC    A,#0x0
   \   000031   F583         MOV     DPH,A
   \   000033   E0           MOVX    A,@DPTR
   \   000034   F8           MOV     R0,A
   \   000035   A3           INC     DPTR
   \   000036   E0           MOVX    A,@DPTR
   \   000037   F583         MOV     DPH,A
   \   000039   8882         MOV     DPL,R0
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   6003         JZ      $+5
   \   00003E   02....       LJMP    ??Smart_home_ProcessZDOMsgs_2 & 0xFFFF
    322                {
    323          #if (HAL_UART == TRUE)
    324                  HalUARTWrite(HAL_UART_PORT_0, "Bind Success!\n",   strlen("Bind Success!\n"));
                                                                            ^
Warning[Pe223]: function "strlen" declared implicitly
   \   000041                ; Setup parameters for call to function HalUARTWrite
   \   000041                ; Setup parameters for call to function strlen
   \   000041   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   000043   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   000045   12....       LCALL   ??strlen?relay
   \   000048   EA           MOV     A,R2
   \   000049   FC           MOV     R4,A
   \   00004A   EB           MOV     A,R3
   \   00004B   FD           MOV     R5,A
   \   00004C   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   00004E   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   000050   7900         MOV     R1,#0x0
   \   000052   12....       LCALL   ??HalUARTWrite?relay
   \   000055   806E         SJMP    ??Smart_home_ProcessZDOMsgs_2
    325          #endif
    326                }
    327                break;
    328              
    329              case Match_Desc_rsp:
    330                ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessZDOMsgs_0:
   \   000057                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   000057   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   00005A   8A..         MOV     ?V0 + 0,R2
   \   00005C   8B..         MOV     ?V0 + 1,R3
    331                if ( pRsp )
   \   00005E   EA           MOV     A,R2
   \   00005F   45..         ORL     A,?V0 + 1
   \   000061   6062         JZ      ??Smart_home_ProcessZDOMsgs_2
    332                {
    333                  if ( pRsp->status == ZSuccess && pRsp->cnt )
   \   000063   8A82         MOV     DPL,R2
   \   000065   8B83         MOV     DPH,R3
   \   000067   E0           MOVX    A,@DPTR
   \   000068   7054         JNZ     ??CrossCallReturnLabel_2
   \   00006A   A3           INC     DPTR
   \   00006B   A3           INC     DPTR
   \   00006C   A3           INC     DPTR
   \   00006D   E0           MOVX    A,@DPTR
   \   00006E   604E         JZ      ??CrossCallReturnLabel_2
    334                  {
    335                    // 此处存储绑定对方的地址信息用于发送
    336                    Coordinator_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   000070   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   000073   7402         MOV     A,#0x2
   \   000075   F0           MOVX    @DPTR,A
    337                    Coordinator_DstAddr.addr.shortAddr = pRsp->nwkAddr;
   \   000076   8A82         MOV     DPL,R2
   \   000078   8B83         MOV     DPH,R3
   \   00007A   A3           INC     DPTR
   \   00007B   E0           MOVX    A,@DPTR
   \   00007C   F8           MOV     R0,A
   \   00007D   A3           INC     DPTR
   \   00007E   E0           MOVX    A,@DPTR
   \   00007F   F9           MOV     R1,A
   \   000080   90....       MOV     DPTR,#Coordinator_DstAddr
   \   000083   E8           MOV     A,R0
   \   000084   F0           MOVX    @DPTR,A
   \   000085   A3           INC     DPTR
   \   000086   E9           MOV     A,R1
   \   000087   F0           MOVX    @DPTR,A
    338                    // Take the first endpoint, Can be changed to search through endpoints
    339                    Coordinator_DstAddr.endPoint = pRsp->epList[0];  // ok
   \   000088   8A82         MOV     DPL,R2
   \   00008A   8B83         MOV     DPH,R3
   \   00008C   A3           INC     DPTR
   \   00008D   A3           INC     DPTR
   \   00008E   A3           INC     DPTR
   \   00008F   A3           INC     DPTR
   \   000090   E0           MOVX    A,@DPTR
   \   000091   90....       MOV     DPTR,#Coordinator_DstAddr + 9
   \   000094   F0           MOVX    @DPTR,A
    340                    // 匹配成功，关闭描述符匹配事件定时器
    341                    osal_stop_timerEx( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT );
   \   000095                ; Setup parameters for call to function osal_stop_timerEx
   \   000095   7A08         MOV     R2,#0x8
   \   000097   7B00         MOV     R3,#0x0
   \   000099   90....       MOV     DPTR,#Smart_home_TaskID
   \   00009C   E0           MOVX    A,@DPTR
   \   00009D   F9           MOV     R1,A
   \   00009E   12....       LCALL   ??osal_stop_timerEx?relay
    342            
    343          #if (HAL_UART == TRUE)
    344                    HalUARTWrite(HAL_UART_PORT_0, "Match Success!\n",   strlen("Match Success!\n"));
                                                                               ^
Warning[Pe223]: function "strlen" declared implicitly

    switch ( inMsg->clusterID )
    ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeSound.c",318  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "pRsp" (declared at line 330 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_homeSound.c")
   \   0000A1                ; Setup parameters for call to function HalUARTWrite
   \   0000A1                ; Setup parameters for call to function strlen
   \   0000A1   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   0000A3   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000A5   12....       LCALL   ??strlen?relay
   \   0000A8   EA           MOV     A,R2
   \   0000A9   FC           MOV     R4,A
   \   0000AA   EB           MOV     A,R3
   \   0000AB   FD           MOV     R5,A
   \   0000AC   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   0000AE   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000B0   7900         MOV     R1,#0x0
   \   0000B2   12....       LCALL   ??HalUARTWrite?relay
    345          #endif
    346                    // 开启定时发送数据给协调器的事件
    347                    osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_SEND_MSG_EVT, 
    348                                             SMART_HOME_SEND_DELAY );
   \   0000B5                ; Setup parameters for call to function osal_start_reload_timer
   \   0000B5   7CF4         MOV     R4,#-0xc
   \   0000B7   7D01         MOV     R5,#0x1
   \   0000B9   7A01         MOV     R2,#0x1
   \   0000BB   12....       LCALL   ?Subroutine1 & 0xFFFF
    349                  }
    350              
    351                  osal_mem_free( pRsp );
   \                     ??CrossCallReturnLabel_2:
   \   0000BE                ; Setup parameters for call to function osal_mem_free
   \   0000BE   AA..         MOV     R2,?V0 + 0
   \   0000C0   AB..         MOV     R3,?V0 + 1
   \   0000C2   12....       LCALL   ??osal_mem_free?relay
    352                }
    353                break;
    354                
    355              default:
    356                break;
    357            }
    358            
    359          }
   \                     ??Smart_home_ProcessZDOMsgs_2:
   \   0000C5   02....       LJMP    ?Subroutine0 & 0xFFFF
    360          
    361          /*********************************************************************
    362           * @fn      Smart_home_HandleKeys
    363           *
    364           * @brief   Handles all key events for this device.
    365           *
    366           * @param   shift - true if in shift/alt.
    367           * @param   keys  - bit field for key events.
    368           *
    369           * @return  none
    370           */
    371          void Smart_home_HandleKeys( uint8 shift, uint8 keys )
    372          {
    373            
    374            if ( keys & HAL_KEY_SW_5 )
    375            {
    376            }
    377          
    378          }
    379          
    380          /*********************************************************************
    381           * @fn      Smart_home_ProcessMSGCmd
    382           *
    383           * @brief   Data message processor callback. This function processes
    384           *          any incoming data - probably from other devices. Based
    385           *          on the cluster ID, perform the intended action.
    386           *
    387           * @param   pkt - pointer to the incoming message packet
    388           *
    389           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    390           *          FALSE otherwise.
    391           */
    392          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
    393          {
    394            uint8 mode;
                         ^
Warning[Pe177]: variable "mode" was declared but never referenced
    395            
    396            switch ( pkt->clusterId )
    397            {
    398              case Smart_home_CLUSTERID_SOUNDVBMSG:
    399              {    
    400                break;
    401              } 
    402              // Could receive control messages in the future.
    403              default:
    404                break;
    405            }
    406          }
    407          
    408          /*********************************************************************
    409           * @fn      Smart_home_Send
    410           *
    411           * @brief   Send data OTA.
    412           *
    413           * @param   none
    414           *
    415           * @return  none
    416           */
    417          static void Smart_home_Send(void)
    418          {
    419            uint8 tmp; 
    420            
    421            do{
    422              // put the sequence number in the message
    423              tmp = HI_UINT8( Smart_home_MsgID );
    424              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    425              Coordinator_Msg[2] = tmp;
    426              tmp = LO_UINT8( Smart_home_MsgID );
    427              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    428              Coordinator_Msg[3] = tmp;
    429              
    430              // 第0位存储声音报警信息，第1位存储振动报警信息
    431              Coordinator_Msg[4] = soundVbBuf[1]<<1 | soundVbBuf[0];
    432              
    433              
    434              tmp = AF_DataRequest( &Coordinator_DstAddr,                         
    435                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    436                                     Smart_home_CLUSTERID_SOUNDVBMSG,
    437                                     SOUNDVBMSG_LEN,                 
    438                                     Coordinator_Msg,                    
    439                                    &Smart_home_MsgID,                       
    440                                     AF_DISCV_ROUTE,                     
    441                                     AF_DEFAULT_RADIUS );
    442            }while (afStatus_SUCCESS == tmp);   
    443            
    444            // 清除报警信息
    445            soundVbBuf[0] = 0;
    446            soundVbBuf[1] = 0;
    447          }
    448          
    449          
    450          /*********************************************************************
    451           * @fn      Smart_home_CHECK_EVT
    452           *
    453           * @brief   设备控制检查，为了发送消息做准备.
    454           *
    455           * @param   none
    456           *
    457           * @return  none
    458           */
    459          static void Smart_home_CHECK_EVT(void)
    460          {

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    461            static uint8 soundAlertCnt, vibrationAlertCnt;
   \                     ??soundAlertCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??vibrationAlertCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    462            
    463            if (HalSoundCheck())
    464            {
    465              soundAlertCnt++;      // 检测到报警信号，计数值+1
    466            }
    467            else 
    468            {
    469              soundAlertCnt = 0;    // 未检测到报警信号，计数值清零
    470            }
    471               
    472            if (HalVibrationCheck())
    473            {
    474              vibrationAlertCnt++;   // 检测到报警信号，计数值+1
    475            }
    476            else
    477            {
    478              vibrationAlertCnt = 0; // 未检测到报警信号，计数值清零
    479            }
    480            
    481            if (soundAlertCnt > 1)
    482            {
    483              soundVbBuf[0] = 1;
    484              soundAlertCnt = 0;
    485            }
    486            
    487            if (vibrationAlertCnt > 1)
    488            {
    489              soundVbBuf[1] = 1;
    490              vibrationAlertCnt = 0;
    491            }  
    492          }
    493          
    494          /*********************************************************************
    495           * @fn      Smart_home_Resp
    496           *
    497           * @brief   Send data OTA.
    498           *
    499           * @param   none
    500           *
    501           * @return  none
    502           */
    503          static void Smart_home_Resp(void)
    504          {
    505            /*
    506            if (afStatus_SUCCESS != AF_DataRequest(&Smart_home_RxAddr,
    507                                                   (endPointDesc_t *)&Smart_home_epDesc,
    508                                                    Smart_home_CLUSTERID2,
    509                                                    SERIAL_APP_RSP_CNT, Smart_home_RspBuf,
    510                                                   &Smart_home_MsgID, 0, AF_DEFAULT_RADIUS))
    511            {
    512              osal_set_event(Smart_home_TaskID, SMART_HOME_BINDRSP_EVT);
    513            }
    514            */
    515          }
    516          
    517          /*********************************************************************
    518           * @fn      Smart_home_CallBack
    519           *
    520           * @brief   Send data OTA.
    521           *
    522           * @param   port - UART port.
    523           * @param   event - the UART port event flag.
    524           *
    525           * @return  none
    526           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    527          static void Smart_home_CallBack(uint8 port, uint8 event)
   \                     Smart_home_CallBack:
    528          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    529          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessZDOMsgs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessZDOMsgs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_CallBack

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Bind Success!\\n">`:
   \   000000   42696E64     DB "Bind Success!\012"
   \            20537563
   \            63657373
   \            210A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Match Success!\\n">`:
   \   000000   4D617463     DB "Match Success!\012"
   \            68205375
   \            63636573
   \            73210A00
    530          
    531          /*********************************************************************
    532          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_CallBack                0      0      0
     Smart_home_Init                    0      0     38
       -> afRegister                    0      0     76
       -> RegisterForKeys               0      0     76
       -> HalUARTOpen                   0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> HalSoundVbInit                0      0     76
       -> osal_start_reload_timer       0      0     76
       -> osal_start_reload_timer       0      0     76
     Smart_home_ProcessEvent            2      0     30
       -> ZDP_MatchDescReq              0      0     58
       -> Smart_home_ProcessZDOMsgs     0      0     42
       -> osal_msg_deallocate           0      0     42
       -> osal_msg_receive              0      0     42
       -> AF_DataRequest                0      0     60
       -> HalSoundCheck                 0      0     42
       -> HalVibrationCheck             0      0     42
     Smart_home_ProcessZDOMsgs          0      0     33
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> ZDO_ParseEPListRsp            0      0     24
       -> osal_stop_timerEx             0      0     24
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> osal_start_reload_timer       0      0     24
       -> osal_mem_free                 0      0     24


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     Smart_home_ClusterList_IN            2
     Smart_home_ClusterList_OUT           2
     Smart_home_SimpleDesc               12
     Smart_home_epDesc                    6
     Coordinator_DstAddr                 12
     Smart_home_TaskID                    1
     Coordinator_Msg                      5
     Smart_home_MsgID                     1
     soundVbBuf                           2
     Smart_home_Init                    198
     ?Subroutine1                        11
     Smart_home_ProcessEvent            431
     ?Subroutine0                         5
     Smart_home_ProcessZDOMsgs          200
     soundAlertCnt                        1
     vibrationAlertCnt                    1
     Smart_home_CallBack                  3
     ??Smart_home_Init?relay              6
     ??Smart_home_ProcessEvent?relay      6
     ??Smart_home_ProcessZDOMsgs?relay    6
     ??Smart_home_CallBack?relay          6
     ?<Constant "Bind Success!\n">       15
     ?<Constant "Match Success!\n">      16

 
 848 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
  53 bytes in segment XDATA_ROM_C
  23 bytes in segment XDATA_Z
 
 872 bytes of CODE  memory
  53 bytes of CONST memory
  23 bytes of XDATA memory

Errors: none
Warnings: 5
