###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         06/May/2021  15:29:47 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\Source\Smart_homeMotor.c              #
#    Command line       =  -f D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\..\..\..\Tools\CC2530DB\f #
#                          8wEndev.cfg (-DCPU32MHZ -DROOT=__near_func         #
#                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6         #
#                          -DMAC_CFG_RX_MAX=3) -f D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      #
#                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR       #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0x1003                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\Source\Smart_h #
#                          omeMotor.c -D HAL_UART=TRUE -D HAL_UART_TEST -D    #
#                          xPOWER_SAVING -lC D:\毕设\CC2530-smart_home\Projec #
#                          ts\zstack\Utilities\Smart_home\CC2530DB\EndDeviceS #
#                          BMotor\List\ -lA D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\EndDeviceSB #
#                          Motor\List\ --diag_suppress Pe001,Pa010 -o         #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBMotor\Obj\ -e     #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I D:\毕设\CC2530-smart_home\Projects\zstack\Utili #
#                          ties\Smart_home\CC2530DB\ -I                       #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\Source\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\ZMain\TI2530DB\ -I  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ha #
#                          l\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\hal\target\CC2530SB\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\include\ -I D:\毕设\CC2530-smart_home\Projects\z #
#                          stack\Utilities\Smart_home\CC2530DB\..\..\..\..\.. #
#                          \Components\mac\high_level\ -I                     #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\ma #
#                          c\low_level\srf04\ -I D:\毕设\CC2530-smart_home\Pr #
#                          ojects\zstack\Utilities\Smart_home\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\low_level\srf04\single_chi #
#                          p\ -I D:\毕设\CC2530-smart_home\Projects\zstack\Ut #
#                          ilities\Smart_home\CC2530DB\..\..\..\..\..\Compone #
#                          nts\mt\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\osal\include\ -I                          #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\se #
#                          rvices\saddr\ -I D:\毕设\CC2530-smart_home\Project #
#                          s\zstack\Utilities\Smart_home\CC2530DB\..\..\..\.. #
#                          \..\Components\services\sdata\ -I                  #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\af\ -I D:\毕设\CC2530-smart_home\Projects\zsta #
#                          ck\Utilities\Smart_home\CC2530DB\..\..\..\..\..\Co #
#                          mponents\stack\nwk\ -I D:\毕设\CC2530-smart_home\P #
#                          rojects\zstack\Utilities\Smart_home\CC2530DB\..\.. #
#                          \..\..\..\Components\stack\sapi\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\st #
#                          ack\sec\ -I D:\毕设\CC2530-smart_home\Projects\zst #
#                          ack\Utilities\Smart_home\CC2530DB\..\..\..\..\..\C #
#                          omponents\stack\sys\ -I D:\毕设\CC2530-smart_home\ #
#                          Projects\zstack\Utilities\Smart_home\CC2530DB\..\. #
#                          .\..\..\..\Components\stack\zdo\ -I                #
#                          D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\..\..\..\..\..\Components\zm #
#                          ac\ -I D:\毕设\CC2530-smart_home\Projects\zstack\U #
#                          tilities\Smart_home\CC2530DB\..\..\..\..\..\Compon #
#                          ents\zmac\f8w\ -Ohz                                #
#    List file          =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBMotor\List\Smart_ #
#                          homeMotor.lst                                      #
#    Object file        =  D:\毕设\CC2530-smart_home\Projects\zstack\Utilitie #
#                          s\Smart_home\CC2530DB\EndDeviceSBMotor\Obj\Smart_h #
#                          omeMotor.r51                                       #
#                                                                             #
#                                                                             #
###############################################################################

D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeMotor.c
      1          /*******************************************************************
      2            文件名：Smart_homeRelay.c
      3            作 者： 柳成林
      4            功 能： 电机功能节点，实现向网关节点的发送以及接收网关节点的消息
      5            更新日志(2021)
      6            3.21
      7            + 新增 设置输入输出簇
      8                   Smart_home_HandleKeys()      //按键控制
      9                   Smart_home_ProcessMSGCmd();  //输入控制函数 
     10            + 修改 Smart_home_ProcessEvt()      //事件处理函数
     11                   Smart_home_Init()            //初始化函数
     12                   Smart_home_Send()            //信息发送函数
     13            3.23
     14            + 修改 #define SMART_HOME_SEND_DELAY   500 
     15                   解决屏幕显示的小bug
     16          
     17          
     18          使用事件 
     19               SMART_HOME_SEND_MSG_EVT(发送数据)
     20               SMART_HOME_MATCHRSP_EVT(描述符匹配)
     21             
     22          *********************************************************************/
     23          /*********************************************************************
     24           * INCLUDES
     25           */
     26          
     27          #include "AF.h"
     28          #include "OnBoard.h"
     29          #include "OSAL_Tasks.h"
     30          #include "Smart_home.h"
     31          #include "ZDApp.h"
     32          #include "ZDObject.h"
     33          #include "ZDProfile.h"
     34          
     35          #include "hal_drivers.h"
     36          #include "hal_key.h"
     37          
     38          #include "hal_led.h"
     39          #include "hal_uart.h"
     40          #include "hal_motor.h"
     41          
     42          /*********************************************************************
     43           * MACROS
     44           */
     45          //3.23  屏幕显示的小bug
     46          #define SMART_HOME_SEND_DELAY   500
     47          #define SMART_HOME_MATCH_DELAY  1000
     48          /*********************************************************************
     49           * CONSTANTS
     50           */
     51          
     52          #if !defined( SERIAL_APP_PORT )
     53          #define SERIAL_APP_PORT  0
     54          #endif
     55          
     56          #if !defined( SERIAL_APP_BAUD )
     57          #define SERIAL_APP_BAUD  HAL_UART_BR_38400
     58          //#define SERIAL_APP_BAUD  HAL_UART_BR_115200
     59          #endif
     60          
     61          // When the Rx buf space is less than this threshold, invoke the Rx callback.
     62          #if !defined( SERIAL_APP_THRESH )
     63          #define SERIAL_APP_THRESH  64
     64          #endif
     65          
     66          #if !defined( SERIAL_APP_RX_SZ )
     67          #define SERIAL_APP_RX_SZ  128
     68          #endif
     69          
     70          #if !defined( SERIAL_APP_TX_SZ )
     71          #define SERIAL_APP_TX_SZ  128
     72          #endif
     73          
     74          // Millisecs of idle time after a byte is received before invoking Rx callback.
     75          #if !defined( SERIAL_APP_IDLE )
     76          #define SERIAL_APP_IDLE  6
     77          #endif
     78          
     79          // Loopback Rx bytes to Tx for throughput testing.
     80          #if !defined( SERIAL_APP_LOOPBACK )
     81          #define SERIAL_APP_LOOPBACK  FALSE
     82          #endif
     83          
     84          // This is the max byte count per OTA message.
     85          #if !defined( SERIAL_APP_TX_MAX )
     86          #define SERIAL_APP_TX_MAX  80
     87          #endif
     88          
     89          #define SERIAL_APP_RSP_CNT  4
     90          
     91          //3.21 设置输入输出簇
     92          // This list should be filled with Application specific Cluster IDs.

   \                                 In  segment XDATA_ROM_C, align 1
     93          const cId_t Smart_home_ClusterList_IN[1] =
   \                     Smart_home_ClusterList_IN:
   \   000000   0B00         DW 11
     94          {
     95            Smart_home_CLUSTERID_MOTORCTRL         //继电器接收的消息控制命令
     96          };
     97          

   \                                 In  segment XDATA_ROM_C, align 1
     98          const cId_t Smart_home_ClusterList_OUT[1] =
   \                     Smart_home_ClusterList_OUT:
   \   000000   0700         DW 7
     99          {
    100            Smart_home_CLUSTERID_MOTORSTATUSMSG         //继电器发送的状态信息
    101          };
    102          

   \                                 In  segment XDATA_ROM_C, align 1
    103          const SimpleDescriptionFormat_t Smart_home_SimpleDesc =
   \                     Smart_home_SimpleDesc:
   \   000000   01           DB 1
   \   000001   050F         DW 3845
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   09           DB 9
   \   000007   ....         DW Smart_home_ClusterList_IN
   \   000009   03           DB 3
   \   00000A   ....         DW Smart_home_ClusterList_OUT
    104          {
    105            Smart_home_ENDPOINT,              //  int   Endpoint;
    106            Smart_home_PROFID,                //  uint16 AppProfId[2];
    107            Smart_home_DEVICEID,              //  uint16 AppDeviceId[2];
    108            Smart_home_DEVICE_VERSION,        //  int   AppDevVer:4;
    109            Smart_home_FLAGS,                 //  int   AppFlags:4;
    110            Smart_home_MAX_INCLUSTERS,          //  byte  AppNumInClusters;
    111            (cId_t *)Smart_home_ClusterList_IN,  //  byte *pAppInClusterList;
    112            Smart_home_MAX_OUTCLUSTERS ,          //  byte  AppNumOutClusters;
    113            (cId_t *)Smart_home_ClusterList_OUT   //  byte *pAppOutClusterList;
    114          };
    115          

   \                                 In  segment XDATA_ROM_C, align 1
    116          const endPointDesc_t Smart_home_epDesc =
   \                     Smart_home_epDesc:
   \   000000   01           DB 1
   \   000001   ....         DW Smart_home_TaskID
   \   000003   ....         DW Smart_home_SimpleDesc
   \   000005   00           DB 0
    117          {
    118            Smart_home_ENDPOINT,
    119           &Smart_home_TaskID,
    120            (SimpleDescriptionFormat_t *)&Smart_home_SimpleDesc,
    121            noLatencyReqs
    122          };
    123          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    124          afAddrType_t Coordinator_DstAddr;
   \                     Coordinator_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    125          
    126          /*********************************************************************
    127           * TYPEDEFS
    128           */
    129          
    130          /*********************************************************************
    131           * GLOBAL VARIABLES
    132           */
    133          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    134          uint8 Smart_home_TaskID;    // Task ID for internal task/event processing.
   \                     Smart_home_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    135          byte Coordinator_Msg[RELAYSTATUSMSG_LEN];
   \                     Coordinator_Msg:
   \   000000                DS 5
   \   000005                REQUIRE __INIT_XDATA_Z
    136          
    137          /*********************************************************************
    138           * EXTERNAL VARIABLES
    139           */
    140          
    141          /*********************************************************************
    142           * EXTERNAL FUNCTIONS
    143           */
    144          
    145          /*********************************************************************
    146           * LOCAL VARIABLES
    147           */
    148          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    149          static byte Smart_home_MsgID;  // This is the unique message ID (counter)
   \                     Smart_home_MsgID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    150          
    151          
    152          /*********************************************************************
    153           * LOCAL FUNCTIONS
    154           */
    155          
    156          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
    157          static void Smart_home_HandleKeys( uint8 shift, uint8 keys );
    158          static void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt );
    159          static void Smart_home_Send(void);
    160          static void Smart_home_Resp(void);
    161          static void Smart_home_CallBack(uint8 port, uint8 event);
    162          
    163          /*********************************************************************
    164           * @fn      Smart_home_Init
    165           *
    166           * @brief   This is called during OSAL tasks' initialization.
    167           *
    168           * @param   task_id - the Task ID assigned by OSAL.
    169           *
    170           * @return  none
    171           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    172          void Smart_home_Init( uint8 task_id )
   \                     Smart_home_Init:
    173          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    174            halUARTCfg_t uartConfig;
    175          
    176            Smart_home_TaskID = task_id;
   \   00000C   90....       MOV     DPTR,#Smart_home_TaskID
   \   00000F   F0           MOVX    @DPTR,A
    177            Smart_home_MsgID = 0;
   \   000010   90....       MOV     DPTR,#Smart_home_MsgID
   \   000013   E4           CLR     A
   \   000014   F0           MOVX    @DPTR,A
    178          
    179            // Register the endpoint/interface description with the AF
    180            afRegister( (endPointDesc_t *)&Smart_home_epDesc );
   \   000015                ; Setup parameters for call to function afRegister
   \   000015   7A..         MOV     R2,#Smart_home_epDesc & 0xff
   \   000017   7B..         MOV     R3,#(Smart_home_epDesc >> 8) & 0xff
   \   000019   12....       LCALL   ??afRegister?relay
    181          
    182            // Register for all key events - This app will handle all key events
    183            RegisterForKeys( task_id );
   \   00001C                ; Setup parameters for call to function RegisterForKeys
   \   00001C   EE           MOV     A,R6
   \   00001D   F9           MOV     R1,A
   \   00001E   12....       LCALL   ??RegisterForKeys?relay
    184            
    185            //串口配置
    186            uartConfig.configured           = TRUE;              // 2x30 don't care - see uart driver.
   \   000021   85..82       MOV     DPL,?XSP + 0
   \   000024   85..83       MOV     DPH,?XSP + 1
   \   000027   7401         MOV     A,#0x1
   \   000029   F0           MOVX    @DPTR,A
    187            uartConfig.baudRate             = SERIAL_APP_BAUD;
   \   00002A   12....       LCALL   ?XSTACK_DISP0_8
   \   00002D   7402         MOV     A,#0x2
   \   00002F   F0           MOVX    @DPTR,A
    188            uartConfig.flowControl          = TRUE;
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7401         MOV     A,#0x1
   \   000035   F0           MOVX    @DPTR,A
    189            uartConfig.flowControlThreshold = SERIAL_APP_THRESH; // 2x30 don't care - see uart driver.
   \   000036   7403         MOV     A,#0x3
   \   000038   12....       LCALL   ?XSTACK_DISP0_8
   \   00003B   7440         MOV     A,#0x40
   \   00003D   F0           MOVX    @DPTR,A
   \   00003E   A3           INC     DPTR
   \   00003F   E4           CLR     A
   \   000040   F0           MOVX    @DPTR,A
    190            uartConfig.rx.maxBufSize        = SERIAL_APP_RX_SZ;  // 2x30 don't care - see uart driver.
   \   000041   740A         MOV     A,#0xa
   \   000043   12....       LCALL   ?XSTACK_DISP0_8
   \   000046   7480         MOV     A,#-0x80
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   E4           CLR     A
   \   00004B   F0           MOVX    @DPTR,A
    191            uartConfig.tx.maxBufSize        = SERIAL_APP_TX_SZ;  // 2x30 don't care - see uart driver.
   \   00004C   7412         MOV     A,#0x12
   \   00004E   12....       LCALL   ?XSTACK_DISP0_8
   \   000051   7480         MOV     A,#-0x80
   \   000053   F0           MOVX    @DPTR,A
   \   000054   A3           INC     DPTR
   \   000055   E4           CLR     A
   \   000056   F0           MOVX    @DPTR,A
    192            uartConfig.idleTimeout          = SERIAL_APP_IDLE;   // 2x30 don't care - see uart driver.
   \   000057   7405         MOV     A,#0x5
   \   000059   12....       LCALL   ?XSTACK_DISP0_8
   \   00005C   7406         MOV     A,#0x6
   \   00005E   F0           MOVX    @DPTR,A
    193            uartConfig.intEnable            = TRUE;              // 2x30 don't care - see uart driver.
   \   00005F   7416         MOV     A,#0x16
   \   000061   12....       LCALL   ?XSTACK_DISP0_8
   \   000064   7401         MOV     A,#0x1
   \   000066   F0           MOVX    @DPTR,A
    194            uartConfig.callBackFunc         = Smart_home_CallBack;
   \   000067   741B         MOV     A,#0x1b
   \   000069   12....       LCALL   ?XSTACK_DISP0_8
   \   00006C   74..         MOV     A,#??Smart_home_CallBack?relay & 0xff
   \   00006E   F0           MOVX    @DPTR,A
   \   00006F   A3           INC     DPTR
   \   000070   74..         MOV     A,#(??Smart_home_CallBack?relay >> 8) & 0xff
   \   000072   F0           MOVX    @DPTR,A
    195            HalUARTOpen (SERIAL_APP_PORT, &uartConfig);
   \   000073                ; Setup parameters for call to function HalUARTOpen
   \   000073   85..82       MOV     DPL,?XSP + 0
   \   000076   85..83       MOV     DPH,?XSP + 1
   \   000079   AA82         MOV     R2,DPL
   \   00007B   AB83         MOV     R3,DPH
   \   00007D   7900         MOV     R1,#0x0
   \   00007F   12....       LCALL   ??HalUARTOpen?relay
    196          
    197            //初始化向协调器发送的地址
    198            Coordinator_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000082   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   000085   E4           CLR     A
   \   000086   F0           MOVX    @DPTR,A
    199            Coordinator_DstAddr.endPoint = 0;
   \   000087   A3           INC     DPTR
   \   000088   F0           MOVX    @DPTR,A
    200            Coordinator_DstAddr.addr.shortAddr = 0;
   \   000089   90....       MOV     DPTR,#Coordinator_DstAddr
   \   00008C   F0           MOVX    @DPTR,A
   \   00008D   A3           INC     DPTR
   \   00008E   F0           MOVX    @DPTR,A
    201            
    202            //初始化继电器为全关
    203            HalMotorInit();
   \   00008F                ; Setup parameters for call to function HalMotorInit
   \   00008F   12....       LCALL   ??HalMotorInit?relay
    204            
    205            ZDO_RegisterForZDOMsg( Smart_home_TaskID, End_Device_Bind_rsp );
   \   000092                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   000092   7A20         MOV     R2,#0x20
   \   000094   7B80         MOV     R3,#-0x80
   \   000096   90....       MOV     DPTR,#Smart_home_TaskID
   \   000099   E0           MOVX    A,@DPTR
   \   00009A   F9           MOV     R1,A
   \   00009B   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    206            ZDO_RegisterForZDOMsg( Smart_home_TaskID, Match_Desc_rsp );
   \   00009E                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00009E   7A06         MOV     R2,#0x6
   \   0000A0   7B80         MOV     R3,#-0x80
   \   0000A2   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000A5   E0           MOVX    A,@DPTR
   \   0000A6   F9           MOV     R1,A
   \   0000A7   12....       LCALL   ??ZDO_RegisterForZDOMsg?relay
    207            
    208            // 打开定时器，描述符匹配事件
    209            osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT, 
    210                                                         SMART_HOME_SEND_DELAY );
   \   0000AA                ; Setup parameters for call to function osal_start_reload_timer
   \   0000AA   7CF4         MOV     R4,#-0xc
   \   0000AC   7D01         MOV     R5,#0x1
   \   0000AE   7A08         MOV     R2,#0x8
   \   0000B0   7B00         MOV     R3,#0x0
   \   0000B2   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000B5   E0           MOVX    A,@DPTR
   \   0000B6   F9           MOV     R1,A
   \   0000B7   12....       LCALL   ??osal_start_reload_timer?relay
    211          }
   \   0000BA   741D         MOV     A,#0x1d
   \   0000BC   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000BF   7F01         MOV     R7,#0x1
   \   0000C1   02....       LJMP    ?BANKED_LEAVE_XDATA
    212          
    213          /*********************************************************************
    214           * @fn      Smart_home_ProcessEvent
    215           *
    216           * @brief   Generic Application Task event processor.
    217           *
    218           * @param   task_id  - The OSAL assigned task ID.
    219           * @param   events   - Bit map of events to process.
    220           *
    221           * @return  Event flags of all unprocessed events.
    222           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    223          UINT16 Smart_home_ProcessEvent( uint8 task_id, UINT16 events )
   \                     Smart_home_ProcessEvent:
    224          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 11
   \   000005   74F5         MOV     A,#-0xb
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   EA           MOV     A,R2
   \   00000B   FE           MOV     R6,A
   \   00000C   EB           MOV     A,R3
   \   00000D   FF           MOV     R7,A
    225            (void)task_id;  // Intentionally unreferenced parameter
    226            
    227            if ( events & SYS_EVENT_MSG )
   \   00000E   5480         ANL     A,#0x80
   \   000010   6003         JZ      $+5
   \   000012   02....       LJMP    ??Smart_home_ProcessEvent_0 & 0xFFFF
    228            {
    229              afIncomingMSGPacket_t *MSGpkt;
    230          
    231              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Smart_home_TaskID )) )
    232              {
    233                switch ( MSGpkt->hdr.event )
    234                {
    235                case ZDO_CB_MSG:
    236                  Smart_home_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    237                  break;
    238                    
    239                case KEY_CHANGE:
    240                  Smart_home_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    241                  break;
    242          
    243                case AF_INCOMING_MSG_CMD:
    244                  Smart_home_ProcessMSGCmd( MSGpkt );
    245                  break;
    246          
    247                default:
    248                  break;
    249                }
    250          
    251                osal_msg_deallocate( (uint8 *)MSGpkt );
    252              }
    253          
    254              return ( events ^ SYS_EVENT_MSG );
    255            }
    256            
    257            // 描述匹配事件
    258            if ( events & SMART_HOME_MATCHRSP_EVT )
   \   000015   EE           MOV     A,R6
   \   000016   5408         ANL     A,#0x8
   \   000018   7003         JNZ     $+5
   \   00001A   02....       LJMP    ??Smart_home_ProcessEvent_1 & 0xFFFF
    259            {
    260               zAddrType_t dstAddr;
    261               dstAddr.addrMode = AddrBroadcast;
   \   00001D   740A         MOV     A,#0xa
   \   00001F   12....       LCALL   ?XSTACK_DISP0_8
   \   000022   740F         MOV     A,#0xf
   \   000024   F0           MOVX    @DPTR,A
    262               dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR;
   \   000025   7402         MOV     A,#0x2
   \   000027   12....       LCALL   ?XSTACK_DISP0_8
   \   00002A   74FF         MOV     A,#-0x1
   \   00002C   F0           MOVX    @DPTR,A
   \   00002D   A3           INC     DPTR
   \   00002E   F0           MOVX    @DPTR,A
    263               
    264               ZDP_MatchDescReq( &dstAddr, 
    265                                  NWK_BROADCAST_SHORTADDR,
    266                                  Smart_home_PROFID,
    267                                  Smart_home_MAX_OUTCLUSTERS, 
    268                                  (cId_t *)Smart_home_ClusterList_IN,
    269                                  Smart_home_MAX_INCLUSTERS, 
    270                                  (cId_t *)Smart_home_ClusterList_OUT,
    271                                  FALSE );
   \   00002F                ; Setup parameters for call to function ZDP_MatchDescReq
   \   00002F   75..00       MOV     ?V0 + 0,#0x0
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000037   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_OUT & 0xff
   \   00003A   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_OUT >> 8) & 0xff
   \   00003D   78..         MOV     R0,#?V0 + 0
   \   00003F   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000042   75..09       MOV     ?V0 + 0,#0x9
   \   000045   78..         MOV     R0,#?V0 + 0
   \   000047   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00004A   75....       MOV     ?V0 + 0,#Smart_home_ClusterList_IN & 0xff
   \   00004D   75....       MOV     ?V0 + 1,#(Smart_home_ClusterList_IN >> 8) & 0xff
   \   000050   78..         MOV     R0,#?V0 + 0
   \   000052   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000055   75..05       MOV     ?V0 + 0,#0x5
   \   000058   75..0F       MOV     ?V0 + 1,#0xf
   \   00005B   78..         MOV     R0,#?V0 + 0
   \   00005D   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000060   7903         MOV     R1,#0x3
   \   000062   7CFF         MOV     R4,#-0x1
   \   000064   7DFF         MOV     R5,#-0x1
   \   000066   740A         MOV     A,#0xa
   \   000068   12....       LCALL   ?XSTACK_DISP0_8
   \   00006B   AA82         MOV     R2,DPL
   \   00006D   AB83         MOV     R3,DPH
   \   00006F   12....       LCALL   ??ZDP_MatchDescReq?relay
   \   000072   7408         MOV     A,#0x8
   \   000074   12....       LCALL   ?DEALLOC_XSTACK8
    272          
    273              // Return unprocessed events
    274              return (events ^ SMART_HOME_MATCHRSP_EVT);
   \   000077   EE           MOV     A,R6
   \   000078   6408         XRL     A,#0x8
   \                     ??Smart_home_ProcessEvent_2:
   \   00007A   FA           MOV     R2,A
   \   00007B   EF           MOV     A,R7
   \                     ??Smart_home_ProcessEvent_3:
   \   00007C   FB           MOV     R3,A
   \   00007D   02....       LJMP    ??Smart_home_ProcessEvent_4 & 0xFFFF
    275            }
   \                     ??Smart_home_ProcessEvent_5:
   \   000080   A3           INC     DPTR
   \   000081   A3           INC     DPTR
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   E0           MOVX    A,@DPTR
   \   000085   640A         XRL     A,#0xa
   \   000087   7002         JNZ     ??Smart_home_ProcessEvent_6
   \   000089   A3           INC     DPTR
   \   00008A   E0           MOVX    A,@DPTR
   \                     ??Smart_home_ProcessEvent_6:
   \   00008B   706D         JNZ     ??Smart_home_ProcessEvent_7
   \   00008D   EA           MOV     A,R2
   \   00008E   2422         ADD     A,#0x22
   \   000090   F8           MOV     R0,A
   \   000091   EB           MOV     A,R3
   \   000092   3400         ADDC    A,#0x0
   \   000094   F9           MOV     R1,A
   \   000095   8882         MOV     DPL,R0
   \   000097   8983         MOV     DPH,R1
   \   000099   E0           MOVX    A,@DPTR
   \   00009A   FA           MOV     R2,A
   \   00009B   A3           INC     DPTR
   \   00009C   E0           MOVX    A,@DPTR
   \   00009D   F583         MOV     DPH,A
   \   00009F   8A82         MOV     DPL,R2
   \   0000A1   A3           INC     DPTR
   \   0000A2   A3           INC     DPTR
   \   0000A3   A3           INC     DPTR
   \   0000A4   A3           INC     DPTR
   \   0000A5   E0           MOVX    A,@DPTR
   \   0000A6   85..82       MOV     DPL,?XSP + 0
   \   0000A9   85..83       MOV     DPH,?XSP + 1
   \   0000AC   F0           MOVX    @DPTR,A
   \   0000AD   8882         MOV     DPL,R0
   \   0000AF   8983         MOV     DPH,R1
   \   0000B1   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   0000B4   A3           INC     DPTR
   \   0000B5   A3           INC     DPTR
   \   0000B6   A3           INC     DPTR
   \   0000B7   A3           INC     DPTR
   \   0000B8   A3           INC     DPTR
   \   0000B9   E0           MOVX    A,@DPTR
   \   0000BA   C0E0         PUSH    A
   \   0000BC   7401         MOV     A,#0x1
   \   0000BE   12....       LCALL   ?XSTACK_DISP0_8
   \   0000C1   D0E0         POP     A
   \   0000C3   F0           MOVX    @DPTR,A
   \   0000C4                ; Setup parameters for call to function HalUARTWrite
   \   0000C4   7C01         MOV     R4,#0x1
   \   0000C6   7D00         MOV     R5,#0x0
   \   0000C8   85..82       MOV     DPL,?XSP + 0
   \   0000CB   85..83       MOV     DPH,?XSP + 1
   \   0000CE   AA82         MOV     R2,DPL
   \   0000D0   AB83         MOV     R3,DPH
   \   0000D2   7900         MOV     R1,#0x0
   \   0000D4   12....       LCALL   ??HalUARTWrite?relay
   \   0000D7                ; Setup parameters for call to function HalUARTWrite
   \   0000D7   7C01         MOV     R4,#0x1
   \   0000D9   7D00         MOV     R5,#0x0
   \   0000DB   EC           MOV     A,R4
   \   0000DC   12....       LCALL   ?XSTACK_DISP0_8
   \   0000DF   AA82         MOV     R2,DPL
   \   0000E1   AB83         MOV     R3,DPH
   \   0000E3   7900         MOV     R1,#0x0
   \   0000E5   12....       LCALL   ??HalUARTWrite?relay
   \   0000E8                ; Setup parameters for call to function HalMotorCtl
   \   0000E8   85..82       MOV     DPL,?XSP + 0
   \   0000EB   85..83       MOV     DPH,?XSP + 1
   \   0000EE   E0           MOVX    A,@DPTR
   \   0000EF   FA           MOV     R2,A
   \   0000F0   7401         MOV     A,#0x1
   \   0000F2   12....       LCALL   ?XSTACK_DISP0_8
   \   0000F5   E0           MOVX    A,@DPTR
   \   0000F6   F9           MOV     R1,A
   \                     ??Smart_home_ProcessEvent_8:
   \   0000F7   12....       LCALL   ??HalMotorCtl?relay
   \                     ??Smart_home_ProcessEvent_7:
   \   0000FA                ; Setup parameters for call to function osal_msg_deallocate
   \   0000FA   AA..         MOV     R2,?V0 + 0
   \   0000FC   AB..         MOV     R3,?V0 + 1
   \   0000FE   12....       LCALL   ??osal_msg_deallocate?relay
   \                     ??Smart_home_ProcessEvent_0:
   \   000101                ; Setup parameters for call to function osal_msg_receive
   \   000101   90....       MOV     DPTR,#Smart_home_TaskID
   \   000104   E0           MOVX    A,@DPTR
   \   000105   F9           MOV     R1,A
   \   000106   12....       LCALL   ??osal_msg_receive?relay
   \   000109   8A..         MOV     ?V0 + 0,R2
   \   00010B   8B..         MOV     ?V0 + 1,R3
   \   00010D   EA           MOV     A,R2
   \   00010E   45..         ORL     A,?V0 + 1
   \   000110   6062         JZ      ??Smart_home_ProcessEvent_9
   \   000112   8A82         MOV     DPL,R2
   \   000114   8B83         MOV     DPH,R3
   \   000116   E0           MOVX    A,@DPTR
   \   000117   24E6         ADD     A,#-0x1a
   \   000119   7003         JNZ     $+5
   \   00011B   02....       LJMP    ??Smart_home_ProcessEvent_5 & 0xFFFF
   \   00011E   245A         ADD     A,#0x5a
   \   000120   6009         JZ      ??Smart_home_ProcessEvent_10
   \   000122   24ED         ADD     A,#-0x13
   \   000124   70D4         JNZ     ??Smart_home_ProcessEvent_7
   \   000126                ; Setup parameters for call to function Smart_home_ProcessZDOMsgs
   \   000126   12....       LCALL   ??Smart_home_ProcessZDOMsgs?relay
   \   000129   80CF         SJMP    ??Smart_home_ProcessEvent_7
   \                     ??Smart_home_ProcessEvent_10:
   \   00012B   A3           INC     DPTR
   \   00012C   A3           INC     DPTR
   \   00012D   A3           INC     DPTR
   \   00012E   E0           MOVX    A,@DPTR
   \   00012F   A2E2         MOV     C,0xE0 /* A   */.2
   \   000131   50C7         JNC     ??Smart_home_ProcessEvent_7
   \   000133   90....       MOV     DPTR,#??motorStatusCnt
   \   000136   E0           MOVX    A,@DPTR
   \   000137   04           INC     A
   \   000138   5407         ANL     A,#0x7
   \   00013A   F0           MOVX    @DPTR,A
   \   00013B   6031         JZ      ??Smart_home_ProcessEvent_11
   \   00013D   14           DEC     A
   \   00013E   602A         JZ      ??Smart_home_ProcessEvent_12
   \   000140   14           DEC     A
   \   000141   6023         JZ      ??Smart_home_ProcessEvent_13
   \   000143   14           DEC     A
   \   000144   601A         JZ      ??Smart_home_ProcessEvent_14
   \   000146   14           DEC     A
   \   000147   6025         JZ      ??Smart_home_ProcessEvent_11
   \   000149   14           DEC     A
   \   00014A   6010         JZ      ??Smart_home_ProcessEvent_15
   \   00014C   14           DEC     A
   \   00014D   6009         JZ      ??Smart_home_ProcessEvent_16
   \   00014F   14           DEC     A
   \   000150   70A8         JNZ     ??Smart_home_ProcessEvent_7
   \   000152                ; Setup parameters for call to function HalMotorCtl
   \   000152   7A32         MOV     R2,#0x32
   \                     ??Smart_home_ProcessEvent_17:
   \   000154   7903         MOV     R1,#0x3
   \   000156   809F         SJMP    ??Smart_home_ProcessEvent_8
   \                     ??Smart_home_ProcessEvent_16:
   \   000158                ; Setup parameters for call to function HalMotorCtl
   \   000158   7A1E         MOV     R2,#0x1e
   \   00015A   80F8         SJMP    ??Smart_home_ProcessEvent_17
   \                     ??Smart_home_ProcessEvent_15:
   \   00015C                ; Setup parameters for call to function HalMotorCtl
   \   00015C   7A0A         MOV     R2,#0xa
   \   00015E   80F4         SJMP    ??Smart_home_ProcessEvent_17
   \                     ??Smart_home_ProcessEvent_14:
   \   000160                ; Setup parameters for call to function HalMotorCtl
   \   000160   7A32         MOV     R2,#0x32
   \                     ??Smart_home_ProcessEvent_18:
   \   000162   7902         MOV     R1,#0x2
   \   000164   8091         SJMP    ??Smart_home_ProcessEvent_8
   \                     ??Smart_home_ProcessEvent_13:
   \   000166                ; Setup parameters for call to function HalMotorCtl
   \   000166   7A1E         MOV     R2,#0x1e
   \   000168   80F8         SJMP    ??Smart_home_ProcessEvent_18
   \                     ??Smart_home_ProcessEvent_12:
   \   00016A                ; Setup parameters for call to function HalMotorCtl
   \   00016A   7A0A         MOV     R2,#0xa
   \   00016C   80F4         SJMP    ??Smart_home_ProcessEvent_18
   \                     ??Smart_home_ProcessEvent_11:
   \   00016E                ; Setup parameters for call to function HalMotorCtl
   \   00016E   7A00         MOV     R2,#0x0
   \   000170   7901         MOV     R1,#0x1
   \   000172   8083         SJMP    ??Smart_home_ProcessEvent_8
   \                     ??Smart_home_ProcessEvent_9:
   \   000174   EE           MOV     A,R6
   \   000175   FA           MOV     R2,A
   \   000176   EF           MOV     A,R7
   \   000177   6480         XRL     A,#0x80
   \   000179   02....       LJMP    ??Smart_home_ProcessEvent_3 & 0xFFFF
    276          
    277            if ( events & SMART_HOME_SEND_MSG_EVT )
   \                     ??Smart_home_ProcessEvent_1:
   \   00017C   EE           MOV     A,R6
   \   00017D   A2E0         MOV     C,0xE0 /* A   */.0
   \   00017F   4003         JC      $+5
   \   000181   02....       LJMP    ??Smart_home_ProcessEvent_19 & 0xFFFF
   \                     ??Smart_home_ProcessEvent_20:
   \   000184   90....       MOV     DPTR,#Smart_home_MsgID
   \   000187   E0           MOVX    A,@DPTR
   \   000188   C4           SWAP    A
   \   000189   540F         ANL     A,#0xf
   \   00018B   FA           MOV     R2,A
   \   00018C   C3           CLR     C
   \   00018D   940A         SUBB    A,#0xa
   \   00018F   5004         JNC     ??Smart_home_ProcessEvent_21
   \   000191   7830         MOV     R0,#0x30
   \   000193   8002         SJMP    ??Smart_home_ProcessEvent_22
   \                     ??Smart_home_ProcessEvent_21:
   \   000195   7837         MOV     R0,#0x37
   \                     ??Smart_home_ProcessEvent_22:
   \   000197   E8           MOV     A,R0
   \   000198   2A           ADD     A,R2
   \   000199   90....       MOV     DPTR,#Coordinator_Msg + 2
   \   00019C   F0           MOVX    @DPTR,A
   \   00019D   90....       MOV     DPTR,#Smart_home_MsgID
   \   0001A0   E0           MOVX    A,@DPTR
   \   0001A1   540F         ANL     A,#0xf
   \   0001A3   FA           MOV     R2,A
   \   0001A4   C3           CLR     C
   \   0001A5   940A         SUBB    A,#0xa
   \   0001A7   5004         JNC     ??Smart_home_ProcessEvent_23
   \   0001A9   7830         MOV     R0,#0x30
   \   0001AB   8002         SJMP    ??Smart_home_ProcessEvent_24
   \                     ??Smart_home_ProcessEvent_23:
   \   0001AD   7837         MOV     R0,#0x37
   \                     ??Smart_home_ProcessEvent_24:
   \   0001AF   E8           MOV     A,R0
   \   0001B0   2A           ADD     A,R2
   \   0001B1   90....       MOV     DPTR,#Coordinator_Msg + 3
   \   0001B4   F0           MOVX    @DPTR,A
   \   0001B5                ; Setup parameters for call to function HalMotorSpeedCheck
   \   0001B5   12....       LCALL   ??HalMotorSpeedCheck?relay
   \   0001B8   E9           MOV     A,R1
   \   0001B9   90....       MOV     DPTR,#Coordinator_Msg + 4
   \   0001BC   F0           MOVX    @DPTR,A
   \   0001BD                ; Setup parameters for call to function HalMotorStatusCheck
   \   0001BD   12....       LCALL   ??HalMotorStatusCheck?relay
   \   0001C0   E9           MOV     A,R1
   \   0001C1   90....       MOV     DPTR,#Coordinator_Msg + 5
   \   0001C4   F0           MOVX    @DPTR,A
   \   0001C5                ; Setup parameters for call to function AF_DataRequest
   \   0001C5   75..1E       MOV     ?V0 + 0,#0x1e
   \   0001C8   78..         MOV     R0,#?V0 + 0
   \   0001CA   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   0001CD   75....       MOV     ?V0 + 0,#Smart_home_MsgID & 0xff
   \   0001D0   75....       MOV     ?V0 + 1,#(Smart_home_MsgID >> 8) & 0xff
   \   0001D3   78..         MOV     R0,#?V0 + 0
   \   0001D5   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001D8   75....       MOV     ?V0 + 0,#Coordinator_Msg & 0xff
   \   0001DB   75....       MOV     ?V0 + 1,#(Coordinator_Msg >> 8) & 0xff
   \   0001DE   78..         MOV     R0,#?V0 + 0
   \   0001E0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001E3   75..06       MOV     ?V0 + 0,#0x6
   \   0001E6   75..00       MOV     ?V0 + 1,#0x0
   \   0001E9   78..         MOV     R0,#?V0 + 0
   \   0001EB   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001EE   75..07       MOV     ?V0 + 0,#0x7
   \   0001F1   78..         MOV     R0,#?V0 + 0
   \   0001F3   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0001F6   7920         MOV     R1,#0x20
   \   0001F8   7C..         MOV     R4,#Smart_home_epDesc & 0xff
   \   0001FA   7D..         MOV     R5,#(Smart_home_epDesc >> 8) & 0xff
   \   0001FC   7A..         MOV     R2,#Coordinator_DstAddr & 0xff
   \   0001FE   7B..         MOV     R3,#(Coordinator_DstAddr >> 8) & 0xff
   \   000200   12....       LCALL   ??AF_DataRequest?relay
   \   000203   7409         MOV     A,#0x9
   \   000205   12....       LCALL   ?DEALLOC_XSTACK8
   \   000208   E9           MOV     A,R1
   \   000209   7003         JNZ     $+5
   \   00020B   02....       LJMP    ??Smart_home_ProcessEvent_20 & 0xFFFF
    278            {
    279              Smart_home_Send();
    280              return ( events ^ SMART_HOME_SEND_MSG_EVT );
   \   00020E   EE           MOV     A,R6
   \   00020F   6401         XRL     A,#0x1
   \   000211   02....       LJMP    ??Smart_home_ProcessEvent_2 & 0xFFFF
    281            }
    282          
    283            if ( events & SMART_HOME_BINDRSP_EVT )
   \                     ??Smart_home_ProcessEvent_19:
   \   000214   5420         ANL     A,#0x20
   \   000216   6006         JZ      ??Smart_home_ProcessEvent_25
    284            {
    285              Smart_home_Resp();
    286              return ( events ^ SMART_HOME_BINDRSP_EVT );
   \   000218   EE           MOV     A,R6
   \   000219   6420         XRL     A,#0x20
   \   00021B   FA           MOV     R2,A
   \   00021C   8004         SJMP    ??Smart_home_ProcessEvent_4
    287            }
    288            
    289            return ( 0 );  // Discard unknown events.
   \                     ??Smart_home_ProcessEvent_25:
   \   00021E   7A00         MOV     R2,#0x0
   \   000220   7B00         MOV     R3,#0x0
   \                     ??Smart_home_ProcessEvent_4:
   \   000222   740B         MOV     A,#0xb
   \   000224   12....       LCALL   ?DEALLOC_XSTACK8
   \   000227                REQUIRE ?Subroutine0
   \   000227                ; // Fall through to label ?Subroutine0
    290          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F583         MOV     DPH,A
   \   000006   8882         MOV     DPL,R0
   \   000008   22           RET
    291          
    292          /*********************************************************************
    293           * @fn      Smart_home_ProcessZDOMsgs()
    294           *
    295           * @brief   Process response messages
    296           *
    297           * @param   none
    298           *
    299           * @return  none
    300           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    301          static void Smart_home_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg )
   \                     Smart_home_ProcessZDOMsgs:
    302          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
    303            switch ( inMsg->clusterID )
   \   000005   EA           MOV     A,R2
   \   000006   240C         ADD     A,#0xc
   \   000008   F582         MOV     DPL,A
   \   00000A   EB           MOV     A,R3
   \   00000B   3400         ADDC    A,#0x0
   \   00000D   F583         MOV     DPH,A
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   F5..         MOV     ?V0 + 0,A
   \   000012   A3           INC     DPTR
   \   000013   E0           MOVX    A,@DPTR
   \   000014   F5..         MOV     ?V0 + 1,A
   \   000016   78..         MOV     R0,#?V0 + 0
   \   000018   12....       LCALL   ?US_SWITCH_SPARSE
   \                     `?<Jumptable for Smart_home_ProcessZDOMsgs>_0`:
   \   00001B   0000         DW        0
   \   00001D   0200         DW        2
   \   00001F   0680         DW        32774
   \   000021   ....         DW        ??Smart_home_ProcessZDOMsgs_0
   \   000023   2080         DW        32800
   \   000025   ....         DW        ??Smart_home_ProcessZDOMsgs_1
   \   000027   ....         DW        ??Smart_home_ProcessZDOMsgs_2
    304            {
    305              case End_Device_Bind_rsp:
    306                if ( ZDO_ParseBindRsp( inMsg ) == ZSuccess )
   \                     ??Smart_home_ProcessZDOMsgs_1:
   \   000029   EA           MOV     A,R2
   \   00002A   2413         ADD     A,#0x13
   \   00002C   F582         MOV     DPL,A
   \   00002E   EB           MOV     A,R3
   \   00002F   3400         ADDC    A,#0x0
   \   000031   F583         MOV     DPH,A
   \   000033   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000036   E0           MOVX    A,@DPTR
   \   000037   6003         JZ      $+5
   \   000039   02....       LJMP    ??Smart_home_ProcessZDOMsgs_2 & 0xFFFF
    307                {
    308          #if (HAL_UART == TRUE)
    309                  HalUARTWrite(HAL_UART_PORT_0, "Bind Success!\n",   strlen("Bind Success!\n"));
                                                                            ^
Warning[Pe223]: function "strlen" declared implicitly
   \   00003C                ; Setup parameters for call to function HalUARTWrite
   \   00003C                ; Setup parameters for call to function strlen
   \   00003C   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   00003E   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   000040   12....       LCALL   ??strlen?relay
   \   000043   EA           MOV     A,R2
   \   000044   FC           MOV     R4,A
   \   000045   EB           MOV     A,R3
   \   000046   FD           MOV     R5,A
   \   000047   7A..         MOV     R2,#`?<Constant "Bind Success!\\n">` & 0xff
   \   000049   7B..         MOV     R3,#(`?<Constant "Bind Success!\\n">` >> 8) & 0xff
   \   00004B   7900         MOV     R1,#0x0
   \   00004D   12....       LCALL   ??HalUARTWrite?relay
   \   000050   8075         SJMP    ??Smart_home_ProcessZDOMsgs_2
    310          #endif
    311                }
    312                break;
    313              
    314              case Match_Desc_rsp:
    315                ZDO_ActiveEndpointRsp_t *pRsp = ZDO_ParseEPListRsp( inMsg );
                       ^
Warning[Pe1072]: a declaration cannot have a label
   \                     ??Smart_home_ProcessZDOMsgs_0:
   \   000052                ; Setup parameters for call to function ZDO_ParseEPListRsp
   \   000052   12....       LCALL   ??ZDO_ParseEPListRsp?relay
   \   000055   8A..         MOV     ?V0 + 0,R2
   \   000057   8B..         MOV     ?V0 + 1,R3
    316                if ( pRsp )
   \   000059   EA           MOV     A,R2
   \   00005A   45..         ORL     A,?V0 + 1
   \   00005C   6069         JZ      ??Smart_home_ProcessZDOMsgs_2
    317                {
    318                  if ( pRsp->status == ZSuccess && pRsp->cnt )
   \   00005E   8A82         MOV     DPL,R2
   \   000060   8B83         MOV     DPH,R3
   \   000062   E0           MOVX    A,@DPTR
   \   000063   705B         JNZ     ??Smart_home_ProcessZDOMsgs_3
   \   000065   A3           INC     DPTR
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   E0           MOVX    A,@DPTR
   \   000069   6055         JZ      ??Smart_home_ProcessZDOMsgs_3
    319                  {
    320                    // 此处存储绑定对方的地址信息用于发送
    321                    Coordinator_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   00006B   90....       MOV     DPTR,#Coordinator_DstAddr + 8
   \   00006E   7402         MOV     A,#0x2
   \   000070   F0           MOVX    @DPTR,A
    322                    Coordinator_DstAddr.addr.shortAddr = pRsp->nwkAddr;
   \   000071   8A82         MOV     DPL,R2
   \   000073   8B83         MOV     DPH,R3
   \   000075   A3           INC     DPTR
   \   000076   E0           MOVX    A,@DPTR
   \   000077   F8           MOV     R0,A
   \   000078   A3           INC     DPTR
   \   000079   E0           MOVX    A,@DPTR
   \   00007A   F9           MOV     R1,A
   \   00007B   90....       MOV     DPTR,#Coordinator_DstAddr
   \   00007E   E8           MOV     A,R0
   \   00007F   F0           MOVX    @DPTR,A
   \   000080   A3           INC     DPTR
   \   000081   E9           MOV     A,R1
   \   000082   F0           MOVX    @DPTR,A
    323                    // Take the first endpoint, Can be changed to search through endpoints
    324                    Coordinator_DstAddr.endPoint = pRsp->epList[0];  // ok
   \   000083   8A82         MOV     DPL,R2
   \   000085   8B83         MOV     DPH,R3
   \   000087   A3           INC     DPTR
   \   000088   A3           INC     DPTR
   \   000089   A3           INC     DPTR
   \   00008A   A3           INC     DPTR
   \   00008B   E0           MOVX    A,@DPTR
   \   00008C   90....       MOV     DPTR,#Coordinator_DstAddr + 9
   \   00008F   F0           MOVX    @DPTR,A
    325                    // 匹配成功，关闭描述符匹配事件定时器
    326                    osal_stop_timerEx( Smart_home_TaskID, SMART_HOME_MATCHRSP_EVT );
   \   000090                ; Setup parameters for call to function osal_stop_timerEx
   \   000090   7A08         MOV     R2,#0x8
   \   000092   7B00         MOV     R3,#0x0
   \   000094   90....       MOV     DPTR,#Smart_home_TaskID
   \   000097   E0           MOVX    A,@DPTR
   \   000098   F9           MOV     R1,A
   \   000099   12....       LCALL   ??osal_stop_timerEx?relay
    327            
    328          #if (HAL_UART == TRUE)
    329                    HalUARTWrite(HAL_UART_PORT_0, "Match Success!\n",   strlen("Match Success!\n"));
                                                                               ^
Warning[Pe223]: function "strlen" declared implicitly

    switch ( inMsg->clusterID )
    ^
"D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smart_home\Source\Smart_homeMotor.c",303  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "pRsp" (declared at line 315 of
                      "D:\毕设\CC2530-smart_home\Projects\zstack\Utilities\Smar
                      t_home\Source\Smart_homeMotor.c")
   \   00009C                ; Setup parameters for call to function HalUARTWrite
   \   00009C                ; Setup parameters for call to function strlen
   \   00009C   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   00009E   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000A0   12....       LCALL   ??strlen?relay
   \   0000A3   EA           MOV     A,R2
   \   0000A4   FC           MOV     R4,A
   \   0000A5   EB           MOV     A,R3
   \   0000A6   FD           MOV     R5,A
   \   0000A7   7A..         MOV     R2,#`?<Constant "Match Success!\\n">` & 0xff
   \   0000A9   7B..         MOV     R3,#(`?<Constant "Match Success!\\n">` >> 8) & 0xff
   \   0000AB   7900         MOV     R1,#0x0
   \   0000AD   12....       LCALL   ??HalUARTWrite?relay
    330          #endif
    331                    // 开启定时发送数据给协调器的事件
    332                    osal_start_reload_timer( Smart_home_TaskID, SMART_HOME_SEND_MSG_EVT, 
    333                                             SMART_HOME_SEND_DELAY );
   \   0000B0                ; Setup parameters for call to function osal_start_reload_timer
   \   0000B0   7CF4         MOV     R4,#-0xc
   \   0000B2   7D01         MOV     R5,#0x1
   \   0000B4   7A01         MOV     R2,#0x1
   \   0000B6   7B00         MOV     R3,#0x0
   \   0000B8   90....       MOV     DPTR,#Smart_home_TaskID
   \   0000BB   E0           MOVX    A,@DPTR
   \   0000BC   F9           MOV     R1,A
   \   0000BD   12....       LCALL   ??osal_start_reload_timer?relay
    334                  }
    335              
    336                  osal_mem_free( pRsp );
   \                     ??Smart_home_ProcessZDOMsgs_3:
   \   0000C0                ; Setup parameters for call to function osal_mem_free
   \   0000C0   AA..         MOV     R2,?V0 + 0
   \   0000C2   AB..         MOV     R3,?V0 + 1
   \   0000C4   12....       LCALL   ??osal_mem_free?relay
    337                }
    338                break;
    339                
    340              default:
    341                break;
    342            }
    343            
    344          }
   \                     ??Smart_home_ProcessZDOMsgs_2:
   \   0000C7   02....       LJMP    ?Subroutine0 & 0xFFFF
    345          
    346          /*********************************************************************
    347           * @fn      Smart_home_HandleKeys
    348           *
    349           * @brief   Handles all key events for this device.
    350           *
    351           * @param   shift - true if in shift/alt.
    352           * @param   keys  - bit field for key events.
    353           *
    354           * @return  none
    355           */
    356          void Smart_home_HandleKeys( uint8 shift, uint8 keys )
    357          {

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    358              static uint8 motorStatusCnt;
   \                     ??motorStatusCnt:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    359              
    360              if ( keys & HAL_KEY_SW_5 )
    361              {
    362                motorStatusCnt++;
    363                motorStatusCnt = motorStatusCnt % 8;
    364                switch(motorStatusCnt)
    365                {
    366                  case 0:  
    367                    HalMotorCtl(HAL_MOTOR_STOP, 0);       // 电机停止
    368                    break;
    369                  case 1: 
    370                    HalMotorCtl(HAL_MOTOR_FORWORD, 10);   // 电机正转，转速10转/秒
    371                    break;
    372                  case 2: 
    373                    HalMotorCtl(HAL_MOTOR_FORWORD, 30);   // 电机正转，转速30转/秒
    374                    break;
    375                  case 3: 
    376                    HalMotorCtl(HAL_MOTOR_FORWORD, 50);   // 电机正转，转速50转/秒
    377                    break;
    378                  case 4: 
    379                    HalMotorCtl(HAL_MOTOR_STOP, 0);       // 电机停止
    380                    break;
    381                  case 5: 
    382                    HalMotorCtl(HAL_MOTOR_BACKWORD, 10);  // 电机反转，转速10转/秒
    383                    break;
    384                  case 6: 
    385                    HalMotorCtl(HAL_MOTOR_BACKWORD, 30);  // 电机反转，转速30转/分钟
    386                    break;
    387                  case 7: 
    388                    HalMotorCtl(HAL_MOTOR_BACKWORD, 50);  // 电机反转，转速50转/分钟
    389                    break;
    390                  default:
    391                    break;
    392                }
    393              }
    394          
    395          }
    396          
    397          /*********************************************************************
    398           * @fn      Smart_home_ProcessMSGCmd
    399           *
    400           * @brief   Data message processor callback. This function processes
    401           *          any incoming data - probably from other devices. Based
    402           *          on the cluster ID, perform the intended action.
    403           *
    404           * @param   pkt - pointer to the incoming message packet
    405           *
    406           * @return  TRUE if the 'pkt' parameter is being used and will be freed later,
    407           *          FALSE otherwise.
    408           */
    409          void Smart_home_ProcessMSGCmd( afIncomingMSGPacket_t *pkt )
    410          {
    411            uint8 motorCtl, speed;
    412            
    413            switch ( pkt->clusterId )
    414            {
    415              case Smart_home_CLUSTERID_RELAYCTRL:
    416              {
    417                // 收到的电机控制命令
    418                speed = pkt->cmd.Data[4];
    419                motorCtl = pkt->cmd.Data[5];
    420                      
    421               // 测试收到的命令       
    422          #if (HAL_UART == TRUE)
    423                HalUARTWrite(HAL_UART_PORT_0, & speed,  1);
    424                HalUARTWrite(HAL_UART_PORT_0, & motorCtl,  1);
    425          #endif             
    426                HalMotorCtl(motorCtl, speed);       
    427                break;
    428              } 
    429              // Could receive control messages in the future.
    430              default:
    431                break;
    432            }
    433          }
    434          
    435          /*********************************************************************
    436           * @fn      Smart_home_Send
    437           *
    438           * @brief   Send data OTA.
    439           *
    440           * @param   none
    441           *
    442           * @return  none
    443           */
    444          static void Smart_home_Send(void)
    445          {
    446            uint8 tmp;
    447            
    448            do{
    449              // put the sequence number in the message
    450              tmp = HI_UINT8( Smart_home_MsgID );
    451              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    452              Coordinator_Msg[2] = tmp;
    453              tmp = LO_UINT8( Smart_home_MsgID );
    454              tmp += (tmp <= 9) ? ('0') : ('A' - 0x0A);
    455              Coordinator_Msg[3] = tmp;
    456              
    457              // 发送给协调器命令 
    458              Coordinator_Msg[4] = HalMotorSpeedCheck();
    459              Coordinator_Msg[5] = HalMotorStatusCheck();
                     ^
Warning[Pe175]: subscript out of range
    460              
    461              tmp = AF_DataRequest( &Coordinator_DstAddr,                         
    462                                    (endPointDesc_t *)&Smart_home_epDesc,                  
    463                                     Smart_home_CLUSTERID_MOTORSTATUSMSG,
    464                                     MOTORSTATUSMSG_LEN,                 
    465                                     Coordinator_Msg,                    
    466                                    &Smart_home_MsgID,                       
    467                                     AF_DISCV_ROUTE,                     
    468                                     AF_DEFAULT_RADIUS );
    469            }while (afStatus_SUCCESS == tmp);   
    470          }
    471          
    472          /*********************************************************************
    473           * @fn      Smart_home_Resp
    474           *
    475           * @brief   Send data OTA.
    476           *
    477           * @param   none
    478           *
    479           * @return  none
    480           */
    481          static void Smart_home_Resp(void)
    482          {
    483            /*
    484            if (afStatus_SUCCESS != AF_DataRequest(&Smart_home_RxAddr,
    485                                                   (endPointDesc_t *)&Smart_home_epDesc,
    486                                                    Smart_home_CLUSTERID2,
    487                                                    SERIAL_APP_RSP_CNT, Smart_home_RspBuf,
    488                                                   &Smart_home_MsgID, 0, AF_DEFAULT_RADIUS))
    489            {
    490              osal_set_event(Smart_home_TaskID, SMART_HOME_BINDRSP_EVT);
    491            }
    492            */
    493          }
    494          
    495          /*********************************************************************
    496           * @fn      Smart_home_CallBack
    497           *
    498           * @brief   Send data OTA.
    499           *
    500           * @param   port - UART port.
    501           * @param   event - the UART port event flag.
    502           *
    503           * @return  none
    504           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    505          static void Smart_home_CallBack(uint8 port, uint8 event)
   \                     Smart_home_CallBack:
    506          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    507          }
   \   000000   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_ProcessZDOMsgs?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_ProcessZDOMsgs

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Smart_home_CallBack?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Smart_home_CallBack

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Bind Success!\\n">`:
   \   000000   42696E64     DB "Bind Success!\012"
   \            20537563
   \            63657373
   \            210A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Match Success!\\n">`:
   \   000000   4D617463     DB "Match Success!\012"
   \            68205375
   \            63636573
   \            73210A00
    508          
    509          /*********************************************************************
    510          *********************************************************************/

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     Smart_home_CallBack                0      0      0
     Smart_home_Init                    0      0     38
       -> afRegister                    0      0     76
       -> RegisterForKeys               0      0     76
       -> HalUARTOpen                   0      0     76
       -> HalMotorInit                  0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> ZDO_RegisterForZDOMsg         0      0     76
       -> osal_start_reload_timer       0      0     76
     Smart_home_ProcessEvent            1      0     32
       -> ZDP_MatchDescReq              0      0     62
       -> HalUARTWrite                  0      0     46
       -> HalUARTWrite                  0      0     46
       -> HalMotorCtl                   0      0     46
       -> osal_msg_deallocate           0      0     46
       -> osal_msg_receive              0      0     46
       -> Smart_home_ProcessZDOMsgs     0      0     46
       -> HalMotorCtl                   0      0     46
       -> HalMotorCtl                   0      0     46
       -> HalMotorCtl                   0      0     46
       -> HalMotorCtl                   0      0     46
       -> HalMotorCtl                   0      0     46
       -> HalMotorCtl                   0      0     46
       -> HalMotorCtl                   0      0     46
       -> HalMotorSpeedCheck            0      0     46
       -> HalMotorStatusCheck           0      0     46
       -> AF_DataRequest                0      0     64
     Smart_home_ProcessZDOMsgs          0      0     35
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> ZDO_ParseEPListRsp            0      0     24
       -> osal_stop_timerEx             0      0     24
       -> strlen                        0      0     24
       -> HalUARTWrite                  0      0     24
       -> osal_start_reload_timer       0      0     24
       -> osal_mem_free                 0      0     24


   Segment part sizes:

     Function/Label                    Bytes
     --------------                    -----
     Smart_home_ClusterList_IN            2
     Smart_home_ClusterList_OUT           2
     Smart_home_SimpleDesc               12
     Smart_home_epDesc                    6
     Coordinator_DstAddr                 12
     Smart_home_TaskID                    1
     Coordinator_Msg                      5
     Smart_home_MsgID                     1
     Smart_home_Init                    196
     Smart_home_ProcessEvent            551
     ?Subroutine0                         5
     ?Subroutine1                         9
     Smart_home_ProcessZDOMsgs          202
     motorStatusCnt                       1
     Smart_home_CallBack                  3
     ??Smart_home_Init?relay              6
     ??Smart_home_ProcessEvent?relay      6
     ??Smart_home_ProcessZDOMsgs?relay    6
     ??Smart_home_CallBack?relay          6
     ?<Constant "Bind Success!\n">       15
     ?<Constant "Match Success!\n">      16

 
 966 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
  53 bytes in segment XDATA_ROM_C
  20 bytes in segment XDATA_Z
 
 990 bytes of CODE  memory
  53 bytes of CONST memory
  20 bytes of XDATA memory

Errors: none
Warnings: 5
