/*******************************************************************************
 * 文 件 名: hal_motor.c
 * 作    者：yizedxl
 * 创建时间：2013.9.16
 * 修改时间：2013.10.19
 * 说    明：(1)CC2530的P1_2输出PWMA波控制直流电机正反转，50%占空比停机，小于50%反转，
 *              大于50%正转；请将直流电机板子上的PWM波选择跳线短接在sin，本实验使用
 *              单路PWM波输出控制。
 *           (2)电机顺时针转动，先过P1_3，然后通过P1_4，此时方向为正方向；
 *           (3)本部分程序使用了CC2530的定时器1和定时器3，分别用来产生直流电机的PWM波，
 *              和1s的定时中断，1s的定时中断作为节拍来控制转速的测量和转速的调节；
 *           (4)电机的转速单位：转/秒；目前支持的转速调节范围是：1~50(Max)转/秒；
 *           (5)电机控制方法采用PID控制中的P控制，经过测试可以实现基本调速功能。
 *           (6)通过修改定时器的计数值，可以调节电机测速和控制的节拍，具体看定时器
 *              的中断说明，这里有测试比较的结果：当测速和控制的节奏提高后，速度的
 *              精确度不高，之前是4个脉冲代表1转，提到1/4秒后是1个脉冲代表1转，在
 *              观察中发现虽然可以迅速(4倍于1秒的节拍)的调整速度，但是速度稳定性不高，
 *              总结的主要原因应该是测速模块的稳定性。
 *           (7)测速模块主要是：在IO中断内的脉冲计数；以及定时器中断内的转速转换；
 *              测速精度有±1RPM的误差(使用目前1/4秒的测速、控制节拍), 或者
 *              ±0.25RPM的误差(使用1秒的测速、控制节拍)。
 *           (8)关于PID：P = 设定转速 - 当前转速；
 *                       I += p；
 *                       D = 当前转速 - 上一个当前转速；
 *                       上一个当前转速 = 当前转速；
 *                       然后选择合适的kp、ki、kd
 *                       调整量 = kp*P + ki*I + kd*D；
 *
 ******************************************************************************/

#ifndef HAL_MOTOR_H
#define HAL_MOTOR_H

#include "hal_types.h"

// 直流电机状态(status)定义
#define  HAL_MOTOR_STOP            0x01
#define  HAL_MOTOR_FORWORD         0x02
#define  HAL_MOTOR_BACKWORD        0x03


extern void HalMotorInit(void);
extern void HalMotorCtl(uint8 dir, uint8 speed);
extern uint8 HalMotorStatusCheck(void);
extern uint8 HalMotorSpeedCheck(void);
extern uint16 HalTimerTest();

#endif